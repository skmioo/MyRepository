// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityAnswerMessage.proto

#ifndef PROTOBUF_ActivityAnswerMessage_2eproto__INCLUDED
#define PROTOBUF_ActivityAnswerMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

class CGGetQuestions;
class GCSendQuestions;
class CGAnswer;
class GCAnswerResult;
class GCPushAnswerOpen;
class GCInitAnswer;
class CGSurvey;
class GCSurvey;
class QuestionData;
class TiKuData;
class GCWenJuanListData;
class CGAnswrQus;
class GCAnswrQus;
class CGRwdAnswrQus;
class GCRwdAnswrQus;

// ===================================================================

class CGGetQuestions : public ::google::protobuf::Message {
 public:
  CGGetQuestions();
  virtual ~CGGetQuestions();

  CGGetQuestions(const CGGetQuestions& from);

  inline CGGetQuestions& operator=(const CGGetQuestions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetQuestions& default_instance();

  void Swap(CGGetQuestions* other);

  // implements Message ----------------------------------------------

  CGGetQuestions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetQuestions& from);
  void MergeFrom(const CGGetQuestions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGGetQuestions)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetQuestions* default_instance_;
};
// -------------------------------------------------------------------

class GCSendQuestions : public ::google::protobuf::Message {
 public:
  GCSendQuestions();
  virtual ~GCSendQuestions();

  GCSendQuestions(const GCSendQuestions& from);

  inline GCSendQuestions& operator=(const GCSendQuestions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendQuestions& default_instance();

  void Swap(GCSendQuestions* other);

  // implements Message ----------------------------------------------

  GCSendQuestions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendQuestions& from);
  void MergeFrom(const GCSendQuestions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::int32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int32 value);
  inline void add_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // optional int64 beginTime = 2;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 2;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int32 isOpenSurvey = 3;
  inline bool has_isopensurvey() const;
  inline void clear_isopensurvey();
  static const int kIsOpenSurveyFieldNumber = 3;
  inline ::google::protobuf::int32 isopensurvey() const;
  inline void set_isopensurvey(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCSendQuestions)
 private:
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_isopensurvey();
  inline void clear_has_isopensurvey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int32 isopensurvey_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendQuestions* default_instance_;
};
// -------------------------------------------------------------------

class CGAnswer : public ::google::protobuf::Message {
 public:
  CGAnswer();
  virtual ~CGAnswer();

  CGAnswer(const CGAnswer& from);

  inline CGAnswer& operator=(const CGAnswer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGAnswer& default_instance();

  void Swap(CGAnswer* other);

  // implements Message ----------------------------------------------

  CGAnswer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGAnswer& from);
  void MergeFrom(const CGAnswer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 answer = 2;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 2;
  inline ::google::protobuf::int32 answer() const;
  inline void set_answer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGAnswer)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_answer();
  inline void clear_has_answer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 answer_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGAnswer* default_instance_;
};
// -------------------------------------------------------------------

class GCAnswerResult : public ::google::protobuf::Message {
 public:
  GCAnswerResult();
  virtual ~GCAnswerResult();

  GCAnswerResult(const GCAnswerResult& from);

  inline GCAnswerResult& operator=(const GCAnswerResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCAnswerResult& default_instance();

  void Swap(GCAnswerResult* other);

  // implements Message ----------------------------------------------

  GCAnswerResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCAnswerResult& from);
  void MergeFrom(const GCAnswerResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 right = 2;
  inline bool has_right() const;
  inline void clear_right();
  static const int kRightFieldNumber = 2;
  inline ::google::protobuf::int32 right() const;
  inline void set_right(::google::protobuf::int32 value);

  // optional int32 total = 3;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 3;
  inline ::google::protobuf::int32 total() const;
  inline void set_total(::google::protobuf::int32 value);

  // optional int32 errorCode = 4;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 4;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);

  // optional int32 totalExp = 5;
  inline bool has_totalexp() const;
  inline void clear_totalexp();
  static const int kTotalExpFieldNumber = 5;
  inline ::google::protobuf::int32 totalexp() const;
  inline void set_totalexp(::google::protobuf::int32 value);

  // optional int32 totalMoney = 6;
  inline bool has_totalmoney() const;
  inline void clear_totalmoney();
  static const int kTotalMoneyFieldNumber = 6;
  inline ::google::protobuf::int32 totalmoney() const;
  inline void set_totalmoney(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCAnswerResult)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_right();
  inline void clear_has_right();
  inline void set_has_total();
  inline void clear_has_total();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_totalexp();
  inline void clear_has_totalexp();
  inline void set_has_totalmoney();
  inline void clear_has_totalmoney();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 right_;
  ::google::protobuf::int32 total_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 totalexp_;
  ::google::protobuf::int32 totalmoney_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCAnswerResult* default_instance_;
};
// -------------------------------------------------------------------

class GCPushAnswerOpen : public ::google::protobuf::Message {
 public:
  GCPushAnswerOpen();
  virtual ~GCPushAnswerOpen();

  GCPushAnswerOpen(const GCPushAnswerOpen& from);

  inline GCPushAnswerOpen& operator=(const GCPushAnswerOpen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPushAnswerOpen& default_instance();

  void Swap(GCPushAnswerOpen* other);

  // implements Message ----------------------------------------------

  GCPushAnswerOpen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPushAnswerOpen& from);
  void MergeFrom(const GCPushAnswerOpen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 isOpenSurvey = 1;
  inline bool has_isopensurvey() const;
  inline void clear_isopensurvey();
  static const int kIsOpenSurveyFieldNumber = 1;
  inline ::google::protobuf::int32 isopensurvey() const;
  inline void set_isopensurvey(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCPushAnswerOpen)
 private:
  inline void set_has_isopensurvey();
  inline void clear_has_isopensurvey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 isopensurvey_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPushAnswerOpen* default_instance_;
};
// -------------------------------------------------------------------

class GCInitAnswer : public ::google::protobuf::Message {
 public:
  GCInitAnswer();
  virtual ~GCInitAnswer();

  GCInitAnswer(const GCInitAnswer& from);

  inline GCInitAnswer& operator=(const GCInitAnswer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCInitAnswer& default_instance();

  void Swap(GCInitAnswer* other);

  // implements Message ----------------------------------------------

  GCInitAnswer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCInitAnswer& from);
  void MergeFrom(const GCInitAnswer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::int32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int32 value);
  inline void add_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // optional int64 beginTime = 2;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 2;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int32 right = 3;
  inline bool has_right() const;
  inline void clear_right();
  static const int kRightFieldNumber = 3;
  inline ::google::protobuf::int32 right() const;
  inline void set_right(::google::protobuf::int32 value);

  // optional int32 total = 4;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 4;
  inline ::google::protobuf::int32 total() const;
  inline void set_total(::google::protobuf::int32 value);

  // optional int32 totalExp = 5;
  inline bool has_totalexp() const;
  inline void clear_totalexp();
  static const int kTotalExpFieldNumber = 5;
  inline ::google::protobuf::int32 totalexp() const;
  inline void set_totalexp(::google::protobuf::int32 value);

  // optional int32 totalMoney = 6;
  inline bool has_totalmoney() const;
  inline void clear_totalmoney();
  static const int kTotalMoneyFieldNumber = 6;
  inline ::google::protobuf::int32 totalmoney() const;
  inline void set_totalmoney(::google::protobuf::int32 value);

  // optional int32 isOpenSurvey = 7;
  inline bool has_isopensurvey() const;
  inline void clear_isopensurvey();
  static const int kIsOpenSurveyFieldNumber = 7;
  inline ::google::protobuf::int32 isopensurvey() const;
  inline void set_isopensurvey(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCInitAnswer)
 private:
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_right();
  inline void clear_has_right();
  inline void set_has_total();
  inline void clear_has_total();
  inline void set_has_totalexp();
  inline void clear_has_totalexp();
  inline void set_has_totalmoney();
  inline void clear_has_totalmoney();
  inline void set_has_isopensurvey();
  inline void clear_has_isopensurvey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int32 right_;
  ::google::protobuf::int32 total_;
  ::google::protobuf::int32 totalexp_;
  ::google::protobuf::int32 totalmoney_;
  ::google::protobuf::int32 isopensurvey_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCInitAnswer* default_instance_;
};
// -------------------------------------------------------------------

class CGSurvey : public ::google::protobuf::Message {
 public:
  CGSurvey();
  virtual ~CGSurvey();

  CGSurvey(const CGSurvey& from);

  inline CGSurvey& operator=(const CGSurvey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSurvey& default_instance();

  void Swap(CGSurvey* other);

  // implements Message ----------------------------------------------

  CGSurvey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSurvey& from);
  void MergeFrom(const CGSurvey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string answer = 2;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 2;
  inline const ::std::string& answer() const;
  inline void set_answer(const ::std::string& value);
  inline void set_answer(const char* value);
  inline void set_answer(const char* value, size_t size);
  inline ::std::string* mutable_answer();
  inline ::std::string* release_answer();
  inline void set_allocated_answer(::std::string* answer);

  // @@protoc_insertion_point(class_scope:CGSurvey)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_answer();
  inline void clear_has_answer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* answer_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSurvey* default_instance_;
};
// -------------------------------------------------------------------

class GCSurvey : public ::google::protobuf::Message {
 public:
  GCSurvey();
  virtual ~GCSurvey();

  GCSurvey(const GCSurvey& from);

  inline GCSurvey& operator=(const GCSurvey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSurvey& default_instance();

  void Swap(GCSurvey* other);

  // implements Message ----------------------------------------------

  GCSurvey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSurvey& from);
  void MergeFrom(const GCSurvey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCSurvey)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSurvey* default_instance_;
};
// -------------------------------------------------------------------

class QuestionData : public ::google::protobuf::Message {
 public:
  QuestionData();
  virtual ~QuestionData();

  QuestionData(const QuestionData& from);

  inline QuestionData& operator=(const QuestionData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestionData& default_instance();

  void Swap(QuestionData* other);

  // implements Message ----------------------------------------------

  QuestionData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestionData& from);
  void MergeFrom(const QuestionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 category = 2;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 2;
  inline ::google::protobuf::int32 category() const;
  inline void set_category(::google::protobuf::int32 value);

  // optional string question = 3;
  inline bool has_question() const;
  inline void clear_question();
  static const int kQuestionFieldNumber = 3;
  inline const ::std::string& question() const;
  inline void set_question(const ::std::string& value);
  inline void set_question(const char* value);
  inline void set_question(const char* value, size_t size);
  inline ::std::string* mutable_question();
  inline ::std::string* release_question();
  inline void set_allocated_question(::std::string* question);

  // optional string answer = 4;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 4;
  inline const ::std::string& answer() const;
  inline void set_answer(const ::std::string& value);
  inline void set_answer(const char* value);
  inline void set_answer(const char* value, size_t size);
  inline ::std::string* mutable_answer();
  inline ::std::string* release_answer();
  inline void set_allocated_answer(::std::string* answer);

  // @@protoc_insertion_point(class_scope:QuestionData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_category();
  inline void clear_has_category();
  inline void set_has_question();
  inline void clear_has_question();
  inline void set_has_answer();
  inline void clear_has_answer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 category_;
  ::std::string* question_;
  ::std::string* answer_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static QuestionData* default_instance_;
};
// -------------------------------------------------------------------

class TiKuData : public ::google::protobuf::Message {
 public:
  TiKuData();
  virtual ~TiKuData();

  TiKuData(const TiKuData& from);

  inline TiKuData& operator=(const TiKuData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TiKuData& default_instance();

  void Swap(TiKuData* other);

  // implements Message ----------------------------------------------

  TiKuData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TiKuData& from);
  void MergeFrom(const TiKuData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .QuestionData datas = 1;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 1;
  inline const ::QuestionData& datas(int index) const;
  inline ::QuestionData* mutable_datas(int index);
  inline ::QuestionData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::QuestionData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuestionData >*
      mutable_datas();

  // optional string propsReward = 3;
  inline bool has_propsreward() const;
  inline void clear_propsreward();
  static const int kPropsRewardFieldNumber = 3;
  inline const ::std::string& propsreward() const;
  inline void set_propsreward(const ::std::string& value);
  inline void set_propsreward(const char* value);
  inline void set_propsreward(const char* value, size_t size);
  inline ::std::string* mutable_propsreward();
  inline ::std::string* release_propsreward();
  inline void set_allocated_propsreward(::std::string* propsreward);

  // optional string currencyReward = 4;
  inline bool has_currencyreward() const;
  inline void clear_currencyreward();
  static const int kCurrencyRewardFieldNumber = 4;
  inline const ::std::string& currencyreward() const;
  inline void set_currencyreward(const ::std::string& value);
  inline void set_currencyreward(const char* value);
  inline void set_currencyreward(const char* value, size_t size);
  inline ::std::string* mutable_currencyreward();
  inline ::std::string* release_currencyreward();
  inline void set_allocated_currencyreward(::std::string* currencyreward);

  // optional int32 tikuId = 5;
  inline bool has_tikuid() const;
  inline void clear_tikuid();
  static const int kTikuIdFieldNumber = 5;
  inline ::google::protobuf::int32 tikuid() const;
  inline void set_tikuid(::google::protobuf::int32 value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 rwdSts = 7;
  inline bool has_rwdsts() const;
  inline void clear_rwdsts();
  static const int kRwdStsFieldNumber = 7;
  inline ::google::protobuf::int32 rwdsts() const;
  inline void set_rwdsts(::google::protobuf::int32 value);

  // optional int32 totalNum = 8;
  inline bool has_totalnum() const;
  inline void clear_totalnum();
  static const int kTotalNumFieldNumber = 8;
  inline ::google::protobuf::int32 totalnum() const;
  inline void set_totalnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TiKuData)
 private:
  inline void set_has_propsreward();
  inline void clear_has_propsreward();
  inline void set_has_currencyreward();
  inline void clear_has_currencyreward();
  inline void set_has_tikuid();
  inline void clear_has_tikuid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_rwdsts();
  inline void clear_has_rwdsts();
  inline void set_has_totalnum();
  inline void clear_has_totalnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::QuestionData > datas_;
  ::std::string* propsreward_;
  ::std::string* currencyreward_;
  ::std::string* name_;
  ::google::protobuf::int32 tikuid_;
  ::google::protobuf::int32 rwdsts_;
  ::google::protobuf::int32 totalnum_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static TiKuData* default_instance_;
};
// -------------------------------------------------------------------

class GCWenJuanListData : public ::google::protobuf::Message {
 public:
  GCWenJuanListData();
  virtual ~GCWenJuanListData();

  GCWenJuanListData(const GCWenJuanListData& from);

  inline GCWenJuanListData& operator=(const GCWenJuanListData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCWenJuanListData& default_instance();

  void Swap(GCWenJuanListData* other);

  // implements Message ----------------------------------------------

  GCWenJuanListData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCWenJuanListData& from);
  void MergeFrom(const GCWenJuanListData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TiKuData dataList = 1;
  inline int datalist_size() const;
  inline void clear_datalist();
  static const int kDataListFieldNumber = 1;
  inline const ::TiKuData& datalist(int index) const;
  inline ::TiKuData* mutable_datalist(int index);
  inline ::TiKuData* add_datalist();
  inline const ::google::protobuf::RepeatedPtrField< ::TiKuData >&
      datalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TiKuData >*
      mutable_datalist();

  // @@protoc_insertion_point(class_scope:GCWenJuanListData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TiKuData > datalist_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCWenJuanListData* default_instance_;
};
// -------------------------------------------------------------------

class CGAnswrQus : public ::google::protobuf::Message {
 public:
  CGAnswrQus();
  virtual ~CGAnswrQus();

  CGAnswrQus(const CGAnswrQus& from);

  inline CGAnswrQus& operator=(const CGAnswrQus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGAnswrQus& default_instance();

  void Swap(CGAnswrQus* other);

  // implements Message ----------------------------------------------

  CGAnswrQus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGAnswrQus& from);
  void MergeFrom(const CGAnswrQus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tikuId = 1;
  inline bool has_tikuid() const;
  inline void clear_tikuid();
  static const int kTikuIdFieldNumber = 1;
  inline ::google::protobuf::int32 tikuid() const;
  inline void set_tikuid(::google::protobuf::int32 value);

  // optional int32 questId = 2;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestIdFieldNumber = 2;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // optional string answer = 3;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 3;
  inline const ::std::string& answer() const;
  inline void set_answer(const ::std::string& value);
  inline void set_answer(const char* value);
  inline void set_answer(const char* value, size_t size);
  inline ::std::string* mutable_answer();
  inline ::std::string* release_answer();
  inline void set_allocated_answer(::std::string* answer);

  // @@protoc_insertion_point(class_scope:CGAnswrQus)
 private:
  inline void set_has_tikuid();
  inline void clear_has_tikuid();
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_answer();
  inline void clear_has_answer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tikuid_;
  ::google::protobuf::int32 questid_;
  ::std::string* answer_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGAnswrQus* default_instance_;
};
// -------------------------------------------------------------------

class GCAnswrQus : public ::google::protobuf::Message {
 public:
  GCAnswrQus();
  virtual ~GCAnswrQus();

  GCAnswrQus(const GCAnswrQus& from);

  inline GCAnswrQus& operator=(const GCAnswrQus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCAnswrQus& default_instance();

  void Swap(GCAnswrQus* other);

  // implements Message ----------------------------------------------

  GCAnswrQus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCAnswrQus& from);
  void MergeFrom(const GCAnswrQus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tikuId = 1;
  inline bool has_tikuid() const;
  inline void clear_tikuid();
  static const int kTikuIdFieldNumber = 1;
  inline ::google::protobuf::int32 tikuid() const;
  inline void set_tikuid(::google::protobuf::int32 value);

  // optional int32 questId = 2;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestIdFieldNumber = 2;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCAnswrQus)
 private:
  inline void set_has_tikuid();
  inline void clear_has_tikuid();
  inline void set_has_questid();
  inline void clear_has_questid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tikuid_;
  ::google::protobuf::int32 questid_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCAnswrQus* default_instance_;
};
// -------------------------------------------------------------------

class CGRwdAnswrQus : public ::google::protobuf::Message {
 public:
  CGRwdAnswrQus();
  virtual ~CGRwdAnswrQus();

  CGRwdAnswrQus(const CGRwdAnswrQus& from);

  inline CGRwdAnswrQus& operator=(const CGRwdAnswrQus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGRwdAnswrQus& default_instance();

  void Swap(CGRwdAnswrQus* other);

  // implements Message ----------------------------------------------

  CGRwdAnswrQus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGRwdAnswrQus& from);
  void MergeFrom(const CGRwdAnswrQus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tikuId = 5;
  inline bool has_tikuid() const;
  inline void clear_tikuid();
  static const int kTikuIdFieldNumber = 5;
  inline ::google::protobuf::int32 tikuid() const;
  inline void set_tikuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGRwdAnswrQus)
 private:
  inline void set_has_tikuid();
  inline void clear_has_tikuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tikuid_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGRwdAnswrQus* default_instance_;
};
// -------------------------------------------------------------------

class GCRwdAnswrQus : public ::google::protobuf::Message {
 public:
  GCRwdAnswrQus();
  virtual ~GCRwdAnswrQus();

  GCRwdAnswrQus(const GCRwdAnswrQus& from);

  inline GCRwdAnswrQus& operator=(const GCRwdAnswrQus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRwdAnswrQus& default_instance();

  void Swap(GCRwdAnswrQus* other);

  // implements Message ----------------------------------------------

  GCRwdAnswrQus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRwdAnswrQus& from);
  void MergeFrom(const GCRwdAnswrQus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tikuId = 5;
  inline bool has_tikuid() const;
  inline void clear_tikuid();
  static const int kTikuIdFieldNumber = 5;
  inline ::google::protobuf::int32 tikuid() const;
  inline void set_tikuid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCRwdAnswrQus)
 private:
  inline void set_has_tikuid();
  inline void clear_has_tikuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tikuid_;
  friend void  protobuf_AddDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_AssignDesc_ActivityAnswerMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityAnswerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRwdAnswrQus* default_instance_;
};
// ===================================================================


// ===================================================================

// CGGetQuestions

// -------------------------------------------------------------------

// GCSendQuestions

// repeated int32 ids = 1;
inline int GCSendQuestions::ids_size() const {
  return ids_.size();
}
inline void GCSendQuestions::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int32 GCSendQuestions::ids(int index) const {
  // @@protoc_insertion_point(field_get:GCSendQuestions.ids)
  return ids_.Get(index);
}
inline void GCSendQuestions::set_ids(int index, ::google::protobuf::int32 value) {
  ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCSendQuestions.ids)
}
inline void GCSendQuestions::add_ids(::google::protobuf::int32 value) {
  ids_.Add(value);
  // @@protoc_insertion_point(field_add:GCSendQuestions.ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCSendQuestions::ids() const {
  // @@protoc_insertion_point(field_list:GCSendQuestions.ids)
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCSendQuestions::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:GCSendQuestions.ids)
  return &ids_;
}

// optional int64 beginTime = 2;
inline bool GCSendQuestions::has_begintime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSendQuestions::set_has_begintime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSendQuestions::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSendQuestions::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 GCSendQuestions::begintime() const {
  // @@protoc_insertion_point(field_get:GCSendQuestions.beginTime)
  return begintime_;
}
inline void GCSendQuestions::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
  // @@protoc_insertion_point(field_set:GCSendQuestions.beginTime)
}

// optional int32 isOpenSurvey = 3;
inline bool GCSendQuestions::has_isopensurvey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSendQuestions::set_has_isopensurvey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSendQuestions::clear_has_isopensurvey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSendQuestions::clear_isopensurvey() {
  isopensurvey_ = 0;
  clear_has_isopensurvey();
}
inline ::google::protobuf::int32 GCSendQuestions::isopensurvey() const {
  // @@protoc_insertion_point(field_get:GCSendQuestions.isOpenSurvey)
  return isopensurvey_;
}
inline void GCSendQuestions::set_isopensurvey(::google::protobuf::int32 value) {
  set_has_isopensurvey();
  isopensurvey_ = value;
  // @@protoc_insertion_point(field_set:GCSendQuestions.isOpenSurvey)
}

// -------------------------------------------------------------------

// CGAnswer

// optional int32 id = 1;
inline bool CGAnswer::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGAnswer::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGAnswer::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGAnswer::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGAnswer::id() const {
  // @@protoc_insertion_point(field_get:CGAnswer.id)
  return id_;
}
inline void CGAnswer::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGAnswer.id)
}

// optional int32 answer = 2;
inline bool CGAnswer::has_answer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGAnswer::set_has_answer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGAnswer::clear_has_answer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGAnswer::clear_answer() {
  answer_ = 0;
  clear_has_answer();
}
inline ::google::protobuf::int32 CGAnswer::answer() const {
  // @@protoc_insertion_point(field_get:CGAnswer.answer)
  return answer_;
}
inline void CGAnswer::set_answer(::google::protobuf::int32 value) {
  set_has_answer();
  answer_ = value;
  // @@protoc_insertion_point(field_set:CGAnswer.answer)
}

// -------------------------------------------------------------------

// GCAnswerResult

// optional int32 result = 1;
inline bool GCAnswerResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCAnswerResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCAnswerResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCAnswerResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCAnswerResult::result() const {
  // @@protoc_insertion_point(field_get:GCAnswerResult.result)
  return result_;
}
inline void GCAnswerResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCAnswerResult.result)
}

// optional int32 right = 2;
inline bool GCAnswerResult::has_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCAnswerResult::set_has_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCAnswerResult::clear_has_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCAnswerResult::clear_right() {
  right_ = 0;
  clear_has_right();
}
inline ::google::protobuf::int32 GCAnswerResult::right() const {
  // @@protoc_insertion_point(field_get:GCAnswerResult.right)
  return right_;
}
inline void GCAnswerResult::set_right(::google::protobuf::int32 value) {
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:GCAnswerResult.right)
}

// optional int32 total = 3;
inline bool GCAnswerResult::has_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCAnswerResult::set_has_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCAnswerResult::clear_has_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCAnswerResult::clear_total() {
  total_ = 0;
  clear_has_total();
}
inline ::google::protobuf::int32 GCAnswerResult::total() const {
  // @@protoc_insertion_point(field_get:GCAnswerResult.total)
  return total_;
}
inline void GCAnswerResult::set_total(::google::protobuf::int32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:GCAnswerResult.total)
}

// optional int32 errorCode = 4;
inline bool GCAnswerResult::has_errorcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCAnswerResult::set_has_errorcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCAnswerResult::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCAnswerResult::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 GCAnswerResult::errorcode() const {
  // @@protoc_insertion_point(field_get:GCAnswerResult.errorCode)
  return errorcode_;
}
inline void GCAnswerResult::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:GCAnswerResult.errorCode)
}

// optional int32 totalExp = 5;
inline bool GCAnswerResult::has_totalexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCAnswerResult::set_has_totalexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCAnswerResult::clear_has_totalexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCAnswerResult::clear_totalexp() {
  totalexp_ = 0;
  clear_has_totalexp();
}
inline ::google::protobuf::int32 GCAnswerResult::totalexp() const {
  // @@protoc_insertion_point(field_get:GCAnswerResult.totalExp)
  return totalexp_;
}
inline void GCAnswerResult::set_totalexp(::google::protobuf::int32 value) {
  set_has_totalexp();
  totalexp_ = value;
  // @@protoc_insertion_point(field_set:GCAnswerResult.totalExp)
}

// optional int32 totalMoney = 6;
inline bool GCAnswerResult::has_totalmoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCAnswerResult::set_has_totalmoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCAnswerResult::clear_has_totalmoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCAnswerResult::clear_totalmoney() {
  totalmoney_ = 0;
  clear_has_totalmoney();
}
inline ::google::protobuf::int32 GCAnswerResult::totalmoney() const {
  // @@protoc_insertion_point(field_get:GCAnswerResult.totalMoney)
  return totalmoney_;
}
inline void GCAnswerResult::set_totalmoney(::google::protobuf::int32 value) {
  set_has_totalmoney();
  totalmoney_ = value;
  // @@protoc_insertion_point(field_set:GCAnswerResult.totalMoney)
}

// -------------------------------------------------------------------

// GCPushAnswerOpen

// optional int32 isOpenSurvey = 1;
inline bool GCPushAnswerOpen::has_isopensurvey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPushAnswerOpen::set_has_isopensurvey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPushAnswerOpen::clear_has_isopensurvey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPushAnswerOpen::clear_isopensurvey() {
  isopensurvey_ = 0;
  clear_has_isopensurvey();
}
inline ::google::protobuf::int32 GCPushAnswerOpen::isopensurvey() const {
  // @@protoc_insertion_point(field_get:GCPushAnswerOpen.isOpenSurvey)
  return isopensurvey_;
}
inline void GCPushAnswerOpen::set_isopensurvey(::google::protobuf::int32 value) {
  set_has_isopensurvey();
  isopensurvey_ = value;
  // @@protoc_insertion_point(field_set:GCPushAnswerOpen.isOpenSurvey)
}

// -------------------------------------------------------------------

// GCInitAnswer

// repeated int32 ids = 1;
inline int GCInitAnswer::ids_size() const {
  return ids_.size();
}
inline void GCInitAnswer::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int32 GCInitAnswer::ids(int index) const {
  // @@protoc_insertion_point(field_get:GCInitAnswer.ids)
  return ids_.Get(index);
}
inline void GCInitAnswer::set_ids(int index, ::google::protobuf::int32 value) {
  ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCInitAnswer.ids)
}
inline void GCInitAnswer::add_ids(::google::protobuf::int32 value) {
  ids_.Add(value);
  // @@protoc_insertion_point(field_add:GCInitAnswer.ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCInitAnswer::ids() const {
  // @@protoc_insertion_point(field_list:GCInitAnswer.ids)
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCInitAnswer::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:GCInitAnswer.ids)
  return &ids_;
}

// optional int64 beginTime = 2;
inline bool GCInitAnswer::has_begintime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCInitAnswer::set_has_begintime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCInitAnswer::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCInitAnswer::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 GCInitAnswer::begintime() const {
  // @@protoc_insertion_point(field_get:GCInitAnswer.beginTime)
  return begintime_;
}
inline void GCInitAnswer::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
  // @@protoc_insertion_point(field_set:GCInitAnswer.beginTime)
}

// optional int32 right = 3;
inline bool GCInitAnswer::has_right() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCInitAnswer::set_has_right() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCInitAnswer::clear_has_right() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCInitAnswer::clear_right() {
  right_ = 0;
  clear_has_right();
}
inline ::google::protobuf::int32 GCInitAnswer::right() const {
  // @@protoc_insertion_point(field_get:GCInitAnswer.right)
  return right_;
}
inline void GCInitAnswer::set_right(::google::protobuf::int32 value) {
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:GCInitAnswer.right)
}

// optional int32 total = 4;
inline bool GCInitAnswer::has_total() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCInitAnswer::set_has_total() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCInitAnswer::clear_has_total() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCInitAnswer::clear_total() {
  total_ = 0;
  clear_has_total();
}
inline ::google::protobuf::int32 GCInitAnswer::total() const {
  // @@protoc_insertion_point(field_get:GCInitAnswer.total)
  return total_;
}
inline void GCInitAnswer::set_total(::google::protobuf::int32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:GCInitAnswer.total)
}

// optional int32 totalExp = 5;
inline bool GCInitAnswer::has_totalexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCInitAnswer::set_has_totalexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCInitAnswer::clear_has_totalexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCInitAnswer::clear_totalexp() {
  totalexp_ = 0;
  clear_has_totalexp();
}
inline ::google::protobuf::int32 GCInitAnswer::totalexp() const {
  // @@protoc_insertion_point(field_get:GCInitAnswer.totalExp)
  return totalexp_;
}
inline void GCInitAnswer::set_totalexp(::google::protobuf::int32 value) {
  set_has_totalexp();
  totalexp_ = value;
  // @@protoc_insertion_point(field_set:GCInitAnswer.totalExp)
}

// optional int32 totalMoney = 6;
inline bool GCInitAnswer::has_totalmoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCInitAnswer::set_has_totalmoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCInitAnswer::clear_has_totalmoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCInitAnswer::clear_totalmoney() {
  totalmoney_ = 0;
  clear_has_totalmoney();
}
inline ::google::protobuf::int32 GCInitAnswer::totalmoney() const {
  // @@protoc_insertion_point(field_get:GCInitAnswer.totalMoney)
  return totalmoney_;
}
inline void GCInitAnswer::set_totalmoney(::google::protobuf::int32 value) {
  set_has_totalmoney();
  totalmoney_ = value;
  // @@protoc_insertion_point(field_set:GCInitAnswer.totalMoney)
}

// optional int32 isOpenSurvey = 7;
inline bool GCInitAnswer::has_isopensurvey() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GCInitAnswer::set_has_isopensurvey() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GCInitAnswer::clear_has_isopensurvey() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GCInitAnswer::clear_isopensurvey() {
  isopensurvey_ = 0;
  clear_has_isopensurvey();
}
inline ::google::protobuf::int32 GCInitAnswer::isopensurvey() const {
  // @@protoc_insertion_point(field_get:GCInitAnswer.isOpenSurvey)
  return isopensurvey_;
}
inline void GCInitAnswer::set_isopensurvey(::google::protobuf::int32 value) {
  set_has_isopensurvey();
  isopensurvey_ = value;
  // @@protoc_insertion_point(field_set:GCInitAnswer.isOpenSurvey)
}

// -------------------------------------------------------------------

// CGSurvey

// optional int32 id = 1;
inline bool CGSurvey::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSurvey::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSurvey::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSurvey::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGSurvey::id() const {
  // @@protoc_insertion_point(field_get:CGSurvey.id)
  return id_;
}
inline void CGSurvey::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGSurvey.id)
}

// optional string answer = 2;
inline bool CGSurvey::has_answer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSurvey::set_has_answer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSurvey::clear_has_answer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSurvey::clear_answer() {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_->clear();
  }
  clear_has_answer();
}
inline const ::std::string& CGSurvey::answer() const {
  // @@protoc_insertion_point(field_get:CGSurvey.answer)
  return *answer_;
}
inline void CGSurvey::set_answer(const ::std::string& value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set:CGSurvey.answer)
}
inline void CGSurvey::set_answer(const char* value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGSurvey.answer)
}
inline void CGSurvey::set_answer(const char* value, size_t size) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGSurvey.answer)
}
inline ::std::string* CGSurvey::mutable_answer() {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGSurvey.answer)
  return answer_;
}
inline ::std::string* CGSurvey::release_answer() {
  clear_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = answer_;
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGSurvey::set_allocated_answer(::std::string* answer) {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete answer_;
  }
  if (answer) {
    set_has_answer();
    answer_ = answer;
  } else {
    clear_has_answer();
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGSurvey.answer)
}

// -------------------------------------------------------------------

// GCSurvey

// optional int32 result = 1;
inline bool GCSurvey::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSurvey::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSurvey::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSurvey::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCSurvey::result() const {
  // @@protoc_insertion_point(field_get:GCSurvey.result)
  return result_;
}
inline void GCSurvey::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCSurvey.result)
}

// -------------------------------------------------------------------

// QuestionData

// optional int32 id = 1;
inline bool QuestionData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestionData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestionData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestionData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 QuestionData::id() const {
  // @@protoc_insertion_point(field_get:QuestionData.id)
  return id_;
}
inline void QuestionData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:QuestionData.id)
}

// optional int32 category = 2;
inline bool QuestionData::has_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestionData::set_has_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestionData::clear_has_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestionData::clear_category() {
  category_ = 0;
  clear_has_category();
}
inline ::google::protobuf::int32 QuestionData::category() const {
  // @@protoc_insertion_point(field_get:QuestionData.category)
  return category_;
}
inline void QuestionData::set_category(::google::protobuf::int32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:QuestionData.category)
}

// optional string question = 3;
inline bool QuestionData::has_question() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuestionData::set_has_question() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuestionData::clear_has_question() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuestionData::clear_question() {
  if (question_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    question_->clear();
  }
  clear_has_question();
}
inline const ::std::string& QuestionData::question() const {
  // @@protoc_insertion_point(field_get:QuestionData.question)
  return *question_;
}
inline void QuestionData::set_question(const ::std::string& value) {
  set_has_question();
  if (question_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    question_ = new ::std::string;
  }
  question_->assign(value);
  // @@protoc_insertion_point(field_set:QuestionData.question)
}
inline void QuestionData::set_question(const char* value) {
  set_has_question();
  if (question_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    question_ = new ::std::string;
  }
  question_->assign(value);
  // @@protoc_insertion_point(field_set_char:QuestionData.question)
}
inline void QuestionData::set_question(const char* value, size_t size) {
  set_has_question();
  if (question_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    question_ = new ::std::string;
  }
  question_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:QuestionData.question)
}
inline ::std::string* QuestionData::mutable_question() {
  set_has_question();
  if (question_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    question_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:QuestionData.question)
  return question_;
}
inline ::std::string* QuestionData::release_question() {
  clear_has_question();
  if (question_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = question_;
    question_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QuestionData::set_allocated_question(::std::string* question) {
  if (question_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete question_;
  }
  if (question) {
    set_has_question();
    question_ = question;
  } else {
    clear_has_question();
    question_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:QuestionData.question)
}

// optional string answer = 4;
inline bool QuestionData::has_answer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuestionData::set_has_answer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuestionData::clear_has_answer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuestionData::clear_answer() {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_->clear();
  }
  clear_has_answer();
}
inline const ::std::string& QuestionData::answer() const {
  // @@protoc_insertion_point(field_get:QuestionData.answer)
  return *answer_;
}
inline void QuestionData::set_answer(const ::std::string& value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set:QuestionData.answer)
}
inline void QuestionData::set_answer(const char* value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set_char:QuestionData.answer)
}
inline void QuestionData::set_answer(const char* value, size_t size) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:QuestionData.answer)
}
inline ::std::string* QuestionData::mutable_answer() {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:QuestionData.answer)
  return answer_;
}
inline ::std::string* QuestionData::release_answer() {
  clear_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = answer_;
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QuestionData::set_allocated_answer(::std::string* answer) {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete answer_;
  }
  if (answer) {
    set_has_answer();
    answer_ = answer;
  } else {
    clear_has_answer();
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:QuestionData.answer)
}

// -------------------------------------------------------------------

// TiKuData

// repeated .QuestionData datas = 1;
inline int TiKuData::datas_size() const {
  return datas_.size();
}
inline void TiKuData::clear_datas() {
  datas_.Clear();
}
inline const ::QuestionData& TiKuData::datas(int index) const {
  // @@protoc_insertion_point(field_get:TiKuData.datas)
  return datas_.Get(index);
}
inline ::QuestionData* TiKuData::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:TiKuData.datas)
  return datas_.Mutable(index);
}
inline ::QuestionData* TiKuData::add_datas() {
  // @@protoc_insertion_point(field_add:TiKuData.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuestionData >&
TiKuData::datas() const {
  // @@protoc_insertion_point(field_list:TiKuData.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuestionData >*
TiKuData::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:TiKuData.datas)
  return &datas_;
}

// optional string propsReward = 3;
inline bool TiKuData::has_propsreward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TiKuData::set_has_propsreward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TiKuData::clear_has_propsreward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TiKuData::clear_propsreward() {
  if (propsreward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    propsreward_->clear();
  }
  clear_has_propsreward();
}
inline const ::std::string& TiKuData::propsreward() const {
  // @@protoc_insertion_point(field_get:TiKuData.propsReward)
  return *propsreward_;
}
inline void TiKuData::set_propsreward(const ::std::string& value) {
  set_has_propsreward();
  if (propsreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    propsreward_ = new ::std::string;
  }
  propsreward_->assign(value);
  // @@protoc_insertion_point(field_set:TiKuData.propsReward)
}
inline void TiKuData::set_propsreward(const char* value) {
  set_has_propsreward();
  if (propsreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    propsreward_ = new ::std::string;
  }
  propsreward_->assign(value);
  // @@protoc_insertion_point(field_set_char:TiKuData.propsReward)
}
inline void TiKuData::set_propsreward(const char* value, size_t size) {
  set_has_propsreward();
  if (propsreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    propsreward_ = new ::std::string;
  }
  propsreward_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TiKuData.propsReward)
}
inline ::std::string* TiKuData::mutable_propsreward() {
  set_has_propsreward();
  if (propsreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    propsreward_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TiKuData.propsReward)
  return propsreward_;
}
inline ::std::string* TiKuData::release_propsreward() {
  clear_has_propsreward();
  if (propsreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = propsreward_;
    propsreward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TiKuData::set_allocated_propsreward(::std::string* propsreward) {
  if (propsreward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete propsreward_;
  }
  if (propsreward) {
    set_has_propsreward();
    propsreward_ = propsreward;
  } else {
    clear_has_propsreward();
    propsreward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TiKuData.propsReward)
}

// optional string currencyReward = 4;
inline bool TiKuData::has_currencyreward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TiKuData::set_has_currencyreward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TiKuData::clear_has_currencyreward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TiKuData::clear_currencyreward() {
  if (currencyreward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currencyreward_->clear();
  }
  clear_has_currencyreward();
}
inline const ::std::string& TiKuData::currencyreward() const {
  // @@protoc_insertion_point(field_get:TiKuData.currencyReward)
  return *currencyreward_;
}
inline void TiKuData::set_currencyreward(const ::std::string& value) {
  set_has_currencyreward();
  if (currencyreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currencyreward_ = new ::std::string;
  }
  currencyreward_->assign(value);
  // @@protoc_insertion_point(field_set:TiKuData.currencyReward)
}
inline void TiKuData::set_currencyreward(const char* value) {
  set_has_currencyreward();
  if (currencyreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currencyreward_ = new ::std::string;
  }
  currencyreward_->assign(value);
  // @@protoc_insertion_point(field_set_char:TiKuData.currencyReward)
}
inline void TiKuData::set_currencyreward(const char* value, size_t size) {
  set_has_currencyreward();
  if (currencyreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currencyreward_ = new ::std::string;
  }
  currencyreward_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TiKuData.currencyReward)
}
inline ::std::string* TiKuData::mutable_currencyreward() {
  set_has_currencyreward();
  if (currencyreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currencyreward_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TiKuData.currencyReward)
  return currencyreward_;
}
inline ::std::string* TiKuData::release_currencyreward() {
  clear_has_currencyreward();
  if (currencyreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = currencyreward_;
    currencyreward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TiKuData::set_allocated_currencyreward(::std::string* currencyreward) {
  if (currencyreward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete currencyreward_;
  }
  if (currencyreward) {
    set_has_currencyreward();
    currencyreward_ = currencyreward;
  } else {
    clear_has_currencyreward();
    currencyreward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TiKuData.currencyReward)
}

// optional int32 tikuId = 5;
inline bool TiKuData::has_tikuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TiKuData::set_has_tikuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TiKuData::clear_has_tikuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TiKuData::clear_tikuid() {
  tikuid_ = 0;
  clear_has_tikuid();
}
inline ::google::protobuf::int32 TiKuData::tikuid() const {
  // @@protoc_insertion_point(field_get:TiKuData.tikuId)
  return tikuid_;
}
inline void TiKuData::set_tikuid(::google::protobuf::int32 value) {
  set_has_tikuid();
  tikuid_ = value;
  // @@protoc_insertion_point(field_set:TiKuData.tikuId)
}

// optional string name = 6;
inline bool TiKuData::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TiKuData::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TiKuData::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TiKuData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TiKuData::name() const {
  // @@protoc_insertion_point(field_get:TiKuData.name)
  return *name_;
}
inline void TiKuData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TiKuData.name)
}
inline void TiKuData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TiKuData.name)
}
inline void TiKuData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TiKuData.name)
}
inline ::std::string* TiKuData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TiKuData.name)
  return name_;
}
inline ::std::string* TiKuData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TiKuData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TiKuData.name)
}

// optional int32 rwdSts = 7;
inline bool TiKuData::has_rwdsts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TiKuData::set_has_rwdsts() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TiKuData::clear_has_rwdsts() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TiKuData::clear_rwdsts() {
  rwdsts_ = 0;
  clear_has_rwdsts();
}
inline ::google::protobuf::int32 TiKuData::rwdsts() const {
  // @@protoc_insertion_point(field_get:TiKuData.rwdSts)
  return rwdsts_;
}
inline void TiKuData::set_rwdsts(::google::protobuf::int32 value) {
  set_has_rwdsts();
  rwdsts_ = value;
  // @@protoc_insertion_point(field_set:TiKuData.rwdSts)
}

// optional int32 totalNum = 8;
inline bool TiKuData::has_totalnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TiKuData::set_has_totalnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TiKuData::clear_has_totalnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TiKuData::clear_totalnum() {
  totalnum_ = 0;
  clear_has_totalnum();
}
inline ::google::protobuf::int32 TiKuData::totalnum() const {
  // @@protoc_insertion_point(field_get:TiKuData.totalNum)
  return totalnum_;
}
inline void TiKuData::set_totalnum(::google::protobuf::int32 value) {
  set_has_totalnum();
  totalnum_ = value;
  // @@protoc_insertion_point(field_set:TiKuData.totalNum)
}

// -------------------------------------------------------------------

// GCWenJuanListData

// repeated .TiKuData dataList = 1;
inline int GCWenJuanListData::datalist_size() const {
  return datalist_.size();
}
inline void GCWenJuanListData::clear_datalist() {
  datalist_.Clear();
}
inline const ::TiKuData& GCWenJuanListData::datalist(int index) const {
  // @@protoc_insertion_point(field_get:GCWenJuanListData.dataList)
  return datalist_.Get(index);
}
inline ::TiKuData* GCWenJuanListData::mutable_datalist(int index) {
  // @@protoc_insertion_point(field_mutable:GCWenJuanListData.dataList)
  return datalist_.Mutable(index);
}
inline ::TiKuData* GCWenJuanListData::add_datalist() {
  // @@protoc_insertion_point(field_add:GCWenJuanListData.dataList)
  return datalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TiKuData >&
GCWenJuanListData::datalist() const {
  // @@protoc_insertion_point(field_list:GCWenJuanListData.dataList)
  return datalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TiKuData >*
GCWenJuanListData::mutable_datalist() {
  // @@protoc_insertion_point(field_mutable_list:GCWenJuanListData.dataList)
  return &datalist_;
}

// -------------------------------------------------------------------

// CGAnswrQus

// optional int32 tikuId = 1;
inline bool CGAnswrQus::has_tikuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGAnswrQus::set_has_tikuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGAnswrQus::clear_has_tikuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGAnswrQus::clear_tikuid() {
  tikuid_ = 0;
  clear_has_tikuid();
}
inline ::google::protobuf::int32 CGAnswrQus::tikuid() const {
  // @@protoc_insertion_point(field_get:CGAnswrQus.tikuId)
  return tikuid_;
}
inline void CGAnswrQus::set_tikuid(::google::protobuf::int32 value) {
  set_has_tikuid();
  tikuid_ = value;
  // @@protoc_insertion_point(field_set:CGAnswrQus.tikuId)
}

// optional int32 questId = 2;
inline bool CGAnswrQus::has_questid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGAnswrQus::set_has_questid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGAnswrQus::clear_has_questid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGAnswrQus::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 CGAnswrQus::questid() const {
  // @@protoc_insertion_point(field_get:CGAnswrQus.questId)
  return questid_;
}
inline void CGAnswrQus::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
  // @@protoc_insertion_point(field_set:CGAnswrQus.questId)
}

// optional string answer = 3;
inline bool CGAnswrQus::has_answer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGAnswrQus::set_has_answer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGAnswrQus::clear_has_answer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGAnswrQus::clear_answer() {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_->clear();
  }
  clear_has_answer();
}
inline const ::std::string& CGAnswrQus::answer() const {
  // @@protoc_insertion_point(field_get:CGAnswrQus.answer)
  return *answer_;
}
inline void CGAnswrQus::set_answer(const ::std::string& value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set:CGAnswrQus.answer)
}
inline void CGAnswrQus::set_answer(const char* value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGAnswrQus.answer)
}
inline void CGAnswrQus::set_answer(const char* value, size_t size) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGAnswrQus.answer)
}
inline ::std::string* CGAnswrQus::mutable_answer() {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGAnswrQus.answer)
  return answer_;
}
inline ::std::string* CGAnswrQus::release_answer() {
  clear_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = answer_;
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGAnswrQus::set_allocated_answer(::std::string* answer) {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete answer_;
  }
  if (answer) {
    set_has_answer();
    answer_ = answer;
  } else {
    clear_has_answer();
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGAnswrQus.answer)
}

// -------------------------------------------------------------------

// GCAnswrQus

// optional int32 tikuId = 1;
inline bool GCAnswrQus::has_tikuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCAnswrQus::set_has_tikuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCAnswrQus::clear_has_tikuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCAnswrQus::clear_tikuid() {
  tikuid_ = 0;
  clear_has_tikuid();
}
inline ::google::protobuf::int32 GCAnswrQus::tikuid() const {
  // @@protoc_insertion_point(field_get:GCAnswrQus.tikuId)
  return tikuid_;
}
inline void GCAnswrQus::set_tikuid(::google::protobuf::int32 value) {
  set_has_tikuid();
  tikuid_ = value;
  // @@protoc_insertion_point(field_set:GCAnswrQus.tikuId)
}

// optional int32 questId = 2;
inline bool GCAnswrQus::has_questid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCAnswrQus::set_has_questid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCAnswrQus::clear_has_questid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCAnswrQus::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 GCAnswrQus::questid() const {
  // @@protoc_insertion_point(field_get:GCAnswrQus.questId)
  return questid_;
}
inline void GCAnswrQus::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
  // @@protoc_insertion_point(field_set:GCAnswrQus.questId)
}

// -------------------------------------------------------------------

// CGRwdAnswrQus

// optional int32 tikuId = 5;
inline bool CGRwdAnswrQus::has_tikuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGRwdAnswrQus::set_has_tikuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGRwdAnswrQus::clear_has_tikuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGRwdAnswrQus::clear_tikuid() {
  tikuid_ = 0;
  clear_has_tikuid();
}
inline ::google::protobuf::int32 CGRwdAnswrQus::tikuid() const {
  // @@protoc_insertion_point(field_get:CGRwdAnswrQus.tikuId)
  return tikuid_;
}
inline void CGRwdAnswrQus::set_tikuid(::google::protobuf::int32 value) {
  set_has_tikuid();
  tikuid_ = value;
  // @@protoc_insertion_point(field_set:CGRwdAnswrQus.tikuId)
}

// -------------------------------------------------------------------

// GCRwdAnswrQus

// optional int32 tikuId = 5;
inline bool GCRwdAnswrQus::has_tikuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCRwdAnswrQus::set_has_tikuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCRwdAnswrQus::clear_has_tikuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCRwdAnswrQus::clear_tikuid() {
  tikuid_ = 0;
  clear_has_tikuid();
}
inline ::google::protobuf::int32 GCRwdAnswrQus::tikuid() const {
  // @@protoc_insertion_point(field_get:GCRwdAnswrQus.tikuId)
  return tikuid_;
}
inline void GCRwdAnswrQus::set_tikuid(::google::protobuf::int32 value) {
  set_has_tikuid();
  tikuid_ = value;
  // @@protoc_insertion_point(field_set:GCRwdAnswrQus.tikuId)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ActivityAnswerMessage_2eproto__INCLUDED
