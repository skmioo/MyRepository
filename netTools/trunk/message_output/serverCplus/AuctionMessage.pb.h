// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AuctionMessage.proto

#ifndef PROTOBUF_AuctionMessage_2eproto__INCLUDED
#define PROTOBUF_AuctionMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EquipMessage.pb.h"
#include "InnerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AuctionMessage_2eproto();
void protobuf_AssignDesc_AuctionMessage_2eproto();
void protobuf_ShutdownFile_AuctionMessage_2eproto();

class AuctionBackData;
class AuctionRecordData;
class CGGetAucitonList;
class GCGetAucitonListBack;
class CGAuctionSale;
class CGAuctionBuyShelve;
class GCAuctionHouseBack;
class CGGetAuctionRecordList;
class GCGetAuctionRecordListBack;

// ===================================================================

class AuctionBackData : public ::google::protobuf::Message {
 public:
  AuctionBackData();
  virtual ~AuctionBackData();

  AuctionBackData(const AuctionBackData& from);

  inline AuctionBackData& operator=(const AuctionBackData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuctionBackData& default_instance();

  void Swap(AuctionBackData* other);

  // implements Message ----------------------------------------------

  AuctionBackData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuctionBackData& from);
  void MergeFrom(const AuctionBackData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ahID = 1;
  inline bool has_ahid() const;
  inline void clear_ahid();
  static const int kAhIDFieldNumber = 1;
  inline ::google::protobuf::int64 ahid() const;
  inline void set_ahid(::google::protobuf::int64 value);

  // optional int32 bid = 2;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 2;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // optional int32 sid = 3;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 3;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 priceType = 5;
  inline bool has_pricetype() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 5;
  inline ::google::protobuf::int32 pricetype() const;
  inline void set_pricetype(::google::protobuf::int32 value);

  // optional int32 price = 6;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 6;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional int32 isShow = 7;
  inline bool has_isshow() const;
  inline void clear_isshow();
  static const int kIsShowFieldNumber = 7;
  inline ::google::protobuf::int32 isshow() const;
  inline void set_isshow(::google::protobuf::int32 value);

  // optional .EquipInfo equipInfo = 8;
  inline bool has_equipinfo() const;
  inline void clear_equipinfo();
  static const int kEquipInfoFieldNumber = 8;
  inline const ::EquipInfo& equipinfo() const;
  inline ::EquipInfo* mutable_equipinfo();
  inline ::EquipInfo* release_equipinfo();
  inline void set_allocated_equipinfo(::EquipInfo* equipinfo);

  // optional .PetInfo petInfo = 9;
  inline bool has_petinfo() const;
  inline void clear_petinfo();
  static const int kPetInfoFieldNumber = 9;
  inline const ::PetInfo& petinfo() const;
  inline ::PetInfo* mutable_petinfo();
  inline ::PetInfo* release_petinfo();
  inline void set_allocated_petinfo(::PetInfo* petinfo);

  // optional int64 exTime = 10;
  inline bool has_extime() const;
  inline void clear_extime();
  static const int kExTimeFieldNumber = 10;
  inline ::google::protobuf::int64 extime() const;
  inline void set_extime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AuctionBackData)
 private:
  inline void set_has_ahid();
  inline void clear_has_ahid();
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_pricetype();
  inline void clear_has_pricetype();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_isshow();
  inline void clear_has_isshow();
  inline void set_has_equipinfo();
  inline void clear_has_equipinfo();
  inline void set_has_petinfo();
  inline void clear_has_petinfo();
  inline void set_has_extime();
  inline void clear_has_extime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 ahid_;
  ::google::protobuf::int32 bid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 pricetype_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 isshow_;
  ::EquipInfo* equipinfo_;
  ::PetInfo* petinfo_;
  ::google::protobuf::int64 extime_;
  friend void  protobuf_AddDesc_AuctionMessage_2eproto();
  friend void protobuf_AssignDesc_AuctionMessage_2eproto();
  friend void protobuf_ShutdownFile_AuctionMessage_2eproto();

  void InitAsDefaultInstance();
  static AuctionBackData* default_instance_;
};
// -------------------------------------------------------------------

class AuctionRecordData : public ::google::protobuf::Message {
 public:
  AuctionRecordData();
  virtual ~AuctionRecordData();

  AuctionRecordData(const AuctionRecordData& from);

  inline AuctionRecordData& operator=(const AuctionRecordData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuctionRecordData& default_instance();

  void Swap(AuctionRecordData* other);

  // implements Message ----------------------------------------------

  AuctionRecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuctionRecordData& from);
  void MergeFrom(const AuctionRecordData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  inline ::google::protobuf::int64 hid() const;
  inline void set_hid(::google::protobuf::int64 value);

  // optional int32 bid = 2;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 2;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // optional int32 sid = 3;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 3;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 priceType = 5;
  inline bool has_pricetype() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 5;
  inline ::google::protobuf::int32 pricetype() const;
  inline void set_pricetype(::google::protobuf::int32 value);

  // optional int32 price = 6;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 6;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional int64 buyTime = 7;
  inline bool has_buytime() const;
  inline void clear_buytime();
  static const int kBuyTimeFieldNumber = 7;
  inline ::google::protobuf::int64 buytime() const;
  inline void set_buytime(::google::protobuf::int64 value);

  // optional string playerName = 8;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 8;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // optional int64 playerID = 9;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 9;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // optional string petName = 10;
  inline bool has_petname() const;
  inline void clear_petname();
  static const int kPetNameFieldNumber = 10;
  inline const ::std::string& petname() const;
  inline void set_petname(const ::std::string& value);
  inline void set_petname(const char* value);
  inline void set_petname(const char* value, size_t size);
  inline ::std::string* mutable_petname();
  inline ::std::string* release_petname();
  inline void set_allocated_petname(::std::string* petname);

  // optional int32 petQuality = 11;
  inline bool has_petquality() const;
  inline void clear_petquality();
  static const int kPetQualityFieldNumber = 11;
  inline ::google::protobuf::int32 petquality() const;
  inline void set_petquality(::google::protobuf::int32 value);

  // optional int32 petLevel = 12;
  inline bool has_petlevel() const;
  inline void clear_petlevel();
  static const int kPetLevelFieldNumber = 12;
  inline ::google::protobuf::int32 petlevel() const;
  inline void set_petlevel(::google::protobuf::int32 value);

  // optional int32 saleVip = 13;
  inline bool has_salevip() const;
  inline void clear_salevip();
  static const int kSaleVipFieldNumber = 13;
  inline ::google::protobuf::int32 salevip() const;
  inline void set_salevip(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AuctionRecordData)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_pricetype();
  inline void clear_has_pricetype();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_buytime();
  inline void clear_has_buytime();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_petname();
  inline void clear_has_petname();
  inline void set_has_petquality();
  inline void clear_has_petquality();
  inline void set_has_petlevel();
  inline void clear_has_petlevel();
  inline void set_has_salevip();
  inline void clear_has_salevip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 hid_;
  ::google::protobuf::int32 bid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 pricetype_;
  ::google::protobuf::int64 buytime_;
  ::std::string* playername_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 petquality_;
  ::google::protobuf::int64 playerid_;
  ::std::string* petname_;
  ::google::protobuf::int32 petlevel_;
  ::google::protobuf::int32 salevip_;
  friend void  protobuf_AddDesc_AuctionMessage_2eproto();
  friend void protobuf_AssignDesc_AuctionMessage_2eproto();
  friend void protobuf_ShutdownFile_AuctionMessage_2eproto();

  void InitAsDefaultInstance();
  static AuctionRecordData* default_instance_;
};
// -------------------------------------------------------------------

class CGGetAucitonList : public ::google::protobuf::Message {
 public:
  CGGetAucitonList();
  virtual ~CGGetAucitonList();

  CGGetAucitonList(const CGGetAucitonList& from);

  inline CGGetAucitonList& operator=(const CGGetAucitonList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetAucitonList& default_instance();

  void Swap(CGGetAucitonList* other);

  // implements Message ----------------------------------------------

  CGGetAucitonList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetAucitonList& from);
  void MergeFrom(const CGGetAucitonList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 getType = 1;
  inline bool has_gettype() const;
  inline void clear_gettype();
  static const int kGetTypeFieldNumber = 1;
  inline ::google::protobuf::int32 gettype() const;
  inline void set_gettype(::google::protobuf::int32 value);

  // optional int32 bid = 2;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 2;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // optional int32 sid = 3;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 3;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int32 jobid = 4;
  inline bool has_jobid() const;
  inline void clear_jobid();
  static const int kJobidFieldNumber = 4;
  inline ::google::protobuf::int32 jobid() const;
  inline void set_jobid(::google::protobuf::int32 value);

  // optional int32 sortType = 5;
  inline bool has_sorttype() const;
  inline void clear_sorttype();
  static const int kSortTypeFieldNumber = 5;
  inline ::google::protobuf::int32 sorttype() const;
  inline void set_sorttype(::google::protobuf::int32 value);

  // repeated int32 bodyType = 6;
  inline int bodytype_size() const;
  inline void clear_bodytype();
  static const int kBodyTypeFieldNumber = 6;
  inline ::google::protobuf::int32 bodytype(int index) const;
  inline void set_bodytype(int index, ::google::protobuf::int32 value);
  inline void add_bodytype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bodytype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bodytype();

  // optional int32 pageNum = 7;
  inline bool has_pagenum() const;
  inline void clear_pagenum();
  static const int kPageNumFieldNumber = 7;
  inline ::google::protobuf::int32 pagenum() const;
  inline void set_pagenum(::google::protobuf::int32 value);

  // optional string searchKey = 8;
  inline bool has_searchkey() const;
  inline void clear_searchkey();
  static const int kSearchKeyFieldNumber = 8;
  inline const ::std::string& searchkey() const;
  inline void set_searchkey(const ::std::string& value);
  inline void set_searchkey(const char* value);
  inline void set_searchkey(const char* value, size_t size);
  inline ::std::string* mutable_searchkey();
  inline ::std::string* release_searchkey();
  inline void set_allocated_searchkey(::std::string* searchkey);

  // repeated int32 priceType = 9;
  inline int pricetype_size() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 9;
  inline ::google::protobuf::int32 pricetype(int index) const;
  inline void set_pricetype(int index, ::google::protobuf::int32 value);
  inline void add_pricetype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pricetype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pricetype();

  // repeated int32 quality = 10;
  inline int quality_size() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 10;
  inline ::google::protobuf::int32 quality(int index) const;
  inline void set_quality(int index, ::google::protobuf::int32 value);
  inline void add_quality(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      quality() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_quality();

  // @@protoc_insertion_point(class_scope:CGGetAucitonList)
 private:
  inline void set_has_gettype();
  inline void clear_has_gettype();
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_jobid();
  inline void clear_has_jobid();
  inline void set_has_sorttype();
  inline void clear_has_sorttype();
  inline void set_has_pagenum();
  inline void clear_has_pagenum();
  inline void set_has_searchkey();
  inline void clear_has_searchkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 gettype_;
  ::google::protobuf::int32 bid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 jobid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bodytype_;
  ::google::protobuf::int32 sorttype_;
  ::google::protobuf::int32 pagenum_;
  ::std::string* searchkey_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pricetype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > quality_;
  friend void  protobuf_AddDesc_AuctionMessage_2eproto();
  friend void protobuf_AssignDesc_AuctionMessage_2eproto();
  friend void protobuf_ShutdownFile_AuctionMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetAucitonList* default_instance_;
};
// -------------------------------------------------------------------

class GCGetAucitonListBack : public ::google::protobuf::Message {
 public:
  GCGetAucitonListBack();
  virtual ~GCGetAucitonListBack();

  GCGetAucitonListBack(const GCGetAucitonListBack& from);

  inline GCGetAucitonListBack& operator=(const GCGetAucitonListBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetAucitonListBack& default_instance();

  void Swap(GCGetAucitonListBack* other);

  // implements Message ----------------------------------------------

  GCGetAucitonListBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetAucitonListBack& from);
  void MergeFrom(const GCGetAucitonListBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 getType = 1;
  inline bool has_gettype() const;
  inline void clear_gettype();
  static const int kGetTypeFieldNumber = 1;
  inline ::google::protobuf::int32 gettype() const;
  inline void set_gettype(::google::protobuf::int32 value);

  // optional int32 currentPage = 2;
  inline bool has_currentpage() const;
  inline void clear_currentpage();
  static const int kCurrentPageFieldNumber = 2;
  inline ::google::protobuf::int32 currentpage() const;
  inline void set_currentpage(::google::protobuf::int32 value);

  // optional int32 AllPages = 3;
  inline bool has_allpages() const;
  inline void clear_allpages();
  static const int kAllPagesFieldNumber = 3;
  inline ::google::protobuf::int32 allpages() const;
  inline void set_allpages(::google::protobuf::int32 value);

  // repeated .AuctionBackData abackDatalist = 4;
  inline int abackdatalist_size() const;
  inline void clear_abackdatalist();
  static const int kAbackDatalistFieldNumber = 4;
  inline const ::AuctionBackData& abackdatalist(int index) const;
  inline ::AuctionBackData* mutable_abackdatalist(int index);
  inline ::AuctionBackData* add_abackdatalist();
  inline const ::google::protobuf::RepeatedPtrField< ::AuctionBackData >&
      abackdatalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::AuctionBackData >*
      mutable_abackdatalist();

  // @@protoc_insertion_point(class_scope:GCGetAucitonListBack)
 private:
  inline void set_has_gettype();
  inline void clear_has_gettype();
  inline void set_has_currentpage();
  inline void clear_has_currentpage();
  inline void set_has_allpages();
  inline void clear_has_allpages();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 gettype_;
  ::google::protobuf::int32 currentpage_;
  ::google::protobuf::RepeatedPtrField< ::AuctionBackData > abackdatalist_;
  ::google::protobuf::int32 allpages_;
  friend void  protobuf_AddDesc_AuctionMessage_2eproto();
  friend void protobuf_AssignDesc_AuctionMessage_2eproto();
  friend void protobuf_ShutdownFile_AuctionMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetAucitonListBack* default_instance_;
};
// -------------------------------------------------------------------

class CGAuctionSale : public ::google::protobuf::Message {
 public:
  CGAuctionSale();
  virtual ~CGAuctionSale();

  CGAuctionSale(const CGAuctionSale& from);

  inline CGAuctionSale& operator=(const CGAuctionSale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGAuctionSale& default_instance();

  void Swap(CGAuctionSale* other);

  // implements Message ----------------------------------------------

  CGAuctionSale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGAuctionSale& from);
  void MergeFrom(const CGAuctionSale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 itemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // optional int32 auctionType = 2;
  inline bool has_auctiontype() const;
  inline void clear_auctiontype();
  static const int kAuctionTypeFieldNumber = 2;
  inline ::google::protobuf::int32 auctiontype() const;
  inline void set_auctiontype(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 sellType = 4;
  inline bool has_selltype() const;
  inline void clear_selltype();
  static const int kSellTypeFieldNumber = 4;
  inline ::google::protobuf::int32 selltype() const;
  inline void set_selltype(::google::protobuf::int32 value);

  // optional int32 unitPrice = 5;
  inline bool has_unitprice() const;
  inline void clear_unitprice();
  static const int kUnitPriceFieldNumber = 5;
  inline ::google::protobuf::int32 unitprice() const;
  inline void set_unitprice(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGAuctionSale)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_auctiontype();
  inline void clear_has_auctiontype();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_selltype();
  inline void clear_has_selltype();
  inline void set_has_unitprice();
  inline void clear_has_unitprice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 auctiontype_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 selltype_;
  ::google::protobuf::int32 unitprice_;
  friend void  protobuf_AddDesc_AuctionMessage_2eproto();
  friend void protobuf_AssignDesc_AuctionMessage_2eproto();
  friend void protobuf_ShutdownFile_AuctionMessage_2eproto();

  void InitAsDefaultInstance();
  static CGAuctionSale* default_instance_;
};
// -------------------------------------------------------------------

class CGAuctionBuyShelve : public ::google::protobuf::Message {
 public:
  CGAuctionBuyShelve();
  virtual ~CGAuctionBuyShelve();

  CGAuctionBuyShelve(const CGAuctionBuyShelve& from);

  inline CGAuctionBuyShelve& operator=(const CGAuctionBuyShelve& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGAuctionBuyShelve& default_instance();

  void Swap(CGAuctionBuyShelve* other);

  // implements Message ----------------------------------------------

  CGAuctionBuyShelve* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGAuctionBuyShelve& from);
  void MergeFrom(const CGAuctionBuyShelve& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ahID = 1;
  inline bool has_ahid() const;
  inline void clear_ahid();
  static const int kAhIDFieldNumber = 1;
  inline ::google::protobuf::int64 ahid() const;
  inline void set_ahid(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGAuctionBuyShelve)
 private:
  inline void set_has_ahid();
  inline void clear_has_ahid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 ahid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 num_;
  friend void  protobuf_AddDesc_AuctionMessage_2eproto();
  friend void protobuf_AssignDesc_AuctionMessage_2eproto();
  friend void protobuf_ShutdownFile_AuctionMessage_2eproto();

  void InitAsDefaultInstance();
  static CGAuctionBuyShelve* default_instance_;
};
// -------------------------------------------------------------------

class GCAuctionHouseBack : public ::google::protobuf::Message {
 public:
  GCAuctionHouseBack();
  virtual ~GCAuctionHouseBack();

  GCAuctionHouseBack(const GCAuctionHouseBack& from);

  inline GCAuctionHouseBack& operator=(const GCAuctionHouseBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCAuctionHouseBack& default_instance();

  void Swap(GCAuctionHouseBack* other);

  // implements Message ----------------------------------------------

  GCAuctionHouseBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCAuctionHouseBack& from);
  void MergeFrom(const GCAuctionHouseBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 actionType = 1;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 1;
  inline ::google::protobuf::int32 actiontype() const;
  inline void set_actiontype(::google::protobuf::int32 value);

  // optional int32 resultCode = 2;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 2;
  inline ::google::protobuf::int32 resultcode() const;
  inline void set_resultcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCAuctionHouseBack)
 private:
  inline void set_has_actiontype();
  inline void clear_has_actiontype();
  inline void set_has_resultcode();
  inline void clear_has_resultcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 actiontype_;
  ::google::protobuf::int32 resultcode_;
  friend void  protobuf_AddDesc_AuctionMessage_2eproto();
  friend void protobuf_AssignDesc_AuctionMessage_2eproto();
  friend void protobuf_ShutdownFile_AuctionMessage_2eproto();

  void InitAsDefaultInstance();
  static GCAuctionHouseBack* default_instance_;
};
// -------------------------------------------------------------------

class CGGetAuctionRecordList : public ::google::protobuf::Message {
 public:
  CGGetAuctionRecordList();
  virtual ~CGGetAuctionRecordList();

  CGGetAuctionRecordList(const CGGetAuctionRecordList& from);

  inline CGGetAuctionRecordList& operator=(const CGGetAuctionRecordList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetAuctionRecordList& default_instance();

  void Swap(CGGetAuctionRecordList* other);

  // implements Message ----------------------------------------------

  CGGetAuctionRecordList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetAuctionRecordList& from);
  void MergeFrom(const CGGetAuctionRecordList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGGetAuctionRecordList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AuctionMessage_2eproto();
  friend void protobuf_AssignDesc_AuctionMessage_2eproto();
  friend void protobuf_ShutdownFile_AuctionMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetAuctionRecordList* default_instance_;
};
// -------------------------------------------------------------------

class GCGetAuctionRecordListBack : public ::google::protobuf::Message {
 public:
  GCGetAuctionRecordListBack();
  virtual ~GCGetAuctionRecordListBack();

  GCGetAuctionRecordListBack(const GCGetAuctionRecordListBack& from);

  inline GCGetAuctionRecordListBack& operator=(const GCGetAuctionRecordListBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetAuctionRecordListBack& default_instance();

  void Swap(GCGetAuctionRecordListBack* other);

  // implements Message ----------------------------------------------

  GCGetAuctionRecordListBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetAuctionRecordListBack& from);
  void MergeFrom(const GCGetAuctionRecordListBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AuctionRecordData auctionRecordDataList = 1;
  inline int auctionrecorddatalist_size() const;
  inline void clear_auctionrecorddatalist();
  static const int kAuctionRecordDataListFieldNumber = 1;
  inline const ::AuctionRecordData& auctionrecorddatalist(int index) const;
  inline ::AuctionRecordData* mutable_auctionrecorddatalist(int index);
  inline ::AuctionRecordData* add_auctionrecorddatalist();
  inline const ::google::protobuf::RepeatedPtrField< ::AuctionRecordData >&
      auctionrecorddatalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::AuctionRecordData >*
      mutable_auctionrecorddatalist();

  // optional int32 resultCode = 2;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 2;
  inline ::google::protobuf::int32 resultcode() const;
  inline void set_resultcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGetAuctionRecordListBack)
 private:
  inline void set_has_resultcode();
  inline void clear_has_resultcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::AuctionRecordData > auctionrecorddatalist_;
  ::google::protobuf::int32 resultcode_;
  friend void  protobuf_AddDesc_AuctionMessage_2eproto();
  friend void protobuf_AssignDesc_AuctionMessage_2eproto();
  friend void protobuf_ShutdownFile_AuctionMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetAuctionRecordListBack* default_instance_;
};
// ===================================================================


// ===================================================================

// AuctionBackData

// optional int64 ahID = 1;
inline bool AuctionBackData::has_ahid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuctionBackData::set_has_ahid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuctionBackData::clear_has_ahid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuctionBackData::clear_ahid() {
  ahid_ = GOOGLE_LONGLONG(0);
  clear_has_ahid();
}
inline ::google::protobuf::int64 AuctionBackData::ahid() const {
  // @@protoc_insertion_point(field_get:AuctionBackData.ahID)
  return ahid_;
}
inline void AuctionBackData::set_ahid(::google::protobuf::int64 value) {
  set_has_ahid();
  ahid_ = value;
  // @@protoc_insertion_point(field_set:AuctionBackData.ahID)
}

// optional int32 bid = 2;
inline bool AuctionBackData::has_bid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuctionBackData::set_has_bid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuctionBackData::clear_has_bid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuctionBackData::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 AuctionBackData::bid() const {
  // @@protoc_insertion_point(field_get:AuctionBackData.bid)
  return bid_;
}
inline void AuctionBackData::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
  // @@protoc_insertion_point(field_set:AuctionBackData.bid)
}

// optional int32 sid = 3;
inline bool AuctionBackData::has_sid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuctionBackData::set_has_sid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuctionBackData::clear_has_sid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuctionBackData::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 AuctionBackData::sid() const {
  // @@protoc_insertion_point(field_get:AuctionBackData.sid)
  return sid_;
}
inline void AuctionBackData::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:AuctionBackData.sid)
}

// optional int32 num = 4;
inline bool AuctionBackData::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuctionBackData::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuctionBackData::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuctionBackData::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 AuctionBackData::num() const {
  // @@protoc_insertion_point(field_get:AuctionBackData.num)
  return num_;
}
inline void AuctionBackData::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:AuctionBackData.num)
}

// optional int32 priceType = 5;
inline bool AuctionBackData::has_pricetype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AuctionBackData::set_has_pricetype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AuctionBackData::clear_has_pricetype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AuctionBackData::clear_pricetype() {
  pricetype_ = 0;
  clear_has_pricetype();
}
inline ::google::protobuf::int32 AuctionBackData::pricetype() const {
  // @@protoc_insertion_point(field_get:AuctionBackData.priceType)
  return pricetype_;
}
inline void AuctionBackData::set_pricetype(::google::protobuf::int32 value) {
  set_has_pricetype();
  pricetype_ = value;
  // @@protoc_insertion_point(field_set:AuctionBackData.priceType)
}

// optional int32 price = 6;
inline bool AuctionBackData::has_price() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AuctionBackData::set_has_price() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AuctionBackData::clear_has_price() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AuctionBackData::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 AuctionBackData::price() const {
  // @@protoc_insertion_point(field_get:AuctionBackData.price)
  return price_;
}
inline void AuctionBackData::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:AuctionBackData.price)
}

// optional int32 isShow = 7;
inline bool AuctionBackData::has_isshow() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AuctionBackData::set_has_isshow() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AuctionBackData::clear_has_isshow() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AuctionBackData::clear_isshow() {
  isshow_ = 0;
  clear_has_isshow();
}
inline ::google::protobuf::int32 AuctionBackData::isshow() const {
  // @@protoc_insertion_point(field_get:AuctionBackData.isShow)
  return isshow_;
}
inline void AuctionBackData::set_isshow(::google::protobuf::int32 value) {
  set_has_isshow();
  isshow_ = value;
  // @@protoc_insertion_point(field_set:AuctionBackData.isShow)
}

// optional .EquipInfo equipInfo = 8;
inline bool AuctionBackData::has_equipinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AuctionBackData::set_has_equipinfo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AuctionBackData::clear_has_equipinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AuctionBackData::clear_equipinfo() {
  if (equipinfo_ != NULL) equipinfo_->::EquipInfo::Clear();
  clear_has_equipinfo();
}
inline const ::EquipInfo& AuctionBackData::equipinfo() const {
  // @@protoc_insertion_point(field_get:AuctionBackData.equipInfo)
  return equipinfo_ != NULL ? *equipinfo_ : *default_instance_->equipinfo_;
}
inline ::EquipInfo* AuctionBackData::mutable_equipinfo() {
  set_has_equipinfo();
  if (equipinfo_ == NULL) equipinfo_ = new ::EquipInfo;
  // @@protoc_insertion_point(field_mutable:AuctionBackData.equipInfo)
  return equipinfo_;
}
inline ::EquipInfo* AuctionBackData::release_equipinfo() {
  clear_has_equipinfo();
  ::EquipInfo* temp = equipinfo_;
  equipinfo_ = NULL;
  return temp;
}
inline void AuctionBackData::set_allocated_equipinfo(::EquipInfo* equipinfo) {
  delete equipinfo_;
  equipinfo_ = equipinfo;
  if (equipinfo) {
    set_has_equipinfo();
  } else {
    clear_has_equipinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:AuctionBackData.equipInfo)
}

// optional .PetInfo petInfo = 9;
inline bool AuctionBackData::has_petinfo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AuctionBackData::set_has_petinfo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AuctionBackData::clear_has_petinfo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AuctionBackData::clear_petinfo() {
  if (petinfo_ != NULL) petinfo_->::PetInfo::Clear();
  clear_has_petinfo();
}
inline const ::PetInfo& AuctionBackData::petinfo() const {
  // @@protoc_insertion_point(field_get:AuctionBackData.petInfo)
  return petinfo_ != NULL ? *petinfo_ : *default_instance_->petinfo_;
}
inline ::PetInfo* AuctionBackData::mutable_petinfo() {
  set_has_petinfo();
  if (petinfo_ == NULL) petinfo_ = new ::PetInfo;
  // @@protoc_insertion_point(field_mutable:AuctionBackData.petInfo)
  return petinfo_;
}
inline ::PetInfo* AuctionBackData::release_petinfo() {
  clear_has_petinfo();
  ::PetInfo* temp = petinfo_;
  petinfo_ = NULL;
  return temp;
}
inline void AuctionBackData::set_allocated_petinfo(::PetInfo* petinfo) {
  delete petinfo_;
  petinfo_ = petinfo;
  if (petinfo) {
    set_has_petinfo();
  } else {
    clear_has_petinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:AuctionBackData.petInfo)
}

// optional int64 exTime = 10;
inline bool AuctionBackData::has_extime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AuctionBackData::set_has_extime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AuctionBackData::clear_has_extime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AuctionBackData::clear_extime() {
  extime_ = GOOGLE_LONGLONG(0);
  clear_has_extime();
}
inline ::google::protobuf::int64 AuctionBackData::extime() const {
  // @@protoc_insertion_point(field_get:AuctionBackData.exTime)
  return extime_;
}
inline void AuctionBackData::set_extime(::google::protobuf::int64 value) {
  set_has_extime();
  extime_ = value;
  // @@protoc_insertion_point(field_set:AuctionBackData.exTime)
}

// -------------------------------------------------------------------

// AuctionRecordData

// optional int64 hid = 1;
inline bool AuctionRecordData::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuctionRecordData::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuctionRecordData::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuctionRecordData::clear_hid() {
  hid_ = GOOGLE_LONGLONG(0);
  clear_has_hid();
}
inline ::google::protobuf::int64 AuctionRecordData::hid() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.hid)
  return hid_;
}
inline void AuctionRecordData::set_hid(::google::protobuf::int64 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:AuctionRecordData.hid)
}

// optional int32 bid = 2;
inline bool AuctionRecordData::has_bid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuctionRecordData::set_has_bid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuctionRecordData::clear_has_bid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuctionRecordData::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 AuctionRecordData::bid() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.bid)
  return bid_;
}
inline void AuctionRecordData::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
  // @@protoc_insertion_point(field_set:AuctionRecordData.bid)
}

// optional int32 sid = 3;
inline bool AuctionRecordData::has_sid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuctionRecordData::set_has_sid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuctionRecordData::clear_has_sid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuctionRecordData::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 AuctionRecordData::sid() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.sid)
  return sid_;
}
inline void AuctionRecordData::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:AuctionRecordData.sid)
}

// optional int32 num = 4;
inline bool AuctionRecordData::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuctionRecordData::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuctionRecordData::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuctionRecordData::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 AuctionRecordData::num() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.num)
  return num_;
}
inline void AuctionRecordData::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:AuctionRecordData.num)
}

// optional int32 priceType = 5;
inline bool AuctionRecordData::has_pricetype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AuctionRecordData::set_has_pricetype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AuctionRecordData::clear_has_pricetype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AuctionRecordData::clear_pricetype() {
  pricetype_ = 0;
  clear_has_pricetype();
}
inline ::google::protobuf::int32 AuctionRecordData::pricetype() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.priceType)
  return pricetype_;
}
inline void AuctionRecordData::set_pricetype(::google::protobuf::int32 value) {
  set_has_pricetype();
  pricetype_ = value;
  // @@protoc_insertion_point(field_set:AuctionRecordData.priceType)
}

// optional int32 price = 6;
inline bool AuctionRecordData::has_price() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AuctionRecordData::set_has_price() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AuctionRecordData::clear_has_price() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AuctionRecordData::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 AuctionRecordData::price() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.price)
  return price_;
}
inline void AuctionRecordData::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:AuctionRecordData.price)
}

// optional int64 buyTime = 7;
inline bool AuctionRecordData::has_buytime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AuctionRecordData::set_has_buytime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AuctionRecordData::clear_has_buytime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AuctionRecordData::clear_buytime() {
  buytime_ = GOOGLE_LONGLONG(0);
  clear_has_buytime();
}
inline ::google::protobuf::int64 AuctionRecordData::buytime() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.buyTime)
  return buytime_;
}
inline void AuctionRecordData::set_buytime(::google::protobuf::int64 value) {
  set_has_buytime();
  buytime_ = value;
  // @@protoc_insertion_point(field_set:AuctionRecordData.buyTime)
}

// optional string playerName = 8;
inline bool AuctionRecordData::has_playername() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AuctionRecordData::set_has_playername() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AuctionRecordData::clear_has_playername() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AuctionRecordData::clear_playername() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& AuctionRecordData::playername() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.playerName)
  return *playername_;
}
inline void AuctionRecordData::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set:AuctionRecordData.playerName)
}
inline void AuctionRecordData::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set_char:AuctionRecordData.playerName)
}
inline void AuctionRecordData::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:AuctionRecordData.playerName)
}
inline ::std::string* AuctionRecordData::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:AuctionRecordData.playerName)
  return playername_;
}
inline ::std::string* AuctionRecordData::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuctionRecordData::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:AuctionRecordData.playerName)
}

// optional int64 playerID = 9;
inline bool AuctionRecordData::has_playerid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AuctionRecordData::set_has_playerid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AuctionRecordData::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AuctionRecordData::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 AuctionRecordData::playerid() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.playerID)
  return playerid_;
}
inline void AuctionRecordData::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:AuctionRecordData.playerID)
}

// optional string petName = 10;
inline bool AuctionRecordData::has_petname() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AuctionRecordData::set_has_petname() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AuctionRecordData::clear_has_petname() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AuctionRecordData::clear_petname() {
  if (petname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    petname_->clear();
  }
  clear_has_petname();
}
inline const ::std::string& AuctionRecordData::petname() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.petName)
  return *petname_;
}
inline void AuctionRecordData::set_petname(const ::std::string& value) {
  set_has_petname();
  if (petname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    petname_ = new ::std::string;
  }
  petname_->assign(value);
  // @@protoc_insertion_point(field_set:AuctionRecordData.petName)
}
inline void AuctionRecordData::set_petname(const char* value) {
  set_has_petname();
  if (petname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    petname_ = new ::std::string;
  }
  petname_->assign(value);
  // @@protoc_insertion_point(field_set_char:AuctionRecordData.petName)
}
inline void AuctionRecordData::set_petname(const char* value, size_t size) {
  set_has_petname();
  if (petname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    petname_ = new ::std::string;
  }
  petname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:AuctionRecordData.petName)
}
inline ::std::string* AuctionRecordData::mutable_petname() {
  set_has_petname();
  if (petname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    petname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:AuctionRecordData.petName)
  return petname_;
}
inline ::std::string* AuctionRecordData::release_petname() {
  clear_has_petname();
  if (petname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = petname_;
    petname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuctionRecordData::set_allocated_petname(::std::string* petname) {
  if (petname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete petname_;
  }
  if (petname) {
    set_has_petname();
    petname_ = petname;
  } else {
    clear_has_petname();
    petname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:AuctionRecordData.petName)
}

// optional int32 petQuality = 11;
inline bool AuctionRecordData::has_petquality() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AuctionRecordData::set_has_petquality() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AuctionRecordData::clear_has_petquality() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AuctionRecordData::clear_petquality() {
  petquality_ = 0;
  clear_has_petquality();
}
inline ::google::protobuf::int32 AuctionRecordData::petquality() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.petQuality)
  return petquality_;
}
inline void AuctionRecordData::set_petquality(::google::protobuf::int32 value) {
  set_has_petquality();
  petquality_ = value;
  // @@protoc_insertion_point(field_set:AuctionRecordData.petQuality)
}

// optional int32 petLevel = 12;
inline bool AuctionRecordData::has_petlevel() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AuctionRecordData::set_has_petlevel() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AuctionRecordData::clear_has_petlevel() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AuctionRecordData::clear_petlevel() {
  petlevel_ = 0;
  clear_has_petlevel();
}
inline ::google::protobuf::int32 AuctionRecordData::petlevel() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.petLevel)
  return petlevel_;
}
inline void AuctionRecordData::set_petlevel(::google::protobuf::int32 value) {
  set_has_petlevel();
  petlevel_ = value;
  // @@protoc_insertion_point(field_set:AuctionRecordData.petLevel)
}

// optional int32 saleVip = 13;
inline bool AuctionRecordData::has_salevip() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AuctionRecordData::set_has_salevip() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AuctionRecordData::clear_has_salevip() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AuctionRecordData::clear_salevip() {
  salevip_ = 0;
  clear_has_salevip();
}
inline ::google::protobuf::int32 AuctionRecordData::salevip() const {
  // @@protoc_insertion_point(field_get:AuctionRecordData.saleVip)
  return salevip_;
}
inline void AuctionRecordData::set_salevip(::google::protobuf::int32 value) {
  set_has_salevip();
  salevip_ = value;
  // @@protoc_insertion_point(field_set:AuctionRecordData.saleVip)
}

// -------------------------------------------------------------------

// CGGetAucitonList

// optional int32 getType = 1;
inline bool CGGetAucitonList::has_gettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetAucitonList::set_has_gettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetAucitonList::clear_has_gettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetAucitonList::clear_gettype() {
  gettype_ = 0;
  clear_has_gettype();
}
inline ::google::protobuf::int32 CGGetAucitonList::gettype() const {
  // @@protoc_insertion_point(field_get:CGGetAucitonList.getType)
  return gettype_;
}
inline void CGGetAucitonList::set_gettype(::google::protobuf::int32 value) {
  set_has_gettype();
  gettype_ = value;
  // @@protoc_insertion_point(field_set:CGGetAucitonList.getType)
}

// optional int32 bid = 2;
inline bool CGGetAucitonList::has_bid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGGetAucitonList::set_has_bid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGGetAucitonList::clear_has_bid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGGetAucitonList::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 CGGetAucitonList::bid() const {
  // @@protoc_insertion_point(field_get:CGGetAucitonList.bid)
  return bid_;
}
inline void CGGetAucitonList::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
  // @@protoc_insertion_point(field_set:CGGetAucitonList.bid)
}

// optional int32 sid = 3;
inline bool CGGetAucitonList::has_sid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGGetAucitonList::set_has_sid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGGetAucitonList::clear_has_sid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGGetAucitonList::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 CGGetAucitonList::sid() const {
  // @@protoc_insertion_point(field_get:CGGetAucitonList.sid)
  return sid_;
}
inline void CGGetAucitonList::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:CGGetAucitonList.sid)
}

// optional int32 jobid = 4;
inline bool CGGetAucitonList::has_jobid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGGetAucitonList::set_has_jobid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGGetAucitonList::clear_has_jobid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGGetAucitonList::clear_jobid() {
  jobid_ = 0;
  clear_has_jobid();
}
inline ::google::protobuf::int32 CGGetAucitonList::jobid() const {
  // @@protoc_insertion_point(field_get:CGGetAucitonList.jobid)
  return jobid_;
}
inline void CGGetAucitonList::set_jobid(::google::protobuf::int32 value) {
  set_has_jobid();
  jobid_ = value;
  // @@protoc_insertion_point(field_set:CGGetAucitonList.jobid)
}

// optional int32 sortType = 5;
inline bool CGGetAucitonList::has_sorttype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGGetAucitonList::set_has_sorttype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGGetAucitonList::clear_has_sorttype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGGetAucitonList::clear_sorttype() {
  sorttype_ = 0;
  clear_has_sorttype();
}
inline ::google::protobuf::int32 CGGetAucitonList::sorttype() const {
  // @@protoc_insertion_point(field_get:CGGetAucitonList.sortType)
  return sorttype_;
}
inline void CGGetAucitonList::set_sorttype(::google::protobuf::int32 value) {
  set_has_sorttype();
  sorttype_ = value;
  // @@protoc_insertion_point(field_set:CGGetAucitonList.sortType)
}

// repeated int32 bodyType = 6;
inline int CGGetAucitonList::bodytype_size() const {
  return bodytype_.size();
}
inline void CGGetAucitonList::clear_bodytype() {
  bodytype_.Clear();
}
inline ::google::protobuf::int32 CGGetAucitonList::bodytype(int index) const {
  // @@protoc_insertion_point(field_get:CGGetAucitonList.bodyType)
  return bodytype_.Get(index);
}
inline void CGGetAucitonList::set_bodytype(int index, ::google::protobuf::int32 value) {
  bodytype_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGGetAucitonList.bodyType)
}
inline void CGGetAucitonList::add_bodytype(::google::protobuf::int32 value) {
  bodytype_.Add(value);
  // @@protoc_insertion_point(field_add:CGGetAucitonList.bodyType)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CGGetAucitonList::bodytype() const {
  // @@protoc_insertion_point(field_list:CGGetAucitonList.bodyType)
  return bodytype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CGGetAucitonList::mutable_bodytype() {
  // @@protoc_insertion_point(field_mutable_list:CGGetAucitonList.bodyType)
  return &bodytype_;
}

// optional int32 pageNum = 7;
inline bool CGGetAucitonList::has_pagenum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGGetAucitonList::set_has_pagenum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CGGetAucitonList::clear_has_pagenum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CGGetAucitonList::clear_pagenum() {
  pagenum_ = 0;
  clear_has_pagenum();
}
inline ::google::protobuf::int32 CGGetAucitonList::pagenum() const {
  // @@protoc_insertion_point(field_get:CGGetAucitonList.pageNum)
  return pagenum_;
}
inline void CGGetAucitonList::set_pagenum(::google::protobuf::int32 value) {
  set_has_pagenum();
  pagenum_ = value;
  // @@protoc_insertion_point(field_set:CGGetAucitonList.pageNum)
}

// optional string searchKey = 8;
inline bool CGGetAucitonList::has_searchkey() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGGetAucitonList::set_has_searchkey() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CGGetAucitonList::clear_has_searchkey() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CGGetAucitonList::clear_searchkey() {
  if (searchkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchkey_->clear();
  }
  clear_has_searchkey();
}
inline const ::std::string& CGGetAucitonList::searchkey() const {
  // @@protoc_insertion_point(field_get:CGGetAucitonList.searchKey)
  return *searchkey_;
}
inline void CGGetAucitonList::set_searchkey(const ::std::string& value) {
  set_has_searchkey();
  if (searchkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchkey_ = new ::std::string;
  }
  searchkey_->assign(value);
  // @@protoc_insertion_point(field_set:CGGetAucitonList.searchKey)
}
inline void CGGetAucitonList::set_searchkey(const char* value) {
  set_has_searchkey();
  if (searchkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchkey_ = new ::std::string;
  }
  searchkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGGetAucitonList.searchKey)
}
inline void CGGetAucitonList::set_searchkey(const char* value, size_t size) {
  set_has_searchkey();
  if (searchkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchkey_ = new ::std::string;
  }
  searchkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGGetAucitonList.searchKey)
}
inline ::std::string* CGGetAucitonList::mutable_searchkey() {
  set_has_searchkey();
  if (searchkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGGetAucitonList.searchKey)
  return searchkey_;
}
inline ::std::string* CGGetAucitonList::release_searchkey() {
  clear_has_searchkey();
  if (searchkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = searchkey_;
    searchkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGGetAucitonList::set_allocated_searchkey(::std::string* searchkey) {
  if (searchkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete searchkey_;
  }
  if (searchkey) {
    set_has_searchkey();
    searchkey_ = searchkey;
  } else {
    clear_has_searchkey();
    searchkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGGetAucitonList.searchKey)
}

// repeated int32 priceType = 9;
inline int CGGetAucitonList::pricetype_size() const {
  return pricetype_.size();
}
inline void CGGetAucitonList::clear_pricetype() {
  pricetype_.Clear();
}
inline ::google::protobuf::int32 CGGetAucitonList::pricetype(int index) const {
  // @@protoc_insertion_point(field_get:CGGetAucitonList.priceType)
  return pricetype_.Get(index);
}
inline void CGGetAucitonList::set_pricetype(int index, ::google::protobuf::int32 value) {
  pricetype_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGGetAucitonList.priceType)
}
inline void CGGetAucitonList::add_pricetype(::google::protobuf::int32 value) {
  pricetype_.Add(value);
  // @@protoc_insertion_point(field_add:CGGetAucitonList.priceType)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CGGetAucitonList::pricetype() const {
  // @@protoc_insertion_point(field_list:CGGetAucitonList.priceType)
  return pricetype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CGGetAucitonList::mutable_pricetype() {
  // @@protoc_insertion_point(field_mutable_list:CGGetAucitonList.priceType)
  return &pricetype_;
}

// repeated int32 quality = 10;
inline int CGGetAucitonList::quality_size() const {
  return quality_.size();
}
inline void CGGetAucitonList::clear_quality() {
  quality_.Clear();
}
inline ::google::protobuf::int32 CGGetAucitonList::quality(int index) const {
  // @@protoc_insertion_point(field_get:CGGetAucitonList.quality)
  return quality_.Get(index);
}
inline void CGGetAucitonList::set_quality(int index, ::google::protobuf::int32 value) {
  quality_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGGetAucitonList.quality)
}
inline void CGGetAucitonList::add_quality(::google::protobuf::int32 value) {
  quality_.Add(value);
  // @@protoc_insertion_point(field_add:CGGetAucitonList.quality)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CGGetAucitonList::quality() const {
  // @@protoc_insertion_point(field_list:CGGetAucitonList.quality)
  return quality_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CGGetAucitonList::mutable_quality() {
  // @@protoc_insertion_point(field_mutable_list:CGGetAucitonList.quality)
  return &quality_;
}

// -------------------------------------------------------------------

// GCGetAucitonListBack

// optional int32 getType = 1;
inline bool GCGetAucitonListBack::has_gettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetAucitonListBack::set_has_gettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetAucitonListBack::clear_has_gettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetAucitonListBack::clear_gettype() {
  gettype_ = 0;
  clear_has_gettype();
}
inline ::google::protobuf::int32 GCGetAucitonListBack::gettype() const {
  // @@protoc_insertion_point(field_get:GCGetAucitonListBack.getType)
  return gettype_;
}
inline void GCGetAucitonListBack::set_gettype(::google::protobuf::int32 value) {
  set_has_gettype();
  gettype_ = value;
  // @@protoc_insertion_point(field_set:GCGetAucitonListBack.getType)
}

// optional int32 currentPage = 2;
inline bool GCGetAucitonListBack::has_currentpage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGetAucitonListBack::set_has_currentpage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGetAucitonListBack::clear_has_currentpage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGetAucitonListBack::clear_currentpage() {
  currentpage_ = 0;
  clear_has_currentpage();
}
inline ::google::protobuf::int32 GCGetAucitonListBack::currentpage() const {
  // @@protoc_insertion_point(field_get:GCGetAucitonListBack.currentPage)
  return currentpage_;
}
inline void GCGetAucitonListBack::set_currentpage(::google::protobuf::int32 value) {
  set_has_currentpage();
  currentpage_ = value;
  // @@protoc_insertion_point(field_set:GCGetAucitonListBack.currentPage)
}

// optional int32 AllPages = 3;
inline bool GCGetAucitonListBack::has_allpages() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCGetAucitonListBack::set_has_allpages() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCGetAucitonListBack::clear_has_allpages() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCGetAucitonListBack::clear_allpages() {
  allpages_ = 0;
  clear_has_allpages();
}
inline ::google::protobuf::int32 GCGetAucitonListBack::allpages() const {
  // @@protoc_insertion_point(field_get:GCGetAucitonListBack.AllPages)
  return allpages_;
}
inline void GCGetAucitonListBack::set_allpages(::google::protobuf::int32 value) {
  set_has_allpages();
  allpages_ = value;
  // @@protoc_insertion_point(field_set:GCGetAucitonListBack.AllPages)
}

// repeated .AuctionBackData abackDatalist = 4;
inline int GCGetAucitonListBack::abackdatalist_size() const {
  return abackdatalist_.size();
}
inline void GCGetAucitonListBack::clear_abackdatalist() {
  abackdatalist_.Clear();
}
inline const ::AuctionBackData& GCGetAucitonListBack::abackdatalist(int index) const {
  // @@protoc_insertion_point(field_get:GCGetAucitonListBack.abackDatalist)
  return abackdatalist_.Get(index);
}
inline ::AuctionBackData* GCGetAucitonListBack::mutable_abackdatalist(int index) {
  // @@protoc_insertion_point(field_mutable:GCGetAucitonListBack.abackDatalist)
  return abackdatalist_.Mutable(index);
}
inline ::AuctionBackData* GCGetAucitonListBack::add_abackdatalist() {
  // @@protoc_insertion_point(field_add:GCGetAucitonListBack.abackDatalist)
  return abackdatalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AuctionBackData >&
GCGetAucitonListBack::abackdatalist() const {
  // @@protoc_insertion_point(field_list:GCGetAucitonListBack.abackDatalist)
  return abackdatalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::AuctionBackData >*
GCGetAucitonListBack::mutable_abackdatalist() {
  // @@protoc_insertion_point(field_mutable_list:GCGetAucitonListBack.abackDatalist)
  return &abackdatalist_;
}

// -------------------------------------------------------------------

// CGAuctionSale

// optional int64 itemID = 1;
inline bool CGAuctionSale::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGAuctionSale::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGAuctionSale::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGAuctionSale::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 CGAuctionSale::itemid() const {
  // @@protoc_insertion_point(field_get:CGAuctionSale.itemID)
  return itemid_;
}
inline void CGAuctionSale::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:CGAuctionSale.itemID)
}

// optional int32 auctionType = 2;
inline bool CGAuctionSale::has_auctiontype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGAuctionSale::set_has_auctiontype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGAuctionSale::clear_has_auctiontype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGAuctionSale::clear_auctiontype() {
  auctiontype_ = 0;
  clear_has_auctiontype();
}
inline ::google::protobuf::int32 CGAuctionSale::auctiontype() const {
  // @@protoc_insertion_point(field_get:CGAuctionSale.auctionType)
  return auctiontype_;
}
inline void CGAuctionSale::set_auctiontype(::google::protobuf::int32 value) {
  set_has_auctiontype();
  auctiontype_ = value;
  // @@protoc_insertion_point(field_set:CGAuctionSale.auctionType)
}

// optional int32 num = 3;
inline bool CGAuctionSale::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGAuctionSale::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGAuctionSale::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGAuctionSale::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 CGAuctionSale::num() const {
  // @@protoc_insertion_point(field_get:CGAuctionSale.num)
  return num_;
}
inline void CGAuctionSale::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:CGAuctionSale.num)
}

// optional int32 sellType = 4;
inline bool CGAuctionSale::has_selltype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGAuctionSale::set_has_selltype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGAuctionSale::clear_has_selltype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGAuctionSale::clear_selltype() {
  selltype_ = 0;
  clear_has_selltype();
}
inline ::google::protobuf::int32 CGAuctionSale::selltype() const {
  // @@protoc_insertion_point(field_get:CGAuctionSale.sellType)
  return selltype_;
}
inline void CGAuctionSale::set_selltype(::google::protobuf::int32 value) {
  set_has_selltype();
  selltype_ = value;
  // @@protoc_insertion_point(field_set:CGAuctionSale.sellType)
}

// optional int32 unitPrice = 5;
inline bool CGAuctionSale::has_unitprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGAuctionSale::set_has_unitprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGAuctionSale::clear_has_unitprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGAuctionSale::clear_unitprice() {
  unitprice_ = 0;
  clear_has_unitprice();
}
inline ::google::protobuf::int32 CGAuctionSale::unitprice() const {
  // @@protoc_insertion_point(field_get:CGAuctionSale.unitPrice)
  return unitprice_;
}
inline void CGAuctionSale::set_unitprice(::google::protobuf::int32 value) {
  set_has_unitprice();
  unitprice_ = value;
  // @@protoc_insertion_point(field_set:CGAuctionSale.unitPrice)
}

// -------------------------------------------------------------------

// CGAuctionBuyShelve

// optional int64 ahID = 1;
inline bool CGAuctionBuyShelve::has_ahid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGAuctionBuyShelve::set_has_ahid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGAuctionBuyShelve::clear_has_ahid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGAuctionBuyShelve::clear_ahid() {
  ahid_ = GOOGLE_LONGLONG(0);
  clear_has_ahid();
}
inline ::google::protobuf::int64 CGAuctionBuyShelve::ahid() const {
  // @@protoc_insertion_point(field_get:CGAuctionBuyShelve.ahID)
  return ahid_;
}
inline void CGAuctionBuyShelve::set_ahid(::google::protobuf::int64 value) {
  set_has_ahid();
  ahid_ = value;
  // @@protoc_insertion_point(field_set:CGAuctionBuyShelve.ahID)
}

// optional int32 type = 2;
inline bool CGAuctionBuyShelve::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGAuctionBuyShelve::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGAuctionBuyShelve::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGAuctionBuyShelve::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGAuctionBuyShelve::type() const {
  // @@protoc_insertion_point(field_get:CGAuctionBuyShelve.type)
  return type_;
}
inline void CGAuctionBuyShelve::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGAuctionBuyShelve.type)
}

// optional int32 num = 3;
inline bool CGAuctionBuyShelve::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGAuctionBuyShelve::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGAuctionBuyShelve::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGAuctionBuyShelve::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 CGAuctionBuyShelve::num() const {
  // @@protoc_insertion_point(field_get:CGAuctionBuyShelve.num)
  return num_;
}
inline void CGAuctionBuyShelve::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:CGAuctionBuyShelve.num)
}

// -------------------------------------------------------------------

// GCAuctionHouseBack

// optional int32 actionType = 1;
inline bool GCAuctionHouseBack::has_actiontype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCAuctionHouseBack::set_has_actiontype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCAuctionHouseBack::clear_has_actiontype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCAuctionHouseBack::clear_actiontype() {
  actiontype_ = 0;
  clear_has_actiontype();
}
inline ::google::protobuf::int32 GCAuctionHouseBack::actiontype() const {
  // @@protoc_insertion_point(field_get:GCAuctionHouseBack.actionType)
  return actiontype_;
}
inline void GCAuctionHouseBack::set_actiontype(::google::protobuf::int32 value) {
  set_has_actiontype();
  actiontype_ = value;
  // @@protoc_insertion_point(field_set:GCAuctionHouseBack.actionType)
}

// optional int32 resultCode = 2;
inline bool GCAuctionHouseBack::has_resultcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCAuctionHouseBack::set_has_resultcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCAuctionHouseBack::clear_has_resultcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCAuctionHouseBack::clear_resultcode() {
  resultcode_ = 0;
  clear_has_resultcode();
}
inline ::google::protobuf::int32 GCAuctionHouseBack::resultcode() const {
  // @@protoc_insertion_point(field_get:GCAuctionHouseBack.resultCode)
  return resultcode_;
}
inline void GCAuctionHouseBack::set_resultcode(::google::protobuf::int32 value) {
  set_has_resultcode();
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:GCAuctionHouseBack.resultCode)
}

// -------------------------------------------------------------------

// CGGetAuctionRecordList

// -------------------------------------------------------------------

// GCGetAuctionRecordListBack

// repeated .AuctionRecordData auctionRecordDataList = 1;
inline int GCGetAuctionRecordListBack::auctionrecorddatalist_size() const {
  return auctionrecorddatalist_.size();
}
inline void GCGetAuctionRecordListBack::clear_auctionrecorddatalist() {
  auctionrecorddatalist_.Clear();
}
inline const ::AuctionRecordData& GCGetAuctionRecordListBack::auctionrecorddatalist(int index) const {
  // @@protoc_insertion_point(field_get:GCGetAuctionRecordListBack.auctionRecordDataList)
  return auctionrecorddatalist_.Get(index);
}
inline ::AuctionRecordData* GCGetAuctionRecordListBack::mutable_auctionrecorddatalist(int index) {
  // @@protoc_insertion_point(field_mutable:GCGetAuctionRecordListBack.auctionRecordDataList)
  return auctionrecorddatalist_.Mutable(index);
}
inline ::AuctionRecordData* GCGetAuctionRecordListBack::add_auctionrecorddatalist() {
  // @@protoc_insertion_point(field_add:GCGetAuctionRecordListBack.auctionRecordDataList)
  return auctionrecorddatalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AuctionRecordData >&
GCGetAuctionRecordListBack::auctionrecorddatalist() const {
  // @@protoc_insertion_point(field_list:GCGetAuctionRecordListBack.auctionRecordDataList)
  return auctionrecorddatalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::AuctionRecordData >*
GCGetAuctionRecordListBack::mutable_auctionrecorddatalist() {
  // @@protoc_insertion_point(field_mutable_list:GCGetAuctionRecordListBack.auctionRecordDataList)
  return &auctionrecorddatalist_;
}

// optional int32 resultCode = 2;
inline bool GCGetAuctionRecordListBack::has_resultcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGetAuctionRecordListBack::set_has_resultcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGetAuctionRecordListBack::clear_has_resultcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGetAuctionRecordListBack::clear_resultcode() {
  resultcode_ = 0;
  clear_has_resultcode();
}
inline ::google::protobuf::int32 GCGetAuctionRecordListBack::resultcode() const {
  // @@protoc_insertion_point(field_get:GCGetAuctionRecordListBack.resultCode)
  return resultcode_;
}
inline void GCGetAuctionRecordListBack::set_resultcode(::google::protobuf::int32 value) {
  set_has_resultcode();
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:GCGetAuctionRecordListBack.resultCode)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AuctionMessage_2eproto__INCLUDED
