// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BadValleyMessage.proto

#ifndef PROTOBUF_BadValleyMessage_2eproto__INCLUDED
#define PROTOBUF_BadValleyMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "InnerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BadValleyMessage_2eproto();
void protobuf_AssignDesc_BadValleyMessage_2eproto();
void protobuf_ShutdownFile_BadValleyMessage_2eproto();

class CGBadvellyOperate;
class GCBadvellyOperateBack;

// ===================================================================

class CGBadvellyOperate : public ::google::protobuf::Message {
 public:
  CGBadvellyOperate();
  virtual ~CGBadvellyOperate();

  CGBadvellyOperate(const CGBadvellyOperate& from);

  inline CGBadvellyOperate& operator=(const CGBadvellyOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGBadvellyOperate& default_instance();

  void Swap(CGBadvellyOperate* other);

  // implements Message ----------------------------------------------

  CGBadvellyOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGBadvellyOperate& from);
  void MergeFrom(const CGBadvellyOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 missionId = 2;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 2;
  inline ::google::protobuf::int32 missionid() const;
  inline void set_missionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGBadvellyOperate)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_missionid();
  inline void clear_has_missionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 missionid_;
  friend void  protobuf_AddDesc_BadValleyMessage_2eproto();
  friend void protobuf_AssignDesc_BadValleyMessage_2eproto();
  friend void protobuf_ShutdownFile_BadValleyMessage_2eproto();

  void InitAsDefaultInstance();
  static CGBadvellyOperate* default_instance_;
};
// -------------------------------------------------------------------

class GCBadvellyOperateBack : public ::google::protobuf::Message {
 public:
  GCBadvellyOperateBack();
  virtual ~GCBadvellyOperateBack();

  GCBadvellyOperateBack(const GCBadvellyOperateBack& from);

  inline GCBadvellyOperateBack& operator=(const GCBadvellyOperateBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCBadvellyOperateBack& default_instance();

  void Swap(GCBadvellyOperateBack* other);

  // implements Message ----------------------------------------------

  GCBadvellyOperateBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCBadvellyOperateBack& from);
  void MergeFrom(const GCBadvellyOperateBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 scenceId = 2;
  inline bool has_scenceid() const;
  inline void clear_scenceid();
  static const int kScenceIdFieldNumber = 2;
  inline ::google::protobuf::int32 scenceid() const;
  inline void set_scenceid(::google::protobuf::int32 value);

  // optional .Vector3Info targetPos = 3;
  inline bool has_targetpos() const;
  inline void clear_targetpos();
  static const int kTargetPosFieldNumber = 3;
  inline const ::Vector3Info& targetpos() const;
  inline ::Vector3Info* mutable_targetpos();
  inline ::Vector3Info* release_targetpos();
  inline void set_allocated_targetpos(::Vector3Info* targetpos);

  // optional int32 langueId = 4;
  inline bool has_langueid() const;
  inline void clear_langueid();
  static const int kLangueIdFieldNumber = 4;
  inline ::google::protobuf::int32 langueid() const;
  inline void set_langueid(::google::protobuf::int32 value);

  // optional int32 result = 5;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 missionId = 6;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 6;
  inline ::google::protobuf::int32 missionid() const;
  inline void set_missionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCBadvellyOperateBack)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_scenceid();
  inline void clear_has_scenceid();
  inline void set_has_targetpos();
  inline void clear_has_targetpos();
  inline void set_has_langueid();
  inline void clear_has_langueid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_missionid();
  inline void clear_has_missionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 scenceid_;
  ::Vector3Info* targetpos_;
  ::google::protobuf::int32 langueid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 missionid_;
  friend void  protobuf_AddDesc_BadValleyMessage_2eproto();
  friend void protobuf_AssignDesc_BadValleyMessage_2eproto();
  friend void protobuf_ShutdownFile_BadValleyMessage_2eproto();

  void InitAsDefaultInstance();
  static GCBadvellyOperateBack* default_instance_;
};
// ===================================================================


// ===================================================================

// CGBadvellyOperate

// optional int32 type = 1;
inline bool CGBadvellyOperate::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGBadvellyOperate::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGBadvellyOperate::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGBadvellyOperate::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGBadvellyOperate::type() const {
  // @@protoc_insertion_point(field_get:CGBadvellyOperate.type)
  return type_;
}
inline void CGBadvellyOperate::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGBadvellyOperate.type)
}

// optional int32 missionId = 2;
inline bool CGBadvellyOperate::has_missionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGBadvellyOperate::set_has_missionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGBadvellyOperate::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGBadvellyOperate::clear_missionid() {
  missionid_ = 0;
  clear_has_missionid();
}
inline ::google::protobuf::int32 CGBadvellyOperate::missionid() const {
  // @@protoc_insertion_point(field_get:CGBadvellyOperate.missionId)
  return missionid_;
}
inline void CGBadvellyOperate::set_missionid(::google::protobuf::int32 value) {
  set_has_missionid();
  missionid_ = value;
  // @@protoc_insertion_point(field_set:CGBadvellyOperate.missionId)
}

// -------------------------------------------------------------------

// GCBadvellyOperateBack

// optional int32 type = 1;
inline bool GCBadvellyOperateBack::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCBadvellyOperateBack::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCBadvellyOperateBack::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCBadvellyOperateBack::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCBadvellyOperateBack::type() const {
  // @@protoc_insertion_point(field_get:GCBadvellyOperateBack.type)
  return type_;
}
inline void GCBadvellyOperateBack::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCBadvellyOperateBack.type)
}

// optional int32 scenceId = 2;
inline bool GCBadvellyOperateBack::has_scenceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCBadvellyOperateBack::set_has_scenceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCBadvellyOperateBack::clear_has_scenceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCBadvellyOperateBack::clear_scenceid() {
  scenceid_ = 0;
  clear_has_scenceid();
}
inline ::google::protobuf::int32 GCBadvellyOperateBack::scenceid() const {
  // @@protoc_insertion_point(field_get:GCBadvellyOperateBack.scenceId)
  return scenceid_;
}
inline void GCBadvellyOperateBack::set_scenceid(::google::protobuf::int32 value) {
  set_has_scenceid();
  scenceid_ = value;
  // @@protoc_insertion_point(field_set:GCBadvellyOperateBack.scenceId)
}

// optional .Vector3Info targetPos = 3;
inline bool GCBadvellyOperateBack::has_targetpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCBadvellyOperateBack::set_has_targetpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCBadvellyOperateBack::clear_has_targetpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCBadvellyOperateBack::clear_targetpos() {
  if (targetpos_ != NULL) targetpos_->::Vector3Info::Clear();
  clear_has_targetpos();
}
inline const ::Vector3Info& GCBadvellyOperateBack::targetpos() const {
  // @@protoc_insertion_point(field_get:GCBadvellyOperateBack.targetPos)
  return targetpos_ != NULL ? *targetpos_ : *default_instance_->targetpos_;
}
inline ::Vector3Info* GCBadvellyOperateBack::mutable_targetpos() {
  set_has_targetpos();
  if (targetpos_ == NULL) targetpos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCBadvellyOperateBack.targetPos)
  return targetpos_;
}
inline ::Vector3Info* GCBadvellyOperateBack::release_targetpos() {
  clear_has_targetpos();
  ::Vector3Info* temp = targetpos_;
  targetpos_ = NULL;
  return temp;
}
inline void GCBadvellyOperateBack::set_allocated_targetpos(::Vector3Info* targetpos) {
  delete targetpos_;
  targetpos_ = targetpos;
  if (targetpos) {
    set_has_targetpos();
  } else {
    clear_has_targetpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GCBadvellyOperateBack.targetPos)
}

// optional int32 langueId = 4;
inline bool GCBadvellyOperateBack::has_langueid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCBadvellyOperateBack::set_has_langueid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCBadvellyOperateBack::clear_has_langueid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCBadvellyOperateBack::clear_langueid() {
  langueid_ = 0;
  clear_has_langueid();
}
inline ::google::protobuf::int32 GCBadvellyOperateBack::langueid() const {
  // @@protoc_insertion_point(field_get:GCBadvellyOperateBack.langueId)
  return langueid_;
}
inline void GCBadvellyOperateBack::set_langueid(::google::protobuf::int32 value) {
  set_has_langueid();
  langueid_ = value;
  // @@protoc_insertion_point(field_set:GCBadvellyOperateBack.langueId)
}

// optional int32 result = 5;
inline bool GCBadvellyOperateBack::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCBadvellyOperateBack::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCBadvellyOperateBack::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCBadvellyOperateBack::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCBadvellyOperateBack::result() const {
  // @@protoc_insertion_point(field_get:GCBadvellyOperateBack.result)
  return result_;
}
inline void GCBadvellyOperateBack::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCBadvellyOperateBack.result)
}

// optional int32 missionId = 6;
inline bool GCBadvellyOperateBack::has_missionid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCBadvellyOperateBack::set_has_missionid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCBadvellyOperateBack::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCBadvellyOperateBack::clear_missionid() {
  missionid_ = 0;
  clear_has_missionid();
}
inline ::google::protobuf::int32 GCBadvellyOperateBack::missionid() const {
  // @@protoc_insertion_point(field_get:GCBadvellyOperateBack.missionId)
  return missionid_;
}
inline void GCBadvellyOperateBack::set_missionid(::google::protobuf::int32 value) {
  set_has_missionid();
  missionid_ = value;
  // @@protoc_insertion_point(field_set:GCBadvellyOperateBack.missionId)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BadValleyMessage_2eproto__INCLUDED
