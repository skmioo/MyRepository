// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleTaskMessage.proto

#ifndef PROTOBUF_BattleTaskMessage_2eproto__INCLUDED
#define PROTOBUF_BattleTaskMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BattleTaskMessage_2eproto();
void protobuf_AssignDesc_BattleTaskMessage_2eproto();
void protobuf_ShutdownFile_BattleTaskMessage_2eproto();

class BattleTask;
class GCBattleTaskListBack;
class GCBattleTaskInforBack;

// ===================================================================

class BattleTask : public ::google::protobuf::Message {
 public:
  BattleTask();
  virtual ~BattleTask();

  BattleTask(const BattleTask& from);

  inline BattleTask& operator=(const BattleTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleTask& default_instance();

  void Swap(BattleTask* other);

  // implements Message ----------------------------------------------

  BattleTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleTask& from);
  void MergeFrom(const BattleTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BattleTask)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_BattleTaskMessage_2eproto();
  friend void protobuf_AssignDesc_BattleTaskMessage_2eproto();
  friend void protobuf_ShutdownFile_BattleTaskMessage_2eproto();

  void InitAsDefaultInstance();
  static BattleTask* default_instance_;
};
// -------------------------------------------------------------------

class GCBattleTaskListBack : public ::google::protobuf::Message {
 public:
  GCBattleTaskListBack();
  virtual ~GCBattleTaskListBack();

  GCBattleTaskListBack(const GCBattleTaskListBack& from);

  inline GCBattleTaskListBack& operator=(const GCBattleTaskListBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCBattleTaskListBack& default_instance();

  void Swap(GCBattleTaskListBack* other);

  // implements Message ----------------------------------------------

  GCBattleTaskListBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCBattleTaskListBack& from);
  void MergeFrom(const GCBattleTaskListBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BattleTask battleTasks = 1;
  inline int battletasks_size() const;
  inline void clear_battletasks();
  static const int kBattleTasksFieldNumber = 1;
  inline const ::BattleTask& battletasks(int index) const;
  inline ::BattleTask* mutable_battletasks(int index);
  inline ::BattleTask* add_battletasks();
  inline const ::google::protobuf::RepeatedPtrField< ::BattleTask >&
      battletasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::BattleTask >*
      mutable_battletasks();

  // @@protoc_insertion_point(class_scope:GCBattleTaskListBack)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BattleTask > battletasks_;
  friend void  protobuf_AddDesc_BattleTaskMessage_2eproto();
  friend void protobuf_AssignDesc_BattleTaskMessage_2eproto();
  friend void protobuf_ShutdownFile_BattleTaskMessage_2eproto();

  void InitAsDefaultInstance();
  static GCBattleTaskListBack* default_instance_;
};
// -------------------------------------------------------------------

class GCBattleTaskInforBack : public ::google::protobuf::Message {
 public:
  GCBattleTaskInforBack();
  virtual ~GCBattleTaskInforBack();

  GCBattleTaskInforBack(const GCBattleTaskInforBack& from);

  inline GCBattleTaskInforBack& operator=(const GCBattleTaskInforBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCBattleTaskInforBack& default_instance();

  void Swap(GCBattleTaskInforBack* other);

  // implements Message ----------------------------------------------

  GCBattleTaskInforBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCBattleTaskInforBack& from);
  void MergeFrom(const GCBattleTaskInforBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .BattleTask battleTask = 1;
  inline bool has_battletask() const;
  inline void clear_battletask();
  static const int kBattleTaskFieldNumber = 1;
  inline const ::BattleTask& battletask() const;
  inline ::BattleTask* mutable_battletask();
  inline ::BattleTask* release_battletask();
  inline void set_allocated_battletask(::BattleTask* battletask);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 oldTaskID = 3;
  inline bool has_oldtaskid() const;
  inline void clear_oldtaskid();
  static const int kOldTaskIDFieldNumber = 3;
  inline ::google::protobuf::int32 oldtaskid() const;
  inline void set_oldtaskid(::google::protobuf::int32 value);

  // optional int32 taskStatus = 4;
  inline bool has_taskstatus() const;
  inline void clear_taskstatus();
  static const int kTaskStatusFieldNumber = 4;
  inline ::google::protobuf::int32 taskstatus() const;
  inline void set_taskstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCBattleTaskInforBack)
 private:
  inline void set_has_battletask();
  inline void clear_has_battletask();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_oldtaskid();
  inline void clear_has_oldtaskid();
  inline void set_has_taskstatus();
  inline void clear_has_taskstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::BattleTask* battletask_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 oldtaskid_;
  ::google::protobuf::int32 taskstatus_;
  friend void  protobuf_AddDesc_BattleTaskMessage_2eproto();
  friend void protobuf_AssignDesc_BattleTaskMessage_2eproto();
  friend void protobuf_ShutdownFile_BattleTaskMessage_2eproto();

  void InitAsDefaultInstance();
  static GCBattleTaskInforBack* default_instance_;
};
// ===================================================================


// ===================================================================

// BattleTask

// optional int32 taskID = 1;
inline bool BattleTask::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleTask::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleTask::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleTask::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 BattleTask::taskid() const {
  // @@protoc_insertion_point(field_get:BattleTask.taskID)
  return taskid_;
}
inline void BattleTask::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:BattleTask.taskID)
}

// optional int32 status = 2;
inline bool BattleTask::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleTask::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleTask::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleTask::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 BattleTask::status() const {
  // @@protoc_insertion_point(field_get:BattleTask.status)
  return status_;
}
inline void BattleTask::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:BattleTask.status)
}

// optional int32 num = 3;
inline bool BattleTask::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleTask::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleTask::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleTask::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 BattleTask::num() const {
  // @@protoc_insertion_point(field_get:BattleTask.num)
  return num_;
}
inline void BattleTask::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BattleTask.num)
}

// optional int32 type = 4;
inline bool BattleTask::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleTask::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleTask::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleTask::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 BattleTask::type() const {
  // @@protoc_insertion_point(field_get:BattleTask.type)
  return type_;
}
inline void BattleTask::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:BattleTask.type)
}

// -------------------------------------------------------------------

// GCBattleTaskListBack

// repeated .BattleTask battleTasks = 1;
inline int GCBattleTaskListBack::battletasks_size() const {
  return battletasks_.size();
}
inline void GCBattleTaskListBack::clear_battletasks() {
  battletasks_.Clear();
}
inline const ::BattleTask& GCBattleTaskListBack::battletasks(int index) const {
  // @@protoc_insertion_point(field_get:GCBattleTaskListBack.battleTasks)
  return battletasks_.Get(index);
}
inline ::BattleTask* GCBattleTaskListBack::mutable_battletasks(int index) {
  // @@protoc_insertion_point(field_mutable:GCBattleTaskListBack.battleTasks)
  return battletasks_.Mutable(index);
}
inline ::BattleTask* GCBattleTaskListBack::add_battletasks() {
  // @@protoc_insertion_point(field_add:GCBattleTaskListBack.battleTasks)
  return battletasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BattleTask >&
GCBattleTaskListBack::battletasks() const {
  // @@protoc_insertion_point(field_list:GCBattleTaskListBack.battleTasks)
  return battletasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::BattleTask >*
GCBattleTaskListBack::mutable_battletasks() {
  // @@protoc_insertion_point(field_mutable_list:GCBattleTaskListBack.battleTasks)
  return &battletasks_;
}

// -------------------------------------------------------------------

// GCBattleTaskInforBack

// optional .BattleTask battleTask = 1;
inline bool GCBattleTaskInforBack::has_battletask() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCBattleTaskInforBack::set_has_battletask() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCBattleTaskInforBack::clear_has_battletask() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCBattleTaskInforBack::clear_battletask() {
  if (battletask_ != NULL) battletask_->::BattleTask::Clear();
  clear_has_battletask();
}
inline const ::BattleTask& GCBattleTaskInforBack::battletask() const {
  // @@protoc_insertion_point(field_get:GCBattleTaskInforBack.battleTask)
  return battletask_ != NULL ? *battletask_ : *default_instance_->battletask_;
}
inline ::BattleTask* GCBattleTaskInforBack::mutable_battletask() {
  set_has_battletask();
  if (battletask_ == NULL) battletask_ = new ::BattleTask;
  // @@protoc_insertion_point(field_mutable:GCBattleTaskInforBack.battleTask)
  return battletask_;
}
inline ::BattleTask* GCBattleTaskInforBack::release_battletask() {
  clear_has_battletask();
  ::BattleTask* temp = battletask_;
  battletask_ = NULL;
  return temp;
}
inline void GCBattleTaskInforBack::set_allocated_battletask(::BattleTask* battletask) {
  delete battletask_;
  battletask_ = battletask;
  if (battletask) {
    set_has_battletask();
  } else {
    clear_has_battletask();
  }
  // @@protoc_insertion_point(field_set_allocated:GCBattleTaskInforBack.battleTask)
}

// optional int32 type = 2;
inline bool GCBattleTaskInforBack::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCBattleTaskInforBack::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCBattleTaskInforBack::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCBattleTaskInforBack::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCBattleTaskInforBack::type() const {
  // @@protoc_insertion_point(field_get:GCBattleTaskInforBack.type)
  return type_;
}
inline void GCBattleTaskInforBack::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCBattleTaskInforBack.type)
}

// optional int32 oldTaskID = 3;
inline bool GCBattleTaskInforBack::has_oldtaskid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCBattleTaskInforBack::set_has_oldtaskid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCBattleTaskInforBack::clear_has_oldtaskid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCBattleTaskInforBack::clear_oldtaskid() {
  oldtaskid_ = 0;
  clear_has_oldtaskid();
}
inline ::google::protobuf::int32 GCBattleTaskInforBack::oldtaskid() const {
  // @@protoc_insertion_point(field_get:GCBattleTaskInforBack.oldTaskID)
  return oldtaskid_;
}
inline void GCBattleTaskInforBack::set_oldtaskid(::google::protobuf::int32 value) {
  set_has_oldtaskid();
  oldtaskid_ = value;
  // @@protoc_insertion_point(field_set:GCBattleTaskInforBack.oldTaskID)
}

// optional int32 taskStatus = 4;
inline bool GCBattleTaskInforBack::has_taskstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCBattleTaskInforBack::set_has_taskstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCBattleTaskInforBack::clear_has_taskstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCBattleTaskInforBack::clear_taskstatus() {
  taskstatus_ = 0;
  clear_has_taskstatus();
}
inline ::google::protobuf::int32 GCBattleTaskInforBack::taskstatus() const {
  // @@protoc_insertion_point(field_get:GCBattleTaskInforBack.taskStatus)
  return taskstatus_;
}
inline void GCBattleTaskInforBack::set_taskstatus(::google::protobuf::int32 value) {
  set_has_taskstatus();
  taskstatus_ = value;
  // @@protoc_insertion_point(field_set:GCBattleTaskInforBack.taskStatus)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BattleTaskMessage_2eproto__INCLUDED
