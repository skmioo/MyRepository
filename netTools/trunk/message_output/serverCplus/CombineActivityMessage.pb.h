// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CombineActivityMessage.proto

#ifndef PROTOBUF_CombineActivityMessage_2eproto__INCLUDED
#define PROTOBUF_CombineActivityMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonMessage.pb.h"
#include "InnerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CombineActivityMessage_2eproto();
void protobuf_AssignDesc_CombineActivityMessage_2eproto();
void protobuf_ShutdownFile_CombineActivityMessage_2eproto();

class CombineActivityInfo;
class CombineActivity;
class GCCombineActivityList;
class CombineActivityListItem;
class CombineActivityExchangeItem;
class CombineActivityBuyItem;
class CGGetCombineActivityReward;
class GCGetCombineActivityRewardBack;
class GCCombineActivityItemUpdate;

// ===================================================================

class CombineActivityInfo : public ::google::protobuf::Message {
 public:
  CombineActivityInfo();
  virtual ~CombineActivityInfo();

  CombineActivityInfo(const CombineActivityInfo& from);

  inline CombineActivityInfo& operator=(const CombineActivityInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombineActivityInfo& default_instance();

  void Swap(CombineActivityInfo* other);

  // implements Message ----------------------------------------------

  CombineActivityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombineActivityInfo& from);
  void MergeFrom(const CombineActivityInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 actId = 1;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActIdFieldNumber = 1;
  inline ::google::protobuf::int32 actid() const;
  inline void set_actid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 tabid = 3;
  inline bool has_tabid() const;
  inline void clear_tabid();
  static const int kTabidFieldNumber = 3;
  inline ::google::protobuf::int32 tabid() const;
  inline void set_tabid(::google::protobuf::int32 value);

  // optional string tabimg = 4;
  inline bool has_tabimg() const;
  inline void clear_tabimg();
  static const int kTabimgFieldNumber = 4;
  inline const ::std::string& tabimg() const;
  inline void set_tabimg(const ::std::string& value);
  inline void set_tabimg(const char* value);
  inline void set_tabimg(const char* value, size_t size);
  inline ::std::string* mutable_tabimg();
  inline ::std::string* release_tabimg();
  inline void set_allocated_tabimg(::std::string* tabimg);

  // optional string tabDesc = 5;
  inline bool has_tabdesc() const;
  inline void clear_tabdesc();
  static const int kTabDescFieldNumber = 5;
  inline const ::std::string& tabdesc() const;
  inline void set_tabdesc(const ::std::string& value);
  inline void set_tabdesc(const char* value);
  inline void set_tabdesc(const char* value, size_t size);
  inline ::std::string* mutable_tabdesc();
  inline ::std::string* release_tabdesc();
  inline void set_allocated_tabdesc(::std::string* tabdesc);

  // @@protoc_insertion_point(class_scope:CombineActivityInfo)
 private:
  inline void set_has_actid();
  inline void clear_has_actid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_tabid();
  inline void clear_has_tabid();
  inline void set_has_tabimg();
  inline void clear_has_tabimg();
  inline void set_has_tabdesc();
  inline void clear_has_tabdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 actid_;
  ::google::protobuf::int32 tabid_;
  ::std::string* tabimg_;
  ::std::string* tabdesc_;
  friend void  protobuf_AddDesc_CombineActivityMessage_2eproto();
  friend void protobuf_AssignDesc_CombineActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_CombineActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static CombineActivityInfo* default_instance_;
};
// -------------------------------------------------------------------

class CombineActivity : public ::google::protobuf::Message {
 public:
  CombineActivity();
  virtual ~CombineActivity();

  CombineActivity(const CombineActivity& from);

  inline CombineActivity& operator=(const CombineActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombineActivity& default_instance();

  void Swap(CombineActivity* other);

  // implements Message ----------------------------------------------

  CombineActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombineActivity& from);
  void MergeFrom(const CombineActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 actId = 1;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActIdFieldNumber = 1;
  inline ::google::protobuf::int32 actid() const;
  inline void set_actid(::google::protobuf::int32 value);

  // repeated .CombineActivityInfo infoList = 2;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfoListFieldNumber = 2;
  inline const ::CombineActivityInfo& infolist(int index) const;
  inline ::CombineActivityInfo* mutable_infolist(int index);
  inline ::CombineActivityInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::CombineActivityInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CombineActivityInfo >*
      mutable_infolist();

  // @@protoc_insertion_point(class_scope:CombineActivity)
 private:
  inline void set_has_actid();
  inline void clear_has_actid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CombineActivityInfo > infolist_;
  ::google::protobuf::int32 actid_;
  friend void  protobuf_AddDesc_CombineActivityMessage_2eproto();
  friend void protobuf_AssignDesc_CombineActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_CombineActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static CombineActivity* default_instance_;
};
// -------------------------------------------------------------------

class GCCombineActivityList : public ::google::protobuf::Message {
 public:
  GCCombineActivityList();
  virtual ~GCCombineActivityList();

  GCCombineActivityList(const GCCombineActivityList& from);

  inline GCCombineActivityList& operator=(const GCCombineActivityList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCombineActivityList& default_instance();

  void Swap(GCCombineActivityList* other);

  // implements Message ----------------------------------------------

  GCCombineActivityList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCombineActivityList& from);
  void MergeFrom(const GCCombineActivityList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CombineActivity activityList = 1;
  inline int activitylist_size() const;
  inline void clear_activitylist();
  static const int kActivityListFieldNumber = 1;
  inline const ::CombineActivity& activitylist(int index) const;
  inline ::CombineActivity* mutable_activitylist(int index);
  inline ::CombineActivity* add_activitylist();
  inline const ::google::protobuf::RepeatedPtrField< ::CombineActivity >&
      activitylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CombineActivity >*
      mutable_activitylist();

  // @@protoc_insertion_point(class_scope:GCCombineActivityList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CombineActivity > activitylist_;
  friend void  protobuf_AddDesc_CombineActivityMessage_2eproto();
  friend void protobuf_AssignDesc_CombineActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_CombineActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCombineActivityList* default_instance_;
};
// -------------------------------------------------------------------

class CombineActivityListItem : public ::google::protobuf::Message {
 public:
  CombineActivityListItem();
  virtual ~CombineActivityListItem();

  CombineActivityListItem(const CombineActivityListItem& from);

  inline CombineActivityListItem& operator=(const CombineActivityListItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombineActivityListItem& default_instance();

  void Swap(CombineActivityListItem* other);

  // implements Message ----------------------------------------------

  CombineActivityListItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombineActivityListItem& from);
  void MergeFrom(const CombineActivityListItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string desc = 2;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 2;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional string rewardInfo = 3;
  inline bool has_rewardinfo() const;
  inline void clear_rewardinfo();
  static const int kRewardInfoFieldNumber = 3;
  inline const ::std::string& rewardinfo() const;
  inline void set_rewardinfo(const ::std::string& value);
  inline void set_rewardinfo(const char* value);
  inline void set_rewardinfo(const char* value, size_t size);
  inline ::std::string* mutable_rewardinfo();
  inline ::std::string* release_rewardinfo();
  inline void set_allocated_rewardinfo(::std::string* rewardinfo);

  // optional string progressText = 4;
  inline bool has_progresstext() const;
  inline void clear_progresstext();
  static const int kProgressTextFieldNumber = 4;
  inline const ::std::string& progresstext() const;
  inline void set_progresstext(const ::std::string& value);
  inline void set_progresstext(const char* value);
  inline void set_progresstext(const char* value, size_t size);
  inline ::std::string* mutable_progresstext();
  inline ::std::string* release_progresstext();
  inline void set_allocated_progresstext(::std::string* progresstext);

  // optional int32 curValue = 5;
  inline bool has_curvalue() const;
  inline void clear_curvalue();
  static const int kCurValueFieldNumber = 5;
  inline ::google::protobuf::int32 curvalue() const;
  inline void set_curvalue(::google::protobuf::int32 value);

  // optional int32 needValue = 6;
  inline bool has_needvalue() const;
  inline void clear_needvalue();
  static const int kNeedValueFieldNumber = 6;
  inline ::google::protobuf::int32 needvalue() const;
  inline void set_needvalue(::google::protobuf::int32 value);

  // optional int32 getTimes = 7;
  inline bool has_gettimes() const;
  inline void clear_gettimes();
  static const int kGetTimesFieldNumber = 7;
  inline ::google::protobuf::int32 gettimes() const;
  inline void set_gettimes(::google::protobuf::int32 value);

  // optional int32 getTimesLimit = 8;
  inline bool has_gettimeslimit() const;
  inline void clear_gettimeslimit();
  static const int kGetTimesLimitFieldNumber = 8;
  inline ::google::protobuf::int32 gettimeslimit() const;
  inline void set_gettimeslimit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CombineActivityListItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_rewardinfo();
  inline void clear_has_rewardinfo();
  inline void set_has_progresstext();
  inline void clear_has_progresstext();
  inline void set_has_curvalue();
  inline void clear_has_curvalue();
  inline void set_has_needvalue();
  inline void clear_has_needvalue();
  inline void set_has_gettimes();
  inline void clear_has_gettimes();
  inline void set_has_gettimeslimit();
  inline void clear_has_gettimeslimit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* desc_;
  ::std::string* rewardinfo_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 curvalue_;
  ::std::string* progresstext_;
  ::google::protobuf::int32 needvalue_;
  ::google::protobuf::int32 gettimes_;
  ::google::protobuf::int32 gettimeslimit_;
  friend void  protobuf_AddDesc_CombineActivityMessage_2eproto();
  friend void protobuf_AssignDesc_CombineActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_CombineActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static CombineActivityListItem* default_instance_;
};
// -------------------------------------------------------------------

class CombineActivityExchangeItem : public ::google::protobuf::Message {
 public:
  CombineActivityExchangeItem();
  virtual ~CombineActivityExchangeItem();

  CombineActivityExchangeItem(const CombineActivityExchangeItem& from);

  inline CombineActivityExchangeItem& operator=(const CombineActivityExchangeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombineActivityExchangeItem& default_instance();

  void Swap(CombineActivityExchangeItem* other);

  // implements Message ----------------------------------------------

  CombineActivityExchangeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombineActivityExchangeItem& from);
  void MergeFrom(const CombineActivityExchangeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string desc = 2;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 2;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional string rewardInfo = 3;
  inline bool has_rewardinfo() const;
  inline void clear_rewardinfo();
  static const int kRewardInfoFieldNumber = 3;
  inline const ::std::string& rewardinfo() const;
  inline void set_rewardinfo(const ::std::string& value);
  inline void set_rewardinfo(const char* value);
  inline void set_rewardinfo(const char* value, size_t size);
  inline ::std::string* mutable_rewardinfo();
  inline ::std::string* release_rewardinfo();
  inline void set_allocated_rewardinfo(::std::string* rewardinfo);

  // optional string needItemList = 4;
  inline bool has_needitemlist() const;
  inline void clear_needitemlist();
  static const int kNeedItemListFieldNumber = 4;
  inline const ::std::string& needitemlist() const;
  inline void set_needitemlist(const ::std::string& value);
  inline void set_needitemlist(const char* value);
  inline void set_needitemlist(const char* value, size_t size);
  inline ::std::string* mutable_needitemlist();
  inline ::std::string* release_needitemlist();
  inline void set_allocated_needitemlist(::std::string* needitemlist);

  // optional int32 getTimes = 5;
  inline bool has_gettimes() const;
  inline void clear_gettimes();
  static const int kGetTimesFieldNumber = 5;
  inline ::google::protobuf::int32 gettimes() const;
  inline void set_gettimes(::google::protobuf::int32 value);

  // optional int32 getTimesLimit = 6;
  inline bool has_gettimeslimit() const;
  inline void clear_gettimeslimit();
  static const int kGetTimesLimitFieldNumber = 6;
  inline ::google::protobuf::int32 gettimeslimit() const;
  inline void set_gettimeslimit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CombineActivityExchangeItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_rewardinfo();
  inline void clear_has_rewardinfo();
  inline void set_has_needitemlist();
  inline void clear_has_needitemlist();
  inline void set_has_gettimes();
  inline void clear_has_gettimes();
  inline void set_has_gettimeslimit();
  inline void clear_has_gettimeslimit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* desc_;
  ::std::string* rewardinfo_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 gettimes_;
  ::std::string* needitemlist_;
  ::google::protobuf::int32 gettimeslimit_;
  friend void  protobuf_AddDesc_CombineActivityMessage_2eproto();
  friend void protobuf_AssignDesc_CombineActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_CombineActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static CombineActivityExchangeItem* default_instance_;
};
// -------------------------------------------------------------------

class CombineActivityBuyItem : public ::google::protobuf::Message {
 public:
  CombineActivityBuyItem();
  virtual ~CombineActivityBuyItem();

  CombineActivityBuyItem(const CombineActivityBuyItem& from);

  inline CombineActivityBuyItem& operator=(const CombineActivityBuyItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombineActivityBuyItem& default_instance();

  void Swap(CombineActivityBuyItem* other);

  // implements Message ----------------------------------------------

  CombineActivityBuyItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombineActivityBuyItem& from);
  void MergeFrom(const CombineActivityBuyItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string desc = 2;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 2;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional string rewardInfo = 3;
  inline bool has_rewardinfo() const;
  inline void clear_rewardinfo();
  static const int kRewardInfoFieldNumber = 3;
  inline const ::std::string& rewardinfo() const;
  inline void set_rewardinfo(const ::std::string& value);
  inline void set_rewardinfo(const char* value);
  inline void set_rewardinfo(const char* value, size_t size);
  inline ::std::string* mutable_rewardinfo();
  inline ::std::string* release_rewardinfo();
  inline void set_allocated_rewardinfo(::std::string* rewardinfo);

  // optional string needMoney = 4;
  inline bool has_needmoney() const;
  inline void clear_needmoney();
  static const int kNeedMoneyFieldNumber = 4;
  inline const ::std::string& needmoney() const;
  inline void set_needmoney(const ::std::string& value);
  inline void set_needmoney(const char* value);
  inline void set_needmoney(const char* value, size_t size);
  inline ::std::string* mutable_needmoney();
  inline ::std::string* release_needmoney();
  inline void set_allocated_needmoney(::std::string* needmoney);

  // optional int32 getTimes = 5;
  inline bool has_gettimes() const;
  inline void clear_gettimes();
  static const int kGetTimesFieldNumber = 5;
  inline ::google::protobuf::int32 gettimes() const;
  inline void set_gettimes(::google::protobuf::int32 value);

  // optional int32 getTimesLimit = 6;
  inline bool has_gettimeslimit() const;
  inline void clear_gettimeslimit();
  static const int kGetTimesLimitFieldNumber = 6;
  inline ::google::protobuf::int32 gettimeslimit() const;
  inline void set_gettimeslimit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CombineActivityBuyItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_rewardinfo();
  inline void clear_has_rewardinfo();
  inline void set_has_needmoney();
  inline void clear_has_needmoney();
  inline void set_has_gettimes();
  inline void clear_has_gettimes();
  inline void set_has_gettimeslimit();
  inline void clear_has_gettimeslimit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* desc_;
  ::std::string* rewardinfo_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 gettimes_;
  ::std::string* needmoney_;
  ::google::protobuf::int32 gettimeslimit_;
  friend void  protobuf_AddDesc_CombineActivityMessage_2eproto();
  friend void protobuf_AssignDesc_CombineActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_CombineActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static CombineActivityBuyItem* default_instance_;
};
// -------------------------------------------------------------------

class CGGetCombineActivityReward : public ::google::protobuf::Message {
 public:
  CGGetCombineActivityReward();
  virtual ~CGGetCombineActivityReward();

  CGGetCombineActivityReward(const CGGetCombineActivityReward& from);

  inline CGGetCombineActivityReward& operator=(const CGGetCombineActivityReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetCombineActivityReward& default_instance();

  void Swap(CGGetCombineActivityReward* other);

  // implements Message ----------------------------------------------

  CGGetCombineActivityReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetCombineActivityReward& from);
  void MergeFrom(const CGGetCombineActivityReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 actId = 1;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActIdFieldNumber = 1;
  inline ::google::protobuf::int32 actid() const;
  inline void set_actid(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetCombineActivityReward)
 private:
  inline void set_has_actid();
  inline void clear_has_actid();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 actid_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_CombineActivityMessage_2eproto();
  friend void protobuf_AssignDesc_CombineActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_CombineActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetCombineActivityReward* default_instance_;
};
// -------------------------------------------------------------------

class GCGetCombineActivityRewardBack : public ::google::protobuf::Message {
 public:
  GCGetCombineActivityRewardBack();
  virtual ~GCGetCombineActivityRewardBack();

  GCGetCombineActivityRewardBack(const GCGetCombineActivityRewardBack& from);

  inline GCGetCombineActivityRewardBack& operator=(const GCGetCombineActivityRewardBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetCombineActivityRewardBack& default_instance();

  void Swap(GCGetCombineActivityRewardBack* other);

  // implements Message ----------------------------------------------

  GCGetCombineActivityRewardBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetCombineActivityRewardBack& from);
  void MergeFrom(const GCGetCombineActivityRewardBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 actId = 2;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActIdFieldNumber = 2;
  inline ::google::protobuf::int32 actid() const;
  inline void set_actid(::google::protobuf::int32 value);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 getTimes = 4;
  inline bool has_gettimes() const;
  inline void clear_gettimes();
  static const int kGetTimesFieldNumber = 4;
  inline ::google::protobuf::int32 gettimes() const;
  inline void set_gettimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGetCombineActivityRewardBack)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_actid();
  inline void clear_has_actid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_gettimes();
  inline void clear_has_gettimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 actid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 gettimes_;
  friend void  protobuf_AddDesc_CombineActivityMessage_2eproto();
  friend void protobuf_AssignDesc_CombineActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_CombineActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetCombineActivityRewardBack* default_instance_;
};
// -------------------------------------------------------------------

class GCCombineActivityItemUpdate : public ::google::protobuf::Message {
 public:
  GCCombineActivityItemUpdate();
  virtual ~GCCombineActivityItemUpdate();

  GCCombineActivityItemUpdate(const GCCombineActivityItemUpdate& from);

  inline GCCombineActivityItemUpdate& operator=(const GCCombineActivityItemUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCombineActivityItemUpdate& default_instance();

  void Swap(GCCombineActivityItemUpdate* other);

  // implements Message ----------------------------------------------

  GCCombineActivityItemUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCombineActivityItemUpdate& from);
  void MergeFrom(const GCCombineActivityItemUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 actId = 1;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActIdFieldNumber = 1;
  inline ::google::protobuf::int32 actid() const;
  inline void set_actid(::google::protobuf::int32 value);

  // optional int32 operate = 2;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 2;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // repeated .CombineActivityListItem listItems = 3;
  inline int listitems_size() const;
  inline void clear_listitems();
  static const int kListItemsFieldNumber = 3;
  inline const ::CombineActivityListItem& listitems(int index) const;
  inline ::CombineActivityListItem* mutable_listitems(int index);
  inline ::CombineActivityListItem* add_listitems();
  inline const ::google::protobuf::RepeatedPtrField< ::CombineActivityListItem >&
      listitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::CombineActivityListItem >*
      mutable_listitems();

  // repeated .CombineActivityExchangeItem exchangeItems = 4;
  inline int exchangeitems_size() const;
  inline void clear_exchangeitems();
  static const int kExchangeItemsFieldNumber = 4;
  inline const ::CombineActivityExchangeItem& exchangeitems(int index) const;
  inline ::CombineActivityExchangeItem* mutable_exchangeitems(int index);
  inline ::CombineActivityExchangeItem* add_exchangeitems();
  inline const ::google::protobuf::RepeatedPtrField< ::CombineActivityExchangeItem >&
      exchangeitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::CombineActivityExchangeItem >*
      mutable_exchangeitems();

  // repeated .CombineActivityBuyItem buyItems = 5;
  inline int buyitems_size() const;
  inline void clear_buyitems();
  static const int kBuyItemsFieldNumber = 5;
  inline const ::CombineActivityBuyItem& buyitems(int index) const;
  inline ::CombineActivityBuyItem* mutable_buyitems(int index);
  inline ::CombineActivityBuyItem* add_buyitems();
  inline const ::google::protobuf::RepeatedPtrField< ::CombineActivityBuyItem >&
      buyitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::CombineActivityBuyItem >*
      mutable_buyitems();

  // @@protoc_insertion_point(class_scope:GCCombineActivityItemUpdate)
 private:
  inline void set_has_actid();
  inline void clear_has_actid();
  inline void set_has_operate();
  inline void clear_has_operate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 actid_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::RepeatedPtrField< ::CombineActivityListItem > listitems_;
  ::google::protobuf::RepeatedPtrField< ::CombineActivityExchangeItem > exchangeitems_;
  ::google::protobuf::RepeatedPtrField< ::CombineActivityBuyItem > buyitems_;
  friend void  protobuf_AddDesc_CombineActivityMessage_2eproto();
  friend void protobuf_AssignDesc_CombineActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_CombineActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCombineActivityItemUpdate* default_instance_;
};
// ===================================================================


// ===================================================================

// CombineActivityInfo

// optional int32 actId = 1;
inline bool CombineActivityInfo::has_actid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombineActivityInfo::set_has_actid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombineActivityInfo::clear_has_actid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombineActivityInfo::clear_actid() {
  actid_ = 0;
  clear_has_actid();
}
inline ::google::protobuf::int32 CombineActivityInfo::actid() const {
  // @@protoc_insertion_point(field_get:CombineActivityInfo.actId)
  return actid_;
}
inline void CombineActivityInfo::set_actid(::google::protobuf::int32 value) {
  set_has_actid();
  actid_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityInfo.actId)
}

// optional string name = 2;
inline bool CombineActivityInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombineActivityInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombineActivityInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombineActivityInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CombineActivityInfo::name() const {
  // @@protoc_insertion_point(field_get:CombineActivityInfo.name)
  return *name_;
}
inline void CombineActivityInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CombineActivityInfo.name)
}
inline void CombineActivityInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CombineActivityInfo.name)
}
inline void CombineActivityInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CombineActivityInfo.name)
}
inline ::std::string* CombineActivityInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CombineActivityInfo.name)
  return name_;
}
inline ::std::string* CombineActivityInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CombineActivityInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CombineActivityInfo.name)
}

// optional int32 tabid = 3;
inline bool CombineActivityInfo::has_tabid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombineActivityInfo::set_has_tabid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombineActivityInfo::clear_has_tabid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombineActivityInfo::clear_tabid() {
  tabid_ = 0;
  clear_has_tabid();
}
inline ::google::protobuf::int32 CombineActivityInfo::tabid() const {
  // @@protoc_insertion_point(field_get:CombineActivityInfo.tabid)
  return tabid_;
}
inline void CombineActivityInfo::set_tabid(::google::protobuf::int32 value) {
  set_has_tabid();
  tabid_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityInfo.tabid)
}

// optional string tabimg = 4;
inline bool CombineActivityInfo::has_tabimg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CombineActivityInfo::set_has_tabimg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CombineActivityInfo::clear_has_tabimg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CombineActivityInfo::clear_tabimg() {
  if (tabimg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tabimg_->clear();
  }
  clear_has_tabimg();
}
inline const ::std::string& CombineActivityInfo::tabimg() const {
  // @@protoc_insertion_point(field_get:CombineActivityInfo.tabimg)
  return *tabimg_;
}
inline void CombineActivityInfo::set_tabimg(const ::std::string& value) {
  set_has_tabimg();
  if (tabimg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tabimg_ = new ::std::string;
  }
  tabimg_->assign(value);
  // @@protoc_insertion_point(field_set:CombineActivityInfo.tabimg)
}
inline void CombineActivityInfo::set_tabimg(const char* value) {
  set_has_tabimg();
  if (tabimg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tabimg_ = new ::std::string;
  }
  tabimg_->assign(value);
  // @@protoc_insertion_point(field_set_char:CombineActivityInfo.tabimg)
}
inline void CombineActivityInfo::set_tabimg(const char* value, size_t size) {
  set_has_tabimg();
  if (tabimg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tabimg_ = new ::std::string;
  }
  tabimg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CombineActivityInfo.tabimg)
}
inline ::std::string* CombineActivityInfo::mutable_tabimg() {
  set_has_tabimg();
  if (tabimg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tabimg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CombineActivityInfo.tabimg)
  return tabimg_;
}
inline ::std::string* CombineActivityInfo::release_tabimg() {
  clear_has_tabimg();
  if (tabimg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tabimg_;
    tabimg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CombineActivityInfo::set_allocated_tabimg(::std::string* tabimg) {
  if (tabimg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tabimg_;
  }
  if (tabimg) {
    set_has_tabimg();
    tabimg_ = tabimg;
  } else {
    clear_has_tabimg();
    tabimg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CombineActivityInfo.tabimg)
}

// optional string tabDesc = 5;
inline bool CombineActivityInfo::has_tabdesc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CombineActivityInfo::set_has_tabdesc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CombineActivityInfo::clear_has_tabdesc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CombineActivityInfo::clear_tabdesc() {
  if (tabdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tabdesc_->clear();
  }
  clear_has_tabdesc();
}
inline const ::std::string& CombineActivityInfo::tabdesc() const {
  // @@protoc_insertion_point(field_get:CombineActivityInfo.tabDesc)
  return *tabdesc_;
}
inline void CombineActivityInfo::set_tabdesc(const ::std::string& value) {
  set_has_tabdesc();
  if (tabdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tabdesc_ = new ::std::string;
  }
  tabdesc_->assign(value);
  // @@protoc_insertion_point(field_set:CombineActivityInfo.tabDesc)
}
inline void CombineActivityInfo::set_tabdesc(const char* value) {
  set_has_tabdesc();
  if (tabdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tabdesc_ = new ::std::string;
  }
  tabdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:CombineActivityInfo.tabDesc)
}
inline void CombineActivityInfo::set_tabdesc(const char* value, size_t size) {
  set_has_tabdesc();
  if (tabdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tabdesc_ = new ::std::string;
  }
  tabdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CombineActivityInfo.tabDesc)
}
inline ::std::string* CombineActivityInfo::mutable_tabdesc() {
  set_has_tabdesc();
  if (tabdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tabdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CombineActivityInfo.tabDesc)
  return tabdesc_;
}
inline ::std::string* CombineActivityInfo::release_tabdesc() {
  clear_has_tabdesc();
  if (tabdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tabdesc_;
    tabdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CombineActivityInfo::set_allocated_tabdesc(::std::string* tabdesc) {
  if (tabdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tabdesc_;
  }
  if (tabdesc) {
    set_has_tabdesc();
    tabdesc_ = tabdesc;
  } else {
    clear_has_tabdesc();
    tabdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CombineActivityInfo.tabDesc)
}

// -------------------------------------------------------------------

// CombineActivity

// optional int32 actId = 1;
inline bool CombineActivity::has_actid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombineActivity::set_has_actid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombineActivity::clear_has_actid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombineActivity::clear_actid() {
  actid_ = 0;
  clear_has_actid();
}
inline ::google::protobuf::int32 CombineActivity::actid() const {
  // @@protoc_insertion_point(field_get:CombineActivity.actId)
  return actid_;
}
inline void CombineActivity::set_actid(::google::protobuf::int32 value) {
  set_has_actid();
  actid_ = value;
  // @@protoc_insertion_point(field_set:CombineActivity.actId)
}

// repeated .CombineActivityInfo infoList = 2;
inline int CombineActivity::infolist_size() const {
  return infolist_.size();
}
inline void CombineActivity::clear_infolist() {
  infolist_.Clear();
}
inline const ::CombineActivityInfo& CombineActivity::infolist(int index) const {
  // @@protoc_insertion_point(field_get:CombineActivity.infoList)
  return infolist_.Get(index);
}
inline ::CombineActivityInfo* CombineActivity::mutable_infolist(int index) {
  // @@protoc_insertion_point(field_mutable:CombineActivity.infoList)
  return infolist_.Mutable(index);
}
inline ::CombineActivityInfo* CombineActivity::add_infolist() {
  // @@protoc_insertion_point(field_add:CombineActivity.infoList)
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CombineActivityInfo >&
CombineActivity::infolist() const {
  // @@protoc_insertion_point(field_list:CombineActivity.infoList)
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CombineActivityInfo >*
CombineActivity::mutable_infolist() {
  // @@protoc_insertion_point(field_mutable_list:CombineActivity.infoList)
  return &infolist_;
}

// -------------------------------------------------------------------

// GCCombineActivityList

// repeated .CombineActivity activityList = 1;
inline int GCCombineActivityList::activitylist_size() const {
  return activitylist_.size();
}
inline void GCCombineActivityList::clear_activitylist() {
  activitylist_.Clear();
}
inline const ::CombineActivity& GCCombineActivityList::activitylist(int index) const {
  // @@protoc_insertion_point(field_get:GCCombineActivityList.activityList)
  return activitylist_.Get(index);
}
inline ::CombineActivity* GCCombineActivityList::mutable_activitylist(int index) {
  // @@protoc_insertion_point(field_mutable:GCCombineActivityList.activityList)
  return activitylist_.Mutable(index);
}
inline ::CombineActivity* GCCombineActivityList::add_activitylist() {
  // @@protoc_insertion_point(field_add:GCCombineActivityList.activityList)
  return activitylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CombineActivity >&
GCCombineActivityList::activitylist() const {
  // @@protoc_insertion_point(field_list:GCCombineActivityList.activityList)
  return activitylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CombineActivity >*
GCCombineActivityList::mutable_activitylist() {
  // @@protoc_insertion_point(field_mutable_list:GCCombineActivityList.activityList)
  return &activitylist_;
}

// -------------------------------------------------------------------

// CombineActivityListItem

// optional int32 id = 1;
inline bool CombineActivityListItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombineActivityListItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombineActivityListItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombineActivityListItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CombineActivityListItem::id() const {
  // @@protoc_insertion_point(field_get:CombineActivityListItem.id)
  return id_;
}
inline void CombineActivityListItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityListItem.id)
}

// optional string desc = 2;
inline bool CombineActivityListItem::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombineActivityListItem::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombineActivityListItem::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombineActivityListItem::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& CombineActivityListItem::desc() const {
  // @@protoc_insertion_point(field_get:CombineActivityListItem.desc)
  return *desc_;
}
inline void CombineActivityListItem::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:CombineActivityListItem.desc)
}
inline void CombineActivityListItem::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:CombineActivityListItem.desc)
}
inline void CombineActivityListItem::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CombineActivityListItem.desc)
}
inline ::std::string* CombineActivityListItem::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CombineActivityListItem.desc)
  return desc_;
}
inline ::std::string* CombineActivityListItem::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CombineActivityListItem::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CombineActivityListItem.desc)
}

// optional string rewardInfo = 3;
inline bool CombineActivityListItem::has_rewardinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombineActivityListItem::set_has_rewardinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombineActivityListItem::clear_has_rewardinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombineActivityListItem::clear_rewardinfo() {
  if (rewardinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_->clear();
  }
  clear_has_rewardinfo();
}
inline const ::std::string& CombineActivityListItem::rewardinfo() const {
  // @@protoc_insertion_point(field_get:CombineActivityListItem.rewardInfo)
  return *rewardinfo_;
}
inline void CombineActivityListItem::set_rewardinfo(const ::std::string& value) {
  set_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_ = new ::std::string;
  }
  rewardinfo_->assign(value);
  // @@protoc_insertion_point(field_set:CombineActivityListItem.rewardInfo)
}
inline void CombineActivityListItem::set_rewardinfo(const char* value) {
  set_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_ = new ::std::string;
  }
  rewardinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:CombineActivityListItem.rewardInfo)
}
inline void CombineActivityListItem::set_rewardinfo(const char* value, size_t size) {
  set_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_ = new ::std::string;
  }
  rewardinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CombineActivityListItem.rewardInfo)
}
inline ::std::string* CombineActivityListItem::mutable_rewardinfo() {
  set_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CombineActivityListItem.rewardInfo)
  return rewardinfo_;
}
inline ::std::string* CombineActivityListItem::release_rewardinfo() {
  clear_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rewardinfo_;
    rewardinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CombineActivityListItem::set_allocated_rewardinfo(::std::string* rewardinfo) {
  if (rewardinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rewardinfo_;
  }
  if (rewardinfo) {
    set_has_rewardinfo();
    rewardinfo_ = rewardinfo;
  } else {
    clear_has_rewardinfo();
    rewardinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CombineActivityListItem.rewardInfo)
}

// optional string progressText = 4;
inline bool CombineActivityListItem::has_progresstext() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CombineActivityListItem::set_has_progresstext() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CombineActivityListItem::clear_has_progresstext() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CombineActivityListItem::clear_progresstext() {
  if (progresstext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    progresstext_->clear();
  }
  clear_has_progresstext();
}
inline const ::std::string& CombineActivityListItem::progresstext() const {
  // @@protoc_insertion_point(field_get:CombineActivityListItem.progressText)
  return *progresstext_;
}
inline void CombineActivityListItem::set_progresstext(const ::std::string& value) {
  set_has_progresstext();
  if (progresstext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    progresstext_ = new ::std::string;
  }
  progresstext_->assign(value);
  // @@protoc_insertion_point(field_set:CombineActivityListItem.progressText)
}
inline void CombineActivityListItem::set_progresstext(const char* value) {
  set_has_progresstext();
  if (progresstext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    progresstext_ = new ::std::string;
  }
  progresstext_->assign(value);
  // @@protoc_insertion_point(field_set_char:CombineActivityListItem.progressText)
}
inline void CombineActivityListItem::set_progresstext(const char* value, size_t size) {
  set_has_progresstext();
  if (progresstext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    progresstext_ = new ::std::string;
  }
  progresstext_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CombineActivityListItem.progressText)
}
inline ::std::string* CombineActivityListItem::mutable_progresstext() {
  set_has_progresstext();
  if (progresstext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    progresstext_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CombineActivityListItem.progressText)
  return progresstext_;
}
inline ::std::string* CombineActivityListItem::release_progresstext() {
  clear_has_progresstext();
  if (progresstext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = progresstext_;
    progresstext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CombineActivityListItem::set_allocated_progresstext(::std::string* progresstext) {
  if (progresstext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete progresstext_;
  }
  if (progresstext) {
    set_has_progresstext();
    progresstext_ = progresstext;
  } else {
    clear_has_progresstext();
    progresstext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CombineActivityListItem.progressText)
}

// optional int32 curValue = 5;
inline bool CombineActivityListItem::has_curvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CombineActivityListItem::set_has_curvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CombineActivityListItem::clear_has_curvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CombineActivityListItem::clear_curvalue() {
  curvalue_ = 0;
  clear_has_curvalue();
}
inline ::google::protobuf::int32 CombineActivityListItem::curvalue() const {
  // @@protoc_insertion_point(field_get:CombineActivityListItem.curValue)
  return curvalue_;
}
inline void CombineActivityListItem::set_curvalue(::google::protobuf::int32 value) {
  set_has_curvalue();
  curvalue_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityListItem.curValue)
}

// optional int32 needValue = 6;
inline bool CombineActivityListItem::has_needvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CombineActivityListItem::set_has_needvalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CombineActivityListItem::clear_has_needvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CombineActivityListItem::clear_needvalue() {
  needvalue_ = 0;
  clear_has_needvalue();
}
inline ::google::protobuf::int32 CombineActivityListItem::needvalue() const {
  // @@protoc_insertion_point(field_get:CombineActivityListItem.needValue)
  return needvalue_;
}
inline void CombineActivityListItem::set_needvalue(::google::protobuf::int32 value) {
  set_has_needvalue();
  needvalue_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityListItem.needValue)
}

// optional int32 getTimes = 7;
inline bool CombineActivityListItem::has_gettimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CombineActivityListItem::set_has_gettimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CombineActivityListItem::clear_has_gettimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CombineActivityListItem::clear_gettimes() {
  gettimes_ = 0;
  clear_has_gettimes();
}
inline ::google::protobuf::int32 CombineActivityListItem::gettimes() const {
  // @@protoc_insertion_point(field_get:CombineActivityListItem.getTimes)
  return gettimes_;
}
inline void CombineActivityListItem::set_gettimes(::google::protobuf::int32 value) {
  set_has_gettimes();
  gettimes_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityListItem.getTimes)
}

// optional int32 getTimesLimit = 8;
inline bool CombineActivityListItem::has_gettimeslimit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CombineActivityListItem::set_has_gettimeslimit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CombineActivityListItem::clear_has_gettimeslimit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CombineActivityListItem::clear_gettimeslimit() {
  gettimeslimit_ = 0;
  clear_has_gettimeslimit();
}
inline ::google::protobuf::int32 CombineActivityListItem::gettimeslimit() const {
  // @@protoc_insertion_point(field_get:CombineActivityListItem.getTimesLimit)
  return gettimeslimit_;
}
inline void CombineActivityListItem::set_gettimeslimit(::google::protobuf::int32 value) {
  set_has_gettimeslimit();
  gettimeslimit_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityListItem.getTimesLimit)
}

// -------------------------------------------------------------------

// CombineActivityExchangeItem

// optional int32 id = 1;
inline bool CombineActivityExchangeItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombineActivityExchangeItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombineActivityExchangeItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombineActivityExchangeItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CombineActivityExchangeItem::id() const {
  // @@protoc_insertion_point(field_get:CombineActivityExchangeItem.id)
  return id_;
}
inline void CombineActivityExchangeItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityExchangeItem.id)
}

// optional string desc = 2;
inline bool CombineActivityExchangeItem::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombineActivityExchangeItem::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombineActivityExchangeItem::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombineActivityExchangeItem::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& CombineActivityExchangeItem::desc() const {
  // @@protoc_insertion_point(field_get:CombineActivityExchangeItem.desc)
  return *desc_;
}
inline void CombineActivityExchangeItem::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:CombineActivityExchangeItem.desc)
}
inline void CombineActivityExchangeItem::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:CombineActivityExchangeItem.desc)
}
inline void CombineActivityExchangeItem::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CombineActivityExchangeItem.desc)
}
inline ::std::string* CombineActivityExchangeItem::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CombineActivityExchangeItem.desc)
  return desc_;
}
inline ::std::string* CombineActivityExchangeItem::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CombineActivityExchangeItem::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CombineActivityExchangeItem.desc)
}

// optional string rewardInfo = 3;
inline bool CombineActivityExchangeItem::has_rewardinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombineActivityExchangeItem::set_has_rewardinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombineActivityExchangeItem::clear_has_rewardinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombineActivityExchangeItem::clear_rewardinfo() {
  if (rewardinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_->clear();
  }
  clear_has_rewardinfo();
}
inline const ::std::string& CombineActivityExchangeItem::rewardinfo() const {
  // @@protoc_insertion_point(field_get:CombineActivityExchangeItem.rewardInfo)
  return *rewardinfo_;
}
inline void CombineActivityExchangeItem::set_rewardinfo(const ::std::string& value) {
  set_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_ = new ::std::string;
  }
  rewardinfo_->assign(value);
  // @@protoc_insertion_point(field_set:CombineActivityExchangeItem.rewardInfo)
}
inline void CombineActivityExchangeItem::set_rewardinfo(const char* value) {
  set_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_ = new ::std::string;
  }
  rewardinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:CombineActivityExchangeItem.rewardInfo)
}
inline void CombineActivityExchangeItem::set_rewardinfo(const char* value, size_t size) {
  set_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_ = new ::std::string;
  }
  rewardinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CombineActivityExchangeItem.rewardInfo)
}
inline ::std::string* CombineActivityExchangeItem::mutable_rewardinfo() {
  set_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CombineActivityExchangeItem.rewardInfo)
  return rewardinfo_;
}
inline ::std::string* CombineActivityExchangeItem::release_rewardinfo() {
  clear_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rewardinfo_;
    rewardinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CombineActivityExchangeItem::set_allocated_rewardinfo(::std::string* rewardinfo) {
  if (rewardinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rewardinfo_;
  }
  if (rewardinfo) {
    set_has_rewardinfo();
    rewardinfo_ = rewardinfo;
  } else {
    clear_has_rewardinfo();
    rewardinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CombineActivityExchangeItem.rewardInfo)
}

// optional string needItemList = 4;
inline bool CombineActivityExchangeItem::has_needitemlist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CombineActivityExchangeItem::set_has_needitemlist() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CombineActivityExchangeItem::clear_has_needitemlist() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CombineActivityExchangeItem::clear_needitemlist() {
  if (needitemlist_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    needitemlist_->clear();
  }
  clear_has_needitemlist();
}
inline const ::std::string& CombineActivityExchangeItem::needitemlist() const {
  // @@protoc_insertion_point(field_get:CombineActivityExchangeItem.needItemList)
  return *needitemlist_;
}
inline void CombineActivityExchangeItem::set_needitemlist(const ::std::string& value) {
  set_has_needitemlist();
  if (needitemlist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    needitemlist_ = new ::std::string;
  }
  needitemlist_->assign(value);
  // @@protoc_insertion_point(field_set:CombineActivityExchangeItem.needItemList)
}
inline void CombineActivityExchangeItem::set_needitemlist(const char* value) {
  set_has_needitemlist();
  if (needitemlist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    needitemlist_ = new ::std::string;
  }
  needitemlist_->assign(value);
  // @@protoc_insertion_point(field_set_char:CombineActivityExchangeItem.needItemList)
}
inline void CombineActivityExchangeItem::set_needitemlist(const char* value, size_t size) {
  set_has_needitemlist();
  if (needitemlist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    needitemlist_ = new ::std::string;
  }
  needitemlist_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CombineActivityExchangeItem.needItemList)
}
inline ::std::string* CombineActivityExchangeItem::mutable_needitemlist() {
  set_has_needitemlist();
  if (needitemlist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    needitemlist_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CombineActivityExchangeItem.needItemList)
  return needitemlist_;
}
inline ::std::string* CombineActivityExchangeItem::release_needitemlist() {
  clear_has_needitemlist();
  if (needitemlist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = needitemlist_;
    needitemlist_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CombineActivityExchangeItem::set_allocated_needitemlist(::std::string* needitemlist) {
  if (needitemlist_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete needitemlist_;
  }
  if (needitemlist) {
    set_has_needitemlist();
    needitemlist_ = needitemlist;
  } else {
    clear_has_needitemlist();
    needitemlist_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CombineActivityExchangeItem.needItemList)
}

// optional int32 getTimes = 5;
inline bool CombineActivityExchangeItem::has_gettimes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CombineActivityExchangeItem::set_has_gettimes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CombineActivityExchangeItem::clear_has_gettimes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CombineActivityExchangeItem::clear_gettimes() {
  gettimes_ = 0;
  clear_has_gettimes();
}
inline ::google::protobuf::int32 CombineActivityExchangeItem::gettimes() const {
  // @@protoc_insertion_point(field_get:CombineActivityExchangeItem.getTimes)
  return gettimes_;
}
inline void CombineActivityExchangeItem::set_gettimes(::google::protobuf::int32 value) {
  set_has_gettimes();
  gettimes_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityExchangeItem.getTimes)
}

// optional int32 getTimesLimit = 6;
inline bool CombineActivityExchangeItem::has_gettimeslimit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CombineActivityExchangeItem::set_has_gettimeslimit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CombineActivityExchangeItem::clear_has_gettimeslimit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CombineActivityExchangeItem::clear_gettimeslimit() {
  gettimeslimit_ = 0;
  clear_has_gettimeslimit();
}
inline ::google::protobuf::int32 CombineActivityExchangeItem::gettimeslimit() const {
  // @@protoc_insertion_point(field_get:CombineActivityExchangeItem.getTimesLimit)
  return gettimeslimit_;
}
inline void CombineActivityExchangeItem::set_gettimeslimit(::google::protobuf::int32 value) {
  set_has_gettimeslimit();
  gettimeslimit_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityExchangeItem.getTimesLimit)
}

// -------------------------------------------------------------------

// CombineActivityBuyItem

// optional int32 id = 1;
inline bool CombineActivityBuyItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombineActivityBuyItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombineActivityBuyItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombineActivityBuyItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CombineActivityBuyItem::id() const {
  // @@protoc_insertion_point(field_get:CombineActivityBuyItem.id)
  return id_;
}
inline void CombineActivityBuyItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityBuyItem.id)
}

// optional string desc = 2;
inline bool CombineActivityBuyItem::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombineActivityBuyItem::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombineActivityBuyItem::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombineActivityBuyItem::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& CombineActivityBuyItem::desc() const {
  // @@protoc_insertion_point(field_get:CombineActivityBuyItem.desc)
  return *desc_;
}
inline void CombineActivityBuyItem::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:CombineActivityBuyItem.desc)
}
inline void CombineActivityBuyItem::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:CombineActivityBuyItem.desc)
}
inline void CombineActivityBuyItem::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CombineActivityBuyItem.desc)
}
inline ::std::string* CombineActivityBuyItem::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CombineActivityBuyItem.desc)
  return desc_;
}
inline ::std::string* CombineActivityBuyItem::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CombineActivityBuyItem::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CombineActivityBuyItem.desc)
}

// optional string rewardInfo = 3;
inline bool CombineActivityBuyItem::has_rewardinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombineActivityBuyItem::set_has_rewardinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombineActivityBuyItem::clear_has_rewardinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombineActivityBuyItem::clear_rewardinfo() {
  if (rewardinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_->clear();
  }
  clear_has_rewardinfo();
}
inline const ::std::string& CombineActivityBuyItem::rewardinfo() const {
  // @@protoc_insertion_point(field_get:CombineActivityBuyItem.rewardInfo)
  return *rewardinfo_;
}
inline void CombineActivityBuyItem::set_rewardinfo(const ::std::string& value) {
  set_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_ = new ::std::string;
  }
  rewardinfo_->assign(value);
  // @@protoc_insertion_point(field_set:CombineActivityBuyItem.rewardInfo)
}
inline void CombineActivityBuyItem::set_rewardinfo(const char* value) {
  set_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_ = new ::std::string;
  }
  rewardinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:CombineActivityBuyItem.rewardInfo)
}
inline void CombineActivityBuyItem::set_rewardinfo(const char* value, size_t size) {
  set_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_ = new ::std::string;
  }
  rewardinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CombineActivityBuyItem.rewardInfo)
}
inline ::std::string* CombineActivityBuyItem::mutable_rewardinfo() {
  set_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewardinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CombineActivityBuyItem.rewardInfo)
  return rewardinfo_;
}
inline ::std::string* CombineActivityBuyItem::release_rewardinfo() {
  clear_has_rewardinfo();
  if (rewardinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rewardinfo_;
    rewardinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CombineActivityBuyItem::set_allocated_rewardinfo(::std::string* rewardinfo) {
  if (rewardinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rewardinfo_;
  }
  if (rewardinfo) {
    set_has_rewardinfo();
    rewardinfo_ = rewardinfo;
  } else {
    clear_has_rewardinfo();
    rewardinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CombineActivityBuyItem.rewardInfo)
}

// optional string needMoney = 4;
inline bool CombineActivityBuyItem::has_needmoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CombineActivityBuyItem::set_has_needmoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CombineActivityBuyItem::clear_has_needmoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CombineActivityBuyItem::clear_needmoney() {
  if (needmoney_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    needmoney_->clear();
  }
  clear_has_needmoney();
}
inline const ::std::string& CombineActivityBuyItem::needmoney() const {
  // @@protoc_insertion_point(field_get:CombineActivityBuyItem.needMoney)
  return *needmoney_;
}
inline void CombineActivityBuyItem::set_needmoney(const ::std::string& value) {
  set_has_needmoney();
  if (needmoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    needmoney_ = new ::std::string;
  }
  needmoney_->assign(value);
  // @@protoc_insertion_point(field_set:CombineActivityBuyItem.needMoney)
}
inline void CombineActivityBuyItem::set_needmoney(const char* value) {
  set_has_needmoney();
  if (needmoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    needmoney_ = new ::std::string;
  }
  needmoney_->assign(value);
  // @@protoc_insertion_point(field_set_char:CombineActivityBuyItem.needMoney)
}
inline void CombineActivityBuyItem::set_needmoney(const char* value, size_t size) {
  set_has_needmoney();
  if (needmoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    needmoney_ = new ::std::string;
  }
  needmoney_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CombineActivityBuyItem.needMoney)
}
inline ::std::string* CombineActivityBuyItem::mutable_needmoney() {
  set_has_needmoney();
  if (needmoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    needmoney_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CombineActivityBuyItem.needMoney)
  return needmoney_;
}
inline ::std::string* CombineActivityBuyItem::release_needmoney() {
  clear_has_needmoney();
  if (needmoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = needmoney_;
    needmoney_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CombineActivityBuyItem::set_allocated_needmoney(::std::string* needmoney) {
  if (needmoney_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete needmoney_;
  }
  if (needmoney) {
    set_has_needmoney();
    needmoney_ = needmoney;
  } else {
    clear_has_needmoney();
    needmoney_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CombineActivityBuyItem.needMoney)
}

// optional int32 getTimes = 5;
inline bool CombineActivityBuyItem::has_gettimes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CombineActivityBuyItem::set_has_gettimes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CombineActivityBuyItem::clear_has_gettimes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CombineActivityBuyItem::clear_gettimes() {
  gettimes_ = 0;
  clear_has_gettimes();
}
inline ::google::protobuf::int32 CombineActivityBuyItem::gettimes() const {
  // @@protoc_insertion_point(field_get:CombineActivityBuyItem.getTimes)
  return gettimes_;
}
inline void CombineActivityBuyItem::set_gettimes(::google::protobuf::int32 value) {
  set_has_gettimes();
  gettimes_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityBuyItem.getTimes)
}

// optional int32 getTimesLimit = 6;
inline bool CombineActivityBuyItem::has_gettimeslimit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CombineActivityBuyItem::set_has_gettimeslimit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CombineActivityBuyItem::clear_has_gettimeslimit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CombineActivityBuyItem::clear_gettimeslimit() {
  gettimeslimit_ = 0;
  clear_has_gettimeslimit();
}
inline ::google::protobuf::int32 CombineActivityBuyItem::gettimeslimit() const {
  // @@protoc_insertion_point(field_get:CombineActivityBuyItem.getTimesLimit)
  return gettimeslimit_;
}
inline void CombineActivityBuyItem::set_gettimeslimit(::google::protobuf::int32 value) {
  set_has_gettimeslimit();
  gettimeslimit_ = value;
  // @@protoc_insertion_point(field_set:CombineActivityBuyItem.getTimesLimit)
}

// -------------------------------------------------------------------

// CGGetCombineActivityReward

// optional int32 actId = 1;
inline bool CGGetCombineActivityReward::has_actid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetCombineActivityReward::set_has_actid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetCombineActivityReward::clear_has_actid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetCombineActivityReward::clear_actid() {
  actid_ = 0;
  clear_has_actid();
}
inline ::google::protobuf::int32 CGGetCombineActivityReward::actid() const {
  // @@protoc_insertion_point(field_get:CGGetCombineActivityReward.actId)
  return actid_;
}
inline void CGGetCombineActivityReward::set_actid(::google::protobuf::int32 value) {
  set_has_actid();
  actid_ = value;
  // @@protoc_insertion_point(field_set:CGGetCombineActivityReward.actId)
}

// optional int32 id = 2;
inline bool CGGetCombineActivityReward::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGGetCombineActivityReward::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGGetCombineActivityReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGGetCombineActivityReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGGetCombineActivityReward::id() const {
  // @@protoc_insertion_point(field_get:CGGetCombineActivityReward.id)
  return id_;
}
inline void CGGetCombineActivityReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGGetCombineActivityReward.id)
}

// -------------------------------------------------------------------

// GCGetCombineActivityRewardBack

// optional int32 result = 1;
inline bool GCGetCombineActivityRewardBack::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetCombineActivityRewardBack::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetCombineActivityRewardBack::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetCombineActivityRewardBack::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCGetCombineActivityRewardBack::result() const {
  // @@protoc_insertion_point(field_get:GCGetCombineActivityRewardBack.result)
  return result_;
}
inline void GCGetCombineActivityRewardBack::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCGetCombineActivityRewardBack.result)
}

// optional int32 actId = 2;
inline bool GCGetCombineActivityRewardBack::has_actid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGetCombineActivityRewardBack::set_has_actid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGetCombineActivityRewardBack::clear_has_actid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGetCombineActivityRewardBack::clear_actid() {
  actid_ = 0;
  clear_has_actid();
}
inline ::google::protobuf::int32 GCGetCombineActivityRewardBack::actid() const {
  // @@protoc_insertion_point(field_get:GCGetCombineActivityRewardBack.actId)
  return actid_;
}
inline void GCGetCombineActivityRewardBack::set_actid(::google::protobuf::int32 value) {
  set_has_actid();
  actid_ = value;
  // @@protoc_insertion_point(field_set:GCGetCombineActivityRewardBack.actId)
}

// optional int32 id = 3;
inline bool GCGetCombineActivityRewardBack::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCGetCombineActivityRewardBack::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCGetCombineActivityRewardBack::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCGetCombineActivityRewardBack::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCGetCombineActivityRewardBack::id() const {
  // @@protoc_insertion_point(field_get:GCGetCombineActivityRewardBack.id)
  return id_;
}
inline void GCGetCombineActivityRewardBack::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCGetCombineActivityRewardBack.id)
}

// optional int32 getTimes = 4;
inline bool GCGetCombineActivityRewardBack::has_gettimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCGetCombineActivityRewardBack::set_has_gettimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCGetCombineActivityRewardBack::clear_has_gettimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCGetCombineActivityRewardBack::clear_gettimes() {
  gettimes_ = 0;
  clear_has_gettimes();
}
inline ::google::protobuf::int32 GCGetCombineActivityRewardBack::gettimes() const {
  // @@protoc_insertion_point(field_get:GCGetCombineActivityRewardBack.getTimes)
  return gettimes_;
}
inline void GCGetCombineActivityRewardBack::set_gettimes(::google::protobuf::int32 value) {
  set_has_gettimes();
  gettimes_ = value;
  // @@protoc_insertion_point(field_set:GCGetCombineActivityRewardBack.getTimes)
}

// -------------------------------------------------------------------

// GCCombineActivityItemUpdate

// optional int32 actId = 1;
inline bool GCCombineActivityItemUpdate::has_actid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCCombineActivityItemUpdate::set_has_actid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCCombineActivityItemUpdate::clear_has_actid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCCombineActivityItemUpdate::clear_actid() {
  actid_ = 0;
  clear_has_actid();
}
inline ::google::protobuf::int32 GCCombineActivityItemUpdate::actid() const {
  // @@protoc_insertion_point(field_get:GCCombineActivityItemUpdate.actId)
  return actid_;
}
inline void GCCombineActivityItemUpdate::set_actid(::google::protobuf::int32 value) {
  set_has_actid();
  actid_ = value;
  // @@protoc_insertion_point(field_set:GCCombineActivityItemUpdate.actId)
}

// optional int32 operate = 2;
inline bool GCCombineActivityItemUpdate::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCCombineActivityItemUpdate::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCCombineActivityItemUpdate::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCCombineActivityItemUpdate::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 GCCombineActivityItemUpdate::operate() const {
  // @@protoc_insertion_point(field_get:GCCombineActivityItemUpdate.operate)
  return operate_;
}
inline void GCCombineActivityItemUpdate::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:GCCombineActivityItemUpdate.operate)
}

// repeated .CombineActivityListItem listItems = 3;
inline int GCCombineActivityItemUpdate::listitems_size() const {
  return listitems_.size();
}
inline void GCCombineActivityItemUpdate::clear_listitems() {
  listitems_.Clear();
}
inline const ::CombineActivityListItem& GCCombineActivityItemUpdate::listitems(int index) const {
  // @@protoc_insertion_point(field_get:GCCombineActivityItemUpdate.listItems)
  return listitems_.Get(index);
}
inline ::CombineActivityListItem* GCCombineActivityItemUpdate::mutable_listitems(int index) {
  // @@protoc_insertion_point(field_mutable:GCCombineActivityItemUpdate.listItems)
  return listitems_.Mutable(index);
}
inline ::CombineActivityListItem* GCCombineActivityItemUpdate::add_listitems() {
  // @@protoc_insertion_point(field_add:GCCombineActivityItemUpdate.listItems)
  return listitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CombineActivityListItem >&
GCCombineActivityItemUpdate::listitems() const {
  // @@protoc_insertion_point(field_list:GCCombineActivityItemUpdate.listItems)
  return listitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::CombineActivityListItem >*
GCCombineActivityItemUpdate::mutable_listitems() {
  // @@protoc_insertion_point(field_mutable_list:GCCombineActivityItemUpdate.listItems)
  return &listitems_;
}

// repeated .CombineActivityExchangeItem exchangeItems = 4;
inline int GCCombineActivityItemUpdate::exchangeitems_size() const {
  return exchangeitems_.size();
}
inline void GCCombineActivityItemUpdate::clear_exchangeitems() {
  exchangeitems_.Clear();
}
inline const ::CombineActivityExchangeItem& GCCombineActivityItemUpdate::exchangeitems(int index) const {
  // @@protoc_insertion_point(field_get:GCCombineActivityItemUpdate.exchangeItems)
  return exchangeitems_.Get(index);
}
inline ::CombineActivityExchangeItem* GCCombineActivityItemUpdate::mutable_exchangeitems(int index) {
  // @@protoc_insertion_point(field_mutable:GCCombineActivityItemUpdate.exchangeItems)
  return exchangeitems_.Mutable(index);
}
inline ::CombineActivityExchangeItem* GCCombineActivityItemUpdate::add_exchangeitems() {
  // @@protoc_insertion_point(field_add:GCCombineActivityItemUpdate.exchangeItems)
  return exchangeitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CombineActivityExchangeItem >&
GCCombineActivityItemUpdate::exchangeitems() const {
  // @@protoc_insertion_point(field_list:GCCombineActivityItemUpdate.exchangeItems)
  return exchangeitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::CombineActivityExchangeItem >*
GCCombineActivityItemUpdate::mutable_exchangeitems() {
  // @@protoc_insertion_point(field_mutable_list:GCCombineActivityItemUpdate.exchangeItems)
  return &exchangeitems_;
}

// repeated .CombineActivityBuyItem buyItems = 5;
inline int GCCombineActivityItemUpdate::buyitems_size() const {
  return buyitems_.size();
}
inline void GCCombineActivityItemUpdate::clear_buyitems() {
  buyitems_.Clear();
}
inline const ::CombineActivityBuyItem& GCCombineActivityItemUpdate::buyitems(int index) const {
  // @@protoc_insertion_point(field_get:GCCombineActivityItemUpdate.buyItems)
  return buyitems_.Get(index);
}
inline ::CombineActivityBuyItem* GCCombineActivityItemUpdate::mutable_buyitems(int index) {
  // @@protoc_insertion_point(field_mutable:GCCombineActivityItemUpdate.buyItems)
  return buyitems_.Mutable(index);
}
inline ::CombineActivityBuyItem* GCCombineActivityItemUpdate::add_buyitems() {
  // @@protoc_insertion_point(field_add:GCCombineActivityItemUpdate.buyItems)
  return buyitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CombineActivityBuyItem >&
GCCombineActivityItemUpdate::buyitems() const {
  // @@protoc_insertion_point(field_list:GCCombineActivityItemUpdate.buyItems)
  return buyitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::CombineActivityBuyItem >*
GCCombineActivityItemUpdate::mutable_buyitems() {
  // @@protoc_insertion_point(field_mutable_list:GCCombineActivityItemUpdate.buyItems)
  return &buyitems_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CombineActivityMessage_2eproto__INCLUDED
