// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonMessage.proto

#ifndef PROTOBUF_CommonMessage_2eproto__INCLUDED
#define PROTOBUF_CommonMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CommonMessage_2eproto();
void protobuf_AssignDesc_CommonMessage_2eproto();
void protobuf_ShutdownFile_CommonMessage_2eproto();

class EntryStrStr;
class EntryStringInt;
class EntryLongInt;
class EntryIntInt;
class EntryLongAry;
class MapStrStr;
class MapLongAry;
class ServerRegist;
class LoginRegistBack;
class LoginSendVilicode;
class CGReLogin;
class GCReLogin;
class SendSyncInnerPacket;
class BackSyncInnerPacket;
class ReqServerProperties;
class PropertiesInfo;
class ServerPropertiesBack;
class GCFunctionOpen;
class GCFunctionOpenList;

// ===================================================================

class EntryStrStr : public ::google::protobuf::Message {
 public:
  EntryStrStr();
  virtual ~EntryStrStr();

  EntryStrStr(const EntryStrStr& from);

  inline EntryStrStr& operator=(const EntryStrStr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EntryStrStr& default_instance();

  void Swap(EntryStrStr* other);

  // implements Message ----------------------------------------------

  EntryStrStr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EntryStrStr& from);
  void MergeFrom(const EntryStrStr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // optional string type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:EntryStrStr)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  ::std::string* value_;
  ::std::string* type_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static EntryStrStr* default_instance_;
};
// -------------------------------------------------------------------

class EntryStringInt : public ::google::protobuf::Message {
 public:
  EntryStringInt();
  virtual ~EntryStringInt();

  EntryStringInt(const EntryStringInt& from);

  inline EntryStringInt& operator=(const EntryStringInt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EntryStringInt& default_instance();

  void Swap(EntryStringInt* other);

  // implements Message ----------------------------------------------

  EntryStringInt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EntryStringInt& from);
  void MergeFrom(const EntryStringInt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EntryStringInt)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static EntryStringInt* default_instance_;
};
// -------------------------------------------------------------------

class EntryLongInt : public ::google::protobuf::Message {
 public:
  EntryLongInt();
  virtual ~EntryLongInt();

  EntryLongInt(const EntryLongInt& from);

  inline EntryLongInt& operator=(const EntryLongInt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EntryLongInt& default_instance();

  void Swap(EntryLongInt* other);

  // implements Message ----------------------------------------------

  EntryLongInt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EntryLongInt& from);
  void MergeFrom(const EntryLongInt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int64 key() const;
  inline void set_key(::google::protobuf::int64 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EntryLongInt)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 key_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static EntryLongInt* default_instance_;
};
// -------------------------------------------------------------------

class EntryIntInt : public ::google::protobuf::Message {
 public:
  EntryIntInt();
  virtual ~EntryIntInt();

  EntryIntInt(const EntryIntInt& from);

  inline EntryIntInt& operator=(const EntryIntInt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EntryIntInt& default_instance();

  void Swap(EntryIntInt* other);

  // implements Message ----------------------------------------------

  EntryIntInt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EntryIntInt& from);
  void MergeFrom(const EntryIntInt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EntryIntInt)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static EntryIntInt* default_instance_;
};
// -------------------------------------------------------------------

class EntryLongAry : public ::google::protobuf::Message {
 public:
  EntryLongAry();
  virtual ~EntryLongAry();

  EntryLongAry(const EntryLongAry& from);

  inline EntryLongAry& operator=(const EntryLongAry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EntryLongAry& default_instance();

  void Swap(EntryLongAry* other);

  // implements Message ----------------------------------------------

  EntryLongAry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EntryLongAry& from);
  void MergeFrom(const EntryLongAry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int64 key() const;
  inline void set_key(::google::protobuf::int64 value);

  // repeated string strAry = 2;
  inline int strary_size() const;
  inline void clear_strary();
  static const int kStrAryFieldNumber = 2;
  inline const ::std::string& strary(int index) const;
  inline ::std::string* mutable_strary(int index);
  inline void set_strary(int index, const ::std::string& value);
  inline void set_strary(int index, const char* value);
  inline void set_strary(int index, const char* value, size_t size);
  inline ::std::string* add_strary();
  inline void add_strary(const ::std::string& value);
  inline void add_strary(const char* value);
  inline void add_strary(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& strary() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strary();

  // @@protoc_insertion_point(class_scope:EntryLongAry)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 key_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strary_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static EntryLongAry* default_instance_;
};
// -------------------------------------------------------------------

class MapStrStr : public ::google::protobuf::Message {
 public:
  MapStrStr();
  virtual ~MapStrStr();

  MapStrStr(const MapStrStr& from);

  inline MapStrStr& operator=(const MapStrStr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapStrStr& default_instance();

  void Swap(MapStrStr* other);

  // implements Message ----------------------------------------------

  MapStrStr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapStrStr& from);
  void MergeFrom(const MapStrStr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .EntryStrStr entry = 1;
  inline int entry_size() const;
  inline void clear_entry();
  static const int kEntryFieldNumber = 1;
  inline const ::EntryStrStr& entry(int index) const;
  inline ::EntryStrStr* mutable_entry(int index);
  inline ::EntryStrStr* add_entry();
  inline const ::google::protobuf::RepeatedPtrField< ::EntryStrStr >&
      entry() const;
  inline ::google::protobuf::RepeatedPtrField< ::EntryStrStr >*
      mutable_entry();

  // @@protoc_insertion_point(class_scope:MapStrStr)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::EntryStrStr > entry_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static MapStrStr* default_instance_;
};
// -------------------------------------------------------------------

class MapLongAry : public ::google::protobuf::Message {
 public:
  MapLongAry();
  virtual ~MapLongAry();

  MapLongAry(const MapLongAry& from);

  inline MapLongAry& operator=(const MapLongAry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapLongAry& default_instance();

  void Swap(MapLongAry* other);

  // implements Message ----------------------------------------------

  MapLongAry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapLongAry& from);
  void MergeFrom(const MapLongAry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .EntryLongAry entry = 1;
  inline int entry_size() const;
  inline void clear_entry();
  static const int kEntryFieldNumber = 1;
  inline const ::EntryLongAry& entry(int index) const;
  inline ::EntryLongAry* mutable_entry(int index);
  inline ::EntryLongAry* add_entry();
  inline const ::google::protobuf::RepeatedPtrField< ::EntryLongAry >&
      entry() const;
  inline ::google::protobuf::RepeatedPtrField< ::EntryLongAry >*
      mutable_entry();

  // @@protoc_insertion_point(class_scope:MapLongAry)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::EntryLongAry > entry_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static MapLongAry* default_instance_;
};
// -------------------------------------------------------------------

class ServerRegist : public ::google::protobuf::Message {
 public:
  ServerRegist();
  virtual ~ServerRegist();

  ServerRegist(const ServerRegist& from);

  inline ServerRegist& operator=(const ServerRegist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerRegist& default_instance();

  void Swap(ServerRegist* other);

  // implements Message ----------------------------------------------

  ServerRegist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerRegist& from);
  void MergeFrom(const ServerRegist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 serverId = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // optional int32 serverType = 2;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServerTypeFieldNumber = 2;
  inline ::google::protobuf::int32 servertype() const;
  inline void set_servertype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ServerRegist)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_servertype();
  inline void clear_has_servertype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 servertype_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static ServerRegist* default_instance_;
};
// -------------------------------------------------------------------

class LoginRegistBack : public ::google::protobuf::Message {
 public:
  LoginRegistBack();
  virtual ~LoginRegistBack();

  LoginRegistBack(const LoginRegistBack& from);

  inline LoginRegistBack& operator=(const LoginRegistBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRegistBack& default_instance();

  void Swap(LoginRegistBack* other);

  // implements Message ----------------------------------------------

  LoginRegistBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRegistBack& from);
  void MergeFrom(const LoginRegistBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional int32 serverID = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 2;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // optional string serverName = 3;
  inline bool has_servername() const;
  inline void clear_servername();
  static const int kServerNameFieldNumber = 3;
  inline const ::std::string& servername() const;
  inline void set_servername(const ::std::string& value);
  inline void set_servername(const char* value);
  inline void set_servername(const char* value, size_t size);
  inline ::std::string* mutable_servername();
  inline ::std::string* release_servername();
  inline void set_allocated_servername(::std::string* servername);

  // optional int32 onlineNum = 4;
  inline bool has_onlinenum() const;
  inline void clear_onlinenum();
  static const int kOnlineNumFieldNumber = 4;
  inline ::google::protobuf::int32 onlinenum() const;
  inline void set_onlinenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginRegistBack)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_servername();
  inline void clear_has_servername();
  inline void set_has_onlinenum();
  inline void clear_has_onlinenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 serverid_;
  ::std::string* servername_;
  ::google::protobuf::int32 onlinenum_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static LoginRegistBack* default_instance_;
};
// -------------------------------------------------------------------

class LoginSendVilicode : public ::google::protobuf::Message {
 public:
  LoginSendVilicode();
  virtual ~LoginSendVilicode();

  LoginSendVilicode(const LoginSendVilicode& from);

  inline LoginSendVilicode& operator=(const LoginSendVilicode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginSendVilicode& default_instance();

  void Swap(LoginSendVilicode* other);

  // implements Message ----------------------------------------------

  LoginSendVilicode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginSendVilicode& from);
  void MergeFrom(const LoginSendVilicode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline const ::std::string& uid() const;
  inline void set_uid(const ::std::string& value);
  inline void set_uid(const char* value);
  inline void set_uid(const char* value, size_t size);
  inline ::std::string* mutable_uid();
  inline ::std::string* release_uid();
  inline void set_allocated_uid(::std::string* uid);

  // optional string viliCode = 2;
  inline bool has_vilicode() const;
  inline void clear_vilicode();
  static const int kViliCodeFieldNumber = 2;
  inline const ::std::string& vilicode() const;
  inline void set_vilicode(const ::std::string& value);
  inline void set_vilicode(const char* value);
  inline void set_vilicode(const char* value, size_t size);
  inline ::std::string* mutable_vilicode();
  inline ::std::string* release_vilicode();
  inline void set_allocated_vilicode(::std::string* vilicode);

  // optional int64 invalidTime = 3;
  inline bool has_invalidtime() const;
  inline void clear_invalidtime();
  static const int kInvalidTimeFieldNumber = 3;
  inline ::google::protobuf::int64 invalidtime() const;
  inline void set_invalidtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LoginSendVilicode)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_vilicode();
  inline void clear_has_vilicode();
  inline void set_has_invalidtime();
  inline void clear_has_invalidtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* uid_;
  ::std::string* vilicode_;
  ::google::protobuf::int64 invalidtime_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static LoginSendVilicode* default_instance_;
};
// -------------------------------------------------------------------

class CGReLogin : public ::google::protobuf::Message {
 public:
  CGReLogin();
  virtual ~CGReLogin();

  CGReLogin(const CGReLogin& from);

  inline CGReLogin& operator=(const CGReLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGReLogin& default_instance();

  void Swap(CGReLogin* other);

  // implements Message ----------------------------------------------

  CGReLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGReLogin& from);
  void MergeFrom(const CGReLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 accountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::int64 accountid() const;
  inline void set_accountid(::google::protobuf::int64 value);

  // optional string uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline const ::std::string& uid() const;
  inline void set_uid(const ::std::string& value);
  inline void set_uid(const char* value);
  inline void set_uid(const char* value, size_t size);
  inline ::std::string* mutable_uid();
  inline ::std::string* release_uid();
  inline void set_allocated_uid(::std::string* uid);

  // optional string platForm = 3;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatFormFieldNumber = 3;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  inline void set_allocated_platform(::std::string* platform);

  // optional string authKey = 4;
  inline bool has_authkey() const;
  inline void clear_authkey();
  static const int kAuthKeyFieldNumber = 4;
  inline const ::std::string& authkey() const;
  inline void set_authkey(const ::std::string& value);
  inline void set_authkey(const char* value);
  inline void set_authkey(const char* value, size_t size);
  inline ::std::string* mutable_authkey();
  inline ::std::string* release_authkey();
  inline void set_allocated_authkey(::std::string* authkey);

  // @@protoc_insertion_point(class_scope:CGReLogin)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_authkey();
  inline void clear_has_authkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 accountid_;
  ::std::string* uid_;
  ::std::string* platform_;
  ::std::string* authkey_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGReLogin* default_instance_;
};
// -------------------------------------------------------------------

class GCReLogin : public ::google::protobuf::Message {
 public:
  GCReLogin();
  virtual ~GCReLogin();

  GCReLogin(const GCReLogin& from);

  inline GCReLogin& operator=(const GCReLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCReLogin& default_instance();

  void Swap(GCReLogin* other);

  // implements Message ----------------------------------------------

  GCReLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCReLogin& from);
  void MergeFrom(const GCReLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 eniqueID = 2;
  inline bool has_eniqueid() const;
  inline void clear_eniqueid();
  static const int kEniqueIDFieldNumber = 2;
  inline ::google::protobuf::int64 eniqueid() const;
  inline void set_eniqueid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCReLogin)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_eniqueid();
  inline void clear_has_eniqueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 eniqueid_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCReLogin* default_instance_;
};
// -------------------------------------------------------------------

class SendSyncInnerPacket : public ::google::protobuf::Message {
 public:
  SendSyncInnerPacket();
  virtual ~SendSyncInnerPacket();

  SendSyncInnerPacket(const SendSyncInnerPacket& from);

  inline SendSyncInnerPacket& operator=(const SendSyncInnerPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendSyncInnerPacket& default_instance();

  void Swap(SendSyncInnerPacket* other);

  // implements Message ----------------------------------------------

  SendSyncInnerPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendSyncInnerPacket& from);
  void MergeFrom(const SendSyncInnerPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 exchagerId = 1;
  inline bool has_exchagerid() const;
  inline void clear_exchagerid();
  static const int kExchagerIdFieldNumber = 1;
  inline ::google::protobuf::int64 exchagerid() const;
  inline void set_exchagerid(::google::protobuf::int64 value);

  // optional int32 innerPacketId = 2;
  inline bool has_innerpacketid() const;
  inline void clear_innerpacketid();
  static const int kInnerPacketIdFieldNumber = 2;
  inline ::google::protobuf::int32 innerpacketid() const;
  inline void set_innerpacketid(::google::protobuf::int32 value);

  // optional bytes innerPacket = 3;
  inline bool has_innerpacket() const;
  inline void clear_innerpacket();
  static const int kInnerPacketFieldNumber = 3;
  inline const ::std::string& innerpacket() const;
  inline void set_innerpacket(const ::std::string& value);
  inline void set_innerpacket(const char* value);
  inline void set_innerpacket(const void* value, size_t size);
  inline ::std::string* mutable_innerpacket();
  inline ::std::string* release_innerpacket();
  inline void set_allocated_innerpacket(::std::string* innerpacket);

  // @@protoc_insertion_point(class_scope:SendSyncInnerPacket)
 private:
  inline void set_has_exchagerid();
  inline void clear_has_exchagerid();
  inline void set_has_innerpacketid();
  inline void clear_has_innerpacketid();
  inline void set_has_innerpacket();
  inline void clear_has_innerpacket();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 exchagerid_;
  ::std::string* innerpacket_;
  ::google::protobuf::int32 innerpacketid_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static SendSyncInnerPacket* default_instance_;
};
// -------------------------------------------------------------------

class BackSyncInnerPacket : public ::google::protobuf::Message {
 public:
  BackSyncInnerPacket();
  virtual ~BackSyncInnerPacket();

  BackSyncInnerPacket(const BackSyncInnerPacket& from);

  inline BackSyncInnerPacket& operator=(const BackSyncInnerPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BackSyncInnerPacket& default_instance();

  void Swap(BackSyncInnerPacket* other);

  // implements Message ----------------------------------------------

  BackSyncInnerPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BackSyncInnerPacket& from);
  void MergeFrom(const BackSyncInnerPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 exchagerId = 1;
  inline bool has_exchagerid() const;
  inline void clear_exchagerid();
  static const int kExchagerIdFieldNumber = 1;
  inline ::google::protobuf::int64 exchagerid() const;
  inline void set_exchagerid(::google::protobuf::int64 value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 innerPacketId = 3;
  inline bool has_innerpacketid() const;
  inline void clear_innerpacketid();
  static const int kInnerPacketIdFieldNumber = 3;
  inline ::google::protobuf::int32 innerpacketid() const;
  inline void set_innerpacketid(::google::protobuf::int32 value);

  // optional bytes innerPacket = 4;
  inline bool has_innerpacket() const;
  inline void clear_innerpacket();
  static const int kInnerPacketFieldNumber = 4;
  inline const ::std::string& innerpacket() const;
  inline void set_innerpacket(const ::std::string& value);
  inline void set_innerpacket(const char* value);
  inline void set_innerpacket(const void* value, size_t size);
  inline ::std::string* mutable_innerpacket();
  inline ::std::string* release_innerpacket();
  inline void set_allocated_innerpacket(::std::string* innerpacket);

  // @@protoc_insertion_point(class_scope:BackSyncInnerPacket)
 private:
  inline void set_has_exchagerid();
  inline void clear_has_exchagerid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_innerpacketid();
  inline void clear_has_innerpacketid();
  inline void set_has_innerpacket();
  inline void clear_has_innerpacket();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 exchagerid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 innerpacketid_;
  ::std::string* innerpacket_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static BackSyncInnerPacket* default_instance_;
};
// -------------------------------------------------------------------

class ReqServerProperties : public ::google::protobuf::Message {
 public:
  ReqServerProperties();
  virtual ~ReqServerProperties();

  ReqServerProperties(const ReqServerProperties& from);

  inline ReqServerProperties& operator=(const ReqServerProperties& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqServerProperties& default_instance();

  void Swap(ReqServerProperties* other);

  // implements Message ----------------------------------------------

  ReqServerProperties* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqServerProperties& from);
  void MergeFrom(const ReqServerProperties& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 serverType = 1;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServerTypeFieldNumber = 1;
  inline ::google::protobuf::int32 servertype() const;
  inline void set_servertype(::google::protobuf::int32 value);

  // repeated string propFileName = 2;
  inline int propfilename_size() const;
  inline void clear_propfilename();
  static const int kPropFileNameFieldNumber = 2;
  inline const ::std::string& propfilename(int index) const;
  inline ::std::string* mutable_propfilename(int index);
  inline void set_propfilename(int index, const ::std::string& value);
  inline void set_propfilename(int index, const char* value);
  inline void set_propfilename(int index, const char* value, size_t size);
  inline ::std::string* add_propfilename();
  inline void add_propfilename(const ::std::string& value);
  inline void add_propfilename(const char* value);
  inline void add_propfilename(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& propfilename() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_propfilename();

  // optional int32 needMongodb = 3;
  inline bool has_needmongodb() const;
  inline void clear_needmongodb();
  static const int kNeedMongodbFieldNumber = 3;
  inline ::google::protobuf::int32 needmongodb() const;
  inline void set_needmongodb(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ReqServerProperties)
 private:
  inline void set_has_servertype();
  inline void clear_has_servertype();
  inline void set_has_needmongodb();
  inline void clear_has_needmongodb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> propfilename_;
  ::google::protobuf::int32 servertype_;
  ::google::protobuf::int32 needmongodb_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static ReqServerProperties* default_instance_;
};
// -------------------------------------------------------------------

class PropertiesInfo : public ::google::protobuf::Message {
 public:
  PropertiesInfo();
  virtual ~PropertiesInfo();

  PropertiesInfo(const PropertiesInfo& from);

  inline PropertiesInfo& operator=(const PropertiesInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropertiesInfo& default_instance();

  void Swap(PropertiesInfo* other);

  // implements Message ----------------------------------------------

  PropertiesInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropertiesInfo& from);
  void MergeFrom(const PropertiesInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // repeated string value = 2;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value(int index) const;
  inline ::std::string* mutable_value(int index);
  inline void set_value(int index, const ::std::string& value);
  inline void set_value(int index, const char* value);
  inline void set_value(int index, const char* value, size_t size);
  inline ::std::string* add_value();
  inline void add_value(const ::std::string& value);
  inline void add_value(const char* value);
  inline void add_value(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // @@protoc_insertion_point(class_scope:PropertiesInfo)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static PropertiesInfo* default_instance_;
};
// -------------------------------------------------------------------

class ServerPropertiesBack : public ::google::protobuf::Message {
 public:
  ServerPropertiesBack();
  virtual ~ServerPropertiesBack();

  ServerPropertiesBack(const ServerPropertiesBack& from);

  inline ServerPropertiesBack& operator=(const ServerPropertiesBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerPropertiesBack& default_instance();

  void Swap(ServerPropertiesBack* other);

  // implements Message ----------------------------------------------

  ServerPropertiesBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerPropertiesBack& from);
  void MergeFrom(const ServerPropertiesBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 serverType = 1;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServerTypeFieldNumber = 1;
  inline ::google::protobuf::int32 servertype() const;
  inline void set_servertype(::google::protobuf::int32 value);

  // optional int32 serverGroupId = 2;
  inline bool has_servergroupid() const;
  inline void clear_servergroupid();
  static const int kServerGroupIdFieldNumber = 2;
  inline ::google::protobuf::int32 servergroupid() const;
  inline void set_servergroupid(::google::protobuf::int32 value);

  // repeated .PropertiesInfo propInfoArr = 3;
  inline int propinfoarr_size() const;
  inline void clear_propinfoarr();
  static const int kPropInfoArrFieldNumber = 3;
  inline const ::PropertiesInfo& propinfoarr(int index) const;
  inline ::PropertiesInfo* mutable_propinfoarr(int index);
  inline ::PropertiesInfo* add_propinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::PropertiesInfo >&
      propinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::PropertiesInfo >*
      mutable_propinfoarr();

  // @@protoc_insertion_point(class_scope:ServerPropertiesBack)
 private:
  inline void set_has_servertype();
  inline void clear_has_servertype();
  inline void set_has_servergroupid();
  inline void clear_has_servergroupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 servertype_;
  ::google::protobuf::int32 servergroupid_;
  ::google::protobuf::RepeatedPtrField< ::PropertiesInfo > propinfoarr_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static ServerPropertiesBack* default_instance_;
};
// -------------------------------------------------------------------

class GCFunctionOpen : public ::google::protobuf::Message {
 public:
  GCFunctionOpen();
  virtual ~GCFunctionOpen();

  GCFunctionOpen(const GCFunctionOpen& from);

  inline GCFunctionOpen& operator=(const GCFunctionOpen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCFunctionOpen& default_instance();

  void Swap(GCFunctionOpen* other);

  // implements Message ----------------------------------------------

  GCFunctionOpen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCFunctionOpen& from);
  void MergeFrom(const GCFunctionOpen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 functionId = 1;
  inline bool has_functionid() const;
  inline void clear_functionid();
  static const int kFunctionIdFieldNumber = 1;
  inline ::google::protobuf::int32 functionid() const;
  inline void set_functionid(::google::protobuf::int32 value);

  // optional int32 functionVal = 2;
  inline bool has_functionval() const;
  inline void clear_functionval();
  static const int kFunctionValFieldNumber = 2;
  inline ::google::protobuf::int32 functionval() const;
  inline void set_functionval(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCFunctionOpen)
 private:
  inline void set_has_functionid();
  inline void clear_has_functionid();
  inline void set_has_functionval();
  inline void clear_has_functionval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 functionid_;
  ::google::protobuf::int32 functionval_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCFunctionOpen* default_instance_;
};
// -------------------------------------------------------------------

class GCFunctionOpenList : public ::google::protobuf::Message {
 public:
  GCFunctionOpenList();
  virtual ~GCFunctionOpenList();

  GCFunctionOpenList(const GCFunctionOpenList& from);

  inline GCFunctionOpenList& operator=(const GCFunctionOpenList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCFunctionOpenList& default_instance();

  void Swap(GCFunctionOpenList* other);

  // implements Message ----------------------------------------------

  GCFunctionOpenList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCFunctionOpenList& from);
  void MergeFrom(const GCFunctionOpenList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GCFunctionOpen functions = 1;
  inline int functions_size() const;
  inline void clear_functions();
  static const int kFunctionsFieldNumber = 1;
  inline const ::GCFunctionOpen& functions(int index) const;
  inline ::GCFunctionOpen* mutable_functions(int index);
  inline ::GCFunctionOpen* add_functions();
  inline const ::google::protobuf::RepeatedPtrField< ::GCFunctionOpen >&
      functions() const;
  inline ::google::protobuf::RepeatedPtrField< ::GCFunctionOpen >*
      mutable_functions();

  // @@protoc_insertion_point(class_scope:GCFunctionOpenList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GCFunctionOpen > functions_;
  friend void  protobuf_AddDesc_CommonMessage_2eproto();
  friend void protobuf_AssignDesc_CommonMessage_2eproto();
  friend void protobuf_ShutdownFile_CommonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCFunctionOpenList* default_instance_;
};
// ===================================================================


// ===================================================================

// EntryStrStr

// optional string key = 1;
inline bool EntryStrStr::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EntryStrStr::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EntryStrStr::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EntryStrStr::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& EntryStrStr::key() const {
  // @@protoc_insertion_point(field_get:EntryStrStr.key)
  return *key_;
}
inline void EntryStrStr::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:EntryStrStr.key)
}
inline void EntryStrStr::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:EntryStrStr.key)
}
inline void EntryStrStr::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:EntryStrStr.key)
}
inline ::std::string* EntryStrStr::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:EntryStrStr.key)
  return key_;
}
inline ::std::string* EntryStrStr::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EntryStrStr::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:EntryStrStr.key)
}

// optional string value = 2;
inline bool EntryStrStr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EntryStrStr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EntryStrStr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EntryStrStr::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& EntryStrStr::value() const {
  // @@protoc_insertion_point(field_get:EntryStrStr.value)
  return *value_;
}
inline void EntryStrStr::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:EntryStrStr.value)
}
inline void EntryStrStr::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:EntryStrStr.value)
}
inline void EntryStrStr::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:EntryStrStr.value)
}
inline ::std::string* EntryStrStr::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:EntryStrStr.value)
  return value_;
}
inline ::std::string* EntryStrStr::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EntryStrStr::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:EntryStrStr.value)
}

// optional string type = 3;
inline bool EntryStrStr::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EntryStrStr::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EntryStrStr::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EntryStrStr::clear_type() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& EntryStrStr::type() const {
  // @@protoc_insertion_point(field_get:EntryStrStr.type)
  return *type_;
}
inline void EntryStrStr::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:EntryStrStr.type)
}
inline void EntryStrStr::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:EntryStrStr.type)
}
inline void EntryStrStr::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:EntryStrStr.type)
}
inline ::std::string* EntryStrStr::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:EntryStrStr.type)
  return type_;
}
inline ::std::string* EntryStrStr::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EntryStrStr::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:EntryStrStr.type)
}

// -------------------------------------------------------------------

// EntryStringInt

// optional string key = 1;
inline bool EntryStringInt::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EntryStringInt::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EntryStringInt::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EntryStringInt::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& EntryStringInt::key() const {
  // @@protoc_insertion_point(field_get:EntryStringInt.key)
  return *key_;
}
inline void EntryStringInt::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:EntryStringInt.key)
}
inline void EntryStringInt::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:EntryStringInt.key)
}
inline void EntryStringInt::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:EntryStringInt.key)
}
inline ::std::string* EntryStringInt::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:EntryStringInt.key)
  return key_;
}
inline ::std::string* EntryStringInt::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EntryStringInt::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:EntryStringInt.key)
}

// optional int32 value = 2;
inline bool EntryStringInt::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EntryStringInt::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EntryStringInt::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EntryStringInt::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 EntryStringInt::value() const {
  // @@protoc_insertion_point(field_get:EntryStringInt.value)
  return value_;
}
inline void EntryStringInt::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:EntryStringInt.value)
}

// -------------------------------------------------------------------

// EntryLongInt

// optional int64 key = 1;
inline bool EntryLongInt::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EntryLongInt::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EntryLongInt::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EntryLongInt::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::int64 EntryLongInt::key() const {
  // @@protoc_insertion_point(field_get:EntryLongInt.key)
  return key_;
}
inline void EntryLongInt::set_key(::google::protobuf::int64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:EntryLongInt.key)
}

// optional int32 value = 2;
inline bool EntryLongInt::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EntryLongInt::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EntryLongInt::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EntryLongInt::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 EntryLongInt::value() const {
  // @@protoc_insertion_point(field_get:EntryLongInt.value)
  return value_;
}
inline void EntryLongInt::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:EntryLongInt.value)
}

// -------------------------------------------------------------------

// EntryIntInt

// optional int32 key = 1;
inline bool EntryIntInt::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EntryIntInt::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EntryIntInt::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EntryIntInt::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 EntryIntInt::key() const {
  // @@protoc_insertion_point(field_get:EntryIntInt.key)
  return key_;
}
inline void EntryIntInt::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:EntryIntInt.key)
}

// optional int32 value = 2;
inline bool EntryIntInt::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EntryIntInt::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EntryIntInt::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EntryIntInt::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 EntryIntInt::value() const {
  // @@protoc_insertion_point(field_get:EntryIntInt.value)
  return value_;
}
inline void EntryIntInt::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:EntryIntInt.value)
}

// -------------------------------------------------------------------

// EntryLongAry

// optional int64 key = 1;
inline bool EntryLongAry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EntryLongAry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EntryLongAry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EntryLongAry::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::int64 EntryLongAry::key() const {
  // @@protoc_insertion_point(field_get:EntryLongAry.key)
  return key_;
}
inline void EntryLongAry::set_key(::google::protobuf::int64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:EntryLongAry.key)
}

// repeated string strAry = 2;
inline int EntryLongAry::strary_size() const {
  return strary_.size();
}
inline void EntryLongAry::clear_strary() {
  strary_.Clear();
}
inline const ::std::string& EntryLongAry::strary(int index) const {
  // @@protoc_insertion_point(field_get:EntryLongAry.strAry)
  return strary_.Get(index);
}
inline ::std::string* EntryLongAry::mutable_strary(int index) {
  // @@protoc_insertion_point(field_mutable:EntryLongAry.strAry)
  return strary_.Mutable(index);
}
inline void EntryLongAry::set_strary(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:EntryLongAry.strAry)
  strary_.Mutable(index)->assign(value);
}
inline void EntryLongAry::set_strary(int index, const char* value) {
  strary_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:EntryLongAry.strAry)
}
inline void EntryLongAry::set_strary(int index, const char* value, size_t size) {
  strary_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:EntryLongAry.strAry)
}
inline ::std::string* EntryLongAry::add_strary() {
  return strary_.Add();
}
inline void EntryLongAry::add_strary(const ::std::string& value) {
  strary_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:EntryLongAry.strAry)
}
inline void EntryLongAry::add_strary(const char* value) {
  strary_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:EntryLongAry.strAry)
}
inline void EntryLongAry::add_strary(const char* value, size_t size) {
  strary_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:EntryLongAry.strAry)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
EntryLongAry::strary() const {
  // @@protoc_insertion_point(field_list:EntryLongAry.strAry)
  return strary_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
EntryLongAry::mutable_strary() {
  // @@protoc_insertion_point(field_mutable_list:EntryLongAry.strAry)
  return &strary_;
}

// -------------------------------------------------------------------

// MapStrStr

// repeated .EntryStrStr entry = 1;
inline int MapStrStr::entry_size() const {
  return entry_.size();
}
inline void MapStrStr::clear_entry() {
  entry_.Clear();
}
inline const ::EntryStrStr& MapStrStr::entry(int index) const {
  // @@protoc_insertion_point(field_get:MapStrStr.entry)
  return entry_.Get(index);
}
inline ::EntryStrStr* MapStrStr::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:MapStrStr.entry)
  return entry_.Mutable(index);
}
inline ::EntryStrStr* MapStrStr::add_entry() {
  // @@protoc_insertion_point(field_add:MapStrStr.entry)
  return entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EntryStrStr >&
MapStrStr::entry() const {
  // @@protoc_insertion_point(field_list:MapStrStr.entry)
  return entry_;
}
inline ::google::protobuf::RepeatedPtrField< ::EntryStrStr >*
MapStrStr::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:MapStrStr.entry)
  return &entry_;
}

// -------------------------------------------------------------------

// MapLongAry

// repeated .EntryLongAry entry = 1;
inline int MapLongAry::entry_size() const {
  return entry_.size();
}
inline void MapLongAry::clear_entry() {
  entry_.Clear();
}
inline const ::EntryLongAry& MapLongAry::entry(int index) const {
  // @@protoc_insertion_point(field_get:MapLongAry.entry)
  return entry_.Get(index);
}
inline ::EntryLongAry* MapLongAry::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:MapLongAry.entry)
  return entry_.Mutable(index);
}
inline ::EntryLongAry* MapLongAry::add_entry() {
  // @@protoc_insertion_point(field_add:MapLongAry.entry)
  return entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EntryLongAry >&
MapLongAry::entry() const {
  // @@protoc_insertion_point(field_list:MapLongAry.entry)
  return entry_;
}
inline ::google::protobuf::RepeatedPtrField< ::EntryLongAry >*
MapLongAry::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:MapLongAry.entry)
  return &entry_;
}

// -------------------------------------------------------------------

// ServerRegist

// optional int32 serverId = 1;
inline bool ServerRegist::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerRegist::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerRegist::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerRegist::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 ServerRegist::serverid() const {
  // @@protoc_insertion_point(field_get:ServerRegist.serverId)
  return serverid_;
}
inline void ServerRegist::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:ServerRegist.serverId)
}

// optional int32 serverType = 2;
inline bool ServerRegist::has_servertype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerRegist::set_has_servertype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerRegist::clear_has_servertype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerRegist::clear_servertype() {
  servertype_ = 0;
  clear_has_servertype();
}
inline ::google::protobuf::int32 ServerRegist::servertype() const {
  // @@protoc_insertion_point(field_get:ServerRegist.serverType)
  return servertype_;
}
inline void ServerRegist::set_servertype(::google::protobuf::int32 value) {
  set_has_servertype();
  servertype_ = value;
  // @@protoc_insertion_point(field_set:ServerRegist.serverType)
}

// -------------------------------------------------------------------

// LoginRegistBack

// optional int32 code = 1;
inline bool LoginRegistBack::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRegistBack::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRegistBack::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRegistBack::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 LoginRegistBack::code() const {
  // @@protoc_insertion_point(field_get:LoginRegistBack.code)
  return code_;
}
inline void LoginRegistBack::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:LoginRegistBack.code)
}

// optional int32 serverID = 2;
inline bool LoginRegistBack::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRegistBack::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRegistBack::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRegistBack::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 LoginRegistBack::serverid() const {
  // @@protoc_insertion_point(field_get:LoginRegistBack.serverID)
  return serverid_;
}
inline void LoginRegistBack::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:LoginRegistBack.serverID)
}

// optional string serverName = 3;
inline bool LoginRegistBack::has_servername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRegistBack::set_has_servername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRegistBack::clear_has_servername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRegistBack::clear_servername() {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_->clear();
  }
  clear_has_servername();
}
inline const ::std::string& LoginRegistBack::servername() const {
  // @@protoc_insertion_point(field_get:LoginRegistBack.serverName)
  return *servername_;
}
inline void LoginRegistBack::set_servername(const ::std::string& value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set:LoginRegistBack.serverName)
}
inline void LoginRegistBack::set_servername(const char* value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set_char:LoginRegistBack.serverName)
}
inline void LoginRegistBack::set_servername(const char* value, size_t size) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LoginRegistBack.serverName)
}
inline ::std::string* LoginRegistBack::mutable_servername() {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LoginRegistBack.serverName)
  return servername_;
}
inline ::std::string* LoginRegistBack::release_servername() {
  clear_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = servername_;
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginRegistBack::set_allocated_servername(::std::string* servername) {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete servername_;
  }
  if (servername) {
    set_has_servername();
    servername_ = servername;
  } else {
    clear_has_servername();
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LoginRegistBack.serverName)
}

// optional int32 onlineNum = 4;
inline bool LoginRegistBack::has_onlinenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginRegistBack::set_has_onlinenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginRegistBack::clear_has_onlinenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginRegistBack::clear_onlinenum() {
  onlinenum_ = 0;
  clear_has_onlinenum();
}
inline ::google::protobuf::int32 LoginRegistBack::onlinenum() const {
  // @@protoc_insertion_point(field_get:LoginRegistBack.onlineNum)
  return onlinenum_;
}
inline void LoginRegistBack::set_onlinenum(::google::protobuf::int32 value) {
  set_has_onlinenum();
  onlinenum_ = value;
  // @@protoc_insertion_point(field_set:LoginRegistBack.onlineNum)
}

// -------------------------------------------------------------------

// LoginSendVilicode

// optional string uid = 1;
inline bool LoginSendVilicode::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginSendVilicode::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginSendVilicode::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginSendVilicode::clear_uid() {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_->clear();
  }
  clear_has_uid();
}
inline const ::std::string& LoginSendVilicode::uid() const {
  // @@protoc_insertion_point(field_get:LoginSendVilicode.uid)
  return *uid_;
}
inline void LoginSendVilicode::set_uid(const ::std::string& value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set:LoginSendVilicode.uid)
}
inline void LoginSendVilicode::set_uid(const char* value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set_char:LoginSendVilicode.uid)
}
inline void LoginSendVilicode::set_uid(const char* value, size_t size) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LoginSendVilicode.uid)
}
inline ::std::string* LoginSendVilicode::mutable_uid() {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LoginSendVilicode.uid)
  return uid_;
}
inline ::std::string* LoginSendVilicode::release_uid() {
  clear_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = uid_;
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginSendVilicode::set_allocated_uid(::std::string* uid) {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uid_;
  }
  if (uid) {
    set_has_uid();
    uid_ = uid;
  } else {
    clear_has_uid();
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LoginSendVilicode.uid)
}

// optional string viliCode = 2;
inline bool LoginSendVilicode::has_vilicode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginSendVilicode::set_has_vilicode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginSendVilicode::clear_has_vilicode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginSendVilicode::clear_vilicode() {
  if (vilicode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilicode_->clear();
  }
  clear_has_vilicode();
}
inline const ::std::string& LoginSendVilicode::vilicode() const {
  // @@protoc_insertion_point(field_get:LoginSendVilicode.viliCode)
  return *vilicode_;
}
inline void LoginSendVilicode::set_vilicode(const ::std::string& value) {
  set_has_vilicode();
  if (vilicode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilicode_ = new ::std::string;
  }
  vilicode_->assign(value);
  // @@protoc_insertion_point(field_set:LoginSendVilicode.viliCode)
}
inline void LoginSendVilicode::set_vilicode(const char* value) {
  set_has_vilicode();
  if (vilicode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilicode_ = new ::std::string;
  }
  vilicode_->assign(value);
  // @@protoc_insertion_point(field_set_char:LoginSendVilicode.viliCode)
}
inline void LoginSendVilicode::set_vilicode(const char* value, size_t size) {
  set_has_vilicode();
  if (vilicode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilicode_ = new ::std::string;
  }
  vilicode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LoginSendVilicode.viliCode)
}
inline ::std::string* LoginSendVilicode::mutable_vilicode() {
  set_has_vilicode();
  if (vilicode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilicode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LoginSendVilicode.viliCode)
  return vilicode_;
}
inline ::std::string* LoginSendVilicode::release_vilicode() {
  clear_has_vilicode();
  if (vilicode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = vilicode_;
    vilicode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginSendVilicode::set_allocated_vilicode(::std::string* vilicode) {
  if (vilicode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vilicode_;
  }
  if (vilicode) {
    set_has_vilicode();
    vilicode_ = vilicode;
  } else {
    clear_has_vilicode();
    vilicode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LoginSendVilicode.viliCode)
}

// optional int64 invalidTime = 3;
inline bool LoginSendVilicode::has_invalidtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginSendVilicode::set_has_invalidtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginSendVilicode::clear_has_invalidtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginSendVilicode::clear_invalidtime() {
  invalidtime_ = GOOGLE_LONGLONG(0);
  clear_has_invalidtime();
}
inline ::google::protobuf::int64 LoginSendVilicode::invalidtime() const {
  // @@protoc_insertion_point(field_get:LoginSendVilicode.invalidTime)
  return invalidtime_;
}
inline void LoginSendVilicode::set_invalidtime(::google::protobuf::int64 value) {
  set_has_invalidtime();
  invalidtime_ = value;
  // @@protoc_insertion_point(field_set:LoginSendVilicode.invalidTime)
}

// -------------------------------------------------------------------

// CGReLogin

// optional int64 accountID = 1;
inline bool CGReLogin::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGReLogin::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGReLogin::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGReLogin::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
  clear_has_accountid();
}
inline ::google::protobuf::int64 CGReLogin::accountid() const {
  // @@protoc_insertion_point(field_get:CGReLogin.accountID)
  return accountid_;
}
inline void CGReLogin::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:CGReLogin.accountID)
}

// optional string uid = 2;
inline bool CGReLogin::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGReLogin::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGReLogin::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGReLogin::clear_uid() {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_->clear();
  }
  clear_has_uid();
}
inline const ::std::string& CGReLogin::uid() const {
  // @@protoc_insertion_point(field_get:CGReLogin.uid)
  return *uid_;
}
inline void CGReLogin::set_uid(const ::std::string& value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set:CGReLogin.uid)
}
inline void CGReLogin::set_uid(const char* value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGReLogin.uid)
}
inline void CGReLogin::set_uid(const char* value, size_t size) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGReLogin.uid)
}
inline ::std::string* CGReLogin::mutable_uid() {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGReLogin.uid)
  return uid_;
}
inline ::std::string* CGReLogin::release_uid() {
  clear_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = uid_;
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGReLogin::set_allocated_uid(::std::string* uid) {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uid_;
  }
  if (uid) {
    set_has_uid();
    uid_ = uid;
  } else {
    clear_has_uid();
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGReLogin.uid)
}

// optional string platForm = 3;
inline bool CGReLogin::has_platform() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGReLogin::set_has_platform() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGReLogin::clear_has_platform() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGReLogin::clear_platform() {
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& CGReLogin::platform() const {
  // @@protoc_insertion_point(field_get:CGReLogin.platForm)
  return *platform_;
}
inline void CGReLogin::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
  // @@protoc_insertion_point(field_set:CGReLogin.platForm)
}
inline void CGReLogin::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGReLogin.platForm)
}
inline void CGReLogin::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGReLogin.platForm)
}
inline ::std::string* CGReLogin::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGReLogin.platForm)
  return platform_;
}
inline ::std::string* CGReLogin::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGReLogin::set_allocated_platform(::std::string* platform) {
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platform_;
  }
  if (platform) {
    set_has_platform();
    platform_ = platform;
  } else {
    clear_has_platform();
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGReLogin.platForm)
}

// optional string authKey = 4;
inline bool CGReLogin::has_authkey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGReLogin::set_has_authkey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGReLogin::clear_has_authkey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGReLogin::clear_authkey() {
  if (authkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    authkey_->clear();
  }
  clear_has_authkey();
}
inline const ::std::string& CGReLogin::authkey() const {
  // @@protoc_insertion_point(field_get:CGReLogin.authKey)
  return *authkey_;
}
inline void CGReLogin::set_authkey(const ::std::string& value) {
  set_has_authkey();
  if (authkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    authkey_ = new ::std::string;
  }
  authkey_->assign(value);
  // @@protoc_insertion_point(field_set:CGReLogin.authKey)
}
inline void CGReLogin::set_authkey(const char* value) {
  set_has_authkey();
  if (authkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    authkey_ = new ::std::string;
  }
  authkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGReLogin.authKey)
}
inline void CGReLogin::set_authkey(const char* value, size_t size) {
  set_has_authkey();
  if (authkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    authkey_ = new ::std::string;
  }
  authkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGReLogin.authKey)
}
inline ::std::string* CGReLogin::mutable_authkey() {
  set_has_authkey();
  if (authkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    authkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGReLogin.authKey)
  return authkey_;
}
inline ::std::string* CGReLogin::release_authkey() {
  clear_has_authkey();
  if (authkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = authkey_;
    authkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGReLogin::set_allocated_authkey(::std::string* authkey) {
  if (authkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete authkey_;
  }
  if (authkey) {
    set_has_authkey();
    authkey_ = authkey;
  } else {
    clear_has_authkey();
    authkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGReLogin.authKey)
}

// -------------------------------------------------------------------

// GCReLogin

// optional int32 result = 1;
inline bool GCReLogin::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCReLogin::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCReLogin::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCReLogin::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCReLogin::result() const {
  // @@protoc_insertion_point(field_get:GCReLogin.result)
  return result_;
}
inline void GCReLogin::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCReLogin.result)
}

// optional int64 eniqueID = 2;
inline bool GCReLogin::has_eniqueid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCReLogin::set_has_eniqueid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCReLogin::clear_has_eniqueid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCReLogin::clear_eniqueid() {
  eniqueid_ = GOOGLE_LONGLONG(0);
  clear_has_eniqueid();
}
inline ::google::protobuf::int64 GCReLogin::eniqueid() const {
  // @@protoc_insertion_point(field_get:GCReLogin.eniqueID)
  return eniqueid_;
}
inline void GCReLogin::set_eniqueid(::google::protobuf::int64 value) {
  set_has_eniqueid();
  eniqueid_ = value;
  // @@protoc_insertion_point(field_set:GCReLogin.eniqueID)
}

// -------------------------------------------------------------------

// SendSyncInnerPacket

// optional int64 exchagerId = 1;
inline bool SendSyncInnerPacket::has_exchagerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendSyncInnerPacket::set_has_exchagerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendSyncInnerPacket::clear_has_exchagerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendSyncInnerPacket::clear_exchagerid() {
  exchagerid_ = GOOGLE_LONGLONG(0);
  clear_has_exchagerid();
}
inline ::google::protobuf::int64 SendSyncInnerPacket::exchagerid() const {
  // @@protoc_insertion_point(field_get:SendSyncInnerPacket.exchagerId)
  return exchagerid_;
}
inline void SendSyncInnerPacket::set_exchagerid(::google::protobuf::int64 value) {
  set_has_exchagerid();
  exchagerid_ = value;
  // @@protoc_insertion_point(field_set:SendSyncInnerPacket.exchagerId)
}

// optional int32 innerPacketId = 2;
inline bool SendSyncInnerPacket::has_innerpacketid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendSyncInnerPacket::set_has_innerpacketid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendSyncInnerPacket::clear_has_innerpacketid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendSyncInnerPacket::clear_innerpacketid() {
  innerpacketid_ = 0;
  clear_has_innerpacketid();
}
inline ::google::protobuf::int32 SendSyncInnerPacket::innerpacketid() const {
  // @@protoc_insertion_point(field_get:SendSyncInnerPacket.innerPacketId)
  return innerpacketid_;
}
inline void SendSyncInnerPacket::set_innerpacketid(::google::protobuf::int32 value) {
  set_has_innerpacketid();
  innerpacketid_ = value;
  // @@protoc_insertion_point(field_set:SendSyncInnerPacket.innerPacketId)
}

// optional bytes innerPacket = 3;
inline bool SendSyncInnerPacket::has_innerpacket() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendSyncInnerPacket::set_has_innerpacket() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendSyncInnerPacket::clear_has_innerpacket() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendSyncInnerPacket::clear_innerpacket() {
  if (innerpacket_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_->clear();
  }
  clear_has_innerpacket();
}
inline const ::std::string& SendSyncInnerPacket::innerpacket() const {
  // @@protoc_insertion_point(field_get:SendSyncInnerPacket.innerPacket)
  return *innerpacket_;
}
inline void SendSyncInnerPacket::set_innerpacket(const ::std::string& value) {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  innerpacket_->assign(value);
  // @@protoc_insertion_point(field_set:SendSyncInnerPacket.innerPacket)
}
inline void SendSyncInnerPacket::set_innerpacket(const char* value) {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  innerpacket_->assign(value);
  // @@protoc_insertion_point(field_set_char:SendSyncInnerPacket.innerPacket)
}
inline void SendSyncInnerPacket::set_innerpacket(const void* value, size_t size) {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  innerpacket_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SendSyncInnerPacket.innerPacket)
}
inline ::std::string* SendSyncInnerPacket::mutable_innerpacket() {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SendSyncInnerPacket.innerPacket)
  return innerpacket_;
}
inline ::std::string* SendSyncInnerPacket::release_innerpacket() {
  clear_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = innerpacket_;
    innerpacket_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SendSyncInnerPacket::set_allocated_innerpacket(::std::string* innerpacket) {
  if (innerpacket_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete innerpacket_;
  }
  if (innerpacket) {
    set_has_innerpacket();
    innerpacket_ = innerpacket;
  } else {
    clear_has_innerpacket();
    innerpacket_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SendSyncInnerPacket.innerPacket)
}

// -------------------------------------------------------------------

// BackSyncInnerPacket

// optional int64 exchagerId = 1;
inline bool BackSyncInnerPacket::has_exchagerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BackSyncInnerPacket::set_has_exchagerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BackSyncInnerPacket::clear_has_exchagerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BackSyncInnerPacket::clear_exchagerid() {
  exchagerid_ = GOOGLE_LONGLONG(0);
  clear_has_exchagerid();
}
inline ::google::protobuf::int64 BackSyncInnerPacket::exchagerid() const {
  // @@protoc_insertion_point(field_get:BackSyncInnerPacket.exchagerId)
  return exchagerid_;
}
inline void BackSyncInnerPacket::set_exchagerid(::google::protobuf::int64 value) {
  set_has_exchagerid();
  exchagerid_ = value;
  // @@protoc_insertion_point(field_set:BackSyncInnerPacket.exchagerId)
}

// optional int32 result = 2;
inline bool BackSyncInnerPacket::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BackSyncInnerPacket::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BackSyncInnerPacket::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BackSyncInnerPacket::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 BackSyncInnerPacket::result() const {
  // @@protoc_insertion_point(field_get:BackSyncInnerPacket.result)
  return result_;
}
inline void BackSyncInnerPacket::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BackSyncInnerPacket.result)
}

// optional int32 innerPacketId = 3;
inline bool BackSyncInnerPacket::has_innerpacketid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BackSyncInnerPacket::set_has_innerpacketid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BackSyncInnerPacket::clear_has_innerpacketid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BackSyncInnerPacket::clear_innerpacketid() {
  innerpacketid_ = 0;
  clear_has_innerpacketid();
}
inline ::google::protobuf::int32 BackSyncInnerPacket::innerpacketid() const {
  // @@protoc_insertion_point(field_get:BackSyncInnerPacket.innerPacketId)
  return innerpacketid_;
}
inline void BackSyncInnerPacket::set_innerpacketid(::google::protobuf::int32 value) {
  set_has_innerpacketid();
  innerpacketid_ = value;
  // @@protoc_insertion_point(field_set:BackSyncInnerPacket.innerPacketId)
}

// optional bytes innerPacket = 4;
inline bool BackSyncInnerPacket::has_innerpacket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BackSyncInnerPacket::set_has_innerpacket() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BackSyncInnerPacket::clear_has_innerpacket() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BackSyncInnerPacket::clear_innerpacket() {
  if (innerpacket_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_->clear();
  }
  clear_has_innerpacket();
}
inline const ::std::string& BackSyncInnerPacket::innerpacket() const {
  // @@protoc_insertion_point(field_get:BackSyncInnerPacket.innerPacket)
  return *innerpacket_;
}
inline void BackSyncInnerPacket::set_innerpacket(const ::std::string& value) {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  innerpacket_->assign(value);
  // @@protoc_insertion_point(field_set:BackSyncInnerPacket.innerPacket)
}
inline void BackSyncInnerPacket::set_innerpacket(const char* value) {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  innerpacket_->assign(value);
  // @@protoc_insertion_point(field_set_char:BackSyncInnerPacket.innerPacket)
}
inline void BackSyncInnerPacket::set_innerpacket(const void* value, size_t size) {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  innerpacket_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BackSyncInnerPacket.innerPacket)
}
inline ::std::string* BackSyncInnerPacket::mutable_innerpacket() {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BackSyncInnerPacket.innerPacket)
  return innerpacket_;
}
inline ::std::string* BackSyncInnerPacket::release_innerpacket() {
  clear_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = innerpacket_;
    innerpacket_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BackSyncInnerPacket::set_allocated_innerpacket(::std::string* innerpacket) {
  if (innerpacket_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete innerpacket_;
  }
  if (innerpacket) {
    set_has_innerpacket();
    innerpacket_ = innerpacket;
  } else {
    clear_has_innerpacket();
    innerpacket_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BackSyncInnerPacket.innerPacket)
}

// -------------------------------------------------------------------

// ReqServerProperties

// optional int32 serverType = 1;
inline bool ReqServerProperties::has_servertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqServerProperties::set_has_servertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqServerProperties::clear_has_servertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqServerProperties::clear_servertype() {
  servertype_ = 0;
  clear_has_servertype();
}
inline ::google::protobuf::int32 ReqServerProperties::servertype() const {
  // @@protoc_insertion_point(field_get:ReqServerProperties.serverType)
  return servertype_;
}
inline void ReqServerProperties::set_servertype(::google::protobuf::int32 value) {
  set_has_servertype();
  servertype_ = value;
  // @@protoc_insertion_point(field_set:ReqServerProperties.serverType)
}

// repeated string propFileName = 2;
inline int ReqServerProperties::propfilename_size() const {
  return propfilename_.size();
}
inline void ReqServerProperties::clear_propfilename() {
  propfilename_.Clear();
}
inline const ::std::string& ReqServerProperties::propfilename(int index) const {
  // @@protoc_insertion_point(field_get:ReqServerProperties.propFileName)
  return propfilename_.Get(index);
}
inline ::std::string* ReqServerProperties::mutable_propfilename(int index) {
  // @@protoc_insertion_point(field_mutable:ReqServerProperties.propFileName)
  return propfilename_.Mutable(index);
}
inline void ReqServerProperties::set_propfilename(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ReqServerProperties.propFileName)
  propfilename_.Mutable(index)->assign(value);
}
inline void ReqServerProperties::set_propfilename(int index, const char* value) {
  propfilename_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ReqServerProperties.propFileName)
}
inline void ReqServerProperties::set_propfilename(int index, const char* value, size_t size) {
  propfilename_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ReqServerProperties.propFileName)
}
inline ::std::string* ReqServerProperties::add_propfilename() {
  return propfilename_.Add();
}
inline void ReqServerProperties::add_propfilename(const ::std::string& value) {
  propfilename_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ReqServerProperties.propFileName)
}
inline void ReqServerProperties::add_propfilename(const char* value) {
  propfilename_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ReqServerProperties.propFileName)
}
inline void ReqServerProperties::add_propfilename(const char* value, size_t size) {
  propfilename_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ReqServerProperties.propFileName)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReqServerProperties::propfilename() const {
  // @@protoc_insertion_point(field_list:ReqServerProperties.propFileName)
  return propfilename_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ReqServerProperties::mutable_propfilename() {
  // @@protoc_insertion_point(field_mutable_list:ReqServerProperties.propFileName)
  return &propfilename_;
}

// optional int32 needMongodb = 3;
inline bool ReqServerProperties::has_needmongodb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqServerProperties::set_has_needmongodb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqServerProperties::clear_has_needmongodb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqServerProperties::clear_needmongodb() {
  needmongodb_ = 0;
  clear_has_needmongodb();
}
inline ::google::protobuf::int32 ReqServerProperties::needmongodb() const {
  // @@protoc_insertion_point(field_get:ReqServerProperties.needMongodb)
  return needmongodb_;
}
inline void ReqServerProperties::set_needmongodb(::google::protobuf::int32 value) {
  set_has_needmongodb();
  needmongodb_ = value;
  // @@protoc_insertion_point(field_set:ReqServerProperties.needMongodb)
}

// -------------------------------------------------------------------

// PropertiesInfo

// optional string key = 1;
inline bool PropertiesInfo::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropertiesInfo::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropertiesInfo::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropertiesInfo::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& PropertiesInfo::key() const {
  // @@protoc_insertion_point(field_get:PropertiesInfo.key)
  return *key_;
}
inline void PropertiesInfo::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:PropertiesInfo.key)
}
inline void PropertiesInfo::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:PropertiesInfo.key)
}
inline void PropertiesInfo::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PropertiesInfo.key)
}
inline ::std::string* PropertiesInfo::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PropertiesInfo.key)
  return key_;
}
inline ::std::string* PropertiesInfo::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PropertiesInfo::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PropertiesInfo.key)
}

// repeated string value = 2;
inline int PropertiesInfo::value_size() const {
  return value_.size();
}
inline void PropertiesInfo::clear_value() {
  value_.Clear();
}
inline const ::std::string& PropertiesInfo::value(int index) const {
  // @@protoc_insertion_point(field_get:PropertiesInfo.value)
  return value_.Get(index);
}
inline ::std::string* PropertiesInfo::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:PropertiesInfo.value)
  return value_.Mutable(index);
}
inline void PropertiesInfo::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PropertiesInfo.value)
  value_.Mutable(index)->assign(value);
}
inline void PropertiesInfo::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PropertiesInfo.value)
}
inline void PropertiesInfo::set_value(int index, const char* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PropertiesInfo.value)
}
inline ::std::string* PropertiesInfo::add_value() {
  return value_.Add();
}
inline void PropertiesInfo::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PropertiesInfo.value)
}
inline void PropertiesInfo::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PropertiesInfo.value)
}
inline void PropertiesInfo::add_value(const char* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PropertiesInfo.value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PropertiesInfo::value() const {
  // @@protoc_insertion_point(field_list:PropertiesInfo.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PropertiesInfo::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PropertiesInfo.value)
  return &value_;
}

// -------------------------------------------------------------------

// ServerPropertiesBack

// optional int32 serverType = 1;
inline bool ServerPropertiesBack::has_servertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerPropertiesBack::set_has_servertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerPropertiesBack::clear_has_servertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerPropertiesBack::clear_servertype() {
  servertype_ = 0;
  clear_has_servertype();
}
inline ::google::protobuf::int32 ServerPropertiesBack::servertype() const {
  // @@protoc_insertion_point(field_get:ServerPropertiesBack.serverType)
  return servertype_;
}
inline void ServerPropertiesBack::set_servertype(::google::protobuf::int32 value) {
  set_has_servertype();
  servertype_ = value;
  // @@protoc_insertion_point(field_set:ServerPropertiesBack.serverType)
}

// optional int32 serverGroupId = 2;
inline bool ServerPropertiesBack::has_servergroupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerPropertiesBack::set_has_servergroupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerPropertiesBack::clear_has_servergroupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerPropertiesBack::clear_servergroupid() {
  servergroupid_ = 0;
  clear_has_servergroupid();
}
inline ::google::protobuf::int32 ServerPropertiesBack::servergroupid() const {
  // @@protoc_insertion_point(field_get:ServerPropertiesBack.serverGroupId)
  return servergroupid_;
}
inline void ServerPropertiesBack::set_servergroupid(::google::protobuf::int32 value) {
  set_has_servergroupid();
  servergroupid_ = value;
  // @@protoc_insertion_point(field_set:ServerPropertiesBack.serverGroupId)
}

// repeated .PropertiesInfo propInfoArr = 3;
inline int ServerPropertiesBack::propinfoarr_size() const {
  return propinfoarr_.size();
}
inline void ServerPropertiesBack::clear_propinfoarr() {
  propinfoarr_.Clear();
}
inline const ::PropertiesInfo& ServerPropertiesBack::propinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:ServerPropertiesBack.propInfoArr)
  return propinfoarr_.Get(index);
}
inline ::PropertiesInfo* ServerPropertiesBack::mutable_propinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:ServerPropertiesBack.propInfoArr)
  return propinfoarr_.Mutable(index);
}
inline ::PropertiesInfo* ServerPropertiesBack::add_propinfoarr() {
  // @@protoc_insertion_point(field_add:ServerPropertiesBack.propInfoArr)
  return propinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PropertiesInfo >&
ServerPropertiesBack::propinfoarr() const {
  // @@protoc_insertion_point(field_list:ServerPropertiesBack.propInfoArr)
  return propinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::PropertiesInfo >*
ServerPropertiesBack::mutable_propinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:ServerPropertiesBack.propInfoArr)
  return &propinfoarr_;
}

// -------------------------------------------------------------------

// GCFunctionOpen

// optional int32 functionId = 1;
inline bool GCFunctionOpen::has_functionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCFunctionOpen::set_has_functionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCFunctionOpen::clear_has_functionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCFunctionOpen::clear_functionid() {
  functionid_ = 0;
  clear_has_functionid();
}
inline ::google::protobuf::int32 GCFunctionOpen::functionid() const {
  // @@protoc_insertion_point(field_get:GCFunctionOpen.functionId)
  return functionid_;
}
inline void GCFunctionOpen::set_functionid(::google::protobuf::int32 value) {
  set_has_functionid();
  functionid_ = value;
  // @@protoc_insertion_point(field_set:GCFunctionOpen.functionId)
}

// optional int32 functionVal = 2;
inline bool GCFunctionOpen::has_functionval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCFunctionOpen::set_has_functionval() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCFunctionOpen::clear_has_functionval() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCFunctionOpen::clear_functionval() {
  functionval_ = 0;
  clear_has_functionval();
}
inline ::google::protobuf::int32 GCFunctionOpen::functionval() const {
  // @@protoc_insertion_point(field_get:GCFunctionOpen.functionVal)
  return functionval_;
}
inline void GCFunctionOpen::set_functionval(::google::protobuf::int32 value) {
  set_has_functionval();
  functionval_ = value;
  // @@protoc_insertion_point(field_set:GCFunctionOpen.functionVal)
}

// -------------------------------------------------------------------

// GCFunctionOpenList

// repeated .GCFunctionOpen functions = 1;
inline int GCFunctionOpenList::functions_size() const {
  return functions_.size();
}
inline void GCFunctionOpenList::clear_functions() {
  functions_.Clear();
}
inline const ::GCFunctionOpen& GCFunctionOpenList::functions(int index) const {
  // @@protoc_insertion_point(field_get:GCFunctionOpenList.functions)
  return functions_.Get(index);
}
inline ::GCFunctionOpen* GCFunctionOpenList::mutable_functions(int index) {
  // @@protoc_insertion_point(field_mutable:GCFunctionOpenList.functions)
  return functions_.Mutable(index);
}
inline ::GCFunctionOpen* GCFunctionOpenList::add_functions() {
  // @@protoc_insertion_point(field_add:GCFunctionOpenList.functions)
  return functions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GCFunctionOpen >&
GCFunctionOpenList::functions() const {
  // @@protoc_insertion_point(field_list:GCFunctionOpenList.functions)
  return functions_;
}
inline ::google::protobuf::RepeatedPtrField< ::GCFunctionOpen >*
GCFunctionOpenList::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:GCFunctionOpenList.functions)
  return &functions_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CommonMessage_2eproto__INCLUDED
