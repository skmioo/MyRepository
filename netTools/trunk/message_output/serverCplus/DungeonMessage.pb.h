// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DungeonMessage.proto

#ifndef PROTOBUF_DungeonMessage_2eproto__INCLUDED
#define PROTOBUF_DungeonMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DungeonMessage_2eproto();
void protobuf_AssignDesc_DungeonMessage_2eproto();
void protobuf_ShutdownFile_DungeonMessage_2eproto();

class CGEnterInstancing;
class GCEnterInstancing;
class GCAllMenusDatas;
class GCMenusData;
class GCFastestPlayer;
class GCInstancingData;
class DungeonItemsRwd;
class GCDungeonEnd;
class CGChangeSchedule;
class GCChangeSchedule;
class CGChangeGuideId;
class GCInstancingStart;
class GCAskEnterDungeon;
class CGResponseEnterDungeon;
class CGExitDungeon;
class CGBuyDungeonNum;
class CGSweepDungeon;
class GCSweepDungeon;
class GCSweepTower;
class GCInstancingRwdSchedule;
class GCInstancingErrorMessage;
class BossData;
class ChapterBossData;
class CGGetBossView;
class GCGetBossView;
class GCChangeBossStar;
class CGPkBoss;
class BossRank;
class CGGetBossRanks;
class GCGetBossRanks;
class GCPKBossResult;
class CGGetPackRwd;
class CGExitPersonBoss;
class BossOpenSts;
class GCPersonBossOpenSts;
class GCClearBossData;

// ===================================================================

class CGEnterInstancing : public ::google::protobuf::Message {
 public:
  CGEnterInstancing();
  virtual ~CGEnterInstancing();

  CGEnterInstancing(const CGEnterInstancing& from);

  inline CGEnterInstancing& operator=(const CGEnterInstancing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGEnterInstancing& default_instance();

  void Swap(CGEnterInstancing* other);

  // implements Message ----------------------------------------------

  CGEnterInstancing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGEnterInstancing& from);
  void MergeFrom(const CGEnterInstancing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGEnterInstancing)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGEnterInstancing* default_instance_;
};
// -------------------------------------------------------------------

class GCEnterInstancing : public ::google::protobuf::Message {
 public:
  GCEnterInstancing();
  virtual ~GCEnterInstancing();

  GCEnterInstancing(const GCEnterInstancing& from);

  inline GCEnterInstancing& operator=(const GCEnterInstancing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCEnterInstancing& default_instance();

  void Swap(GCEnterInstancing* other);

  // implements Message ----------------------------------------------

  GCEnterInstancing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCEnterInstancing& from);
  void MergeFrom(const GCEnterInstancing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 endTime = 2;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 2;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // repeated int32 guideIds = 3;
  inline int guideids_size() const;
  inline void clear_guideids();
  static const int kGuideIdsFieldNumber = 3;
  inline ::google::protobuf::int32 guideids(int index) const;
  inline void set_guideids(int index, ::google::protobuf::int32 value);
  inline void add_guideids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guideids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guideids();

  // @@protoc_insertion_point(class_scope:GCEnterInstancing)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guideids_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCEnterInstancing* default_instance_;
};
// -------------------------------------------------------------------

class GCAllMenusDatas : public ::google::protobuf::Message {
 public:
  GCAllMenusDatas();
  virtual ~GCAllMenusDatas();

  GCAllMenusDatas(const GCAllMenusDatas& from);

  inline GCAllMenusDatas& operator=(const GCAllMenusDatas& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCAllMenusDatas& default_instance();

  void Swap(GCAllMenusDatas* other);

  // implements Message ----------------------------------------------

  GCAllMenusDatas* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCAllMenusDatas& from);
  void MergeFrom(const GCAllMenusDatas& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GCMenusData menus = 1;
  inline int menus_size() const;
  inline void clear_menus();
  static const int kMenusFieldNumber = 1;
  inline const ::GCMenusData& menus(int index) const;
  inline ::GCMenusData* mutable_menus(int index);
  inline ::GCMenusData* add_menus();
  inline const ::google::protobuf::RepeatedPtrField< ::GCMenusData >&
      menus() const;
  inline ::google::protobuf::RepeatedPtrField< ::GCMenusData >*
      mutable_menus();

  // @@protoc_insertion_point(class_scope:GCAllMenusDatas)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GCMenusData > menus_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCAllMenusDatas* default_instance_;
};
// -------------------------------------------------------------------

class GCMenusData : public ::google::protobuf::Message {
 public:
  GCMenusData();
  virtual ~GCMenusData();

  GCMenusData(const GCMenusData& from);

  inline GCMenusData& operator=(const GCMenusData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCMenusData& default_instance();

  void Swap(GCMenusData* other);

  // implements Message ----------------------------------------------

  GCMenusData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCMenusData& from);
  void MergeFrom(const GCMenusData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 current = 2;
  inline bool has_current() const;
  inline void clear_current();
  static const int kCurrentFieldNumber = 2;
  inline ::google::protobuf::int32 current() const;
  inline void set_current(::google::protobuf::int32 value);

  // optional int32 buyNum = 3;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuyNumFieldNumber = 3;
  inline ::google::protobuf::int32 buynum() const;
  inline void set_buynum(::google::protobuf::int32 value);

  // repeated .GCInstancingData instancingDatas = 4;
  inline int instancingdatas_size() const;
  inline void clear_instancingdatas();
  static const int kInstancingDatasFieldNumber = 4;
  inline const ::GCInstancingData& instancingdatas(int index) const;
  inline ::GCInstancingData* mutable_instancingdatas(int index);
  inline ::GCInstancingData* add_instancingdatas();
  inline const ::google::protobuf::RepeatedPtrField< ::GCInstancingData >&
      instancingdatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::GCInstancingData >*
      mutable_instancingdatas();

  // repeated .GCFastestPlayer players = 5;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 5;
  inline const ::GCFastestPlayer& players(int index) const;
  inline ::GCFastestPlayer* mutable_players(int index);
  inline ::GCFastestPlayer* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::GCFastestPlayer >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::GCFastestPlayer >*
      mutable_players();

  // @@protoc_insertion_point(class_scope:GCMenusData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_current();
  inline void clear_has_current();
  inline void set_has_buynum();
  inline void clear_has_buynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 current_;
  ::google::protobuf::RepeatedPtrField< ::GCInstancingData > instancingdatas_;
  ::google::protobuf::RepeatedPtrField< ::GCFastestPlayer > players_;
  ::google::protobuf::int32 buynum_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCMenusData* default_instance_;
};
// -------------------------------------------------------------------

class GCFastestPlayer : public ::google::protobuf::Message {
 public:
  GCFastestPlayer();
  virtual ~GCFastestPlayer();

  GCFastestPlayer(const GCFastestPlayer& from);

  inline GCFastestPlayer& operator=(const GCFastestPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCFastestPlayer& default_instance();

  void Swap(GCFastestPlayer* other);

  // implements Message ----------------------------------------------

  GCFastestPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCFastestPlayer& from);
  void MergeFrom(const GCFastestPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 passTime = 2;
  inline bool has_passtime() const;
  inline void clear_passtime();
  static const int kPassTimeFieldNumber = 2;
  inline ::google::protobuf::int32 passtime() const;
  inline void set_passtime(::google::protobuf::int32 value);

  // optional string passTimeName = 3;
  inline bool has_passtimename() const;
  inline void clear_passtimename();
  static const int kPassTimeNameFieldNumber = 3;
  inline const ::std::string& passtimename() const;
  inline void set_passtimename(const ::std::string& value);
  inline void set_passtimename(const char* value);
  inline void set_passtimename(const char* value, size_t size);
  inline ::std::string* mutable_passtimename();
  inline ::std::string* release_passtimename();
  inline void set_allocated_passtimename(::std::string* passtimename);

  // @@protoc_insertion_point(class_scope:GCFastestPlayer)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_passtime();
  inline void clear_has_passtime();
  inline void set_has_passtimename();
  inline void clear_has_passtimename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 passtime_;
  ::std::string* passtimename_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCFastestPlayer* default_instance_;
};
// -------------------------------------------------------------------

class GCInstancingData : public ::google::protobuf::Message {
 public:
  GCInstancingData();
  virtual ~GCInstancingData();

  GCInstancingData(const GCInstancingData& from);

  inline GCInstancingData& operator=(const GCInstancingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCInstancingData& default_instance();

  void Swap(GCInstancingData* other);

  // implements Message ----------------------------------------------

  GCInstancingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCInstancingData& from);
  void MergeFrom(const GCInstancingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 currNum = 2;
  inline bool has_currnum() const;
  inline void clear_currnum();
  static const int kCurrNumFieldNumber = 2;
  inline ::google::protobuf::int32 currnum() const;
  inline void set_currnum(::google::protobuf::int32 value);

  // optional int32 selfPassTime = 3;
  inline bool has_selfpasstime() const;
  inline void clear_selfpasstime();
  static const int kSelfPassTimeFieldNumber = 3;
  inline ::google::protobuf::int32 selfpasstime() const;
  inline void set_selfpasstime(::google::protobuf::int32 value);

  // optional int32 canEnter = 4;
  inline bool has_canenter() const;
  inline void clear_canenter();
  static const int kCanEnterFieldNumber = 4;
  inline ::google::protobuf::int32 canenter() const;
  inline void set_canenter(::google::protobuf::int32 value);

  // optional int32 canSweep = 5;
  inline bool has_cansweep() const;
  inline void clear_cansweep();
  static const int kCanSweepFieldNumber = 5;
  inline ::google::protobuf::int32 cansweep() const;
  inline void set_cansweep(::google::protobuf::int32 value);

  // optional int32 isPass = 6;
  inline bool has_ispass() const;
  inline void clear_ispass();
  static const int kIsPassFieldNumber = 6;
  inline ::google::protobuf::int32 ispass() const;
  inline void set_ispass(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCInstancingData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_currnum();
  inline void clear_has_currnum();
  inline void set_has_selfpasstime();
  inline void clear_has_selfpasstime();
  inline void set_has_canenter();
  inline void clear_has_canenter();
  inline void set_has_cansweep();
  inline void clear_has_cansweep();
  inline void set_has_ispass();
  inline void clear_has_ispass();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 currnum_;
  ::google::protobuf::int32 selfpasstime_;
  ::google::protobuf::int32 canenter_;
  ::google::protobuf::int32 cansweep_;
  ::google::protobuf::int32 ispass_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCInstancingData* default_instance_;
};
// -------------------------------------------------------------------

class DungeonItemsRwd : public ::google::protobuf::Message {
 public:
  DungeonItemsRwd();
  virtual ~DungeonItemsRwd();

  DungeonItemsRwd(const DungeonItemsRwd& from);

  inline DungeonItemsRwd& operator=(const DungeonItemsRwd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonItemsRwd& default_instance();

  void Swap(DungeonItemsRwd* other);

  // implements Message ----------------------------------------------

  DungeonItemsRwd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DungeonItemsRwd& from);
  void MergeFrom(const DungeonItemsRwd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 bind = 3;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 3;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DungeonItemsRwd)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_bind();
  inline void clear_has_bind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 bind_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static DungeonItemsRwd* default_instance_;
};
// -------------------------------------------------------------------

class GCDungeonEnd : public ::google::protobuf::Message {
 public:
  GCDungeonEnd();
  virtual ~GCDungeonEnd();

  GCDungeonEnd(const GCDungeonEnd& from);

  inline GCDungeonEnd& operator=(const GCDungeonEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDungeonEnd& default_instance();

  void Swap(GCDungeonEnd* other);

  // implements Message ----------------------------------------------

  GCDungeonEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDungeonEnd& from);
  void MergeFrom(const GCDungeonEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 sts = 2;
  inline bool has_sts() const;
  inline void clear_sts();
  static const int kStsFieldNumber = 2;
  inline ::google::protobuf::int32 sts() const;
  inline void set_sts(::google::protobuf::int32 value);

  // repeated .DungeonItemsRwd rwds = 3;
  inline int rwds_size() const;
  inline void clear_rwds();
  static const int kRwdsFieldNumber = 3;
  inline const ::DungeonItemsRwd& rwds(int index) const;
  inline ::DungeonItemsRwd* mutable_rwds(int index);
  inline ::DungeonItemsRwd* add_rwds();
  inline const ::google::protobuf::RepeatedPtrField< ::DungeonItemsRwd >&
      rwds() const;
  inline ::google::protobuf::RepeatedPtrField< ::DungeonItemsRwd >*
      mutable_rwds();

  // optional int32 menus = 4;
  inline bool has_menus() const;
  inline void clear_menus();
  static const int kMenusFieldNumber = 4;
  inline ::google::protobuf::int32 menus() const;
  inline void set_menus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCDungeonEnd)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_sts();
  inline void clear_has_sts();
  inline void set_has_menus();
  inline void clear_has_menus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 sts_;
  ::google::protobuf::RepeatedPtrField< ::DungeonItemsRwd > rwds_;
  ::google::protobuf::int32 menus_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDungeonEnd* default_instance_;
};
// -------------------------------------------------------------------

class CGChangeSchedule : public ::google::protobuf::Message {
 public:
  CGChangeSchedule();
  virtual ~CGChangeSchedule();

  CGChangeSchedule(const CGChangeSchedule& from);

  inline CGChangeSchedule& operator=(const CGChangeSchedule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGChangeSchedule& default_instance();

  void Swap(CGChangeSchedule* other);

  // implements Message ----------------------------------------------

  CGChangeSchedule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGChangeSchedule& from);
  void MergeFrom(const CGChangeSchedule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 schedule = 1;
  inline bool has_schedule() const;
  inline void clear_schedule();
  static const int kScheduleFieldNumber = 1;
  inline ::google::protobuf::int32 schedule() const;
  inline void set_schedule(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGChangeSchedule)
 private:
  inline void set_has_schedule();
  inline void clear_has_schedule();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 schedule_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGChangeSchedule* default_instance_;
};
// -------------------------------------------------------------------

class GCChangeSchedule : public ::google::protobuf::Message {
 public:
  GCChangeSchedule();
  virtual ~GCChangeSchedule();

  GCChangeSchedule(const GCChangeSchedule& from);

  inline GCChangeSchedule& operator=(const GCChangeSchedule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCChangeSchedule& default_instance();

  void Swap(GCChangeSchedule* other);

  // implements Message ----------------------------------------------

  GCChangeSchedule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCChangeSchedule& from);
  void MergeFrom(const GCChangeSchedule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 schedule = 1;
  inline bool has_schedule() const;
  inline void clear_schedule();
  static const int kScheduleFieldNumber = 1;
  inline ::google::protobuf::int32 schedule() const;
  inline void set_schedule(::google::protobuf::int32 value);

  // optional int64 changeTime = 2;
  inline bool has_changetime() const;
  inline void clear_changetime();
  static const int kChangeTimeFieldNumber = 2;
  inline ::google::protobuf::int64 changetime() const;
  inline void set_changetime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCChangeSchedule)
 private:
  inline void set_has_schedule();
  inline void clear_has_schedule();
  inline void set_has_changetime();
  inline void clear_has_changetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 changetime_;
  ::google::protobuf::int32 schedule_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCChangeSchedule* default_instance_;
};
// -------------------------------------------------------------------

class CGChangeGuideId : public ::google::protobuf::Message {
 public:
  CGChangeGuideId();
  virtual ~CGChangeGuideId();

  CGChangeGuideId(const CGChangeGuideId& from);

  inline CGChangeGuideId& operator=(const CGChangeGuideId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGChangeGuideId& default_instance();

  void Swap(CGChangeGuideId* other);

  // implements Message ----------------------------------------------

  CGChangeGuideId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGChangeGuideId& from);
  void MergeFrom(const CGChangeGuideId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 guideId = 1;
  inline bool has_guideid() const;
  inline void clear_guideid();
  static const int kGuideIdFieldNumber = 1;
  inline ::google::protobuf::int32 guideid() const;
  inline void set_guideid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGChangeGuideId)
 private:
  inline void set_has_guideid();
  inline void clear_has_guideid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 guideid_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGChangeGuideId* default_instance_;
};
// -------------------------------------------------------------------

class GCInstancingStart : public ::google::protobuf::Message {
 public:
  GCInstancingStart();
  virtual ~GCInstancingStart();

  GCInstancingStart(const GCInstancingStart& from);

  inline GCInstancingStart& operator=(const GCInstancingStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCInstancingStart& default_instance();

  void Swap(GCInstancingStart* other);

  // implements Message ----------------------------------------------

  GCInstancingStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCInstancingStart& from);
  void MergeFrom(const GCInstancingStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCInstancingStart)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 time_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCInstancingStart* default_instance_;
};
// -------------------------------------------------------------------

class GCAskEnterDungeon : public ::google::protobuf::Message {
 public:
  GCAskEnterDungeon();
  virtual ~GCAskEnterDungeon();

  GCAskEnterDungeon(const GCAskEnterDungeon& from);

  inline GCAskEnterDungeon& operator=(const GCAskEnterDungeon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCAskEnterDungeon& default_instance();

  void Swap(GCAskEnterDungeon* other);

  // implements Message ----------------------------------------------

  GCAskEnterDungeon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCAskEnterDungeon& from);
  void MergeFrom(const GCAskEnterDungeon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string playerName = 2;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 2;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // @@protoc_insertion_point(class_scope:GCAskEnterDungeon)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_playername();
  inline void clear_has_playername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* playername_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCAskEnterDungeon* default_instance_;
};
// -------------------------------------------------------------------

class CGResponseEnterDungeon : public ::google::protobuf::Message {
 public:
  CGResponseEnterDungeon();
  virtual ~CGResponseEnterDungeon();

  CGResponseEnterDungeon(const CGResponseEnterDungeon& from);

  inline CGResponseEnterDungeon& operator=(const CGResponseEnterDungeon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGResponseEnterDungeon& default_instance();

  void Swap(CGResponseEnterDungeon* other);

  // implements Message ----------------------------------------------

  CGResponseEnterDungeon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGResponseEnterDungeon& from);
  void MergeFrom(const CGResponseEnterDungeon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 sts = 2;
  inline bool has_sts() const;
  inline void clear_sts();
  static const int kStsFieldNumber = 2;
  inline ::google::protobuf::int32 sts() const;
  inline void set_sts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGResponseEnterDungeon)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_sts();
  inline void clear_has_sts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 sts_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGResponseEnterDungeon* default_instance_;
};
// -------------------------------------------------------------------

class CGExitDungeon : public ::google::protobuf::Message {
 public:
  CGExitDungeon();
  virtual ~CGExitDungeon();

  CGExitDungeon(const CGExitDungeon& from);

  inline CGExitDungeon& operator=(const CGExitDungeon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGExitDungeon& default_instance();

  void Swap(CGExitDungeon* other);

  // implements Message ----------------------------------------------

  CGExitDungeon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGExitDungeon& from);
  void MergeFrom(const CGExitDungeon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGExitDungeon)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGExitDungeon* default_instance_;
};
// -------------------------------------------------------------------

class CGBuyDungeonNum : public ::google::protobuf::Message {
 public:
  CGBuyDungeonNum();
  virtual ~CGBuyDungeonNum();

  CGBuyDungeonNum(const CGBuyDungeonNum& from);

  inline CGBuyDungeonNum& operator=(const CGBuyDungeonNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGBuyDungeonNum& default_instance();

  void Swap(CGBuyDungeonNum* other);

  // implements Message ----------------------------------------------

  CGBuyDungeonNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGBuyDungeonNum& from);
  void MergeFrom(const CGBuyDungeonNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 menus = 1;
  inline bool has_menus() const;
  inline void clear_menus();
  static const int kMenusFieldNumber = 1;
  inline ::google::protobuf::int32 menus() const;
  inline void set_menus(::google::protobuf::int32 value);

  // optional int32 buyNum = 2;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuyNumFieldNumber = 2;
  inline ::google::protobuf::int32 buynum() const;
  inline void set_buynum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGBuyDungeonNum)
 private:
  inline void set_has_menus();
  inline void clear_has_menus();
  inline void set_has_buynum();
  inline void clear_has_buynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 menus_;
  ::google::protobuf::int32 buynum_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGBuyDungeonNum* default_instance_;
};
// -------------------------------------------------------------------

class CGSweepDungeon : public ::google::protobuf::Message {
 public:
  CGSweepDungeon();
  virtual ~CGSweepDungeon();

  CGSweepDungeon(const CGSweepDungeon& from);

  inline CGSweepDungeon& operator=(const CGSweepDungeon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSweepDungeon& default_instance();

  void Swap(CGSweepDungeon* other);

  // implements Message ----------------------------------------------

  CGSweepDungeon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSweepDungeon& from);
  void MergeFrom(const CGSweepDungeon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sweepType = 1;
  inline bool has_sweeptype() const;
  inline void clear_sweeptype();
  static const int kSweepTypeFieldNumber = 1;
  inline ::google::protobuf::int32 sweeptype() const;
  inline void set_sweeptype(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGSweepDungeon)
 private:
  inline void set_has_sweeptype();
  inline void clear_has_sweeptype();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sweeptype_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSweepDungeon* default_instance_;
};
// -------------------------------------------------------------------

class GCSweepDungeon : public ::google::protobuf::Message {
 public:
  GCSweepDungeon();
  virtual ~GCSweepDungeon();

  GCSweepDungeon(const GCSweepDungeon& from);

  inline GCSweepDungeon& operator=(const GCSweepDungeon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSweepDungeon& default_instance();

  void Swap(GCSweepDungeon* other);

  // implements Message ----------------------------------------------

  GCSweepDungeon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSweepDungeon& from);
  void MergeFrom(const GCSweepDungeon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DungeonItemsRwd rwds = 1;
  inline int rwds_size() const;
  inline void clear_rwds();
  static const int kRwdsFieldNumber = 1;
  inline const ::DungeonItemsRwd& rwds(int index) const;
  inline ::DungeonItemsRwd* mutable_rwds(int index);
  inline ::DungeonItemsRwd* add_rwds();
  inline const ::google::protobuf::RepeatedPtrField< ::DungeonItemsRwd >&
      rwds() const;
  inline ::google::protobuf::RepeatedPtrField< ::DungeonItemsRwd >*
      mutable_rwds();

  // @@protoc_insertion_point(class_scope:GCSweepDungeon)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DungeonItemsRwd > rwds_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSweepDungeon* default_instance_;
};
// -------------------------------------------------------------------

class GCSweepTower : public ::google::protobuf::Message {
 public:
  GCSweepTower();
  virtual ~GCSweepTower();

  GCSweepTower(const GCSweepTower& from);

  inline GCSweepTower& operator=(const GCSweepTower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSweepTower& default_instance();

  void Swap(GCSweepTower* other);

  // implements Message ----------------------------------------------

  GCSweepTower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSweepTower& from);
  void MergeFrom(const GCSweepTower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GCDungeonEnd rwds = 1;
  inline int rwds_size() const;
  inline void clear_rwds();
  static const int kRwdsFieldNumber = 1;
  inline const ::GCDungeonEnd& rwds(int index) const;
  inline ::GCDungeonEnd* mutable_rwds(int index);
  inline ::GCDungeonEnd* add_rwds();
  inline const ::google::protobuf::RepeatedPtrField< ::GCDungeonEnd >&
      rwds() const;
  inline ::google::protobuf::RepeatedPtrField< ::GCDungeonEnd >*
      mutable_rwds();

  // @@protoc_insertion_point(class_scope:GCSweepTower)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GCDungeonEnd > rwds_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSweepTower* default_instance_;
};
// -------------------------------------------------------------------

class GCInstancingRwdSchedule : public ::google::protobuf::Message {
 public:
  GCInstancingRwdSchedule();
  virtual ~GCInstancingRwdSchedule();

  GCInstancingRwdSchedule(const GCInstancingRwdSchedule& from);

  inline GCInstancingRwdSchedule& operator=(const GCInstancingRwdSchedule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCInstancingRwdSchedule& default_instance();

  void Swap(GCInstancingRwdSchedule* other);

  // implements Message ----------------------------------------------

  GCInstancingRwdSchedule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCInstancingRwdSchedule& from);
  void MergeFrom(const GCInstancingRwdSchedule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 killNum = 2;
  inline bool has_killnum() const;
  inline void clear_killnum();
  static const int kKillNumFieldNumber = 2;
  inline ::google::protobuf::int32 killnum() const;
  inline void set_killnum(::google::protobuf::int32 value);

  // optional int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 boNum = 4;
  inline bool has_bonum() const;
  inline void clear_bonum();
  static const int kBoNumFieldNumber = 4;
  inline ::google::protobuf::int32 bonum() const;
  inline void set_bonum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCInstancingRwdSchedule)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_killnum();
  inline void clear_has_killnum();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_bonum();
  inline void clear_has_bonum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 killnum_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 bonum_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCInstancingRwdSchedule* default_instance_;
};
// -------------------------------------------------------------------

class GCInstancingErrorMessage : public ::google::protobuf::Message {
 public:
  GCInstancingErrorMessage();
  virtual ~GCInstancingErrorMessage();

  GCInstancingErrorMessage(const GCInstancingErrorMessage& from);

  inline GCInstancingErrorMessage& operator=(const GCInstancingErrorMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCInstancingErrorMessage& default_instance();

  void Swap(GCInstancingErrorMessage* other);

  // implements Message ----------------------------------------------

  GCInstancingErrorMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCInstancingErrorMessage& from);
  void MergeFrom(const GCInstancingErrorMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 param = 4;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 4;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // optional int32 paramType = 5;
  inline bool has_paramtype() const;
  inline void clear_paramtype();
  static const int kParamTypeFieldNumber = 5;
  inline ::google::protobuf::int32 paramtype() const;
  inline void set_paramtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCInstancingErrorMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_paramtype();
  inline void clear_has_paramtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 code_;
  ::std::string* name_;
  ::google::protobuf::int32 param_;
  ::google::protobuf::int32 paramtype_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCInstancingErrorMessage* default_instance_;
};
// -------------------------------------------------------------------

class BossData : public ::google::protobuf::Message {
 public:
  BossData();
  virtual ~BossData();

  BossData(const BossData& from);

  inline BossData& operator=(const BossData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossData& default_instance();

  void Swap(BossData* other);

  // implements Message ----------------------------------------------

  BossData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossData& from);
  void MergeFrom(const BossData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 starNum = 2;
  inline bool has_starnum() const;
  inline void clear_starnum();
  static const int kStarNumFieldNumber = 2;
  inline ::google::protobuf::int32 starnum() const;
  inline void set_starnum(::google::protobuf::int32 value);

  // optional int32 datePk = 3;
  inline bool has_datepk() const;
  inline void clear_datepk();
  static const int kDatePkFieldNumber = 3;
  inline ::google::protobuf::int32 datepk() const;
  inline void set_datepk(::google::protobuf::int32 value);

  // optional int32 unLockBossSts = 4;
  inline bool has_unlockbosssts() const;
  inline void clear_unlockbosssts();
  static const int kUnLockBossStsFieldNumber = 4;
  inline ::google::protobuf::int32 unlockbosssts() const;
  inline void set_unlockbosssts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BossData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_starnum();
  inline void clear_has_starnum();
  inline void set_has_datepk();
  inline void clear_has_datepk();
  inline void set_has_unlockbosssts();
  inline void clear_has_unlockbosssts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 starnum_;
  ::google::protobuf::int32 datepk_;
  ::google::protobuf::int32 unlockbosssts_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static BossData* default_instance_;
};
// -------------------------------------------------------------------

class ChapterBossData : public ::google::protobuf::Message {
 public:
  ChapterBossData();
  virtual ~ChapterBossData();

  ChapterBossData(const ChapterBossData& from);

  inline ChapterBossData& operator=(const ChapterBossData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChapterBossData& default_instance();

  void Swap(ChapterBossData* other);

  // implements Message ----------------------------------------------

  ChapterBossData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChapterBossData& from);
  void MergeFrom(const ChapterBossData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BossData bossList = 1;
  inline int bosslist_size() const;
  inline void clear_bosslist();
  static const int kBossListFieldNumber = 1;
  inline const ::BossData& bosslist(int index) const;
  inline ::BossData* mutable_bosslist(int index);
  inline ::BossData* add_bosslist();
  inline const ::google::protobuf::RepeatedPtrField< ::BossData >&
      bosslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::BossData >*
      mutable_bosslist();

  // optional int32 packStarNum = 2;
  inline bool has_packstarnum() const;
  inline void clear_packstarnum();
  static const int kPackStarNumFieldNumber = 2;
  inline ::google::protobuf::int32 packstarnum() const;
  inline void set_packstarnum(::google::protobuf::int32 value);

  // optional int32 childChapterId = 3;
  inline bool has_childchapterid() const;
  inline void clear_childchapterid();
  static const int kChildChapterIdFieldNumber = 3;
  inline ::google::protobuf::int32 childchapterid() const;
  inline void set_childchapterid(::google::protobuf::int32 value);

  // optional int32 packRwdStatus = 4;
  inline bool has_packrwdstatus() const;
  inline void clear_packrwdstatus();
  static const int kPackRwdStatusFieldNumber = 4;
  inline ::google::protobuf::int32 packrwdstatus() const;
  inline void set_packrwdstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChapterBossData)
 private:
  inline void set_has_packstarnum();
  inline void clear_has_packstarnum();
  inline void set_has_childchapterid();
  inline void clear_has_childchapterid();
  inline void set_has_packrwdstatus();
  inline void clear_has_packrwdstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BossData > bosslist_;
  ::google::protobuf::int32 packstarnum_;
  ::google::protobuf::int32 childchapterid_;
  ::google::protobuf::int32 packrwdstatus_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static ChapterBossData* default_instance_;
};
// -------------------------------------------------------------------

class CGGetBossView : public ::google::protobuf::Message {
 public:
  CGGetBossView();
  virtual ~CGGetBossView();

  CGGetBossView(const CGGetBossView& from);

  inline CGGetBossView& operator=(const CGGetBossView& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetBossView& default_instance();

  void Swap(CGGetBossView* other);

  // implements Message ----------------------------------------------

  CGGetBossView* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetBossView& from);
  void MergeFrom(const CGGetBossView& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapterid() const;
  inline void set_chapterid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetBossView)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 chapterid_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetBossView* default_instance_;
};
// -------------------------------------------------------------------

class GCGetBossView : public ::google::protobuf::Message {
 public:
  GCGetBossView();
  virtual ~GCGetBossView();

  GCGetBossView(const GCGetBossView& from);

  inline GCGetBossView& operator=(const GCGetBossView& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetBossView& default_instance();

  void Swap(GCGetBossView* other);

  // implements Message ----------------------------------------------

  GCGetBossView* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetBossView& from);
  void MergeFrom(const GCGetBossView& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapterid() const;
  inline void set_chapterid(::google::protobuf::int32 value);

  // repeated .ChapterBossData chapterList = 2;
  inline int chapterlist_size() const;
  inline void clear_chapterlist();
  static const int kChapterListFieldNumber = 2;
  inline const ::ChapterBossData& chapterlist(int index) const;
  inline ::ChapterBossData* mutable_chapterlist(int index);
  inline ::ChapterBossData* add_chapterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::ChapterBossData >&
      chapterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ChapterBossData >*
      mutable_chapterlist();

  // @@protoc_insertion_point(class_scope:GCGetBossView)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ChapterBossData > chapterlist_;
  ::google::protobuf::int32 chapterid_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetBossView* default_instance_;
};
// -------------------------------------------------------------------

class GCChangeBossStar : public ::google::protobuf::Message {
 public:
  GCChangeBossStar();
  virtual ~GCChangeBossStar();

  GCChangeBossStar(const GCChangeBossStar& from);

  inline GCChangeBossStar& operator=(const GCChangeBossStar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCChangeBossStar& default_instance();

  void Swap(GCChangeBossStar* other);

  // implements Message ----------------------------------------------

  GCChangeBossStar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCChangeBossStar& from);
  void MergeFrom(const GCChangeBossStar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BossData bossList = 1;
  inline int bosslist_size() const;
  inline void clear_bosslist();
  static const int kBossListFieldNumber = 1;
  inline const ::BossData& bosslist(int index) const;
  inline ::BossData* mutable_bosslist(int index);
  inline ::BossData* add_bosslist();
  inline const ::google::protobuf::RepeatedPtrField< ::BossData >&
      bosslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::BossData >*
      mutable_bosslist();

  // optional int32 chapterId = 2;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 2;
  inline ::google::protobuf::int32 chapterid() const;
  inline void set_chapterid(::google::protobuf::int32 value);

  // optional int32 childChapterId = 3;
  inline bool has_childchapterid() const;
  inline void clear_childchapterid();
  static const int kChildChapterIdFieldNumber = 3;
  inline ::google::protobuf::int32 childchapterid() const;
  inline void set_childchapterid(::google::protobuf::int32 value);

  // optional int32 packStartNum = 4;
  inline bool has_packstartnum() const;
  inline void clear_packstartnum();
  static const int kPackStartNumFieldNumber = 4;
  inline ::google::protobuf::int32 packstartnum() const;
  inline void set_packstartnum(::google::protobuf::int32 value);

  // optional int32 rewardSts = 5;
  inline bool has_rewardsts() const;
  inline void clear_rewardsts();
  static const int kRewardStsFieldNumber = 5;
  inline ::google::protobuf::int32 rewardsts() const;
  inline void set_rewardsts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCChangeBossStar)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_childchapterid();
  inline void clear_has_childchapterid();
  inline void set_has_packstartnum();
  inline void clear_has_packstartnum();
  inline void set_has_rewardsts();
  inline void clear_has_rewardsts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BossData > bosslist_;
  ::google::protobuf::int32 chapterid_;
  ::google::protobuf::int32 childchapterid_;
  ::google::protobuf::int32 packstartnum_;
  ::google::protobuf::int32 rewardsts_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCChangeBossStar* default_instance_;
};
// -------------------------------------------------------------------

class CGPkBoss : public ::google::protobuf::Message {
 public:
  CGPkBoss();
  virtual ~CGPkBoss();

  CGPkBoss(const CGPkBoss& from);

  inline CGPkBoss& operator=(const CGPkBoss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGPkBoss& default_instance();

  void Swap(CGPkBoss* other);

  // implements Message ----------------------------------------------

  CGPkBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGPkBoss& from);
  void MergeFrom(const CGPkBoss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapterid() const;
  inline void set_chapterid(::google::protobuf::int32 value);

  // optional int32 childChapterId = 2;
  inline bool has_childchapterid() const;
  inline void clear_childchapterid();
  static const int kChildChapterIdFieldNumber = 2;
  inline ::google::protobuf::int32 childchapterid() const;
  inline void set_childchapterid(::google::protobuf::int32 value);

  // optional int32 bossId = 3;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 3;
  inline ::google::protobuf::int32 bossid() const;
  inline void set_bossid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGPkBoss)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_childchapterid();
  inline void clear_has_childchapterid();
  inline void set_has_bossid();
  inline void clear_has_bossid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 chapterid_;
  ::google::protobuf::int32 childchapterid_;
  ::google::protobuf::int32 bossid_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGPkBoss* default_instance_;
};
// -------------------------------------------------------------------

class BossRank : public ::google::protobuf::Message {
 public:
  BossRank();
  virtual ~BossRank();

  BossRank(const BossRank& from);

  inline BossRank& operator=(const BossRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossRank& default_instance();

  void Swap(BossRank* other);

  // implements Message ----------------------------------------------

  BossRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossRank& from);
  void MergeFrom(const BossRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rankId = 1;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIdFieldNumber = 1;
  inline ::google::protobuf::int32 rankid() const;
  inline void set_rankid(::google::protobuf::int32 value);

  // optional int64 sid = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 2;
  inline ::google::protobuf::int64 sid() const;
  inline void set_sid(::google::protobuf::int64 value);

  // optional string playerName = 3;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 3;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // optional int32 useSeconds = 4;
  inline bool has_useseconds() const;
  inline void clear_useseconds();
  static const int kUseSecondsFieldNumber = 4;
  inline ::google::protobuf::int32 useseconds() const;
  inline void set_useseconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BossRank)
 private:
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_useseconds();
  inline void clear_has_useseconds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 sid_;
  ::google::protobuf::int32 rankid_;
  ::google::protobuf::int32 useseconds_;
  ::std::string* playername_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static BossRank* default_instance_;
};
// -------------------------------------------------------------------

class CGGetBossRanks : public ::google::protobuf::Message {
 public:
  CGGetBossRanks();
  virtual ~CGGetBossRanks();

  CGGetBossRanks(const CGGetBossRanks& from);

  inline CGGetBossRanks& operator=(const CGGetBossRanks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetBossRanks& default_instance();

  void Swap(CGGetBossRanks* other);

  // implements Message ----------------------------------------------

  CGGetBossRanks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetBossRanks& from);
  void MergeFrom(const CGGetBossRanks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapterid() const;
  inline void set_chapterid(::google::protobuf::int32 value);

  // optional int32 childChapterId = 2;
  inline bool has_childchapterid() const;
  inline void clear_childchapterid();
  static const int kChildChapterIdFieldNumber = 2;
  inline ::google::protobuf::int32 childchapterid() const;
  inline void set_childchapterid(::google::protobuf::int32 value);

  // optional int32 bossId = 3;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 3;
  inline ::google::protobuf::int32 bossid() const;
  inline void set_bossid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetBossRanks)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_childchapterid();
  inline void clear_has_childchapterid();
  inline void set_has_bossid();
  inline void clear_has_bossid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 chapterid_;
  ::google::protobuf::int32 childchapterid_;
  ::google::protobuf::int32 bossid_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetBossRanks* default_instance_;
};
// -------------------------------------------------------------------

class GCGetBossRanks : public ::google::protobuf::Message {
 public:
  GCGetBossRanks();
  virtual ~GCGetBossRanks();

  GCGetBossRanks(const GCGetBossRanks& from);

  inline GCGetBossRanks& operator=(const GCGetBossRanks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetBossRanks& default_instance();

  void Swap(GCGetBossRanks* other);

  // implements Message ----------------------------------------------

  GCGetBossRanks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetBossRanks& from);
  void MergeFrom(const GCGetBossRanks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapterid() const;
  inline void set_chapterid(::google::protobuf::int32 value);

  // optional int32 childChapterId = 2;
  inline bool has_childchapterid() const;
  inline void clear_childchapterid();
  static const int kChildChapterIdFieldNumber = 2;
  inline ::google::protobuf::int32 childchapterid() const;
  inline void set_childchapterid(::google::protobuf::int32 value);

  // optional int32 bossId = 3;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 3;
  inline ::google::protobuf::int32 bossid() const;
  inline void set_bossid(::google::protobuf::int32 value);

  // repeated .BossRank ranks = 4;
  inline int ranks_size() const;
  inline void clear_ranks();
  static const int kRanksFieldNumber = 4;
  inline const ::BossRank& ranks(int index) const;
  inline ::BossRank* mutable_ranks(int index);
  inline ::BossRank* add_ranks();
  inline const ::google::protobuf::RepeatedPtrField< ::BossRank >&
      ranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::BossRank >*
      mutable_ranks();

  // @@protoc_insertion_point(class_scope:GCGetBossRanks)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_childchapterid();
  inline void clear_has_childchapterid();
  inline void set_has_bossid();
  inline void clear_has_bossid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 chapterid_;
  ::google::protobuf::int32 childchapterid_;
  ::google::protobuf::RepeatedPtrField< ::BossRank > ranks_;
  ::google::protobuf::int32 bossid_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetBossRanks* default_instance_;
};
// -------------------------------------------------------------------

class GCPKBossResult : public ::google::protobuf::Message {
 public:
  GCPKBossResult();
  virtual ~GCPKBossResult();

  GCPKBossResult(const GCPKBossResult& from);

  inline GCPKBossResult& operator=(const GCPKBossResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPKBossResult& default_instance();

  void Swap(GCPKBossResult* other);

  // implements Message ----------------------------------------------

  GCPKBossResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPKBossResult& from);
  void MergeFrom(const GCPKBossResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 starNum = 2;
  inline bool has_starnum() const;
  inline void clear_starnum();
  static const int kStarNumFieldNumber = 2;
  inline ::google::protobuf::int32 starnum() const;
  inline void set_starnum(::google::protobuf::int32 value);

  // optional int32 useSeconds = 4;
  inline bool has_useseconds() const;
  inline void clear_useseconds();
  static const int kUseSecondsFieldNumber = 4;
  inline ::google::protobuf::int32 useseconds() const;
  inline void set_useseconds(::google::protobuf::int32 value);

  // optional int32 chapterId = 5;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 5;
  inline ::google::protobuf::int32 chapterid() const;
  inline void set_chapterid(::google::protobuf::int32 value);

  // optional int32 childChapterId = 6;
  inline bool has_childchapterid() const;
  inline void clear_childchapterid();
  static const int kChildChapterIdFieldNumber = 6;
  inline ::google::protobuf::int32 childchapterid() const;
  inline void set_childchapterid(::google::protobuf::int32 value);

  // optional int32 bossId = 7;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 7;
  inline ::google::protobuf::int32 bossid() const;
  inline void set_bossid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCPKBossResult)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_starnum();
  inline void clear_has_starnum();
  inline void set_has_useseconds();
  inline void clear_has_useseconds();
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_childchapterid();
  inline void clear_has_childchapterid();
  inline void set_has_bossid();
  inline void clear_has_bossid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 starnum_;
  ::google::protobuf::int32 useseconds_;
  ::google::protobuf::int32 chapterid_;
  ::google::protobuf::int32 childchapterid_;
  ::google::protobuf::int32 bossid_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPKBossResult* default_instance_;
};
// -------------------------------------------------------------------

class CGGetPackRwd : public ::google::protobuf::Message {
 public:
  CGGetPackRwd();
  virtual ~CGGetPackRwd();

  CGGetPackRwd(const CGGetPackRwd& from);

  inline CGGetPackRwd& operator=(const CGGetPackRwd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetPackRwd& default_instance();

  void Swap(CGGetPackRwd* other);

  // implements Message ----------------------------------------------

  CGGetPackRwd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetPackRwd& from);
  void MergeFrom(const CGGetPackRwd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapterid() const;
  inline void set_chapterid(::google::protobuf::int32 value);

  // optional int32 childChapterId = 2;
  inline bool has_childchapterid() const;
  inline void clear_childchapterid();
  static const int kChildChapterIdFieldNumber = 2;
  inline ::google::protobuf::int32 childchapterid() const;
  inline void set_childchapterid(::google::protobuf::int32 value);

  // optional int32 bossId = 3;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 3;
  inline ::google::protobuf::int32 bossid() const;
  inline void set_bossid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetPackRwd)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_childchapterid();
  inline void clear_has_childchapterid();
  inline void set_has_bossid();
  inline void clear_has_bossid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 chapterid_;
  ::google::protobuf::int32 childchapterid_;
  ::google::protobuf::int32 bossid_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetPackRwd* default_instance_;
};
// -------------------------------------------------------------------

class CGExitPersonBoss : public ::google::protobuf::Message {
 public:
  CGExitPersonBoss();
  virtual ~CGExitPersonBoss();

  CGExitPersonBoss(const CGExitPersonBoss& from);

  inline CGExitPersonBoss& operator=(const CGExitPersonBoss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGExitPersonBoss& default_instance();

  void Swap(CGExitPersonBoss* other);

  // implements Message ----------------------------------------------

  CGExitPersonBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGExitPersonBoss& from);
  void MergeFrom(const CGExitPersonBoss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapterid() const;
  inline void set_chapterid(::google::protobuf::int32 value);

  // optional int32 childChapterId = 2;
  inline bool has_childchapterid() const;
  inline void clear_childchapterid();
  static const int kChildChapterIdFieldNumber = 2;
  inline ::google::protobuf::int32 childchapterid() const;
  inline void set_childchapterid(::google::protobuf::int32 value);

  // optional int32 bossId = 3;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 3;
  inline ::google::protobuf::int32 bossid() const;
  inline void set_bossid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGExitPersonBoss)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_childchapterid();
  inline void clear_has_childchapterid();
  inline void set_has_bossid();
  inline void clear_has_bossid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 chapterid_;
  ::google::protobuf::int32 childchapterid_;
  ::google::protobuf::int32 bossid_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static CGExitPersonBoss* default_instance_;
};
// -------------------------------------------------------------------

class BossOpenSts : public ::google::protobuf::Message {
 public:
  BossOpenSts();
  virtual ~BossOpenSts();

  BossOpenSts(const BossOpenSts& from);

  inline BossOpenSts& operator=(const BossOpenSts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossOpenSts& default_instance();

  void Swap(BossOpenSts* other);

  // implements Message ----------------------------------------------

  BossOpenSts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossOpenSts& from);
  void MergeFrom(const BossOpenSts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapterid() const;
  inline void set_chapterid(::google::protobuf::int32 value);

  // optional int32 sts = 2;
  inline bool has_sts() const;
  inline void clear_sts();
  static const int kStsFieldNumber = 2;
  inline ::google::protobuf::int32 sts() const;
  inline void set_sts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BossOpenSts)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_sts();
  inline void clear_has_sts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 chapterid_;
  ::google::protobuf::int32 sts_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static BossOpenSts* default_instance_;
};
// -------------------------------------------------------------------

class GCPersonBossOpenSts : public ::google::protobuf::Message {
 public:
  GCPersonBossOpenSts();
  virtual ~GCPersonBossOpenSts();

  GCPersonBossOpenSts(const GCPersonBossOpenSts& from);

  inline GCPersonBossOpenSts& operator=(const GCPersonBossOpenSts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPersonBossOpenSts& default_instance();

  void Swap(GCPersonBossOpenSts* other);

  // implements Message ----------------------------------------------

  GCPersonBossOpenSts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPersonBossOpenSts& from);
  void MergeFrom(const GCPersonBossOpenSts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BossOpenSts stsList = 1;
  inline int stslist_size() const;
  inline void clear_stslist();
  static const int kStsListFieldNumber = 1;
  inline const ::BossOpenSts& stslist(int index) const;
  inline ::BossOpenSts* mutable_stslist(int index);
  inline ::BossOpenSts* add_stslist();
  inline const ::google::protobuf::RepeatedPtrField< ::BossOpenSts >&
      stslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::BossOpenSts >*
      mutable_stslist();

  // @@protoc_insertion_point(class_scope:GCPersonBossOpenSts)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BossOpenSts > stslist_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPersonBossOpenSts* default_instance_;
};
// -------------------------------------------------------------------

class GCClearBossData : public ::google::protobuf::Message {
 public:
  GCClearBossData();
  virtual ~GCClearBossData();

  GCClearBossData(const GCClearBossData& from);

  inline GCClearBossData& operator=(const GCClearBossData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCClearBossData& default_instance();

  void Swap(GCClearBossData* other);

  // implements Message ----------------------------------------------

  GCClearBossData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCClearBossData& from);
  void MergeFrom(const GCClearBossData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapterid() const;
  inline void set_chapterid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCClearBossData)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 chapterid_;
  friend void  protobuf_AddDesc_DungeonMessage_2eproto();
  friend void protobuf_AssignDesc_DungeonMessage_2eproto();
  friend void protobuf_ShutdownFile_DungeonMessage_2eproto();

  void InitAsDefaultInstance();
  static GCClearBossData* default_instance_;
};
// ===================================================================


// ===================================================================

// CGEnterInstancing

// optional int32 id = 1;
inline bool CGEnterInstancing::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGEnterInstancing::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGEnterInstancing::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGEnterInstancing::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGEnterInstancing::id() const {
  // @@protoc_insertion_point(field_get:CGEnterInstancing.id)
  return id_;
}
inline void CGEnterInstancing::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGEnterInstancing.id)
}

// -------------------------------------------------------------------

// GCEnterInstancing

// optional int32 id = 1;
inline bool GCEnterInstancing::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCEnterInstancing::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCEnterInstancing::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCEnterInstancing::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCEnterInstancing::id() const {
  // @@protoc_insertion_point(field_get:GCEnterInstancing.id)
  return id_;
}
inline void GCEnterInstancing::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCEnterInstancing.id)
}

// optional int64 endTime = 2;
inline bool GCEnterInstancing::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCEnterInstancing::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCEnterInstancing::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCEnterInstancing::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 GCEnterInstancing::endtime() const {
  // @@protoc_insertion_point(field_get:GCEnterInstancing.endTime)
  return endtime_;
}
inline void GCEnterInstancing::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:GCEnterInstancing.endTime)
}

// repeated int32 guideIds = 3;
inline int GCEnterInstancing::guideids_size() const {
  return guideids_.size();
}
inline void GCEnterInstancing::clear_guideids() {
  guideids_.Clear();
}
inline ::google::protobuf::int32 GCEnterInstancing::guideids(int index) const {
  // @@protoc_insertion_point(field_get:GCEnterInstancing.guideIds)
  return guideids_.Get(index);
}
inline void GCEnterInstancing::set_guideids(int index, ::google::protobuf::int32 value) {
  guideids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCEnterInstancing.guideIds)
}
inline void GCEnterInstancing::add_guideids(::google::protobuf::int32 value) {
  guideids_.Add(value);
  // @@protoc_insertion_point(field_add:GCEnterInstancing.guideIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCEnterInstancing::guideids() const {
  // @@protoc_insertion_point(field_list:GCEnterInstancing.guideIds)
  return guideids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCEnterInstancing::mutable_guideids() {
  // @@protoc_insertion_point(field_mutable_list:GCEnterInstancing.guideIds)
  return &guideids_;
}

// -------------------------------------------------------------------

// GCAllMenusDatas

// repeated .GCMenusData menus = 1;
inline int GCAllMenusDatas::menus_size() const {
  return menus_.size();
}
inline void GCAllMenusDatas::clear_menus() {
  menus_.Clear();
}
inline const ::GCMenusData& GCAllMenusDatas::menus(int index) const {
  // @@protoc_insertion_point(field_get:GCAllMenusDatas.menus)
  return menus_.Get(index);
}
inline ::GCMenusData* GCAllMenusDatas::mutable_menus(int index) {
  // @@protoc_insertion_point(field_mutable:GCAllMenusDatas.menus)
  return menus_.Mutable(index);
}
inline ::GCMenusData* GCAllMenusDatas::add_menus() {
  // @@protoc_insertion_point(field_add:GCAllMenusDatas.menus)
  return menus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GCMenusData >&
GCAllMenusDatas::menus() const {
  // @@protoc_insertion_point(field_list:GCAllMenusDatas.menus)
  return menus_;
}
inline ::google::protobuf::RepeatedPtrField< ::GCMenusData >*
GCAllMenusDatas::mutable_menus() {
  // @@protoc_insertion_point(field_mutable_list:GCAllMenusDatas.menus)
  return &menus_;
}

// -------------------------------------------------------------------

// GCMenusData

// optional int32 id = 1;
inline bool GCMenusData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCMenusData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCMenusData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCMenusData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCMenusData::id() const {
  // @@protoc_insertion_point(field_get:GCMenusData.id)
  return id_;
}
inline void GCMenusData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCMenusData.id)
}

// optional int32 current = 2;
inline bool GCMenusData::has_current() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCMenusData::set_has_current() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCMenusData::clear_has_current() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCMenusData::clear_current() {
  current_ = 0;
  clear_has_current();
}
inline ::google::protobuf::int32 GCMenusData::current() const {
  // @@protoc_insertion_point(field_get:GCMenusData.current)
  return current_;
}
inline void GCMenusData::set_current(::google::protobuf::int32 value) {
  set_has_current();
  current_ = value;
  // @@protoc_insertion_point(field_set:GCMenusData.current)
}

// optional int32 buyNum = 3;
inline bool GCMenusData::has_buynum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCMenusData::set_has_buynum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCMenusData::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCMenusData::clear_buynum() {
  buynum_ = 0;
  clear_has_buynum();
}
inline ::google::protobuf::int32 GCMenusData::buynum() const {
  // @@protoc_insertion_point(field_get:GCMenusData.buyNum)
  return buynum_;
}
inline void GCMenusData::set_buynum(::google::protobuf::int32 value) {
  set_has_buynum();
  buynum_ = value;
  // @@protoc_insertion_point(field_set:GCMenusData.buyNum)
}

// repeated .GCInstancingData instancingDatas = 4;
inline int GCMenusData::instancingdatas_size() const {
  return instancingdatas_.size();
}
inline void GCMenusData::clear_instancingdatas() {
  instancingdatas_.Clear();
}
inline const ::GCInstancingData& GCMenusData::instancingdatas(int index) const {
  // @@protoc_insertion_point(field_get:GCMenusData.instancingDatas)
  return instancingdatas_.Get(index);
}
inline ::GCInstancingData* GCMenusData::mutable_instancingdatas(int index) {
  // @@protoc_insertion_point(field_mutable:GCMenusData.instancingDatas)
  return instancingdatas_.Mutable(index);
}
inline ::GCInstancingData* GCMenusData::add_instancingdatas() {
  // @@protoc_insertion_point(field_add:GCMenusData.instancingDatas)
  return instancingdatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GCInstancingData >&
GCMenusData::instancingdatas() const {
  // @@protoc_insertion_point(field_list:GCMenusData.instancingDatas)
  return instancingdatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::GCInstancingData >*
GCMenusData::mutable_instancingdatas() {
  // @@protoc_insertion_point(field_mutable_list:GCMenusData.instancingDatas)
  return &instancingdatas_;
}

// repeated .GCFastestPlayer players = 5;
inline int GCMenusData::players_size() const {
  return players_.size();
}
inline void GCMenusData::clear_players() {
  players_.Clear();
}
inline const ::GCFastestPlayer& GCMenusData::players(int index) const {
  // @@protoc_insertion_point(field_get:GCMenusData.players)
  return players_.Get(index);
}
inline ::GCFastestPlayer* GCMenusData::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:GCMenusData.players)
  return players_.Mutable(index);
}
inline ::GCFastestPlayer* GCMenusData::add_players() {
  // @@protoc_insertion_point(field_add:GCMenusData.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GCFastestPlayer >&
GCMenusData::players() const {
  // @@protoc_insertion_point(field_list:GCMenusData.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::GCFastestPlayer >*
GCMenusData::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:GCMenusData.players)
  return &players_;
}

// -------------------------------------------------------------------

// GCFastestPlayer

// optional int32 id = 1;
inline bool GCFastestPlayer::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCFastestPlayer::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCFastestPlayer::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCFastestPlayer::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCFastestPlayer::id() const {
  // @@protoc_insertion_point(field_get:GCFastestPlayer.id)
  return id_;
}
inline void GCFastestPlayer::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCFastestPlayer.id)
}

// optional int32 passTime = 2;
inline bool GCFastestPlayer::has_passtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCFastestPlayer::set_has_passtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCFastestPlayer::clear_has_passtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCFastestPlayer::clear_passtime() {
  passtime_ = 0;
  clear_has_passtime();
}
inline ::google::protobuf::int32 GCFastestPlayer::passtime() const {
  // @@protoc_insertion_point(field_get:GCFastestPlayer.passTime)
  return passtime_;
}
inline void GCFastestPlayer::set_passtime(::google::protobuf::int32 value) {
  set_has_passtime();
  passtime_ = value;
  // @@protoc_insertion_point(field_set:GCFastestPlayer.passTime)
}

// optional string passTimeName = 3;
inline bool GCFastestPlayer::has_passtimename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCFastestPlayer::set_has_passtimename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCFastestPlayer::clear_has_passtimename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCFastestPlayer::clear_passtimename() {
  if (passtimename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passtimename_->clear();
  }
  clear_has_passtimename();
}
inline const ::std::string& GCFastestPlayer::passtimename() const {
  // @@protoc_insertion_point(field_get:GCFastestPlayer.passTimeName)
  return *passtimename_;
}
inline void GCFastestPlayer::set_passtimename(const ::std::string& value) {
  set_has_passtimename();
  if (passtimename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passtimename_ = new ::std::string;
  }
  passtimename_->assign(value);
  // @@protoc_insertion_point(field_set:GCFastestPlayer.passTimeName)
}
inline void GCFastestPlayer::set_passtimename(const char* value) {
  set_has_passtimename();
  if (passtimename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passtimename_ = new ::std::string;
  }
  passtimename_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCFastestPlayer.passTimeName)
}
inline void GCFastestPlayer::set_passtimename(const char* value, size_t size) {
  set_has_passtimename();
  if (passtimename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passtimename_ = new ::std::string;
  }
  passtimename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCFastestPlayer.passTimeName)
}
inline ::std::string* GCFastestPlayer::mutable_passtimename() {
  set_has_passtimename();
  if (passtimename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passtimename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCFastestPlayer.passTimeName)
  return passtimename_;
}
inline ::std::string* GCFastestPlayer::release_passtimename() {
  clear_has_passtimename();
  if (passtimename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = passtimename_;
    passtimename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCFastestPlayer::set_allocated_passtimename(::std::string* passtimename) {
  if (passtimename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete passtimename_;
  }
  if (passtimename) {
    set_has_passtimename();
    passtimename_ = passtimename;
  } else {
    clear_has_passtimename();
    passtimename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCFastestPlayer.passTimeName)
}

// -------------------------------------------------------------------

// GCInstancingData

// optional int32 id = 1;
inline bool GCInstancingData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCInstancingData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCInstancingData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCInstancingData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCInstancingData::id() const {
  // @@protoc_insertion_point(field_get:GCInstancingData.id)
  return id_;
}
inline void GCInstancingData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingData.id)
}

// optional int32 currNum = 2;
inline bool GCInstancingData::has_currnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCInstancingData::set_has_currnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCInstancingData::clear_has_currnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCInstancingData::clear_currnum() {
  currnum_ = 0;
  clear_has_currnum();
}
inline ::google::protobuf::int32 GCInstancingData::currnum() const {
  // @@protoc_insertion_point(field_get:GCInstancingData.currNum)
  return currnum_;
}
inline void GCInstancingData::set_currnum(::google::protobuf::int32 value) {
  set_has_currnum();
  currnum_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingData.currNum)
}

// optional int32 selfPassTime = 3;
inline bool GCInstancingData::has_selfpasstime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCInstancingData::set_has_selfpasstime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCInstancingData::clear_has_selfpasstime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCInstancingData::clear_selfpasstime() {
  selfpasstime_ = 0;
  clear_has_selfpasstime();
}
inline ::google::protobuf::int32 GCInstancingData::selfpasstime() const {
  // @@protoc_insertion_point(field_get:GCInstancingData.selfPassTime)
  return selfpasstime_;
}
inline void GCInstancingData::set_selfpasstime(::google::protobuf::int32 value) {
  set_has_selfpasstime();
  selfpasstime_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingData.selfPassTime)
}

// optional int32 canEnter = 4;
inline bool GCInstancingData::has_canenter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCInstancingData::set_has_canenter() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCInstancingData::clear_has_canenter() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCInstancingData::clear_canenter() {
  canenter_ = 0;
  clear_has_canenter();
}
inline ::google::protobuf::int32 GCInstancingData::canenter() const {
  // @@protoc_insertion_point(field_get:GCInstancingData.canEnter)
  return canenter_;
}
inline void GCInstancingData::set_canenter(::google::protobuf::int32 value) {
  set_has_canenter();
  canenter_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingData.canEnter)
}

// optional int32 canSweep = 5;
inline bool GCInstancingData::has_cansweep() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCInstancingData::set_has_cansweep() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCInstancingData::clear_has_cansweep() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCInstancingData::clear_cansweep() {
  cansweep_ = 0;
  clear_has_cansweep();
}
inline ::google::protobuf::int32 GCInstancingData::cansweep() const {
  // @@protoc_insertion_point(field_get:GCInstancingData.canSweep)
  return cansweep_;
}
inline void GCInstancingData::set_cansweep(::google::protobuf::int32 value) {
  set_has_cansweep();
  cansweep_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingData.canSweep)
}

// optional int32 isPass = 6;
inline bool GCInstancingData::has_ispass() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCInstancingData::set_has_ispass() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCInstancingData::clear_has_ispass() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCInstancingData::clear_ispass() {
  ispass_ = 0;
  clear_has_ispass();
}
inline ::google::protobuf::int32 GCInstancingData::ispass() const {
  // @@protoc_insertion_point(field_get:GCInstancingData.isPass)
  return ispass_;
}
inline void GCInstancingData::set_ispass(::google::protobuf::int32 value) {
  set_has_ispass();
  ispass_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingData.isPass)
}

// -------------------------------------------------------------------

// DungeonItemsRwd

// optional int32 itemId = 1;
inline bool DungeonItemsRwd::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DungeonItemsRwd::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DungeonItemsRwd::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DungeonItemsRwd::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 DungeonItemsRwd::itemid() const {
  // @@protoc_insertion_point(field_get:DungeonItemsRwd.itemId)
  return itemid_;
}
inline void DungeonItemsRwd::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:DungeonItemsRwd.itemId)
}

// optional int32 num = 2;
inline bool DungeonItemsRwd::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DungeonItemsRwd::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DungeonItemsRwd::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DungeonItemsRwd::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 DungeonItemsRwd::num() const {
  // @@protoc_insertion_point(field_get:DungeonItemsRwd.num)
  return num_;
}
inline void DungeonItemsRwd::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:DungeonItemsRwd.num)
}

// optional int32 bind = 3;
inline bool DungeonItemsRwd::has_bind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DungeonItemsRwd::set_has_bind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DungeonItemsRwd::clear_has_bind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DungeonItemsRwd::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 DungeonItemsRwd::bind() const {
  // @@protoc_insertion_point(field_get:DungeonItemsRwd.bind)
  return bind_;
}
inline void DungeonItemsRwd::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
  // @@protoc_insertion_point(field_set:DungeonItemsRwd.bind)
}

// -------------------------------------------------------------------

// GCDungeonEnd

// optional int32 id = 1;
inline bool GCDungeonEnd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCDungeonEnd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCDungeonEnd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCDungeonEnd::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCDungeonEnd::id() const {
  // @@protoc_insertion_point(field_get:GCDungeonEnd.id)
  return id_;
}
inline void GCDungeonEnd::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCDungeonEnd.id)
}

// optional int32 sts = 2;
inline bool GCDungeonEnd::has_sts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCDungeonEnd::set_has_sts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCDungeonEnd::clear_has_sts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCDungeonEnd::clear_sts() {
  sts_ = 0;
  clear_has_sts();
}
inline ::google::protobuf::int32 GCDungeonEnd::sts() const {
  // @@protoc_insertion_point(field_get:GCDungeonEnd.sts)
  return sts_;
}
inline void GCDungeonEnd::set_sts(::google::protobuf::int32 value) {
  set_has_sts();
  sts_ = value;
  // @@protoc_insertion_point(field_set:GCDungeonEnd.sts)
}

// repeated .DungeonItemsRwd rwds = 3;
inline int GCDungeonEnd::rwds_size() const {
  return rwds_.size();
}
inline void GCDungeonEnd::clear_rwds() {
  rwds_.Clear();
}
inline const ::DungeonItemsRwd& GCDungeonEnd::rwds(int index) const {
  // @@protoc_insertion_point(field_get:GCDungeonEnd.rwds)
  return rwds_.Get(index);
}
inline ::DungeonItemsRwd* GCDungeonEnd::mutable_rwds(int index) {
  // @@protoc_insertion_point(field_mutable:GCDungeonEnd.rwds)
  return rwds_.Mutable(index);
}
inline ::DungeonItemsRwd* GCDungeonEnd::add_rwds() {
  // @@protoc_insertion_point(field_add:GCDungeonEnd.rwds)
  return rwds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DungeonItemsRwd >&
GCDungeonEnd::rwds() const {
  // @@protoc_insertion_point(field_list:GCDungeonEnd.rwds)
  return rwds_;
}
inline ::google::protobuf::RepeatedPtrField< ::DungeonItemsRwd >*
GCDungeonEnd::mutable_rwds() {
  // @@protoc_insertion_point(field_mutable_list:GCDungeonEnd.rwds)
  return &rwds_;
}

// optional int32 menus = 4;
inline bool GCDungeonEnd::has_menus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCDungeonEnd::set_has_menus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCDungeonEnd::clear_has_menus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCDungeonEnd::clear_menus() {
  menus_ = 0;
  clear_has_menus();
}
inline ::google::protobuf::int32 GCDungeonEnd::menus() const {
  // @@protoc_insertion_point(field_get:GCDungeonEnd.menus)
  return menus_;
}
inline void GCDungeonEnd::set_menus(::google::protobuf::int32 value) {
  set_has_menus();
  menus_ = value;
  // @@protoc_insertion_point(field_set:GCDungeonEnd.menus)
}

// -------------------------------------------------------------------

// CGChangeSchedule

// optional int32 schedule = 1;
inline bool CGChangeSchedule::has_schedule() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGChangeSchedule::set_has_schedule() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGChangeSchedule::clear_has_schedule() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGChangeSchedule::clear_schedule() {
  schedule_ = 0;
  clear_has_schedule();
}
inline ::google::protobuf::int32 CGChangeSchedule::schedule() const {
  // @@protoc_insertion_point(field_get:CGChangeSchedule.schedule)
  return schedule_;
}
inline void CGChangeSchedule::set_schedule(::google::protobuf::int32 value) {
  set_has_schedule();
  schedule_ = value;
  // @@protoc_insertion_point(field_set:CGChangeSchedule.schedule)
}

// -------------------------------------------------------------------

// GCChangeSchedule

// optional int32 schedule = 1;
inline bool GCChangeSchedule::has_schedule() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCChangeSchedule::set_has_schedule() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCChangeSchedule::clear_has_schedule() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCChangeSchedule::clear_schedule() {
  schedule_ = 0;
  clear_has_schedule();
}
inline ::google::protobuf::int32 GCChangeSchedule::schedule() const {
  // @@protoc_insertion_point(field_get:GCChangeSchedule.schedule)
  return schedule_;
}
inline void GCChangeSchedule::set_schedule(::google::protobuf::int32 value) {
  set_has_schedule();
  schedule_ = value;
  // @@protoc_insertion_point(field_set:GCChangeSchedule.schedule)
}

// optional int64 changeTime = 2;
inline bool GCChangeSchedule::has_changetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCChangeSchedule::set_has_changetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCChangeSchedule::clear_has_changetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCChangeSchedule::clear_changetime() {
  changetime_ = GOOGLE_LONGLONG(0);
  clear_has_changetime();
}
inline ::google::protobuf::int64 GCChangeSchedule::changetime() const {
  // @@protoc_insertion_point(field_get:GCChangeSchedule.changeTime)
  return changetime_;
}
inline void GCChangeSchedule::set_changetime(::google::protobuf::int64 value) {
  set_has_changetime();
  changetime_ = value;
  // @@protoc_insertion_point(field_set:GCChangeSchedule.changeTime)
}

// -------------------------------------------------------------------

// CGChangeGuideId

// optional int32 guideId = 1;
inline bool CGChangeGuideId::has_guideid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGChangeGuideId::set_has_guideid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGChangeGuideId::clear_has_guideid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGChangeGuideId::clear_guideid() {
  guideid_ = 0;
  clear_has_guideid();
}
inline ::google::protobuf::int32 CGChangeGuideId::guideid() const {
  // @@protoc_insertion_point(field_get:CGChangeGuideId.guideId)
  return guideid_;
}
inline void CGChangeGuideId::set_guideid(::google::protobuf::int32 value) {
  set_has_guideid();
  guideid_ = value;
  // @@protoc_insertion_point(field_set:CGChangeGuideId.guideId)
}

// -------------------------------------------------------------------

// GCInstancingStart

// optional int32 id = 1;
inline bool GCInstancingStart::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCInstancingStart::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCInstancingStart::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCInstancingStart::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCInstancingStart::id() const {
  // @@protoc_insertion_point(field_get:GCInstancingStart.id)
  return id_;
}
inline void GCInstancingStart::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingStart.id)
}

// optional int32 time = 2;
inline bool GCInstancingStart::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCInstancingStart::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCInstancingStart::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCInstancingStart::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 GCInstancingStart::time() const {
  // @@protoc_insertion_point(field_get:GCInstancingStart.time)
  return time_;
}
inline void GCInstancingStart::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingStart.time)
}

// -------------------------------------------------------------------

// GCAskEnterDungeon

// optional int32 id = 1;
inline bool GCAskEnterDungeon::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCAskEnterDungeon::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCAskEnterDungeon::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCAskEnterDungeon::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCAskEnterDungeon::id() const {
  // @@protoc_insertion_point(field_get:GCAskEnterDungeon.id)
  return id_;
}
inline void GCAskEnterDungeon::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCAskEnterDungeon.id)
}

// optional string playerName = 2;
inline bool GCAskEnterDungeon::has_playername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCAskEnterDungeon::set_has_playername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCAskEnterDungeon::clear_has_playername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCAskEnterDungeon::clear_playername() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& GCAskEnterDungeon::playername() const {
  // @@protoc_insertion_point(field_get:GCAskEnterDungeon.playerName)
  return *playername_;
}
inline void GCAskEnterDungeon::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set:GCAskEnterDungeon.playerName)
}
inline void GCAskEnterDungeon::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCAskEnterDungeon.playerName)
}
inline void GCAskEnterDungeon::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCAskEnterDungeon.playerName)
}
inline ::std::string* GCAskEnterDungeon::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCAskEnterDungeon.playerName)
  return playername_;
}
inline ::std::string* GCAskEnterDungeon::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCAskEnterDungeon::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCAskEnterDungeon.playerName)
}

// -------------------------------------------------------------------

// CGResponseEnterDungeon

// optional int32 id = 1;
inline bool CGResponseEnterDungeon::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGResponseEnterDungeon::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGResponseEnterDungeon::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGResponseEnterDungeon::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGResponseEnterDungeon::id() const {
  // @@protoc_insertion_point(field_get:CGResponseEnterDungeon.id)
  return id_;
}
inline void CGResponseEnterDungeon::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGResponseEnterDungeon.id)
}

// optional int32 sts = 2;
inline bool CGResponseEnterDungeon::has_sts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGResponseEnterDungeon::set_has_sts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGResponseEnterDungeon::clear_has_sts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGResponseEnterDungeon::clear_sts() {
  sts_ = 0;
  clear_has_sts();
}
inline ::google::protobuf::int32 CGResponseEnterDungeon::sts() const {
  // @@protoc_insertion_point(field_get:CGResponseEnterDungeon.sts)
  return sts_;
}
inline void CGResponseEnterDungeon::set_sts(::google::protobuf::int32 value) {
  set_has_sts();
  sts_ = value;
  // @@protoc_insertion_point(field_set:CGResponseEnterDungeon.sts)
}

// -------------------------------------------------------------------

// CGExitDungeon

// optional int32 id = 1;
inline bool CGExitDungeon::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGExitDungeon::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGExitDungeon::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGExitDungeon::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGExitDungeon::id() const {
  // @@protoc_insertion_point(field_get:CGExitDungeon.id)
  return id_;
}
inline void CGExitDungeon::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGExitDungeon.id)
}

// -------------------------------------------------------------------

// CGBuyDungeonNum

// optional int32 menus = 1;
inline bool CGBuyDungeonNum::has_menus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGBuyDungeonNum::set_has_menus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGBuyDungeonNum::clear_has_menus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGBuyDungeonNum::clear_menus() {
  menus_ = 0;
  clear_has_menus();
}
inline ::google::protobuf::int32 CGBuyDungeonNum::menus() const {
  // @@protoc_insertion_point(field_get:CGBuyDungeonNum.menus)
  return menus_;
}
inline void CGBuyDungeonNum::set_menus(::google::protobuf::int32 value) {
  set_has_menus();
  menus_ = value;
  // @@protoc_insertion_point(field_set:CGBuyDungeonNum.menus)
}

// optional int32 buyNum = 2;
inline bool CGBuyDungeonNum::has_buynum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGBuyDungeonNum::set_has_buynum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGBuyDungeonNum::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGBuyDungeonNum::clear_buynum() {
  buynum_ = 0;
  clear_has_buynum();
}
inline ::google::protobuf::int32 CGBuyDungeonNum::buynum() const {
  // @@protoc_insertion_point(field_get:CGBuyDungeonNum.buyNum)
  return buynum_;
}
inline void CGBuyDungeonNum::set_buynum(::google::protobuf::int32 value) {
  set_has_buynum();
  buynum_ = value;
  // @@protoc_insertion_point(field_set:CGBuyDungeonNum.buyNum)
}

// -------------------------------------------------------------------

// CGSweepDungeon

// optional int32 sweepType = 1;
inline bool CGSweepDungeon::has_sweeptype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSweepDungeon::set_has_sweeptype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSweepDungeon::clear_has_sweeptype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSweepDungeon::clear_sweeptype() {
  sweeptype_ = 0;
  clear_has_sweeptype();
}
inline ::google::protobuf::int32 CGSweepDungeon::sweeptype() const {
  // @@protoc_insertion_point(field_get:CGSweepDungeon.sweepType)
  return sweeptype_;
}
inline void CGSweepDungeon::set_sweeptype(::google::protobuf::int32 value) {
  set_has_sweeptype();
  sweeptype_ = value;
  // @@protoc_insertion_point(field_set:CGSweepDungeon.sweepType)
}

// optional int32 id = 2;
inline bool CGSweepDungeon::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSweepDungeon::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSweepDungeon::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSweepDungeon::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGSweepDungeon::id() const {
  // @@protoc_insertion_point(field_get:CGSweepDungeon.id)
  return id_;
}
inline void CGSweepDungeon::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGSweepDungeon.id)
}

// -------------------------------------------------------------------

// GCSweepDungeon

// repeated .DungeonItemsRwd rwds = 1;
inline int GCSweepDungeon::rwds_size() const {
  return rwds_.size();
}
inline void GCSweepDungeon::clear_rwds() {
  rwds_.Clear();
}
inline const ::DungeonItemsRwd& GCSweepDungeon::rwds(int index) const {
  // @@protoc_insertion_point(field_get:GCSweepDungeon.rwds)
  return rwds_.Get(index);
}
inline ::DungeonItemsRwd* GCSweepDungeon::mutable_rwds(int index) {
  // @@protoc_insertion_point(field_mutable:GCSweepDungeon.rwds)
  return rwds_.Mutable(index);
}
inline ::DungeonItemsRwd* GCSweepDungeon::add_rwds() {
  // @@protoc_insertion_point(field_add:GCSweepDungeon.rwds)
  return rwds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DungeonItemsRwd >&
GCSweepDungeon::rwds() const {
  // @@protoc_insertion_point(field_list:GCSweepDungeon.rwds)
  return rwds_;
}
inline ::google::protobuf::RepeatedPtrField< ::DungeonItemsRwd >*
GCSweepDungeon::mutable_rwds() {
  // @@protoc_insertion_point(field_mutable_list:GCSweepDungeon.rwds)
  return &rwds_;
}

// -------------------------------------------------------------------

// GCSweepTower

// repeated .GCDungeonEnd rwds = 1;
inline int GCSweepTower::rwds_size() const {
  return rwds_.size();
}
inline void GCSweepTower::clear_rwds() {
  rwds_.Clear();
}
inline const ::GCDungeonEnd& GCSweepTower::rwds(int index) const {
  // @@protoc_insertion_point(field_get:GCSweepTower.rwds)
  return rwds_.Get(index);
}
inline ::GCDungeonEnd* GCSweepTower::mutable_rwds(int index) {
  // @@protoc_insertion_point(field_mutable:GCSweepTower.rwds)
  return rwds_.Mutable(index);
}
inline ::GCDungeonEnd* GCSweepTower::add_rwds() {
  // @@protoc_insertion_point(field_add:GCSweepTower.rwds)
  return rwds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GCDungeonEnd >&
GCSweepTower::rwds() const {
  // @@protoc_insertion_point(field_list:GCSweepTower.rwds)
  return rwds_;
}
inline ::google::protobuf::RepeatedPtrField< ::GCDungeonEnd >*
GCSweepTower::mutable_rwds() {
  // @@protoc_insertion_point(field_mutable_list:GCSweepTower.rwds)
  return &rwds_;
}

// -------------------------------------------------------------------

// GCInstancingRwdSchedule

// optional int32 id = 1;
inline bool GCInstancingRwdSchedule::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCInstancingRwdSchedule::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCInstancingRwdSchedule::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCInstancingRwdSchedule::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCInstancingRwdSchedule::id() const {
  // @@protoc_insertion_point(field_get:GCInstancingRwdSchedule.id)
  return id_;
}
inline void GCInstancingRwdSchedule::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingRwdSchedule.id)
}

// optional int32 killNum = 2;
inline bool GCInstancingRwdSchedule::has_killnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCInstancingRwdSchedule::set_has_killnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCInstancingRwdSchedule::clear_has_killnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCInstancingRwdSchedule::clear_killnum() {
  killnum_ = 0;
  clear_has_killnum();
}
inline ::google::protobuf::int32 GCInstancingRwdSchedule::killnum() const {
  // @@protoc_insertion_point(field_get:GCInstancingRwdSchedule.killNum)
  return killnum_;
}
inline void GCInstancingRwdSchedule::set_killnum(::google::protobuf::int32 value) {
  set_has_killnum();
  killnum_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingRwdSchedule.killNum)
}

// optional int32 exp = 3;
inline bool GCInstancingRwdSchedule::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCInstancingRwdSchedule::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCInstancingRwdSchedule::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCInstancingRwdSchedule::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 GCInstancingRwdSchedule::exp() const {
  // @@protoc_insertion_point(field_get:GCInstancingRwdSchedule.exp)
  return exp_;
}
inline void GCInstancingRwdSchedule::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingRwdSchedule.exp)
}

// optional int32 boNum = 4;
inline bool GCInstancingRwdSchedule::has_bonum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCInstancingRwdSchedule::set_has_bonum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCInstancingRwdSchedule::clear_has_bonum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCInstancingRwdSchedule::clear_bonum() {
  bonum_ = 0;
  clear_has_bonum();
}
inline ::google::protobuf::int32 GCInstancingRwdSchedule::bonum() const {
  // @@protoc_insertion_point(field_get:GCInstancingRwdSchedule.boNum)
  return bonum_;
}
inline void GCInstancingRwdSchedule::set_bonum(::google::protobuf::int32 value) {
  set_has_bonum();
  bonum_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingRwdSchedule.boNum)
}

// -------------------------------------------------------------------

// GCInstancingErrorMessage

// optional int32 type = 1;
inline bool GCInstancingErrorMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCInstancingErrorMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCInstancingErrorMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCInstancingErrorMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCInstancingErrorMessage::type() const {
  // @@protoc_insertion_point(field_get:GCInstancingErrorMessage.type)
  return type_;
}
inline void GCInstancingErrorMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingErrorMessage.type)
}

// optional int32 code = 2;
inline bool GCInstancingErrorMessage::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCInstancingErrorMessage::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCInstancingErrorMessage::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCInstancingErrorMessage::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 GCInstancingErrorMessage::code() const {
  // @@protoc_insertion_point(field_get:GCInstancingErrorMessage.code)
  return code_;
}
inline void GCInstancingErrorMessage::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingErrorMessage.code)
}

// optional string name = 3;
inline bool GCInstancingErrorMessage::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCInstancingErrorMessage::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCInstancingErrorMessage::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCInstancingErrorMessage::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GCInstancingErrorMessage::name() const {
  // @@protoc_insertion_point(field_get:GCInstancingErrorMessage.name)
  return *name_;
}
inline void GCInstancingErrorMessage::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:GCInstancingErrorMessage.name)
}
inline void GCInstancingErrorMessage::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCInstancingErrorMessage.name)
}
inline void GCInstancingErrorMessage::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCInstancingErrorMessage.name)
}
inline ::std::string* GCInstancingErrorMessage::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCInstancingErrorMessage.name)
  return name_;
}
inline ::std::string* GCInstancingErrorMessage::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCInstancingErrorMessage::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCInstancingErrorMessage.name)
}

// optional int32 param = 4;
inline bool GCInstancingErrorMessage::has_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCInstancingErrorMessage::set_has_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCInstancingErrorMessage::clear_has_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCInstancingErrorMessage::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 GCInstancingErrorMessage::param() const {
  // @@protoc_insertion_point(field_get:GCInstancingErrorMessage.param)
  return param_;
}
inline void GCInstancingErrorMessage::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingErrorMessage.param)
}

// optional int32 paramType = 5;
inline bool GCInstancingErrorMessage::has_paramtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCInstancingErrorMessage::set_has_paramtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCInstancingErrorMessage::clear_has_paramtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCInstancingErrorMessage::clear_paramtype() {
  paramtype_ = 0;
  clear_has_paramtype();
}
inline ::google::protobuf::int32 GCInstancingErrorMessage::paramtype() const {
  // @@protoc_insertion_point(field_get:GCInstancingErrorMessage.paramType)
  return paramtype_;
}
inline void GCInstancingErrorMessage::set_paramtype(::google::protobuf::int32 value) {
  set_has_paramtype();
  paramtype_ = value;
  // @@protoc_insertion_point(field_set:GCInstancingErrorMessage.paramType)
}

// -------------------------------------------------------------------

// BossData

// optional int32 id = 1;
inline bool BossData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BossData::id() const {
  // @@protoc_insertion_point(field_get:BossData.id)
  return id_;
}
inline void BossData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BossData.id)
}

// optional int32 starNum = 2;
inline bool BossData::has_starnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossData::set_has_starnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossData::clear_has_starnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossData::clear_starnum() {
  starnum_ = 0;
  clear_has_starnum();
}
inline ::google::protobuf::int32 BossData::starnum() const {
  // @@protoc_insertion_point(field_get:BossData.starNum)
  return starnum_;
}
inline void BossData::set_starnum(::google::protobuf::int32 value) {
  set_has_starnum();
  starnum_ = value;
  // @@protoc_insertion_point(field_set:BossData.starNum)
}

// optional int32 datePk = 3;
inline bool BossData::has_datepk() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossData::set_has_datepk() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossData::clear_has_datepk() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossData::clear_datepk() {
  datepk_ = 0;
  clear_has_datepk();
}
inline ::google::protobuf::int32 BossData::datepk() const {
  // @@protoc_insertion_point(field_get:BossData.datePk)
  return datepk_;
}
inline void BossData::set_datepk(::google::protobuf::int32 value) {
  set_has_datepk();
  datepk_ = value;
  // @@protoc_insertion_point(field_set:BossData.datePk)
}

// optional int32 unLockBossSts = 4;
inline bool BossData::has_unlockbosssts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BossData::set_has_unlockbosssts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BossData::clear_has_unlockbosssts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BossData::clear_unlockbosssts() {
  unlockbosssts_ = 0;
  clear_has_unlockbosssts();
}
inline ::google::protobuf::int32 BossData::unlockbosssts() const {
  // @@protoc_insertion_point(field_get:BossData.unLockBossSts)
  return unlockbosssts_;
}
inline void BossData::set_unlockbosssts(::google::protobuf::int32 value) {
  set_has_unlockbosssts();
  unlockbosssts_ = value;
  // @@protoc_insertion_point(field_set:BossData.unLockBossSts)
}

// -------------------------------------------------------------------

// ChapterBossData

// repeated .BossData bossList = 1;
inline int ChapterBossData::bosslist_size() const {
  return bosslist_.size();
}
inline void ChapterBossData::clear_bosslist() {
  bosslist_.Clear();
}
inline const ::BossData& ChapterBossData::bosslist(int index) const {
  // @@protoc_insertion_point(field_get:ChapterBossData.bossList)
  return bosslist_.Get(index);
}
inline ::BossData* ChapterBossData::mutable_bosslist(int index) {
  // @@protoc_insertion_point(field_mutable:ChapterBossData.bossList)
  return bosslist_.Mutable(index);
}
inline ::BossData* ChapterBossData::add_bosslist() {
  // @@protoc_insertion_point(field_add:ChapterBossData.bossList)
  return bosslist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BossData >&
ChapterBossData::bosslist() const {
  // @@protoc_insertion_point(field_list:ChapterBossData.bossList)
  return bosslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::BossData >*
ChapterBossData::mutable_bosslist() {
  // @@protoc_insertion_point(field_mutable_list:ChapterBossData.bossList)
  return &bosslist_;
}

// optional int32 packStarNum = 2;
inline bool ChapterBossData::has_packstarnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChapterBossData::set_has_packstarnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChapterBossData::clear_has_packstarnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChapterBossData::clear_packstarnum() {
  packstarnum_ = 0;
  clear_has_packstarnum();
}
inline ::google::protobuf::int32 ChapterBossData::packstarnum() const {
  // @@protoc_insertion_point(field_get:ChapterBossData.packStarNum)
  return packstarnum_;
}
inline void ChapterBossData::set_packstarnum(::google::protobuf::int32 value) {
  set_has_packstarnum();
  packstarnum_ = value;
  // @@protoc_insertion_point(field_set:ChapterBossData.packStarNum)
}

// optional int32 childChapterId = 3;
inline bool ChapterBossData::has_childchapterid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChapterBossData::set_has_childchapterid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChapterBossData::clear_has_childchapterid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChapterBossData::clear_childchapterid() {
  childchapterid_ = 0;
  clear_has_childchapterid();
}
inline ::google::protobuf::int32 ChapterBossData::childchapterid() const {
  // @@protoc_insertion_point(field_get:ChapterBossData.childChapterId)
  return childchapterid_;
}
inline void ChapterBossData::set_childchapterid(::google::protobuf::int32 value) {
  set_has_childchapterid();
  childchapterid_ = value;
  // @@protoc_insertion_point(field_set:ChapterBossData.childChapterId)
}

// optional int32 packRwdStatus = 4;
inline bool ChapterBossData::has_packrwdstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChapterBossData::set_has_packrwdstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChapterBossData::clear_has_packrwdstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChapterBossData::clear_packrwdstatus() {
  packrwdstatus_ = 0;
  clear_has_packrwdstatus();
}
inline ::google::protobuf::int32 ChapterBossData::packrwdstatus() const {
  // @@protoc_insertion_point(field_get:ChapterBossData.packRwdStatus)
  return packrwdstatus_;
}
inline void ChapterBossData::set_packrwdstatus(::google::protobuf::int32 value) {
  set_has_packrwdstatus();
  packrwdstatus_ = value;
  // @@protoc_insertion_point(field_set:ChapterBossData.packRwdStatus)
}

// -------------------------------------------------------------------

// CGGetBossView

// optional int32 chapterId = 1;
inline bool CGGetBossView::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetBossView::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetBossView::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetBossView::clear_chapterid() {
  chapterid_ = 0;
  clear_has_chapterid();
}
inline ::google::protobuf::int32 CGGetBossView::chapterid() const {
  // @@protoc_insertion_point(field_get:CGGetBossView.chapterId)
  return chapterid_;
}
inline void CGGetBossView::set_chapterid(::google::protobuf::int32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:CGGetBossView.chapterId)
}

// -------------------------------------------------------------------

// GCGetBossView

// optional int32 chapterId = 1;
inline bool GCGetBossView::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetBossView::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetBossView::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetBossView::clear_chapterid() {
  chapterid_ = 0;
  clear_has_chapterid();
}
inline ::google::protobuf::int32 GCGetBossView::chapterid() const {
  // @@protoc_insertion_point(field_get:GCGetBossView.chapterId)
  return chapterid_;
}
inline void GCGetBossView::set_chapterid(::google::protobuf::int32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:GCGetBossView.chapterId)
}

// repeated .ChapterBossData chapterList = 2;
inline int GCGetBossView::chapterlist_size() const {
  return chapterlist_.size();
}
inline void GCGetBossView::clear_chapterlist() {
  chapterlist_.Clear();
}
inline const ::ChapterBossData& GCGetBossView::chapterlist(int index) const {
  // @@protoc_insertion_point(field_get:GCGetBossView.chapterList)
  return chapterlist_.Get(index);
}
inline ::ChapterBossData* GCGetBossView::mutable_chapterlist(int index) {
  // @@protoc_insertion_point(field_mutable:GCGetBossView.chapterList)
  return chapterlist_.Mutable(index);
}
inline ::ChapterBossData* GCGetBossView::add_chapterlist() {
  // @@protoc_insertion_point(field_add:GCGetBossView.chapterList)
  return chapterlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ChapterBossData >&
GCGetBossView::chapterlist() const {
  // @@protoc_insertion_point(field_list:GCGetBossView.chapterList)
  return chapterlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ChapterBossData >*
GCGetBossView::mutable_chapterlist() {
  // @@protoc_insertion_point(field_mutable_list:GCGetBossView.chapterList)
  return &chapterlist_;
}

// -------------------------------------------------------------------

// GCChangeBossStar

// repeated .BossData bossList = 1;
inline int GCChangeBossStar::bosslist_size() const {
  return bosslist_.size();
}
inline void GCChangeBossStar::clear_bosslist() {
  bosslist_.Clear();
}
inline const ::BossData& GCChangeBossStar::bosslist(int index) const {
  // @@protoc_insertion_point(field_get:GCChangeBossStar.bossList)
  return bosslist_.Get(index);
}
inline ::BossData* GCChangeBossStar::mutable_bosslist(int index) {
  // @@protoc_insertion_point(field_mutable:GCChangeBossStar.bossList)
  return bosslist_.Mutable(index);
}
inline ::BossData* GCChangeBossStar::add_bosslist() {
  // @@protoc_insertion_point(field_add:GCChangeBossStar.bossList)
  return bosslist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BossData >&
GCChangeBossStar::bosslist() const {
  // @@protoc_insertion_point(field_list:GCChangeBossStar.bossList)
  return bosslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::BossData >*
GCChangeBossStar::mutable_bosslist() {
  // @@protoc_insertion_point(field_mutable_list:GCChangeBossStar.bossList)
  return &bosslist_;
}

// optional int32 chapterId = 2;
inline bool GCChangeBossStar::has_chapterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCChangeBossStar::set_has_chapterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCChangeBossStar::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCChangeBossStar::clear_chapterid() {
  chapterid_ = 0;
  clear_has_chapterid();
}
inline ::google::protobuf::int32 GCChangeBossStar::chapterid() const {
  // @@protoc_insertion_point(field_get:GCChangeBossStar.chapterId)
  return chapterid_;
}
inline void GCChangeBossStar::set_chapterid(::google::protobuf::int32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:GCChangeBossStar.chapterId)
}

// optional int32 childChapterId = 3;
inline bool GCChangeBossStar::has_childchapterid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCChangeBossStar::set_has_childchapterid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCChangeBossStar::clear_has_childchapterid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCChangeBossStar::clear_childchapterid() {
  childchapterid_ = 0;
  clear_has_childchapterid();
}
inline ::google::protobuf::int32 GCChangeBossStar::childchapterid() const {
  // @@protoc_insertion_point(field_get:GCChangeBossStar.childChapterId)
  return childchapterid_;
}
inline void GCChangeBossStar::set_childchapterid(::google::protobuf::int32 value) {
  set_has_childchapterid();
  childchapterid_ = value;
  // @@protoc_insertion_point(field_set:GCChangeBossStar.childChapterId)
}

// optional int32 packStartNum = 4;
inline bool GCChangeBossStar::has_packstartnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCChangeBossStar::set_has_packstartnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCChangeBossStar::clear_has_packstartnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCChangeBossStar::clear_packstartnum() {
  packstartnum_ = 0;
  clear_has_packstartnum();
}
inline ::google::protobuf::int32 GCChangeBossStar::packstartnum() const {
  // @@protoc_insertion_point(field_get:GCChangeBossStar.packStartNum)
  return packstartnum_;
}
inline void GCChangeBossStar::set_packstartnum(::google::protobuf::int32 value) {
  set_has_packstartnum();
  packstartnum_ = value;
  // @@protoc_insertion_point(field_set:GCChangeBossStar.packStartNum)
}

// optional int32 rewardSts = 5;
inline bool GCChangeBossStar::has_rewardsts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCChangeBossStar::set_has_rewardsts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCChangeBossStar::clear_has_rewardsts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCChangeBossStar::clear_rewardsts() {
  rewardsts_ = 0;
  clear_has_rewardsts();
}
inline ::google::protobuf::int32 GCChangeBossStar::rewardsts() const {
  // @@protoc_insertion_point(field_get:GCChangeBossStar.rewardSts)
  return rewardsts_;
}
inline void GCChangeBossStar::set_rewardsts(::google::protobuf::int32 value) {
  set_has_rewardsts();
  rewardsts_ = value;
  // @@protoc_insertion_point(field_set:GCChangeBossStar.rewardSts)
}

// -------------------------------------------------------------------

// CGPkBoss

// optional int32 chapterId = 1;
inline bool CGPkBoss::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGPkBoss::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGPkBoss::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGPkBoss::clear_chapterid() {
  chapterid_ = 0;
  clear_has_chapterid();
}
inline ::google::protobuf::int32 CGPkBoss::chapterid() const {
  // @@protoc_insertion_point(field_get:CGPkBoss.chapterId)
  return chapterid_;
}
inline void CGPkBoss::set_chapterid(::google::protobuf::int32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:CGPkBoss.chapterId)
}

// optional int32 childChapterId = 2;
inline bool CGPkBoss::has_childchapterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGPkBoss::set_has_childchapterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGPkBoss::clear_has_childchapterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGPkBoss::clear_childchapterid() {
  childchapterid_ = 0;
  clear_has_childchapterid();
}
inline ::google::protobuf::int32 CGPkBoss::childchapterid() const {
  // @@protoc_insertion_point(field_get:CGPkBoss.childChapterId)
  return childchapterid_;
}
inline void CGPkBoss::set_childchapterid(::google::protobuf::int32 value) {
  set_has_childchapterid();
  childchapterid_ = value;
  // @@protoc_insertion_point(field_set:CGPkBoss.childChapterId)
}

// optional int32 bossId = 3;
inline bool CGPkBoss::has_bossid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGPkBoss::set_has_bossid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGPkBoss::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGPkBoss::clear_bossid() {
  bossid_ = 0;
  clear_has_bossid();
}
inline ::google::protobuf::int32 CGPkBoss::bossid() const {
  // @@protoc_insertion_point(field_get:CGPkBoss.bossId)
  return bossid_;
}
inline void CGPkBoss::set_bossid(::google::protobuf::int32 value) {
  set_has_bossid();
  bossid_ = value;
  // @@protoc_insertion_point(field_set:CGPkBoss.bossId)
}

// -------------------------------------------------------------------

// BossRank

// optional int32 rankId = 1;
inline bool BossRank::has_rankid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossRank::set_has_rankid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossRank::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossRank::clear_rankid() {
  rankid_ = 0;
  clear_has_rankid();
}
inline ::google::protobuf::int32 BossRank::rankid() const {
  // @@protoc_insertion_point(field_get:BossRank.rankId)
  return rankid_;
}
inline void BossRank::set_rankid(::google::protobuf::int32 value) {
  set_has_rankid();
  rankid_ = value;
  // @@protoc_insertion_point(field_set:BossRank.rankId)
}

// optional int64 sid = 2;
inline bool BossRank::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossRank::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossRank::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossRank::clear_sid() {
  sid_ = GOOGLE_LONGLONG(0);
  clear_has_sid();
}
inline ::google::protobuf::int64 BossRank::sid() const {
  // @@protoc_insertion_point(field_get:BossRank.sid)
  return sid_;
}
inline void BossRank::set_sid(::google::protobuf::int64 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:BossRank.sid)
}

// optional string playerName = 3;
inline bool BossRank::has_playername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossRank::set_has_playername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossRank::clear_has_playername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossRank::clear_playername() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& BossRank::playername() const {
  // @@protoc_insertion_point(field_get:BossRank.playerName)
  return *playername_;
}
inline void BossRank::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set:BossRank.playerName)
}
inline void BossRank::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set_char:BossRank.playerName)
}
inline void BossRank::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BossRank.playerName)
}
inline ::std::string* BossRank::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BossRank.playerName)
  return playername_;
}
inline ::std::string* BossRank::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BossRank::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BossRank.playerName)
}

// optional int32 useSeconds = 4;
inline bool BossRank::has_useseconds() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BossRank::set_has_useseconds() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BossRank::clear_has_useseconds() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BossRank::clear_useseconds() {
  useseconds_ = 0;
  clear_has_useseconds();
}
inline ::google::protobuf::int32 BossRank::useseconds() const {
  // @@protoc_insertion_point(field_get:BossRank.useSeconds)
  return useseconds_;
}
inline void BossRank::set_useseconds(::google::protobuf::int32 value) {
  set_has_useseconds();
  useseconds_ = value;
  // @@protoc_insertion_point(field_set:BossRank.useSeconds)
}

// -------------------------------------------------------------------

// CGGetBossRanks

// optional int32 chapterId = 1;
inline bool CGGetBossRanks::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetBossRanks::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetBossRanks::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetBossRanks::clear_chapterid() {
  chapterid_ = 0;
  clear_has_chapterid();
}
inline ::google::protobuf::int32 CGGetBossRanks::chapterid() const {
  // @@protoc_insertion_point(field_get:CGGetBossRanks.chapterId)
  return chapterid_;
}
inline void CGGetBossRanks::set_chapterid(::google::protobuf::int32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:CGGetBossRanks.chapterId)
}

// optional int32 childChapterId = 2;
inline bool CGGetBossRanks::has_childchapterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGGetBossRanks::set_has_childchapterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGGetBossRanks::clear_has_childchapterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGGetBossRanks::clear_childchapterid() {
  childchapterid_ = 0;
  clear_has_childchapterid();
}
inline ::google::protobuf::int32 CGGetBossRanks::childchapterid() const {
  // @@protoc_insertion_point(field_get:CGGetBossRanks.childChapterId)
  return childchapterid_;
}
inline void CGGetBossRanks::set_childchapterid(::google::protobuf::int32 value) {
  set_has_childchapterid();
  childchapterid_ = value;
  // @@protoc_insertion_point(field_set:CGGetBossRanks.childChapterId)
}

// optional int32 bossId = 3;
inline bool CGGetBossRanks::has_bossid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGGetBossRanks::set_has_bossid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGGetBossRanks::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGGetBossRanks::clear_bossid() {
  bossid_ = 0;
  clear_has_bossid();
}
inline ::google::protobuf::int32 CGGetBossRanks::bossid() const {
  // @@protoc_insertion_point(field_get:CGGetBossRanks.bossId)
  return bossid_;
}
inline void CGGetBossRanks::set_bossid(::google::protobuf::int32 value) {
  set_has_bossid();
  bossid_ = value;
  // @@protoc_insertion_point(field_set:CGGetBossRanks.bossId)
}

// -------------------------------------------------------------------

// GCGetBossRanks

// optional int32 chapterId = 1;
inline bool GCGetBossRanks::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetBossRanks::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetBossRanks::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetBossRanks::clear_chapterid() {
  chapterid_ = 0;
  clear_has_chapterid();
}
inline ::google::protobuf::int32 GCGetBossRanks::chapterid() const {
  // @@protoc_insertion_point(field_get:GCGetBossRanks.chapterId)
  return chapterid_;
}
inline void GCGetBossRanks::set_chapterid(::google::protobuf::int32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:GCGetBossRanks.chapterId)
}

// optional int32 childChapterId = 2;
inline bool GCGetBossRanks::has_childchapterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGetBossRanks::set_has_childchapterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGetBossRanks::clear_has_childchapterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGetBossRanks::clear_childchapterid() {
  childchapterid_ = 0;
  clear_has_childchapterid();
}
inline ::google::protobuf::int32 GCGetBossRanks::childchapterid() const {
  // @@protoc_insertion_point(field_get:GCGetBossRanks.childChapterId)
  return childchapterid_;
}
inline void GCGetBossRanks::set_childchapterid(::google::protobuf::int32 value) {
  set_has_childchapterid();
  childchapterid_ = value;
  // @@protoc_insertion_point(field_set:GCGetBossRanks.childChapterId)
}

// optional int32 bossId = 3;
inline bool GCGetBossRanks::has_bossid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCGetBossRanks::set_has_bossid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCGetBossRanks::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCGetBossRanks::clear_bossid() {
  bossid_ = 0;
  clear_has_bossid();
}
inline ::google::protobuf::int32 GCGetBossRanks::bossid() const {
  // @@protoc_insertion_point(field_get:GCGetBossRanks.bossId)
  return bossid_;
}
inline void GCGetBossRanks::set_bossid(::google::protobuf::int32 value) {
  set_has_bossid();
  bossid_ = value;
  // @@protoc_insertion_point(field_set:GCGetBossRanks.bossId)
}

// repeated .BossRank ranks = 4;
inline int GCGetBossRanks::ranks_size() const {
  return ranks_.size();
}
inline void GCGetBossRanks::clear_ranks() {
  ranks_.Clear();
}
inline const ::BossRank& GCGetBossRanks::ranks(int index) const {
  // @@protoc_insertion_point(field_get:GCGetBossRanks.ranks)
  return ranks_.Get(index);
}
inline ::BossRank* GCGetBossRanks::mutable_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:GCGetBossRanks.ranks)
  return ranks_.Mutable(index);
}
inline ::BossRank* GCGetBossRanks::add_ranks() {
  // @@protoc_insertion_point(field_add:GCGetBossRanks.ranks)
  return ranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BossRank >&
GCGetBossRanks::ranks() const {
  // @@protoc_insertion_point(field_list:GCGetBossRanks.ranks)
  return ranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::BossRank >*
GCGetBossRanks::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:GCGetBossRanks.ranks)
  return &ranks_;
}

// -------------------------------------------------------------------

// GCPKBossResult

// optional int32 result = 1;
inline bool GCPKBossResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPKBossResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPKBossResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPKBossResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCPKBossResult::result() const {
  // @@protoc_insertion_point(field_get:GCPKBossResult.result)
  return result_;
}
inline void GCPKBossResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCPKBossResult.result)
}

// optional int32 starNum = 2;
inline bool GCPKBossResult::has_starnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCPKBossResult::set_has_starnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCPKBossResult::clear_has_starnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCPKBossResult::clear_starnum() {
  starnum_ = 0;
  clear_has_starnum();
}
inline ::google::protobuf::int32 GCPKBossResult::starnum() const {
  // @@protoc_insertion_point(field_get:GCPKBossResult.starNum)
  return starnum_;
}
inline void GCPKBossResult::set_starnum(::google::protobuf::int32 value) {
  set_has_starnum();
  starnum_ = value;
  // @@protoc_insertion_point(field_set:GCPKBossResult.starNum)
}

// optional int32 useSeconds = 4;
inline bool GCPKBossResult::has_useseconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCPKBossResult::set_has_useseconds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCPKBossResult::clear_has_useseconds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCPKBossResult::clear_useseconds() {
  useseconds_ = 0;
  clear_has_useseconds();
}
inline ::google::protobuf::int32 GCPKBossResult::useseconds() const {
  // @@protoc_insertion_point(field_get:GCPKBossResult.useSeconds)
  return useseconds_;
}
inline void GCPKBossResult::set_useseconds(::google::protobuf::int32 value) {
  set_has_useseconds();
  useseconds_ = value;
  // @@protoc_insertion_point(field_set:GCPKBossResult.useSeconds)
}

// optional int32 chapterId = 5;
inline bool GCPKBossResult::has_chapterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCPKBossResult::set_has_chapterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCPKBossResult::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCPKBossResult::clear_chapterid() {
  chapterid_ = 0;
  clear_has_chapterid();
}
inline ::google::protobuf::int32 GCPKBossResult::chapterid() const {
  // @@protoc_insertion_point(field_get:GCPKBossResult.chapterId)
  return chapterid_;
}
inline void GCPKBossResult::set_chapterid(::google::protobuf::int32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:GCPKBossResult.chapterId)
}

// optional int32 childChapterId = 6;
inline bool GCPKBossResult::has_childchapterid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCPKBossResult::set_has_childchapterid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCPKBossResult::clear_has_childchapterid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCPKBossResult::clear_childchapterid() {
  childchapterid_ = 0;
  clear_has_childchapterid();
}
inline ::google::protobuf::int32 GCPKBossResult::childchapterid() const {
  // @@protoc_insertion_point(field_get:GCPKBossResult.childChapterId)
  return childchapterid_;
}
inline void GCPKBossResult::set_childchapterid(::google::protobuf::int32 value) {
  set_has_childchapterid();
  childchapterid_ = value;
  // @@protoc_insertion_point(field_set:GCPKBossResult.childChapterId)
}

// optional int32 bossId = 7;
inline bool GCPKBossResult::has_bossid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCPKBossResult::set_has_bossid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCPKBossResult::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCPKBossResult::clear_bossid() {
  bossid_ = 0;
  clear_has_bossid();
}
inline ::google::protobuf::int32 GCPKBossResult::bossid() const {
  // @@protoc_insertion_point(field_get:GCPKBossResult.bossId)
  return bossid_;
}
inline void GCPKBossResult::set_bossid(::google::protobuf::int32 value) {
  set_has_bossid();
  bossid_ = value;
  // @@protoc_insertion_point(field_set:GCPKBossResult.bossId)
}

// -------------------------------------------------------------------

// CGGetPackRwd

// optional int32 chapterId = 1;
inline bool CGGetPackRwd::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetPackRwd::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetPackRwd::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetPackRwd::clear_chapterid() {
  chapterid_ = 0;
  clear_has_chapterid();
}
inline ::google::protobuf::int32 CGGetPackRwd::chapterid() const {
  // @@protoc_insertion_point(field_get:CGGetPackRwd.chapterId)
  return chapterid_;
}
inline void CGGetPackRwd::set_chapterid(::google::protobuf::int32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:CGGetPackRwd.chapterId)
}

// optional int32 childChapterId = 2;
inline bool CGGetPackRwd::has_childchapterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGGetPackRwd::set_has_childchapterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGGetPackRwd::clear_has_childchapterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGGetPackRwd::clear_childchapterid() {
  childchapterid_ = 0;
  clear_has_childchapterid();
}
inline ::google::protobuf::int32 CGGetPackRwd::childchapterid() const {
  // @@protoc_insertion_point(field_get:CGGetPackRwd.childChapterId)
  return childchapterid_;
}
inline void CGGetPackRwd::set_childchapterid(::google::protobuf::int32 value) {
  set_has_childchapterid();
  childchapterid_ = value;
  // @@protoc_insertion_point(field_set:CGGetPackRwd.childChapterId)
}

// optional int32 bossId = 3;
inline bool CGGetPackRwd::has_bossid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGGetPackRwd::set_has_bossid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGGetPackRwd::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGGetPackRwd::clear_bossid() {
  bossid_ = 0;
  clear_has_bossid();
}
inline ::google::protobuf::int32 CGGetPackRwd::bossid() const {
  // @@protoc_insertion_point(field_get:CGGetPackRwd.bossId)
  return bossid_;
}
inline void CGGetPackRwd::set_bossid(::google::protobuf::int32 value) {
  set_has_bossid();
  bossid_ = value;
  // @@protoc_insertion_point(field_set:CGGetPackRwd.bossId)
}

// -------------------------------------------------------------------

// CGExitPersonBoss

// optional int32 chapterId = 1;
inline bool CGExitPersonBoss::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGExitPersonBoss::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGExitPersonBoss::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGExitPersonBoss::clear_chapterid() {
  chapterid_ = 0;
  clear_has_chapterid();
}
inline ::google::protobuf::int32 CGExitPersonBoss::chapterid() const {
  // @@protoc_insertion_point(field_get:CGExitPersonBoss.chapterId)
  return chapterid_;
}
inline void CGExitPersonBoss::set_chapterid(::google::protobuf::int32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:CGExitPersonBoss.chapterId)
}

// optional int32 childChapterId = 2;
inline bool CGExitPersonBoss::has_childchapterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGExitPersonBoss::set_has_childchapterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGExitPersonBoss::clear_has_childchapterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGExitPersonBoss::clear_childchapterid() {
  childchapterid_ = 0;
  clear_has_childchapterid();
}
inline ::google::protobuf::int32 CGExitPersonBoss::childchapterid() const {
  // @@protoc_insertion_point(field_get:CGExitPersonBoss.childChapterId)
  return childchapterid_;
}
inline void CGExitPersonBoss::set_childchapterid(::google::protobuf::int32 value) {
  set_has_childchapterid();
  childchapterid_ = value;
  // @@protoc_insertion_point(field_set:CGExitPersonBoss.childChapterId)
}

// optional int32 bossId = 3;
inline bool CGExitPersonBoss::has_bossid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGExitPersonBoss::set_has_bossid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGExitPersonBoss::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGExitPersonBoss::clear_bossid() {
  bossid_ = 0;
  clear_has_bossid();
}
inline ::google::protobuf::int32 CGExitPersonBoss::bossid() const {
  // @@protoc_insertion_point(field_get:CGExitPersonBoss.bossId)
  return bossid_;
}
inline void CGExitPersonBoss::set_bossid(::google::protobuf::int32 value) {
  set_has_bossid();
  bossid_ = value;
  // @@protoc_insertion_point(field_set:CGExitPersonBoss.bossId)
}

// -------------------------------------------------------------------

// BossOpenSts

// optional int32 chapterId = 1;
inline bool BossOpenSts::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossOpenSts::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossOpenSts::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossOpenSts::clear_chapterid() {
  chapterid_ = 0;
  clear_has_chapterid();
}
inline ::google::protobuf::int32 BossOpenSts::chapterid() const {
  // @@protoc_insertion_point(field_get:BossOpenSts.chapterId)
  return chapterid_;
}
inline void BossOpenSts::set_chapterid(::google::protobuf::int32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:BossOpenSts.chapterId)
}

// optional int32 sts = 2;
inline bool BossOpenSts::has_sts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossOpenSts::set_has_sts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossOpenSts::clear_has_sts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossOpenSts::clear_sts() {
  sts_ = 0;
  clear_has_sts();
}
inline ::google::protobuf::int32 BossOpenSts::sts() const {
  // @@protoc_insertion_point(field_get:BossOpenSts.sts)
  return sts_;
}
inline void BossOpenSts::set_sts(::google::protobuf::int32 value) {
  set_has_sts();
  sts_ = value;
  // @@protoc_insertion_point(field_set:BossOpenSts.sts)
}

// -------------------------------------------------------------------

// GCPersonBossOpenSts

// repeated .BossOpenSts stsList = 1;
inline int GCPersonBossOpenSts::stslist_size() const {
  return stslist_.size();
}
inline void GCPersonBossOpenSts::clear_stslist() {
  stslist_.Clear();
}
inline const ::BossOpenSts& GCPersonBossOpenSts::stslist(int index) const {
  // @@protoc_insertion_point(field_get:GCPersonBossOpenSts.stsList)
  return stslist_.Get(index);
}
inline ::BossOpenSts* GCPersonBossOpenSts::mutable_stslist(int index) {
  // @@protoc_insertion_point(field_mutable:GCPersonBossOpenSts.stsList)
  return stslist_.Mutable(index);
}
inline ::BossOpenSts* GCPersonBossOpenSts::add_stslist() {
  // @@protoc_insertion_point(field_add:GCPersonBossOpenSts.stsList)
  return stslist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BossOpenSts >&
GCPersonBossOpenSts::stslist() const {
  // @@protoc_insertion_point(field_list:GCPersonBossOpenSts.stsList)
  return stslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::BossOpenSts >*
GCPersonBossOpenSts::mutable_stslist() {
  // @@protoc_insertion_point(field_mutable_list:GCPersonBossOpenSts.stsList)
  return &stslist_;
}

// -------------------------------------------------------------------

// GCClearBossData

// optional int32 chapterId = 1;
inline bool GCClearBossData::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCClearBossData::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCClearBossData::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCClearBossData::clear_chapterid() {
  chapterid_ = 0;
  clear_has_chapterid();
}
inline ::google::protobuf::int32 GCClearBossData::chapterid() const {
  // @@protoc_insertion_point(field_get:GCClearBossData.chapterId)
  return chapterid_;
}
inline void GCClearBossData::set_chapterid(::google::protobuf::int32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:GCClearBossData.chapterId)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DungeonMessage_2eproto__INCLUDED
