// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EquipMessage.proto

#ifndef PROTOBUF_EquipMessage_2eproto__INCLUDED
#define PROTOBUF_EquipMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "InnerMessage.pb.h"
#include "StoneMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_EquipMessage_2eproto();
void protobuf_AssignDesc_EquipMessage_2eproto();
void protobuf_ShutdownFile_EquipMessage_2eproto();

class EquipSlots;
class EquipInfo;
class EquipAttr;
class CGEquipOperate;
class GCEquipOperateResult;
class CGPlayerDetalitedInfo;
class GCSendPlayerDetalitedInfo;
class CGHorseEquipOperate;
class GCHorseEquipOperateResult;
class CGCreateEquip;
class GCCreateEquipResult;

// ===================================================================

class EquipSlots : public ::google::protobuf::Message {
 public:
  EquipSlots();
  virtual ~EquipSlots();

  EquipSlots(const EquipSlots& from);

  inline EquipSlots& operator=(const EquipSlots& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipSlots& default_instance();

  void Swap(EquipSlots* other);

  // implements Message ----------------------------------------------

  EquipSlots* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipSlots& from);
  void MergeFrom(const EquipSlots& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional .EquipInfo equipInfo = 2;
  inline bool has_equipinfo() const;
  inline void clear_equipinfo();
  static const int kEquipInfoFieldNumber = 2;
  inline const ::EquipInfo& equipinfo() const;
  inline ::EquipInfo* mutable_equipinfo();
  inline ::EquipInfo* release_equipinfo();
  inline void set_allocated_equipinfo(::EquipInfo* equipinfo);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // repeated .StoneInfo StoneList = 4;
  inline int stonelist_size() const;
  inline void clear_stonelist();
  static const int kStoneListFieldNumber = 4;
  inline const ::StoneInfo& stonelist(int index) const;
  inline ::StoneInfo* mutable_stonelist(int index);
  inline ::StoneInfo* add_stonelist();
  inline const ::google::protobuf::RepeatedPtrField< ::StoneInfo >&
      stonelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::StoneInfo >*
      mutable_stonelist();

  // @@protoc_insertion_point(class_scope:EquipSlots)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_equipinfo();
  inline void clear_has_equipinfo();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::EquipInfo* equipinfo_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::RepeatedPtrField< ::StoneInfo > stonelist_;
  friend void  protobuf_AddDesc_EquipMessage_2eproto();
  friend void protobuf_AssignDesc_EquipMessage_2eproto();
  friend void protobuf_ShutdownFile_EquipMessage_2eproto();

  void InitAsDefaultInstance();
  static EquipSlots* default_instance_;
};
// -------------------------------------------------------------------

class EquipInfo : public ::google::protobuf::Message {
 public:
  EquipInfo();
  virtual ~EquipInfo();

  EquipInfo(const EquipInfo& from);

  inline EquipInfo& operator=(const EquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipInfo& default_instance();

  void Swap(EquipInfo* other);

  // implements Message ----------------------------------------------

  EquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipInfo& from);
  void MergeFrom(const EquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 sid = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int32 bind = 3;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 3;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // optional int32 isEquiped = 4;
  inline bool has_isequiped() const;
  inline void clear_isequiped();
  static const int kIsEquipedFieldNumber = 4;
  inline ::google::protobuf::int32 isequiped() const;
  inline void set_isequiped(::google::protobuf::int32 value);

  // repeated .EquipAttr equipAttrs = 5;
  inline int equipattrs_size() const;
  inline void clear_equipattrs();
  static const int kEquipAttrsFieldNumber = 5;
  inline const ::EquipAttr& equipattrs(int index) const;
  inline ::EquipAttr* mutable_equipattrs(int index);
  inline ::EquipAttr* add_equipattrs();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipAttr >&
      equipattrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipAttr >*
      mutable_equipattrs();

  // optional string createName = 6;
  inline bool has_createname() const;
  inline void clear_createname();
  static const int kCreateNameFieldNumber = 6;
  inline const ::std::string& createname() const;
  inline void set_createname(const ::std::string& value);
  inline void set_createname(const char* value);
  inline void set_createname(const char* value, size_t size);
  inline ::std::string* mutable_createname();
  inline ::std::string* release_createname();
  inline void set_allocated_createname(::std::string* createname);

  // @@protoc_insertion_point(class_scope:EquipInfo)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_bind();
  inline void clear_has_bind();
  inline void set_has_isequiped();
  inline void clear_has_isequiped();
  inline void set_has_createname();
  inline void clear_has_createname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 bind_;
  ::google::protobuf::RepeatedPtrField< ::EquipAttr > equipattrs_;
  ::std::string* createname_;
  ::google::protobuf::int32 isequiped_;
  friend void  protobuf_AddDesc_EquipMessage_2eproto();
  friend void protobuf_AssignDesc_EquipMessage_2eproto();
  friend void protobuf_ShutdownFile_EquipMessage_2eproto();

  void InitAsDefaultInstance();
  static EquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class EquipAttr : public ::google::protobuf::Message {
 public:
  EquipAttr();
  virtual ~EquipAttr();

  EquipAttr(const EquipAttr& from);

  inline EquipAttr& operator=(const EquipAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipAttr& default_instance();

  void Swap(EquipAttr* other);

  // implements Message ----------------------------------------------

  EquipAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipAttr& from);
  void MergeFrom(const EquipAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 attrkey = 1;
  inline bool has_attrkey() const;
  inline void clear_attrkey();
  static const int kAttrkeyFieldNumber = 1;
  inline ::google::protobuf::int32 attrkey() const;
  inline void set_attrkey(::google::protobuf::int32 value);

  // optional int32 attrvalue = 2;
  inline bool has_attrvalue() const;
  inline void clear_attrvalue();
  static const int kAttrvalueFieldNumber = 2;
  inline ::google::protobuf::int32 attrvalue() const;
  inline void set_attrvalue(::google::protobuf::int32 value);

  // optional int32 viewflag = 3;
  inline bool has_viewflag() const;
  inline void clear_viewflag();
  static const int kViewflagFieldNumber = 3;
  inline ::google::protobuf::int32 viewflag() const;
  inline void set_viewflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EquipAttr)
 private:
  inline void set_has_attrkey();
  inline void clear_has_attrkey();
  inline void set_has_attrvalue();
  inline void clear_has_attrvalue();
  inline void set_has_viewflag();
  inline void clear_has_viewflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 attrkey_;
  ::google::protobuf::int32 attrvalue_;
  ::google::protobuf::int32 viewflag_;
  friend void  protobuf_AddDesc_EquipMessage_2eproto();
  friend void protobuf_AssignDesc_EquipMessage_2eproto();
  friend void protobuf_ShutdownFile_EquipMessage_2eproto();

  void InitAsDefaultInstance();
  static EquipAttr* default_instance_;
};
// -------------------------------------------------------------------

class CGEquipOperate : public ::google::protobuf::Message {
 public:
  CGEquipOperate();
  virtual ~CGEquipOperate();

  CGEquipOperate(const CGEquipOperate& from);

  inline CGEquipOperate& operator=(const CGEquipOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGEquipOperate& default_instance();

  void Swap(CGEquipOperate* other);

  // implements Message ----------------------------------------------

  CGEquipOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGEquipOperate& from);
  void MergeFrom(const CGEquipOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int32 gridID = 2;
  inline bool has_gridid() const;
  inline void clear_gridid();
  static const int kGridIDFieldNumber = 2;
  inline ::google::protobuf::int32 gridid() const;
  inline void set_gridid(::google::protobuf::int32 value);

  // optional int64 pid = 3;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 3;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 powertype = 4;
  inline bool has_powertype() const;
  inline void clear_powertype();
  static const int kPowertypeFieldNumber = 4;
  inline ::google::protobuf::int32 powertype() const;
  inline void set_powertype(::google::protobuf::int32 value);

  // optional int32 holeId = 5;
  inline bool has_holeid() const;
  inline void clear_holeid();
  static const int kHoleIdFieldNumber = 5;
  inline ::google::protobuf::int32 holeid() const;
  inline void set_holeid(::google::protobuf::int32 value);

  // optional int64 gemPid = 6;
  inline bool has_gempid() const;
  inline void clear_gempid();
  static const int kGemPidFieldNumber = 6;
  inline ::google::protobuf::int64 gempid() const;
  inline void set_gempid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGEquipOperate)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_gridid();
  inline void clear_has_gridid();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_powertype();
  inline void clear_has_powertype();
  inline void set_has_holeid();
  inline void clear_has_holeid();
  inline void set_has_gempid();
  inline void clear_has_gempid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 gridid_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 powertype_;
  ::google::protobuf::int32 holeid_;
  ::google::protobuf::int64 gempid_;
  friend void  protobuf_AddDesc_EquipMessage_2eproto();
  friend void protobuf_AssignDesc_EquipMessage_2eproto();
  friend void protobuf_ShutdownFile_EquipMessage_2eproto();

  void InitAsDefaultInstance();
  static CGEquipOperate* default_instance_;
};
// -------------------------------------------------------------------

class GCEquipOperateResult : public ::google::protobuf::Message {
 public:
  GCEquipOperateResult();
  virtual ~GCEquipOperateResult();

  GCEquipOperateResult(const GCEquipOperateResult& from);

  inline GCEquipOperateResult& operator=(const GCEquipOperateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCEquipOperateResult& default_instance();

  void Swap(GCEquipOperateResult* other);

  // implements Message ----------------------------------------------

  GCEquipOperateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCEquipOperateResult& from);
  void MergeFrom(const GCEquipOperateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // repeated .EquipSlots equipSlots = 2;
  inline int equipslots_size() const;
  inline void clear_equipslots();
  static const int kEquipSlotsFieldNumber = 2;
  inline const ::EquipSlots& equipslots(int index) const;
  inline ::EquipSlots* mutable_equipslots(int index);
  inline ::EquipSlots* add_equipslots();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipSlots >&
      equipslots() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipSlots >*
      mutable_equipslots();

  // optional int32 errorCode = 3;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 3;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCEquipOperateResult)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::EquipSlots > equipslots_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_EquipMessage_2eproto();
  friend void protobuf_AssignDesc_EquipMessage_2eproto();
  friend void protobuf_ShutdownFile_EquipMessage_2eproto();

  void InitAsDefaultInstance();
  static GCEquipOperateResult* default_instance_;
};
// -------------------------------------------------------------------

class CGPlayerDetalitedInfo : public ::google::protobuf::Message {
 public:
  CGPlayerDetalitedInfo();
  virtual ~CGPlayerDetalitedInfo();

  CGPlayerDetalitedInfo(const CGPlayerDetalitedInfo& from);

  inline CGPlayerDetalitedInfo& operator=(const CGPlayerDetalitedInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGPlayerDetalitedInfo& default_instance();

  void Swap(CGPlayerDetalitedInfo* other);

  // implements Message ----------------------------------------------

  CGPlayerDetalitedInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGPlayerDetalitedInfo& from);
  void MergeFrom(const CGPlayerDetalitedInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGPlayerDetalitedInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  friend void  protobuf_AddDesc_EquipMessage_2eproto();
  friend void protobuf_AssignDesc_EquipMessage_2eproto();
  friend void protobuf_ShutdownFile_EquipMessage_2eproto();

  void InitAsDefaultInstance();
  static CGPlayerDetalitedInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCSendPlayerDetalitedInfo : public ::google::protobuf::Message {
 public:
  GCSendPlayerDetalitedInfo();
  virtual ~GCSendPlayerDetalitedInfo();

  GCSendPlayerDetalitedInfo(const GCSendPlayerDetalitedInfo& from);

  inline GCSendPlayerDetalitedInfo& operator=(const GCSendPlayerDetalitedInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendPlayerDetalitedInfo& default_instance();

  void Swap(GCSendPlayerDetalitedInfo* other);

  // implements Message ----------------------------------------------

  GCSendPlayerDetalitedInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendPlayerDetalitedInfo& from);
  void MergeFrom(const GCSendPlayerDetalitedInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CharacterAttr charAttr = 1;
  inline int charattr_size() const;
  inline void clear_charattr();
  static const int kCharAttrFieldNumber = 1;
  inline const ::CharacterAttr& charattr(int index) const;
  inline ::CharacterAttr* mutable_charattr(int index);
  inline ::CharacterAttr* add_charattr();
  inline const ::google::protobuf::RepeatedPtrField< ::CharacterAttr >&
      charattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CharacterAttr >*
      mutable_charattr();

  // repeated .EquipInfo equipInfos = 2;
  inline int equipinfos_size() const;
  inline void clear_equipinfos();
  static const int kEquipInfosFieldNumber = 2;
  inline const ::EquipInfo& equipinfos(int index) const;
  inline ::EquipInfo* mutable_equipinfos(int index);
  inline ::EquipInfo* add_equipinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipInfo >&
      equipinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipInfo >*
      mutable_equipinfos();

  // optional int32 gemEffect = 3;
  inline bool has_gemeffect() const;
  inline void clear_gemeffect();
  static const int kGemEffectFieldNumber = 3;
  inline ::google::protobuf::int32 gemeffect() const;
  inline void set_gemeffect(::google::protobuf::int32 value);

  // repeated .EquipSlots equipSlots = 4;
  inline int equipslots_size() const;
  inline void clear_equipslots();
  static const int kEquipSlotsFieldNumber = 4;
  inline const ::EquipSlots& equipslots(int index) const;
  inline ::EquipSlots* mutable_equipslots(int index);
  inline ::EquipSlots* add_equipslots();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipSlots >&
      equipslots() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipSlots >*
      mutable_equipslots();

  // optional int32 slotEffect = 5;
  inline bool has_sloteffect() const;
  inline void clear_sloteffect();
  static const int kSlotEffectFieldNumber = 5;
  inline ::google::protobuf::int32 sloteffect() const;
  inline void set_sloteffect(::google::protobuf::int32 value);

  // optional int32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 iconid = 7;
  inline bool has_iconid() const;
  inline void clear_iconid();
  static const int kIconidFieldNumber = 7;
  inline ::google::protobuf::int32 iconid() const;
  inline void set_iconid(::google::protobuf::int32 value);

  // optional string gangName = 8;
  inline bool has_gangname() const;
  inline void clear_gangname();
  static const int kGangNameFieldNumber = 8;
  inline const ::std::string& gangname() const;
  inline void set_gangname(const ::std::string& value);
  inline void set_gangname(const char* value);
  inline void set_gangname(const char* value, size_t size);
  inline ::std::string* mutable_gangname();
  inline ::std::string* release_gangname();
  inline void set_allocated_gangname(::std::string* gangname);

  // optional int32 professionId = 9;
  inline bool has_professionid() const;
  inline void clear_professionid();
  static const int kProfessionIdFieldNumber = 9;
  inline ::google::protobuf::int32 professionid() const;
  inline void set_professionid(::google::protobuf::int32 value);

  // optional int32 vipLevel = 10;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 10;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // optional string playerName = 11;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 11;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // optional int32 battleNum = 12;
  inline bool has_battlenum() const;
  inline void clear_battlenum();
  static const int kBattleNumFieldNumber = 12;
  inline ::google::protobuf::int32 battlenum() const;
  inline void set_battlenum(::google::protobuf::int32 value);

  // repeated .StoneSlotInfo stoneSlotList = 13;
  inline int stoneslotlist_size() const;
  inline void clear_stoneslotlist();
  static const int kStoneSlotListFieldNumber = 13;
  inline const ::StoneSlotInfo& stoneslotlist(int index) const;
  inline ::StoneSlotInfo* mutable_stoneslotlist(int index);
  inline ::StoneSlotInfo* add_stoneslotlist();
  inline const ::google::protobuf::RepeatedPtrField< ::StoneSlotInfo >&
      stoneslotlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::StoneSlotInfo >*
      mutable_stoneslotlist();

  // optional .ChangeEquipInfo changeEquipInfo = 14;
  inline bool has_changeequipinfo() const;
  inline void clear_changeequipinfo();
  static const int kChangeEquipInfoFieldNumber = 14;
  inline const ::ChangeEquipInfo& changeequipinfo() const;
  inline ::ChangeEquipInfo* mutable_changeequipinfo();
  inline ::ChangeEquipInfo* release_changeequipinfo();
  inline void set_allocated_changeequipinfo(::ChangeEquipInfo* changeequipinfo);

  // optional int64 playerID = 15;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 15;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // optional string vipName = 16;
  inline bool has_vipname() const;
  inline void clear_vipname();
  static const int kVipNameFieldNumber = 16;
  inline const ::std::string& vipname() const;
  inline void set_vipname(const ::std::string& value);
  inline void set_vipname(const char* value);
  inline void set_vipname(const char* value, size_t size);
  inline ::std::string* mutable_vipname();
  inline ::std::string* release_vipname();
  inline void set_allocated_vipname(::std::string* vipname);

  // @@protoc_insertion_point(class_scope:GCSendPlayerDetalitedInfo)
 private:
  inline void set_has_gemeffect();
  inline void clear_has_gemeffect();
  inline void set_has_sloteffect();
  inline void clear_has_sloteffect();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_iconid();
  inline void clear_has_iconid();
  inline void set_has_gangname();
  inline void clear_has_gangname();
  inline void set_has_professionid();
  inline void clear_has_professionid();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_battlenum();
  inline void clear_has_battlenum();
  inline void set_has_changeequipinfo();
  inline void clear_has_changeequipinfo();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_vipname();
  inline void clear_has_vipname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CharacterAttr > charattr_;
  ::google::protobuf::RepeatedPtrField< ::EquipInfo > equipinfos_;
  ::google::protobuf::RepeatedPtrField< ::EquipSlots > equipslots_;
  ::google::protobuf::int32 gemeffect_;
  ::google::protobuf::int32 sloteffect_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 iconid_;
  ::std::string* gangname_;
  ::google::protobuf::int32 professionid_;
  ::google::protobuf::int32 viplevel_;
  ::std::string* playername_;
  ::google::protobuf::RepeatedPtrField< ::StoneSlotInfo > stoneslotlist_;
  ::ChangeEquipInfo* changeequipinfo_;
  ::google::protobuf::int64 playerid_;
  ::std::string* vipname_;
  ::google::protobuf::int32 battlenum_;
  friend void  protobuf_AddDesc_EquipMessage_2eproto();
  friend void protobuf_AssignDesc_EquipMessage_2eproto();
  friend void protobuf_ShutdownFile_EquipMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendPlayerDetalitedInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGHorseEquipOperate : public ::google::protobuf::Message {
 public:
  CGHorseEquipOperate();
  virtual ~CGHorseEquipOperate();

  CGHorseEquipOperate(const CGHorseEquipOperate& from);

  inline CGHorseEquipOperate& operator=(const CGHorseEquipOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGHorseEquipOperate& default_instance();

  void Swap(CGHorseEquipOperate* other);

  // implements Message ----------------------------------------------

  CGHorseEquipOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGHorseEquipOperate& from);
  void MergeFrom(const CGHorseEquipOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int32 gridID = 2;
  inline bool has_gridid() const;
  inline void clear_gridid();
  static const int kGridIDFieldNumber = 2;
  inline ::google::protobuf::int32 gridid() const;
  inline void set_gridid(::google::protobuf::int32 value);

  // optional int64 pid = 3;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 3;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 autoCost = 4;
  inline bool has_autocost() const;
  inline void clear_autocost();
  static const int kAutoCostFieldNumber = 4;
  inline ::google::protobuf::int32 autocost() const;
  inline void set_autocost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGHorseEquipOperate)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_gridid();
  inline void clear_has_gridid();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_autocost();
  inline void clear_has_autocost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 gridid_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 autocost_;
  friend void  protobuf_AddDesc_EquipMessage_2eproto();
  friend void protobuf_AssignDesc_EquipMessage_2eproto();
  friend void protobuf_ShutdownFile_EquipMessage_2eproto();

  void InitAsDefaultInstance();
  static CGHorseEquipOperate* default_instance_;
};
// -------------------------------------------------------------------

class GCHorseEquipOperateResult : public ::google::protobuf::Message {
 public:
  GCHorseEquipOperateResult();
  virtual ~GCHorseEquipOperateResult();

  GCHorseEquipOperateResult(const GCHorseEquipOperateResult& from);

  inline GCHorseEquipOperateResult& operator=(const GCHorseEquipOperateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCHorseEquipOperateResult& default_instance();

  void Swap(GCHorseEquipOperateResult* other);

  // implements Message ----------------------------------------------

  GCHorseEquipOperateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCHorseEquipOperateResult& from);
  void MergeFrom(const GCHorseEquipOperateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // repeated .EquipInfo equipInfos = 2;
  inline int equipinfos_size() const;
  inline void clear_equipinfos();
  static const int kEquipInfosFieldNumber = 2;
  inline const ::EquipInfo& equipinfos(int index) const;
  inline ::EquipInfo* mutable_equipinfos(int index);
  inline ::EquipInfo* add_equipinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipInfo >&
      equipinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipInfo >*
      mutable_equipinfos();

  // optional int32 errorCode = 3;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 3;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);

  // repeated int32 starSyms = 4;
  inline int starsyms_size() const;
  inline void clear_starsyms();
  static const int kStarSymsFieldNumber = 4;
  inline ::google::protobuf::int32 starsyms(int index) const;
  inline void set_starsyms(int index, ::google::protobuf::int32 value);
  inline void add_starsyms(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      starsyms() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_starsyms();

  // repeated int32 intensiveSyms = 5;
  inline int intensivesyms_size() const;
  inline void clear_intensivesyms();
  static const int kIntensiveSymsFieldNumber = 5;
  inline ::google::protobuf::int32 intensivesyms(int index) const;
  inline void set_intensivesyms(int index, ::google::protobuf::int32 value);
  inline void add_intensivesyms(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      intensivesyms() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_intensivesyms();

  // repeated int32 qualitySyms = 6;
  inline int qualitysyms_size() const;
  inline void clear_qualitysyms();
  static const int kQualitySymsFieldNumber = 6;
  inline ::google::protobuf::int32 qualitysyms(int index) const;
  inline void set_qualitysyms(int index, ::google::protobuf::int32 value);
  inline void add_qualitysyms(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      qualitysyms() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_qualitysyms();

  // optional int32 extendState = 7;
  inline bool has_extendstate() const;
  inline void clear_extendstate();
  static const int kExtendStateFieldNumber = 7;
  inline ::google::protobuf::int32 extendstate() const;
  inline void set_extendstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCHorseEquipOperateResult)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_extendstate();
  inline void clear_has_extendstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::EquipInfo > equipinfos_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > starsyms_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > intensivesyms_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > qualitysyms_;
  ::google::protobuf::int32 extendstate_;
  friend void  protobuf_AddDesc_EquipMessage_2eproto();
  friend void protobuf_AssignDesc_EquipMessage_2eproto();
  friend void protobuf_ShutdownFile_EquipMessage_2eproto();

  void InitAsDefaultInstance();
  static GCHorseEquipOperateResult* default_instance_;
};
// -------------------------------------------------------------------

class CGCreateEquip : public ::google::protobuf::Message {
 public:
  CGCreateEquip();
  virtual ~CGCreateEquip();

  CGCreateEquip(const CGCreateEquip& from);

  inline CGCreateEquip& operator=(const CGCreateEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCreateEquip& default_instance();

  void Swap(CGCreateEquip* other);

  // implements Message ----------------------------------------------

  CGCreateEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCreateEquip& from);
  void MergeFrom(const CGCreateEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 createListID = 1;
  inline bool has_createlistid() const;
  inline void clear_createlistid();
  static const int kCreateListIDFieldNumber = 1;
  inline ::google::protobuf::int32 createlistid() const;
  inline void set_createlistid(::google::protobuf::int32 value);

  // optional int32 createType = 2;
  inline bool has_createtype() const;
  inline void clear_createtype();
  static const int kCreateTypeFieldNumber = 2;
  inline ::google::protobuf::int32 createtype() const;
  inline void set_createtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGCreateEquip)
 private:
  inline void set_has_createlistid();
  inline void clear_has_createlistid();
  inline void set_has_createtype();
  inline void clear_has_createtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 createlistid_;
  ::google::protobuf::int32 createtype_;
  friend void  protobuf_AddDesc_EquipMessage_2eproto();
  friend void protobuf_AssignDesc_EquipMessage_2eproto();
  friend void protobuf_ShutdownFile_EquipMessage_2eproto();

  void InitAsDefaultInstance();
  static CGCreateEquip* default_instance_;
};
// -------------------------------------------------------------------

class GCCreateEquipResult : public ::google::protobuf::Message {
 public:
  GCCreateEquipResult();
  virtual ~GCCreateEquipResult();

  GCCreateEquipResult(const GCCreateEquipResult& from);

  inline GCCreateEquipResult& operator=(const GCCreateEquipResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCreateEquipResult& default_instance();

  void Swap(GCCreateEquipResult* other);

  // implements Message ----------------------------------------------

  GCCreateEquipResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCreateEquipResult& from);
  void MergeFrom(const GCCreateEquipResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .EquipInfo equipInfo = 2;
  inline bool has_equipinfo() const;
  inline void clear_equipinfo();
  static const int kEquipInfoFieldNumber = 2;
  inline const ::EquipInfo& equipinfo() const;
  inline ::EquipInfo* mutable_equipinfo();
  inline ::EquipInfo* release_equipinfo();
  inline void set_allocated_equipinfo(::EquipInfo* equipinfo);

  // @@protoc_insertion_point(class_scope:GCCreateEquipResult)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_equipinfo();
  inline void clear_has_equipinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::EquipInfo* equipinfo_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_EquipMessage_2eproto();
  friend void protobuf_AssignDesc_EquipMessage_2eproto();
  friend void protobuf_ShutdownFile_EquipMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCreateEquipResult* default_instance_;
};
// ===================================================================


// ===================================================================

// EquipSlots

// optional int32 type = 1;
inline bool EquipSlots::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipSlots::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipSlots::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipSlots::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 EquipSlots::type() const {
  // @@protoc_insertion_point(field_get:EquipSlots.type)
  return type_;
}
inline void EquipSlots::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:EquipSlots.type)
}

// optional .EquipInfo equipInfo = 2;
inline bool EquipSlots::has_equipinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipSlots::set_has_equipinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipSlots::clear_has_equipinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipSlots::clear_equipinfo() {
  if (equipinfo_ != NULL) equipinfo_->::EquipInfo::Clear();
  clear_has_equipinfo();
}
inline const ::EquipInfo& EquipSlots::equipinfo() const {
  // @@protoc_insertion_point(field_get:EquipSlots.equipInfo)
  return equipinfo_ != NULL ? *equipinfo_ : *default_instance_->equipinfo_;
}
inline ::EquipInfo* EquipSlots::mutable_equipinfo() {
  set_has_equipinfo();
  if (equipinfo_ == NULL) equipinfo_ = new ::EquipInfo;
  // @@protoc_insertion_point(field_mutable:EquipSlots.equipInfo)
  return equipinfo_;
}
inline ::EquipInfo* EquipSlots::release_equipinfo() {
  clear_has_equipinfo();
  ::EquipInfo* temp = equipinfo_;
  equipinfo_ = NULL;
  return temp;
}
inline void EquipSlots::set_allocated_equipinfo(::EquipInfo* equipinfo) {
  delete equipinfo_;
  equipinfo_ = equipinfo;
  if (equipinfo) {
    set_has_equipinfo();
  } else {
    clear_has_equipinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:EquipSlots.equipInfo)
}

// optional int32 level = 3;
inline bool EquipSlots::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipSlots::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipSlots::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipSlots::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 EquipSlots::level() const {
  // @@protoc_insertion_point(field_get:EquipSlots.level)
  return level_;
}
inline void EquipSlots::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:EquipSlots.level)
}

// repeated .StoneInfo StoneList = 4;
inline int EquipSlots::stonelist_size() const {
  return stonelist_.size();
}
inline void EquipSlots::clear_stonelist() {
  stonelist_.Clear();
}
inline const ::StoneInfo& EquipSlots::stonelist(int index) const {
  // @@protoc_insertion_point(field_get:EquipSlots.StoneList)
  return stonelist_.Get(index);
}
inline ::StoneInfo* EquipSlots::mutable_stonelist(int index) {
  // @@protoc_insertion_point(field_mutable:EquipSlots.StoneList)
  return stonelist_.Mutable(index);
}
inline ::StoneInfo* EquipSlots::add_stonelist() {
  // @@protoc_insertion_point(field_add:EquipSlots.StoneList)
  return stonelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::StoneInfo >&
EquipSlots::stonelist() const {
  // @@protoc_insertion_point(field_list:EquipSlots.StoneList)
  return stonelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::StoneInfo >*
EquipSlots::mutable_stonelist() {
  // @@protoc_insertion_point(field_mutable_list:EquipSlots.StoneList)
  return &stonelist_;
}

// -------------------------------------------------------------------

// EquipInfo

// optional int64 pid = 1;
inline bool EquipInfo::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipInfo::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipInfo::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipInfo::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 EquipInfo::pid() const {
  // @@protoc_insertion_point(field_get:EquipInfo.pid)
  return pid_;
}
inline void EquipInfo::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:EquipInfo.pid)
}

// optional int32 sid = 2;
inline bool EquipInfo::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipInfo::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipInfo::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipInfo::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 EquipInfo::sid() const {
  // @@protoc_insertion_point(field_get:EquipInfo.sid)
  return sid_;
}
inline void EquipInfo::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:EquipInfo.sid)
}

// optional int32 bind = 3;
inline bool EquipInfo::has_bind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipInfo::set_has_bind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipInfo::clear_has_bind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipInfo::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 EquipInfo::bind() const {
  // @@protoc_insertion_point(field_get:EquipInfo.bind)
  return bind_;
}
inline void EquipInfo::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
  // @@protoc_insertion_point(field_set:EquipInfo.bind)
}

// optional int32 isEquiped = 4;
inline bool EquipInfo::has_isequiped() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipInfo::set_has_isequiped() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipInfo::clear_has_isequiped() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipInfo::clear_isequiped() {
  isequiped_ = 0;
  clear_has_isequiped();
}
inline ::google::protobuf::int32 EquipInfo::isequiped() const {
  // @@protoc_insertion_point(field_get:EquipInfo.isEquiped)
  return isequiped_;
}
inline void EquipInfo::set_isequiped(::google::protobuf::int32 value) {
  set_has_isequiped();
  isequiped_ = value;
  // @@protoc_insertion_point(field_set:EquipInfo.isEquiped)
}

// repeated .EquipAttr equipAttrs = 5;
inline int EquipInfo::equipattrs_size() const {
  return equipattrs_.size();
}
inline void EquipInfo::clear_equipattrs() {
  equipattrs_.Clear();
}
inline const ::EquipAttr& EquipInfo::equipattrs(int index) const {
  // @@protoc_insertion_point(field_get:EquipInfo.equipAttrs)
  return equipattrs_.Get(index);
}
inline ::EquipAttr* EquipInfo::mutable_equipattrs(int index) {
  // @@protoc_insertion_point(field_mutable:EquipInfo.equipAttrs)
  return equipattrs_.Mutable(index);
}
inline ::EquipAttr* EquipInfo::add_equipattrs() {
  // @@protoc_insertion_point(field_add:EquipInfo.equipAttrs)
  return equipattrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipAttr >&
EquipInfo::equipattrs() const {
  // @@protoc_insertion_point(field_list:EquipInfo.equipAttrs)
  return equipattrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipAttr >*
EquipInfo::mutable_equipattrs() {
  // @@protoc_insertion_point(field_mutable_list:EquipInfo.equipAttrs)
  return &equipattrs_;
}

// optional string createName = 6;
inline bool EquipInfo::has_createname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EquipInfo::set_has_createname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EquipInfo::clear_has_createname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EquipInfo::clear_createname() {
  if (createname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createname_->clear();
  }
  clear_has_createname();
}
inline const ::std::string& EquipInfo::createname() const {
  // @@protoc_insertion_point(field_get:EquipInfo.createName)
  return *createname_;
}
inline void EquipInfo::set_createname(const ::std::string& value) {
  set_has_createname();
  if (createname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createname_ = new ::std::string;
  }
  createname_->assign(value);
  // @@protoc_insertion_point(field_set:EquipInfo.createName)
}
inline void EquipInfo::set_createname(const char* value) {
  set_has_createname();
  if (createname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createname_ = new ::std::string;
  }
  createname_->assign(value);
  // @@protoc_insertion_point(field_set_char:EquipInfo.createName)
}
inline void EquipInfo::set_createname(const char* value, size_t size) {
  set_has_createname();
  if (createname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createname_ = new ::std::string;
  }
  createname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:EquipInfo.createName)
}
inline ::std::string* EquipInfo::mutable_createname() {
  set_has_createname();
  if (createname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:EquipInfo.createName)
  return createname_;
}
inline ::std::string* EquipInfo::release_createname() {
  clear_has_createname();
  if (createname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = createname_;
    createname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EquipInfo::set_allocated_createname(::std::string* createname) {
  if (createname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createname_;
  }
  if (createname) {
    set_has_createname();
    createname_ = createname;
  } else {
    clear_has_createname();
    createname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:EquipInfo.createName)
}

// -------------------------------------------------------------------

// EquipAttr

// optional int32 attrkey = 1;
inline bool EquipAttr::has_attrkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipAttr::set_has_attrkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipAttr::clear_has_attrkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipAttr::clear_attrkey() {
  attrkey_ = 0;
  clear_has_attrkey();
}
inline ::google::protobuf::int32 EquipAttr::attrkey() const {
  // @@protoc_insertion_point(field_get:EquipAttr.attrkey)
  return attrkey_;
}
inline void EquipAttr::set_attrkey(::google::protobuf::int32 value) {
  set_has_attrkey();
  attrkey_ = value;
  // @@protoc_insertion_point(field_set:EquipAttr.attrkey)
}

// optional int32 attrvalue = 2;
inline bool EquipAttr::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipAttr::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipAttr::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipAttr::clear_attrvalue() {
  attrvalue_ = 0;
  clear_has_attrvalue();
}
inline ::google::protobuf::int32 EquipAttr::attrvalue() const {
  // @@protoc_insertion_point(field_get:EquipAttr.attrvalue)
  return attrvalue_;
}
inline void EquipAttr::set_attrvalue(::google::protobuf::int32 value) {
  set_has_attrvalue();
  attrvalue_ = value;
  // @@protoc_insertion_point(field_set:EquipAttr.attrvalue)
}

// optional int32 viewflag = 3;
inline bool EquipAttr::has_viewflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipAttr::set_has_viewflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipAttr::clear_has_viewflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipAttr::clear_viewflag() {
  viewflag_ = 0;
  clear_has_viewflag();
}
inline ::google::protobuf::int32 EquipAttr::viewflag() const {
  // @@protoc_insertion_point(field_get:EquipAttr.viewflag)
  return viewflag_;
}
inline void EquipAttr::set_viewflag(::google::protobuf::int32 value) {
  set_has_viewflag();
  viewflag_ = value;
  // @@protoc_insertion_point(field_set:EquipAttr.viewflag)
}

// -------------------------------------------------------------------

// CGEquipOperate

// optional int32 operate = 1;
inline bool CGEquipOperate::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGEquipOperate::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGEquipOperate::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGEquipOperate::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 CGEquipOperate::operate() const {
  // @@protoc_insertion_point(field_get:CGEquipOperate.operate)
  return operate_;
}
inline void CGEquipOperate::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:CGEquipOperate.operate)
}

// optional int32 gridID = 2;
inline bool CGEquipOperate::has_gridid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGEquipOperate::set_has_gridid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGEquipOperate::clear_has_gridid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGEquipOperate::clear_gridid() {
  gridid_ = 0;
  clear_has_gridid();
}
inline ::google::protobuf::int32 CGEquipOperate::gridid() const {
  // @@protoc_insertion_point(field_get:CGEquipOperate.gridID)
  return gridid_;
}
inline void CGEquipOperate::set_gridid(::google::protobuf::int32 value) {
  set_has_gridid();
  gridid_ = value;
  // @@protoc_insertion_point(field_set:CGEquipOperate.gridID)
}

// optional int64 pid = 3;
inline bool CGEquipOperate::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGEquipOperate::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGEquipOperate::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGEquipOperate::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGEquipOperate::pid() const {
  // @@protoc_insertion_point(field_get:CGEquipOperate.pid)
  return pid_;
}
inline void CGEquipOperate::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGEquipOperate.pid)
}

// optional int32 powertype = 4;
inline bool CGEquipOperate::has_powertype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGEquipOperate::set_has_powertype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGEquipOperate::clear_has_powertype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGEquipOperate::clear_powertype() {
  powertype_ = 0;
  clear_has_powertype();
}
inline ::google::protobuf::int32 CGEquipOperate::powertype() const {
  // @@protoc_insertion_point(field_get:CGEquipOperate.powertype)
  return powertype_;
}
inline void CGEquipOperate::set_powertype(::google::protobuf::int32 value) {
  set_has_powertype();
  powertype_ = value;
  // @@protoc_insertion_point(field_set:CGEquipOperate.powertype)
}

// optional int32 holeId = 5;
inline bool CGEquipOperate::has_holeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGEquipOperate::set_has_holeid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGEquipOperate::clear_has_holeid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGEquipOperate::clear_holeid() {
  holeid_ = 0;
  clear_has_holeid();
}
inline ::google::protobuf::int32 CGEquipOperate::holeid() const {
  // @@protoc_insertion_point(field_get:CGEquipOperate.holeId)
  return holeid_;
}
inline void CGEquipOperate::set_holeid(::google::protobuf::int32 value) {
  set_has_holeid();
  holeid_ = value;
  // @@protoc_insertion_point(field_set:CGEquipOperate.holeId)
}

// optional int64 gemPid = 6;
inline bool CGEquipOperate::has_gempid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGEquipOperate::set_has_gempid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CGEquipOperate::clear_has_gempid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CGEquipOperate::clear_gempid() {
  gempid_ = GOOGLE_LONGLONG(0);
  clear_has_gempid();
}
inline ::google::protobuf::int64 CGEquipOperate::gempid() const {
  // @@protoc_insertion_point(field_get:CGEquipOperate.gemPid)
  return gempid_;
}
inline void CGEquipOperate::set_gempid(::google::protobuf::int64 value) {
  set_has_gempid();
  gempid_ = value;
  // @@protoc_insertion_point(field_set:CGEquipOperate.gemPid)
}

// -------------------------------------------------------------------

// GCEquipOperateResult

// optional int32 operate = 1;
inline bool GCEquipOperateResult::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCEquipOperateResult::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCEquipOperateResult::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCEquipOperateResult::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 GCEquipOperateResult::operate() const {
  // @@protoc_insertion_point(field_get:GCEquipOperateResult.operate)
  return operate_;
}
inline void GCEquipOperateResult::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:GCEquipOperateResult.operate)
}

// repeated .EquipSlots equipSlots = 2;
inline int GCEquipOperateResult::equipslots_size() const {
  return equipslots_.size();
}
inline void GCEquipOperateResult::clear_equipslots() {
  equipslots_.Clear();
}
inline const ::EquipSlots& GCEquipOperateResult::equipslots(int index) const {
  // @@protoc_insertion_point(field_get:GCEquipOperateResult.equipSlots)
  return equipslots_.Get(index);
}
inline ::EquipSlots* GCEquipOperateResult::mutable_equipslots(int index) {
  // @@protoc_insertion_point(field_mutable:GCEquipOperateResult.equipSlots)
  return equipslots_.Mutable(index);
}
inline ::EquipSlots* GCEquipOperateResult::add_equipslots() {
  // @@protoc_insertion_point(field_add:GCEquipOperateResult.equipSlots)
  return equipslots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipSlots >&
GCEquipOperateResult::equipslots() const {
  // @@protoc_insertion_point(field_list:GCEquipOperateResult.equipSlots)
  return equipslots_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipSlots >*
GCEquipOperateResult::mutable_equipslots() {
  // @@protoc_insertion_point(field_mutable_list:GCEquipOperateResult.equipSlots)
  return &equipslots_;
}

// optional int32 errorCode = 3;
inline bool GCEquipOperateResult::has_errorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCEquipOperateResult::set_has_errorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCEquipOperateResult::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCEquipOperateResult::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 GCEquipOperateResult::errorcode() const {
  // @@protoc_insertion_point(field_get:GCEquipOperateResult.errorCode)
  return errorcode_;
}
inline void GCEquipOperateResult::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:GCEquipOperateResult.errorCode)
}

// -------------------------------------------------------------------

// CGPlayerDetalitedInfo

// optional int64 playerID = 1;
inline bool CGPlayerDetalitedInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGPlayerDetalitedInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGPlayerDetalitedInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGPlayerDetalitedInfo::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CGPlayerDetalitedInfo::playerid() const {
  // @@protoc_insertion_point(field_get:CGPlayerDetalitedInfo.playerID)
  return playerid_;
}
inline void CGPlayerDetalitedInfo::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CGPlayerDetalitedInfo.playerID)
}

// -------------------------------------------------------------------

// GCSendPlayerDetalitedInfo

// repeated .CharacterAttr charAttr = 1;
inline int GCSendPlayerDetalitedInfo::charattr_size() const {
  return charattr_.size();
}
inline void GCSendPlayerDetalitedInfo::clear_charattr() {
  charattr_.Clear();
}
inline const ::CharacterAttr& GCSendPlayerDetalitedInfo::charattr(int index) const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.charAttr)
  return charattr_.Get(index);
}
inline ::CharacterAttr* GCSendPlayerDetalitedInfo::mutable_charattr(int index) {
  // @@protoc_insertion_point(field_mutable:GCSendPlayerDetalitedInfo.charAttr)
  return charattr_.Mutable(index);
}
inline ::CharacterAttr* GCSendPlayerDetalitedInfo::add_charattr() {
  // @@protoc_insertion_point(field_add:GCSendPlayerDetalitedInfo.charAttr)
  return charattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CharacterAttr >&
GCSendPlayerDetalitedInfo::charattr() const {
  // @@protoc_insertion_point(field_list:GCSendPlayerDetalitedInfo.charAttr)
  return charattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CharacterAttr >*
GCSendPlayerDetalitedInfo::mutable_charattr() {
  // @@protoc_insertion_point(field_mutable_list:GCSendPlayerDetalitedInfo.charAttr)
  return &charattr_;
}

// repeated .EquipInfo equipInfos = 2;
inline int GCSendPlayerDetalitedInfo::equipinfos_size() const {
  return equipinfos_.size();
}
inline void GCSendPlayerDetalitedInfo::clear_equipinfos() {
  equipinfos_.Clear();
}
inline const ::EquipInfo& GCSendPlayerDetalitedInfo::equipinfos(int index) const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.equipInfos)
  return equipinfos_.Get(index);
}
inline ::EquipInfo* GCSendPlayerDetalitedInfo::mutable_equipinfos(int index) {
  // @@protoc_insertion_point(field_mutable:GCSendPlayerDetalitedInfo.equipInfos)
  return equipinfos_.Mutable(index);
}
inline ::EquipInfo* GCSendPlayerDetalitedInfo::add_equipinfos() {
  // @@protoc_insertion_point(field_add:GCSendPlayerDetalitedInfo.equipInfos)
  return equipinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipInfo >&
GCSendPlayerDetalitedInfo::equipinfos() const {
  // @@protoc_insertion_point(field_list:GCSendPlayerDetalitedInfo.equipInfos)
  return equipinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipInfo >*
GCSendPlayerDetalitedInfo::mutable_equipinfos() {
  // @@protoc_insertion_point(field_mutable_list:GCSendPlayerDetalitedInfo.equipInfos)
  return &equipinfos_;
}

// optional int32 gemEffect = 3;
inline bool GCSendPlayerDetalitedInfo::has_gemeffect() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSendPlayerDetalitedInfo::set_has_gemeffect() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSendPlayerDetalitedInfo::clear_has_gemeffect() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSendPlayerDetalitedInfo::clear_gemeffect() {
  gemeffect_ = 0;
  clear_has_gemeffect();
}
inline ::google::protobuf::int32 GCSendPlayerDetalitedInfo::gemeffect() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.gemEffect)
  return gemeffect_;
}
inline void GCSendPlayerDetalitedInfo::set_gemeffect(::google::protobuf::int32 value) {
  set_has_gemeffect();
  gemeffect_ = value;
  // @@protoc_insertion_point(field_set:GCSendPlayerDetalitedInfo.gemEffect)
}

// repeated .EquipSlots equipSlots = 4;
inline int GCSendPlayerDetalitedInfo::equipslots_size() const {
  return equipslots_.size();
}
inline void GCSendPlayerDetalitedInfo::clear_equipslots() {
  equipslots_.Clear();
}
inline const ::EquipSlots& GCSendPlayerDetalitedInfo::equipslots(int index) const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.equipSlots)
  return equipslots_.Get(index);
}
inline ::EquipSlots* GCSendPlayerDetalitedInfo::mutable_equipslots(int index) {
  // @@protoc_insertion_point(field_mutable:GCSendPlayerDetalitedInfo.equipSlots)
  return equipslots_.Mutable(index);
}
inline ::EquipSlots* GCSendPlayerDetalitedInfo::add_equipslots() {
  // @@protoc_insertion_point(field_add:GCSendPlayerDetalitedInfo.equipSlots)
  return equipslots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipSlots >&
GCSendPlayerDetalitedInfo::equipslots() const {
  // @@protoc_insertion_point(field_list:GCSendPlayerDetalitedInfo.equipSlots)
  return equipslots_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipSlots >*
GCSendPlayerDetalitedInfo::mutable_equipslots() {
  // @@protoc_insertion_point(field_mutable_list:GCSendPlayerDetalitedInfo.equipSlots)
  return &equipslots_;
}

// optional int32 slotEffect = 5;
inline bool GCSendPlayerDetalitedInfo::has_sloteffect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCSendPlayerDetalitedInfo::set_has_sloteffect() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCSendPlayerDetalitedInfo::clear_has_sloteffect() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCSendPlayerDetalitedInfo::clear_sloteffect() {
  sloteffect_ = 0;
  clear_has_sloteffect();
}
inline ::google::protobuf::int32 GCSendPlayerDetalitedInfo::sloteffect() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.slotEffect)
  return sloteffect_;
}
inline void GCSendPlayerDetalitedInfo::set_sloteffect(::google::protobuf::int32 value) {
  set_has_sloteffect();
  sloteffect_ = value;
  // @@protoc_insertion_point(field_set:GCSendPlayerDetalitedInfo.slotEffect)
}

// optional int32 level = 6;
inline bool GCSendPlayerDetalitedInfo::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCSendPlayerDetalitedInfo::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCSendPlayerDetalitedInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCSendPlayerDetalitedInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GCSendPlayerDetalitedInfo::level() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.level)
  return level_;
}
inline void GCSendPlayerDetalitedInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GCSendPlayerDetalitedInfo.level)
}

// optional int32 iconid = 7;
inline bool GCSendPlayerDetalitedInfo::has_iconid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GCSendPlayerDetalitedInfo::set_has_iconid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GCSendPlayerDetalitedInfo::clear_has_iconid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GCSendPlayerDetalitedInfo::clear_iconid() {
  iconid_ = 0;
  clear_has_iconid();
}
inline ::google::protobuf::int32 GCSendPlayerDetalitedInfo::iconid() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.iconid)
  return iconid_;
}
inline void GCSendPlayerDetalitedInfo::set_iconid(::google::protobuf::int32 value) {
  set_has_iconid();
  iconid_ = value;
  // @@protoc_insertion_point(field_set:GCSendPlayerDetalitedInfo.iconid)
}

// optional string gangName = 8;
inline bool GCSendPlayerDetalitedInfo::has_gangname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GCSendPlayerDetalitedInfo::set_has_gangname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GCSendPlayerDetalitedInfo::clear_has_gangname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GCSendPlayerDetalitedInfo::clear_gangname() {
  if (gangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_->clear();
  }
  clear_has_gangname();
}
inline const ::std::string& GCSendPlayerDetalitedInfo::gangname() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.gangName)
  return *gangname_;
}
inline void GCSendPlayerDetalitedInfo::set_gangname(const ::std::string& value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
  // @@protoc_insertion_point(field_set:GCSendPlayerDetalitedInfo.gangName)
}
inline void GCSendPlayerDetalitedInfo::set_gangname(const char* value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCSendPlayerDetalitedInfo.gangName)
}
inline void GCSendPlayerDetalitedInfo::set_gangname(const char* value, size_t size) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCSendPlayerDetalitedInfo.gangName)
}
inline ::std::string* GCSendPlayerDetalitedInfo::mutable_gangname() {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCSendPlayerDetalitedInfo.gangName)
  return gangname_;
}
inline ::std::string* GCSendPlayerDetalitedInfo::release_gangname() {
  clear_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gangname_;
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCSendPlayerDetalitedInfo::set_allocated_gangname(::std::string* gangname) {
  if (gangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gangname_;
  }
  if (gangname) {
    set_has_gangname();
    gangname_ = gangname;
  } else {
    clear_has_gangname();
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCSendPlayerDetalitedInfo.gangName)
}

// optional int32 professionId = 9;
inline bool GCSendPlayerDetalitedInfo::has_professionid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GCSendPlayerDetalitedInfo::set_has_professionid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GCSendPlayerDetalitedInfo::clear_has_professionid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GCSendPlayerDetalitedInfo::clear_professionid() {
  professionid_ = 0;
  clear_has_professionid();
}
inline ::google::protobuf::int32 GCSendPlayerDetalitedInfo::professionid() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.professionId)
  return professionid_;
}
inline void GCSendPlayerDetalitedInfo::set_professionid(::google::protobuf::int32 value) {
  set_has_professionid();
  professionid_ = value;
  // @@protoc_insertion_point(field_set:GCSendPlayerDetalitedInfo.professionId)
}

// optional int32 vipLevel = 10;
inline bool GCSendPlayerDetalitedInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GCSendPlayerDetalitedInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GCSendPlayerDetalitedInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GCSendPlayerDetalitedInfo::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 GCSendPlayerDetalitedInfo::viplevel() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.vipLevel)
  return viplevel_;
}
inline void GCSendPlayerDetalitedInfo::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:GCSendPlayerDetalitedInfo.vipLevel)
}

// optional string playerName = 11;
inline bool GCSendPlayerDetalitedInfo::has_playername() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GCSendPlayerDetalitedInfo::set_has_playername() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GCSendPlayerDetalitedInfo::clear_has_playername() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GCSendPlayerDetalitedInfo::clear_playername() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& GCSendPlayerDetalitedInfo::playername() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.playerName)
  return *playername_;
}
inline void GCSendPlayerDetalitedInfo::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set:GCSendPlayerDetalitedInfo.playerName)
}
inline void GCSendPlayerDetalitedInfo::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCSendPlayerDetalitedInfo.playerName)
}
inline void GCSendPlayerDetalitedInfo::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCSendPlayerDetalitedInfo.playerName)
}
inline ::std::string* GCSendPlayerDetalitedInfo::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCSendPlayerDetalitedInfo.playerName)
  return playername_;
}
inline ::std::string* GCSendPlayerDetalitedInfo::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCSendPlayerDetalitedInfo::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCSendPlayerDetalitedInfo.playerName)
}

// optional int32 battleNum = 12;
inline bool GCSendPlayerDetalitedInfo::has_battlenum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GCSendPlayerDetalitedInfo::set_has_battlenum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GCSendPlayerDetalitedInfo::clear_has_battlenum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GCSendPlayerDetalitedInfo::clear_battlenum() {
  battlenum_ = 0;
  clear_has_battlenum();
}
inline ::google::protobuf::int32 GCSendPlayerDetalitedInfo::battlenum() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.battleNum)
  return battlenum_;
}
inline void GCSendPlayerDetalitedInfo::set_battlenum(::google::protobuf::int32 value) {
  set_has_battlenum();
  battlenum_ = value;
  // @@protoc_insertion_point(field_set:GCSendPlayerDetalitedInfo.battleNum)
}

// repeated .StoneSlotInfo stoneSlotList = 13;
inline int GCSendPlayerDetalitedInfo::stoneslotlist_size() const {
  return stoneslotlist_.size();
}
inline void GCSendPlayerDetalitedInfo::clear_stoneslotlist() {
  stoneslotlist_.Clear();
}
inline const ::StoneSlotInfo& GCSendPlayerDetalitedInfo::stoneslotlist(int index) const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.stoneSlotList)
  return stoneslotlist_.Get(index);
}
inline ::StoneSlotInfo* GCSendPlayerDetalitedInfo::mutable_stoneslotlist(int index) {
  // @@protoc_insertion_point(field_mutable:GCSendPlayerDetalitedInfo.stoneSlotList)
  return stoneslotlist_.Mutable(index);
}
inline ::StoneSlotInfo* GCSendPlayerDetalitedInfo::add_stoneslotlist() {
  // @@protoc_insertion_point(field_add:GCSendPlayerDetalitedInfo.stoneSlotList)
  return stoneslotlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::StoneSlotInfo >&
GCSendPlayerDetalitedInfo::stoneslotlist() const {
  // @@protoc_insertion_point(field_list:GCSendPlayerDetalitedInfo.stoneSlotList)
  return stoneslotlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::StoneSlotInfo >*
GCSendPlayerDetalitedInfo::mutable_stoneslotlist() {
  // @@protoc_insertion_point(field_mutable_list:GCSendPlayerDetalitedInfo.stoneSlotList)
  return &stoneslotlist_;
}

// optional .ChangeEquipInfo changeEquipInfo = 14;
inline bool GCSendPlayerDetalitedInfo::has_changeequipinfo() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GCSendPlayerDetalitedInfo::set_has_changeequipinfo() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GCSendPlayerDetalitedInfo::clear_has_changeequipinfo() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GCSendPlayerDetalitedInfo::clear_changeequipinfo() {
  if (changeequipinfo_ != NULL) changeequipinfo_->::ChangeEquipInfo::Clear();
  clear_has_changeequipinfo();
}
inline const ::ChangeEquipInfo& GCSendPlayerDetalitedInfo::changeequipinfo() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.changeEquipInfo)
  return changeequipinfo_ != NULL ? *changeequipinfo_ : *default_instance_->changeequipinfo_;
}
inline ::ChangeEquipInfo* GCSendPlayerDetalitedInfo::mutable_changeequipinfo() {
  set_has_changeequipinfo();
  if (changeequipinfo_ == NULL) changeequipinfo_ = new ::ChangeEquipInfo;
  // @@protoc_insertion_point(field_mutable:GCSendPlayerDetalitedInfo.changeEquipInfo)
  return changeequipinfo_;
}
inline ::ChangeEquipInfo* GCSendPlayerDetalitedInfo::release_changeequipinfo() {
  clear_has_changeequipinfo();
  ::ChangeEquipInfo* temp = changeequipinfo_;
  changeequipinfo_ = NULL;
  return temp;
}
inline void GCSendPlayerDetalitedInfo::set_allocated_changeequipinfo(::ChangeEquipInfo* changeequipinfo) {
  delete changeequipinfo_;
  changeequipinfo_ = changeequipinfo;
  if (changeequipinfo) {
    set_has_changeequipinfo();
  } else {
    clear_has_changeequipinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSendPlayerDetalitedInfo.changeEquipInfo)
}

// optional int64 playerID = 15;
inline bool GCSendPlayerDetalitedInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GCSendPlayerDetalitedInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GCSendPlayerDetalitedInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GCSendPlayerDetalitedInfo::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 GCSendPlayerDetalitedInfo::playerid() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.playerID)
  return playerid_;
}
inline void GCSendPlayerDetalitedInfo::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:GCSendPlayerDetalitedInfo.playerID)
}

// optional string vipName = 16;
inline bool GCSendPlayerDetalitedInfo::has_vipname() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GCSendPlayerDetalitedInfo::set_has_vipname() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GCSendPlayerDetalitedInfo::clear_has_vipname() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GCSendPlayerDetalitedInfo::clear_vipname() {
  if (vipname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vipname_->clear();
  }
  clear_has_vipname();
}
inline const ::std::string& GCSendPlayerDetalitedInfo::vipname() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerDetalitedInfo.vipName)
  return *vipname_;
}
inline void GCSendPlayerDetalitedInfo::set_vipname(const ::std::string& value) {
  set_has_vipname();
  if (vipname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vipname_ = new ::std::string;
  }
  vipname_->assign(value);
  // @@protoc_insertion_point(field_set:GCSendPlayerDetalitedInfo.vipName)
}
inline void GCSendPlayerDetalitedInfo::set_vipname(const char* value) {
  set_has_vipname();
  if (vipname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vipname_ = new ::std::string;
  }
  vipname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCSendPlayerDetalitedInfo.vipName)
}
inline void GCSendPlayerDetalitedInfo::set_vipname(const char* value, size_t size) {
  set_has_vipname();
  if (vipname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vipname_ = new ::std::string;
  }
  vipname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCSendPlayerDetalitedInfo.vipName)
}
inline ::std::string* GCSendPlayerDetalitedInfo::mutable_vipname() {
  set_has_vipname();
  if (vipname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vipname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCSendPlayerDetalitedInfo.vipName)
  return vipname_;
}
inline ::std::string* GCSendPlayerDetalitedInfo::release_vipname() {
  clear_has_vipname();
  if (vipname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = vipname_;
    vipname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCSendPlayerDetalitedInfo::set_allocated_vipname(::std::string* vipname) {
  if (vipname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vipname_;
  }
  if (vipname) {
    set_has_vipname();
    vipname_ = vipname;
  } else {
    clear_has_vipname();
    vipname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCSendPlayerDetalitedInfo.vipName)
}

// -------------------------------------------------------------------

// CGHorseEquipOperate

// optional int32 operate = 1;
inline bool CGHorseEquipOperate::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGHorseEquipOperate::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGHorseEquipOperate::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGHorseEquipOperate::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 CGHorseEquipOperate::operate() const {
  // @@protoc_insertion_point(field_get:CGHorseEquipOperate.operate)
  return operate_;
}
inline void CGHorseEquipOperate::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:CGHorseEquipOperate.operate)
}

// optional int32 gridID = 2;
inline bool CGHorseEquipOperate::has_gridid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGHorseEquipOperate::set_has_gridid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGHorseEquipOperate::clear_has_gridid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGHorseEquipOperate::clear_gridid() {
  gridid_ = 0;
  clear_has_gridid();
}
inline ::google::protobuf::int32 CGHorseEquipOperate::gridid() const {
  // @@protoc_insertion_point(field_get:CGHorseEquipOperate.gridID)
  return gridid_;
}
inline void CGHorseEquipOperate::set_gridid(::google::protobuf::int32 value) {
  set_has_gridid();
  gridid_ = value;
  // @@protoc_insertion_point(field_set:CGHorseEquipOperate.gridID)
}

// optional int64 pid = 3;
inline bool CGHorseEquipOperate::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGHorseEquipOperate::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGHorseEquipOperate::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGHorseEquipOperate::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGHorseEquipOperate::pid() const {
  // @@protoc_insertion_point(field_get:CGHorseEquipOperate.pid)
  return pid_;
}
inline void CGHorseEquipOperate::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGHorseEquipOperate.pid)
}

// optional int32 autoCost = 4;
inline bool CGHorseEquipOperate::has_autocost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGHorseEquipOperate::set_has_autocost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGHorseEquipOperate::clear_has_autocost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGHorseEquipOperate::clear_autocost() {
  autocost_ = 0;
  clear_has_autocost();
}
inline ::google::protobuf::int32 CGHorseEquipOperate::autocost() const {
  // @@protoc_insertion_point(field_get:CGHorseEquipOperate.autoCost)
  return autocost_;
}
inline void CGHorseEquipOperate::set_autocost(::google::protobuf::int32 value) {
  set_has_autocost();
  autocost_ = value;
  // @@protoc_insertion_point(field_set:CGHorseEquipOperate.autoCost)
}

// -------------------------------------------------------------------

// GCHorseEquipOperateResult

// optional int32 operate = 1;
inline bool GCHorseEquipOperateResult::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCHorseEquipOperateResult::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCHorseEquipOperateResult::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCHorseEquipOperateResult::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 GCHorseEquipOperateResult::operate() const {
  // @@protoc_insertion_point(field_get:GCHorseEquipOperateResult.operate)
  return operate_;
}
inline void GCHorseEquipOperateResult::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:GCHorseEquipOperateResult.operate)
}

// repeated .EquipInfo equipInfos = 2;
inline int GCHorseEquipOperateResult::equipinfos_size() const {
  return equipinfos_.size();
}
inline void GCHorseEquipOperateResult::clear_equipinfos() {
  equipinfos_.Clear();
}
inline const ::EquipInfo& GCHorseEquipOperateResult::equipinfos(int index) const {
  // @@protoc_insertion_point(field_get:GCHorseEquipOperateResult.equipInfos)
  return equipinfos_.Get(index);
}
inline ::EquipInfo* GCHorseEquipOperateResult::mutable_equipinfos(int index) {
  // @@protoc_insertion_point(field_mutable:GCHorseEquipOperateResult.equipInfos)
  return equipinfos_.Mutable(index);
}
inline ::EquipInfo* GCHorseEquipOperateResult::add_equipinfos() {
  // @@protoc_insertion_point(field_add:GCHorseEquipOperateResult.equipInfos)
  return equipinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipInfo >&
GCHorseEquipOperateResult::equipinfos() const {
  // @@protoc_insertion_point(field_list:GCHorseEquipOperateResult.equipInfos)
  return equipinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipInfo >*
GCHorseEquipOperateResult::mutable_equipinfos() {
  // @@protoc_insertion_point(field_mutable_list:GCHorseEquipOperateResult.equipInfos)
  return &equipinfos_;
}

// optional int32 errorCode = 3;
inline bool GCHorseEquipOperateResult::has_errorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCHorseEquipOperateResult::set_has_errorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCHorseEquipOperateResult::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCHorseEquipOperateResult::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 GCHorseEquipOperateResult::errorcode() const {
  // @@protoc_insertion_point(field_get:GCHorseEquipOperateResult.errorCode)
  return errorcode_;
}
inline void GCHorseEquipOperateResult::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:GCHorseEquipOperateResult.errorCode)
}

// repeated int32 starSyms = 4;
inline int GCHorseEquipOperateResult::starsyms_size() const {
  return starsyms_.size();
}
inline void GCHorseEquipOperateResult::clear_starsyms() {
  starsyms_.Clear();
}
inline ::google::protobuf::int32 GCHorseEquipOperateResult::starsyms(int index) const {
  // @@protoc_insertion_point(field_get:GCHorseEquipOperateResult.starSyms)
  return starsyms_.Get(index);
}
inline void GCHorseEquipOperateResult::set_starsyms(int index, ::google::protobuf::int32 value) {
  starsyms_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCHorseEquipOperateResult.starSyms)
}
inline void GCHorseEquipOperateResult::add_starsyms(::google::protobuf::int32 value) {
  starsyms_.Add(value);
  // @@protoc_insertion_point(field_add:GCHorseEquipOperateResult.starSyms)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCHorseEquipOperateResult::starsyms() const {
  // @@protoc_insertion_point(field_list:GCHorseEquipOperateResult.starSyms)
  return starsyms_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCHorseEquipOperateResult::mutable_starsyms() {
  // @@protoc_insertion_point(field_mutable_list:GCHorseEquipOperateResult.starSyms)
  return &starsyms_;
}

// repeated int32 intensiveSyms = 5;
inline int GCHorseEquipOperateResult::intensivesyms_size() const {
  return intensivesyms_.size();
}
inline void GCHorseEquipOperateResult::clear_intensivesyms() {
  intensivesyms_.Clear();
}
inline ::google::protobuf::int32 GCHorseEquipOperateResult::intensivesyms(int index) const {
  // @@protoc_insertion_point(field_get:GCHorseEquipOperateResult.intensiveSyms)
  return intensivesyms_.Get(index);
}
inline void GCHorseEquipOperateResult::set_intensivesyms(int index, ::google::protobuf::int32 value) {
  intensivesyms_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCHorseEquipOperateResult.intensiveSyms)
}
inline void GCHorseEquipOperateResult::add_intensivesyms(::google::protobuf::int32 value) {
  intensivesyms_.Add(value);
  // @@protoc_insertion_point(field_add:GCHorseEquipOperateResult.intensiveSyms)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCHorseEquipOperateResult::intensivesyms() const {
  // @@protoc_insertion_point(field_list:GCHorseEquipOperateResult.intensiveSyms)
  return intensivesyms_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCHorseEquipOperateResult::mutable_intensivesyms() {
  // @@protoc_insertion_point(field_mutable_list:GCHorseEquipOperateResult.intensiveSyms)
  return &intensivesyms_;
}

// repeated int32 qualitySyms = 6;
inline int GCHorseEquipOperateResult::qualitysyms_size() const {
  return qualitysyms_.size();
}
inline void GCHorseEquipOperateResult::clear_qualitysyms() {
  qualitysyms_.Clear();
}
inline ::google::protobuf::int32 GCHorseEquipOperateResult::qualitysyms(int index) const {
  // @@protoc_insertion_point(field_get:GCHorseEquipOperateResult.qualitySyms)
  return qualitysyms_.Get(index);
}
inline void GCHorseEquipOperateResult::set_qualitysyms(int index, ::google::protobuf::int32 value) {
  qualitysyms_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCHorseEquipOperateResult.qualitySyms)
}
inline void GCHorseEquipOperateResult::add_qualitysyms(::google::protobuf::int32 value) {
  qualitysyms_.Add(value);
  // @@protoc_insertion_point(field_add:GCHorseEquipOperateResult.qualitySyms)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCHorseEquipOperateResult::qualitysyms() const {
  // @@protoc_insertion_point(field_list:GCHorseEquipOperateResult.qualitySyms)
  return qualitysyms_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCHorseEquipOperateResult::mutable_qualitysyms() {
  // @@protoc_insertion_point(field_mutable_list:GCHorseEquipOperateResult.qualitySyms)
  return &qualitysyms_;
}

// optional int32 extendState = 7;
inline bool GCHorseEquipOperateResult::has_extendstate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GCHorseEquipOperateResult::set_has_extendstate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GCHorseEquipOperateResult::clear_has_extendstate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GCHorseEquipOperateResult::clear_extendstate() {
  extendstate_ = 0;
  clear_has_extendstate();
}
inline ::google::protobuf::int32 GCHorseEquipOperateResult::extendstate() const {
  // @@protoc_insertion_point(field_get:GCHorseEquipOperateResult.extendState)
  return extendstate_;
}
inline void GCHorseEquipOperateResult::set_extendstate(::google::protobuf::int32 value) {
  set_has_extendstate();
  extendstate_ = value;
  // @@protoc_insertion_point(field_set:GCHorseEquipOperateResult.extendState)
}

// -------------------------------------------------------------------

// CGCreateEquip

// optional int32 createListID = 1;
inline bool CGCreateEquip::has_createlistid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCreateEquip::set_has_createlistid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCreateEquip::clear_has_createlistid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCreateEquip::clear_createlistid() {
  createlistid_ = 0;
  clear_has_createlistid();
}
inline ::google::protobuf::int32 CGCreateEquip::createlistid() const {
  // @@protoc_insertion_point(field_get:CGCreateEquip.createListID)
  return createlistid_;
}
inline void CGCreateEquip::set_createlistid(::google::protobuf::int32 value) {
  set_has_createlistid();
  createlistid_ = value;
  // @@protoc_insertion_point(field_set:CGCreateEquip.createListID)
}

// optional int32 createType = 2;
inline bool CGCreateEquip::has_createtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCreateEquip::set_has_createtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCreateEquip::clear_has_createtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCreateEquip::clear_createtype() {
  createtype_ = 0;
  clear_has_createtype();
}
inline ::google::protobuf::int32 CGCreateEquip::createtype() const {
  // @@protoc_insertion_point(field_get:CGCreateEquip.createType)
  return createtype_;
}
inline void CGCreateEquip::set_createtype(::google::protobuf::int32 value) {
  set_has_createtype();
  createtype_ = value;
  // @@protoc_insertion_point(field_set:CGCreateEquip.createType)
}

// -------------------------------------------------------------------

// GCCreateEquipResult

// optional int32 result = 1;
inline bool GCCreateEquipResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCCreateEquipResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCCreateEquipResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCCreateEquipResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCCreateEquipResult::result() const {
  // @@protoc_insertion_point(field_get:GCCreateEquipResult.result)
  return result_;
}
inline void GCCreateEquipResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCCreateEquipResult.result)
}

// optional .EquipInfo equipInfo = 2;
inline bool GCCreateEquipResult::has_equipinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCCreateEquipResult::set_has_equipinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCCreateEquipResult::clear_has_equipinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCCreateEquipResult::clear_equipinfo() {
  if (equipinfo_ != NULL) equipinfo_->::EquipInfo::Clear();
  clear_has_equipinfo();
}
inline const ::EquipInfo& GCCreateEquipResult::equipinfo() const {
  // @@protoc_insertion_point(field_get:GCCreateEquipResult.equipInfo)
  return equipinfo_ != NULL ? *equipinfo_ : *default_instance_->equipinfo_;
}
inline ::EquipInfo* GCCreateEquipResult::mutable_equipinfo() {
  set_has_equipinfo();
  if (equipinfo_ == NULL) equipinfo_ = new ::EquipInfo;
  // @@protoc_insertion_point(field_mutable:GCCreateEquipResult.equipInfo)
  return equipinfo_;
}
inline ::EquipInfo* GCCreateEquipResult::release_equipinfo() {
  clear_has_equipinfo();
  ::EquipInfo* temp = equipinfo_;
  equipinfo_ = NULL;
  return temp;
}
inline void GCCreateEquipResult::set_allocated_equipinfo(::EquipInfo* equipinfo) {
  delete equipinfo_;
  equipinfo_ = equipinfo;
  if (equipinfo) {
    set_has_equipinfo();
  } else {
    clear_has_equipinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCCreateEquipResult.equipInfo)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EquipMessage_2eproto__INCLUDED
