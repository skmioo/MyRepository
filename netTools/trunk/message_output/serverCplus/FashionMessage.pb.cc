// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FashionMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "FashionMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GCBackFashionData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCBackFashionData_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSwitchFashionData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSwitchFashionData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCSwitchFashionDataBack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCSwitchFashionDataBack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGBuyFashionData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGBuyFashionData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCBuyFashionDataBack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCBuyFashionDataBack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGMakeFashionData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGMakeFashionData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCMakeFashionDataBack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCMakeFashionDataBack_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCCreateCharacterInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCCreateCharacterInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_FashionMessage_2eproto() {
  protobuf_AddDesc_FashionMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "FashionMessage.proto");
  GOOGLE_CHECK(file != NULL);
  GCBackFashionData_descriptor_ = file->message_type(0);
  static const int GCBackFashionData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCBackFashionData, playerfashion_),
  };
  GCBackFashionData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCBackFashionData_descriptor_,
      GCBackFashionData::default_instance_,
      GCBackFashionData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCBackFashionData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCBackFashionData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCBackFashionData));
  CGSwitchFashionData_descriptor_ = file->message_type(1);
  static const int CGSwitchFashionData_offsets_[1] = {
  };
  CGSwitchFashionData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CGSwitchFashionData_descriptor_,
      CGSwitchFashionData::default_instance_,
      CGSwitchFashionData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSwitchFashionData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSwitchFashionData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CGSwitchFashionData));
  GCSwitchFashionDataBack_descriptor_ = file->message_type(2);
  static const int GCSwitchFashionDataBack_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCSwitchFashionDataBack, flag_),
  };
  GCSwitchFashionDataBack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCSwitchFashionDataBack_descriptor_,
      GCSwitchFashionDataBack::default_instance_,
      GCSwitchFashionDataBack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCSwitchFashionDataBack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCSwitchFashionDataBack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCSwitchFashionDataBack));
  CGBuyFashionData_descriptor_ = file->message_type(3);
  static const int CGBuyFashionData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGBuyFashionData, tableid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGBuyFashionData, timetype_),
  };
  CGBuyFashionData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CGBuyFashionData_descriptor_,
      CGBuyFashionData::default_instance_,
      CGBuyFashionData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGBuyFashionData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGBuyFashionData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CGBuyFashionData));
  GCBuyFashionDataBack_descriptor_ = file->message_type(4);
  static const int GCBuyFashionDataBack_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCBuyFashionDataBack, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCBuyFashionDataBack, playerfashion_),
  };
  GCBuyFashionDataBack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCBuyFashionDataBack_descriptor_,
      GCBuyFashionDataBack::default_instance_,
      GCBuyFashionDataBack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCBuyFashionDataBack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCBuyFashionDataBack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCBuyFashionDataBack));
  CGMakeFashionData_descriptor_ = file->message_type(5);
  static const int CGMakeFashionData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGMakeFashionData, serverid_),
  };
  CGMakeFashionData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CGMakeFashionData_descriptor_,
      CGMakeFashionData::default_instance_,
      CGMakeFashionData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGMakeFashionData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGMakeFashionData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CGMakeFashionData));
  GCMakeFashionDataBack_descriptor_ = file->message_type(6);
  static const int GCMakeFashionDataBack_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCMakeFashionDataBack, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCMakeFashionDataBack, playerfashion_),
  };
  GCMakeFashionDataBack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCMakeFashionDataBack_descriptor_,
      GCMakeFashionDataBack::default_instance_,
      GCMakeFashionDataBack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCMakeFashionDataBack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCMakeFashionDataBack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCMakeFashionDataBack));
  GCCreateCharacterInfo_descriptor_ = file->message_type(7);
  static const int GCCreateCharacterInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCCreateCharacterInfo, characterinfo_),
  };
  GCCreateCharacterInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCCreateCharacterInfo_descriptor_,
      GCCreateCharacterInfo::default_instance_,
      GCCreateCharacterInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCCreateCharacterInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCCreateCharacterInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCCreateCharacterInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_FashionMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCBackFashionData_descriptor_, &GCBackFashionData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CGSwitchFashionData_descriptor_, &CGSwitchFashionData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCSwitchFashionDataBack_descriptor_, &GCSwitchFashionDataBack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CGBuyFashionData_descriptor_, &CGBuyFashionData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCBuyFashionDataBack_descriptor_, &GCBuyFashionDataBack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CGMakeFashionData_descriptor_, &CGMakeFashionData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCMakeFashionDataBack_descriptor_, &GCMakeFashionDataBack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCCreateCharacterInfo_descriptor_, &GCCreateCharacterInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_FashionMessage_2eproto() {
  delete GCBackFashionData::default_instance_;
  delete GCBackFashionData_reflection_;
  delete CGSwitchFashionData::default_instance_;
  delete CGSwitchFashionData_reflection_;
  delete GCSwitchFashionDataBack::default_instance_;
  delete GCSwitchFashionDataBack_reflection_;
  delete CGBuyFashionData::default_instance_;
  delete CGBuyFashionData_reflection_;
  delete GCBuyFashionDataBack::default_instance_;
  delete GCBuyFashionDataBack_reflection_;
  delete CGMakeFashionData::default_instance_;
  delete CGMakeFashionData_reflection_;
  delete GCMakeFashionDataBack::default_instance_;
  delete GCMakeFashionDataBack_reflection_;
  delete GCCreateCharacterInfo::default_instance_;
  delete GCCreateCharacterInfo_reflection_;
}

void protobuf_AddDesc_FashionMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_InnerMessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024FashionMessage.proto\032\022InnerMessage.pro"
    "to\":\n\021GCBackFashionData\022%\n\rplayerfashion"
    "\030\001 \003(\0132\016.PlayerFashion\"\025\n\023CGSwitchFashio"
    "nData\"\'\n\027GCSwitchFashionDataBack\022\014\n\004flag"
    "\030\001 \001(\005\"5\n\020CGBuyFashionData\022\017\n\007tableid\030\001 "
    "\001(\005\022\020\n\010timetype\030\002 \001(\005\"K\n\024GCBuyFashionDat"
    "aBack\022\014\n\004flag\030\001 \001(\005\022%\n\rplayerfashion\030\002 \003"
    "(\0132\016.PlayerFashion\"%\n\021CGMakeFashionData\022"
    "\020\n\010serverid\030\001 \001(\003\"L\n\025GCMakeFashionDataBa"
    "ck\022\014\n\004flag\030\001 \001(\005\022%\n\rplayerfashion\030\002 \003(\0132"
    "\016.PlayerFashion\">\n\025GCCreateCharacterInfo"
    "\022%\n\rcharacterInfo\030\001 \001(\0132\016.CharacterInfoB"
    "\031\n\027com.mile.common.message", 506);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FashionMessage.proto", &protobuf_RegisterTypes);
  GCBackFashionData::default_instance_ = new GCBackFashionData();
  CGSwitchFashionData::default_instance_ = new CGSwitchFashionData();
  GCSwitchFashionDataBack::default_instance_ = new GCSwitchFashionDataBack();
  CGBuyFashionData::default_instance_ = new CGBuyFashionData();
  GCBuyFashionDataBack::default_instance_ = new GCBuyFashionDataBack();
  CGMakeFashionData::default_instance_ = new CGMakeFashionData();
  GCMakeFashionDataBack::default_instance_ = new GCMakeFashionDataBack();
  GCCreateCharacterInfo::default_instance_ = new GCCreateCharacterInfo();
  GCBackFashionData::default_instance_->InitAsDefaultInstance();
  CGSwitchFashionData::default_instance_->InitAsDefaultInstance();
  GCSwitchFashionDataBack::default_instance_->InitAsDefaultInstance();
  CGBuyFashionData::default_instance_->InitAsDefaultInstance();
  GCBuyFashionDataBack::default_instance_->InitAsDefaultInstance();
  CGMakeFashionData::default_instance_->InitAsDefaultInstance();
  GCMakeFashionDataBack::default_instance_->InitAsDefaultInstance();
  GCCreateCharacterInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_FashionMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_FashionMessage_2eproto {
  StaticDescriptorInitializer_FashionMessage_2eproto() {
    protobuf_AddDesc_FashionMessage_2eproto();
  }
} static_descriptor_initializer_FashionMessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int GCBackFashionData::kPlayerfashionFieldNumber;
#endif  // !_MSC_VER

GCBackFashionData::GCBackFashionData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCBackFashionData)
}

void GCBackFashionData::InitAsDefaultInstance() {
}

GCBackFashionData::GCBackFashionData(const GCBackFashionData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCBackFashionData)
}

void GCBackFashionData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCBackFashionData::~GCBackFashionData() {
  // @@protoc_insertion_point(destructor:GCBackFashionData)
  SharedDtor();
}

void GCBackFashionData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GCBackFashionData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCBackFashionData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCBackFashionData_descriptor_;
}

const GCBackFashionData& GCBackFashionData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FashionMessage_2eproto();
  return *default_instance_;
}

GCBackFashionData* GCBackFashionData::default_instance_ = NULL;

GCBackFashionData* GCBackFashionData::New() const {
  return new GCBackFashionData;
}

void GCBackFashionData::Clear() {
  playerfashion_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCBackFashionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCBackFashionData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PlayerFashion playerfashion = 1;
      case 1: {
        if (tag == 10) {
         parse_playerfashion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_playerfashion()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_playerfashion;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCBackFashionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCBackFashionData)
  return false;
#undef DO_
}

void GCBackFashionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCBackFashionData)
  // repeated .PlayerFashion playerfashion = 1;
  for (int i = 0; i < this->playerfashion_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->playerfashion(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCBackFashionData)
}

::google::protobuf::uint8* GCBackFashionData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCBackFashionData)
  // repeated .PlayerFashion playerfashion = 1;
  for (int i = 0; i < this->playerfashion_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->playerfashion(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCBackFashionData)
  return target;
}

int GCBackFashionData::ByteSize() const {
  int total_size = 0;

  // repeated .PlayerFashion playerfashion = 1;
  total_size += 1 * this->playerfashion_size();
  for (int i = 0; i < this->playerfashion_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->playerfashion(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCBackFashionData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCBackFashionData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCBackFashionData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCBackFashionData::MergeFrom(const GCBackFashionData& from) {
  GOOGLE_CHECK_NE(&from, this);
  playerfashion_.MergeFrom(from.playerfashion_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCBackFashionData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCBackFashionData::CopyFrom(const GCBackFashionData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCBackFashionData::IsInitialized() const {

  return true;
}

void GCBackFashionData::Swap(GCBackFashionData* other) {
  if (other != this) {
    playerfashion_.Swap(&other->playerfashion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCBackFashionData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCBackFashionData_descriptor_;
  metadata.reflection = GCBackFashionData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CGSwitchFashionData::CGSwitchFashionData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGSwitchFashionData)
}

void CGSwitchFashionData::InitAsDefaultInstance() {
}

CGSwitchFashionData::CGSwitchFashionData(const CGSwitchFashionData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGSwitchFashionData)
}

void CGSwitchFashionData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSwitchFashionData::~CGSwitchFashionData() {
  // @@protoc_insertion_point(destructor:CGSwitchFashionData)
  SharedDtor();
}

void CGSwitchFashionData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSwitchFashionData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSwitchFashionData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSwitchFashionData_descriptor_;
}

const CGSwitchFashionData& CGSwitchFashionData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FashionMessage_2eproto();
  return *default_instance_;
}

CGSwitchFashionData* CGSwitchFashionData::default_instance_ = NULL;

CGSwitchFashionData* CGSwitchFashionData::New() const {
  return new CGSwitchFashionData;
}

void CGSwitchFashionData::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CGSwitchFashionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGSwitchFashionData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CGSwitchFashionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGSwitchFashionData)
  return false;
#undef DO_
}

void CGSwitchFashionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGSwitchFashionData)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGSwitchFashionData)
}

::google::protobuf::uint8* CGSwitchFashionData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGSwitchFashionData)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGSwitchFashionData)
  return target;
}

int CGSwitchFashionData::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSwitchFashionData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CGSwitchFashionData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CGSwitchFashionData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSwitchFashionData::MergeFrom(const CGSwitchFashionData& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CGSwitchFashionData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSwitchFashionData::CopyFrom(const CGSwitchFashionData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSwitchFashionData::IsInitialized() const {

  return true;
}

void CGSwitchFashionData::Swap(CGSwitchFashionData* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CGSwitchFashionData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSwitchFashionData_descriptor_;
  metadata.reflection = CGSwitchFashionData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCSwitchFashionDataBack::kFlagFieldNumber;
#endif  // !_MSC_VER

GCSwitchFashionDataBack::GCSwitchFashionDataBack()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCSwitchFashionDataBack)
}

void GCSwitchFashionDataBack::InitAsDefaultInstance() {
}

GCSwitchFashionDataBack::GCSwitchFashionDataBack(const GCSwitchFashionDataBack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCSwitchFashionDataBack)
}

void GCSwitchFashionDataBack::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCSwitchFashionDataBack::~GCSwitchFashionDataBack() {
  // @@protoc_insertion_point(destructor:GCSwitchFashionDataBack)
  SharedDtor();
}

void GCSwitchFashionDataBack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GCSwitchFashionDataBack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCSwitchFashionDataBack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCSwitchFashionDataBack_descriptor_;
}

const GCSwitchFashionDataBack& GCSwitchFashionDataBack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FashionMessage_2eproto();
  return *default_instance_;
}

GCSwitchFashionDataBack* GCSwitchFashionDataBack::default_instance_ = NULL;

GCSwitchFashionDataBack* GCSwitchFashionDataBack::New() const {
  return new GCSwitchFashionDataBack;
}

void GCSwitchFashionDataBack::Clear() {
  flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCSwitchFashionDataBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCSwitchFashionDataBack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCSwitchFashionDataBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCSwitchFashionDataBack)
  return false;
#undef DO_
}

void GCSwitchFashionDataBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCSwitchFashionDataBack)
  // optional int32 flag = 1;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCSwitchFashionDataBack)
}

::google::protobuf::uint8* GCSwitchFashionDataBack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCSwitchFashionDataBack)
  // optional int32 flag = 1;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCSwitchFashionDataBack)
  return target;
}

int GCSwitchFashionDataBack::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag = 1;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCSwitchFashionDataBack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCSwitchFashionDataBack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCSwitchFashionDataBack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCSwitchFashionDataBack::MergeFrom(const GCSwitchFashionDataBack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCSwitchFashionDataBack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCSwitchFashionDataBack::CopyFrom(const GCSwitchFashionDataBack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCSwitchFashionDataBack::IsInitialized() const {

  return true;
}

void GCSwitchFashionDataBack::Swap(GCSwitchFashionDataBack* other) {
  if (other != this) {
    std::swap(flag_, other->flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCSwitchFashionDataBack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCSwitchFashionDataBack_descriptor_;
  metadata.reflection = GCSwitchFashionDataBack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CGBuyFashionData::kTableidFieldNumber;
const int CGBuyFashionData::kTimetypeFieldNumber;
#endif  // !_MSC_VER

CGBuyFashionData::CGBuyFashionData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGBuyFashionData)
}

void CGBuyFashionData::InitAsDefaultInstance() {
}

CGBuyFashionData::CGBuyFashionData(const CGBuyFashionData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGBuyFashionData)
}

void CGBuyFashionData::SharedCtor() {
  _cached_size_ = 0;
  tableid_ = 0;
  timetype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGBuyFashionData::~CGBuyFashionData() {
  // @@protoc_insertion_point(destructor:CGBuyFashionData)
  SharedDtor();
}

void CGBuyFashionData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGBuyFashionData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGBuyFashionData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGBuyFashionData_descriptor_;
}

const CGBuyFashionData& CGBuyFashionData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FashionMessage_2eproto();
  return *default_instance_;
}

CGBuyFashionData* CGBuyFashionData::default_instance_ = NULL;

CGBuyFashionData* CGBuyFashionData::New() const {
  return new CGBuyFashionData;
}

void CGBuyFashionData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CGBuyFashionData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tableid_, timetype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CGBuyFashionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGBuyFashionData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tableid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tableid_)));
          set_has_tableid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timetype;
        break;
      }

      // optional int32 timetype = 2;
      case 2: {
        if (tag == 16) {
         parse_timetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timetype_)));
          set_has_timetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGBuyFashionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGBuyFashionData)
  return false;
#undef DO_
}

void CGBuyFashionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGBuyFashionData)
  // optional int32 tableid = 1;
  if (has_tableid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tableid(), output);
  }

  // optional int32 timetype = 2;
  if (has_timetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->timetype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGBuyFashionData)
}

::google::protobuf::uint8* CGBuyFashionData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGBuyFashionData)
  // optional int32 tableid = 1;
  if (has_tableid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tableid(), target);
  }

  // optional int32 timetype = 2;
  if (has_timetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->timetype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGBuyFashionData)
  return target;
}

int CGBuyFashionData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 tableid = 1;
    if (has_tableid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tableid());
    }

    // optional int32 timetype = 2;
    if (has_timetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timetype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGBuyFashionData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CGBuyFashionData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CGBuyFashionData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGBuyFashionData::MergeFrom(const CGBuyFashionData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tableid()) {
      set_tableid(from.tableid());
    }
    if (from.has_timetype()) {
      set_timetype(from.timetype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CGBuyFashionData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGBuyFashionData::CopyFrom(const CGBuyFashionData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGBuyFashionData::IsInitialized() const {

  return true;
}

void CGBuyFashionData::Swap(CGBuyFashionData* other) {
  if (other != this) {
    std::swap(tableid_, other->tableid_);
    std::swap(timetype_, other->timetype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CGBuyFashionData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGBuyFashionData_descriptor_;
  metadata.reflection = CGBuyFashionData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCBuyFashionDataBack::kFlagFieldNumber;
const int GCBuyFashionDataBack::kPlayerfashionFieldNumber;
#endif  // !_MSC_VER

GCBuyFashionDataBack::GCBuyFashionDataBack()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCBuyFashionDataBack)
}

void GCBuyFashionDataBack::InitAsDefaultInstance() {
}

GCBuyFashionDataBack::GCBuyFashionDataBack(const GCBuyFashionDataBack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCBuyFashionDataBack)
}

void GCBuyFashionDataBack::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCBuyFashionDataBack::~GCBuyFashionDataBack() {
  // @@protoc_insertion_point(destructor:GCBuyFashionDataBack)
  SharedDtor();
}

void GCBuyFashionDataBack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GCBuyFashionDataBack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCBuyFashionDataBack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCBuyFashionDataBack_descriptor_;
}

const GCBuyFashionDataBack& GCBuyFashionDataBack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FashionMessage_2eproto();
  return *default_instance_;
}

GCBuyFashionDataBack* GCBuyFashionDataBack::default_instance_ = NULL;

GCBuyFashionDataBack* GCBuyFashionDataBack::New() const {
  return new GCBuyFashionDataBack;
}

void GCBuyFashionDataBack::Clear() {
  flag_ = 0;
  playerfashion_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCBuyFashionDataBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCBuyFashionDataBack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_playerfashion;
        break;
      }

      // repeated .PlayerFashion playerfashion = 2;
      case 2: {
        if (tag == 18) {
         parse_playerfashion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_playerfashion()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_playerfashion;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCBuyFashionDataBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCBuyFashionDataBack)
  return false;
#undef DO_
}

void GCBuyFashionDataBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCBuyFashionDataBack)
  // optional int32 flag = 1;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }

  // repeated .PlayerFashion playerfashion = 2;
  for (int i = 0; i < this->playerfashion_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->playerfashion(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCBuyFashionDataBack)
}

::google::protobuf::uint8* GCBuyFashionDataBack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCBuyFashionDataBack)
  // optional int32 flag = 1;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }

  // repeated .PlayerFashion playerfashion = 2;
  for (int i = 0; i < this->playerfashion_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->playerfashion(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCBuyFashionDataBack)
  return target;
}

int GCBuyFashionDataBack::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag = 1;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }

  }
  // repeated .PlayerFashion playerfashion = 2;
  total_size += 1 * this->playerfashion_size();
  for (int i = 0; i < this->playerfashion_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->playerfashion(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCBuyFashionDataBack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCBuyFashionDataBack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCBuyFashionDataBack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCBuyFashionDataBack::MergeFrom(const GCBuyFashionDataBack& from) {
  GOOGLE_CHECK_NE(&from, this);
  playerfashion_.MergeFrom(from.playerfashion_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCBuyFashionDataBack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCBuyFashionDataBack::CopyFrom(const GCBuyFashionDataBack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCBuyFashionDataBack::IsInitialized() const {

  return true;
}

void GCBuyFashionDataBack::Swap(GCBuyFashionDataBack* other) {
  if (other != this) {
    std::swap(flag_, other->flag_);
    playerfashion_.Swap(&other->playerfashion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCBuyFashionDataBack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCBuyFashionDataBack_descriptor_;
  metadata.reflection = GCBuyFashionDataBack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CGMakeFashionData::kServeridFieldNumber;
#endif  // !_MSC_VER

CGMakeFashionData::CGMakeFashionData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGMakeFashionData)
}

void CGMakeFashionData::InitAsDefaultInstance() {
}

CGMakeFashionData::CGMakeFashionData(const CGMakeFashionData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGMakeFashionData)
}

void CGMakeFashionData::SharedCtor() {
  _cached_size_ = 0;
  serverid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGMakeFashionData::~CGMakeFashionData() {
  // @@protoc_insertion_point(destructor:CGMakeFashionData)
  SharedDtor();
}

void CGMakeFashionData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGMakeFashionData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGMakeFashionData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGMakeFashionData_descriptor_;
}

const CGMakeFashionData& CGMakeFashionData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FashionMessage_2eproto();
  return *default_instance_;
}

CGMakeFashionData* CGMakeFashionData::default_instance_ = NULL;

CGMakeFashionData* CGMakeFashionData::New() const {
  return new CGMakeFashionData;
}

void CGMakeFashionData::Clear() {
  serverid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CGMakeFashionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGMakeFashionData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 serverid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serverid_)));
          set_has_serverid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGMakeFashionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGMakeFashionData)
  return false;
#undef DO_
}

void CGMakeFashionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGMakeFashionData)
  // optional int64 serverid = 1;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serverid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGMakeFashionData)
}

::google::protobuf::uint8* CGMakeFashionData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGMakeFashionData)
  // optional int64 serverid = 1;
  if (has_serverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serverid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGMakeFashionData)
  return target;
}

int CGMakeFashionData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 serverid = 1;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serverid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGMakeFashionData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CGMakeFashionData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CGMakeFashionData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGMakeFashionData::MergeFrom(const CGMakeFashionData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CGMakeFashionData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGMakeFashionData::CopyFrom(const CGMakeFashionData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGMakeFashionData::IsInitialized() const {

  return true;
}

void CGMakeFashionData::Swap(CGMakeFashionData* other) {
  if (other != this) {
    std::swap(serverid_, other->serverid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CGMakeFashionData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGMakeFashionData_descriptor_;
  metadata.reflection = CGMakeFashionData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCMakeFashionDataBack::kFlagFieldNumber;
const int GCMakeFashionDataBack::kPlayerfashionFieldNumber;
#endif  // !_MSC_VER

GCMakeFashionDataBack::GCMakeFashionDataBack()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCMakeFashionDataBack)
}

void GCMakeFashionDataBack::InitAsDefaultInstance() {
}

GCMakeFashionDataBack::GCMakeFashionDataBack(const GCMakeFashionDataBack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCMakeFashionDataBack)
}

void GCMakeFashionDataBack::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCMakeFashionDataBack::~GCMakeFashionDataBack() {
  // @@protoc_insertion_point(destructor:GCMakeFashionDataBack)
  SharedDtor();
}

void GCMakeFashionDataBack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GCMakeFashionDataBack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCMakeFashionDataBack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCMakeFashionDataBack_descriptor_;
}

const GCMakeFashionDataBack& GCMakeFashionDataBack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FashionMessage_2eproto();
  return *default_instance_;
}

GCMakeFashionDataBack* GCMakeFashionDataBack::default_instance_ = NULL;

GCMakeFashionDataBack* GCMakeFashionDataBack::New() const {
  return new GCMakeFashionDataBack;
}

void GCMakeFashionDataBack::Clear() {
  flag_ = 0;
  playerfashion_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCMakeFashionDataBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCMakeFashionDataBack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_playerfashion;
        break;
      }

      // repeated .PlayerFashion playerfashion = 2;
      case 2: {
        if (tag == 18) {
         parse_playerfashion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_playerfashion()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_playerfashion;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCMakeFashionDataBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCMakeFashionDataBack)
  return false;
#undef DO_
}

void GCMakeFashionDataBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCMakeFashionDataBack)
  // optional int32 flag = 1;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }

  // repeated .PlayerFashion playerfashion = 2;
  for (int i = 0; i < this->playerfashion_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->playerfashion(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCMakeFashionDataBack)
}

::google::protobuf::uint8* GCMakeFashionDataBack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCMakeFashionDataBack)
  // optional int32 flag = 1;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }

  // repeated .PlayerFashion playerfashion = 2;
  for (int i = 0; i < this->playerfashion_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->playerfashion(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCMakeFashionDataBack)
  return target;
}

int GCMakeFashionDataBack::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag = 1;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }

  }
  // repeated .PlayerFashion playerfashion = 2;
  total_size += 1 * this->playerfashion_size();
  for (int i = 0; i < this->playerfashion_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->playerfashion(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCMakeFashionDataBack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCMakeFashionDataBack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCMakeFashionDataBack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCMakeFashionDataBack::MergeFrom(const GCMakeFashionDataBack& from) {
  GOOGLE_CHECK_NE(&from, this);
  playerfashion_.MergeFrom(from.playerfashion_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCMakeFashionDataBack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCMakeFashionDataBack::CopyFrom(const GCMakeFashionDataBack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCMakeFashionDataBack::IsInitialized() const {

  return true;
}

void GCMakeFashionDataBack::Swap(GCMakeFashionDataBack* other) {
  if (other != this) {
    std::swap(flag_, other->flag_);
    playerfashion_.Swap(&other->playerfashion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCMakeFashionDataBack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCMakeFashionDataBack_descriptor_;
  metadata.reflection = GCMakeFashionDataBack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCCreateCharacterInfo::kCharacterInfoFieldNumber;
#endif  // !_MSC_VER

GCCreateCharacterInfo::GCCreateCharacterInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCCreateCharacterInfo)
}

void GCCreateCharacterInfo::InitAsDefaultInstance() {
  characterinfo_ = const_cast< ::CharacterInfo*>(&::CharacterInfo::default_instance());
}

GCCreateCharacterInfo::GCCreateCharacterInfo(const GCCreateCharacterInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCCreateCharacterInfo)
}

void GCCreateCharacterInfo::SharedCtor() {
  _cached_size_ = 0;
  characterinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCCreateCharacterInfo::~GCCreateCharacterInfo() {
  // @@protoc_insertion_point(destructor:GCCreateCharacterInfo)
  SharedDtor();
}

void GCCreateCharacterInfo::SharedDtor() {
  if (this != default_instance_) {
    delete characterinfo_;
  }
}

void GCCreateCharacterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCCreateCharacterInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCCreateCharacterInfo_descriptor_;
}

const GCCreateCharacterInfo& GCCreateCharacterInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FashionMessage_2eproto();
  return *default_instance_;
}

GCCreateCharacterInfo* GCCreateCharacterInfo::default_instance_ = NULL;

GCCreateCharacterInfo* GCCreateCharacterInfo::New() const {
  return new GCCreateCharacterInfo;
}

void GCCreateCharacterInfo::Clear() {
  if (has_characterinfo()) {
    if (characterinfo_ != NULL) characterinfo_->::CharacterInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCCreateCharacterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCCreateCharacterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CharacterInfo characterInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_characterinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCCreateCharacterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCCreateCharacterInfo)
  return false;
#undef DO_
}

void GCCreateCharacterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCCreateCharacterInfo)
  // optional .CharacterInfo characterInfo = 1;
  if (has_characterinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->characterinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCCreateCharacterInfo)
}

::google::protobuf::uint8* GCCreateCharacterInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCCreateCharacterInfo)
  // optional .CharacterInfo characterInfo = 1;
  if (has_characterinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->characterinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCCreateCharacterInfo)
  return target;
}

int GCCreateCharacterInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .CharacterInfo characterInfo = 1;
    if (has_characterinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->characterinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCCreateCharacterInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCCreateCharacterInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCCreateCharacterInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCCreateCharacterInfo::MergeFrom(const GCCreateCharacterInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_characterinfo()) {
      mutable_characterinfo()->::CharacterInfo::MergeFrom(from.characterinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCCreateCharacterInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCCreateCharacterInfo::CopyFrom(const GCCreateCharacterInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCCreateCharacterInfo::IsInitialized() const {

  return true;
}

void GCCreateCharacterInfo::Swap(GCCreateCharacterInfo* other) {
  if (other != this) {
    std::swap(characterinfo_, other->characterinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCCreateCharacterInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCCreateCharacterInfo_descriptor_;
  metadata.reflection = GCCreateCharacterInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
