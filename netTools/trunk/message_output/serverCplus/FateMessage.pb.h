// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FateMessage.proto

#ifndef PROTOBUF_FateMessage_2eproto__INCLUDED
#define PROTOBUF_FateMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "BackpackMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FateMessage_2eproto();
void protobuf_AssignDesc_FateMessage_2eproto();
void protobuf_ShutdownFile_FateMessage_2eproto();

class FateInfo;
class SymInfo;
class CGFateOperate;
class GCFateResult;

// ===================================================================

class FateInfo : public ::google::protobuf::Message {
 public:
  FateInfo();
  virtual ~FateInfo();

  FateInfo(const FateInfo& from);

  inline FateInfo& operator=(const FateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FateInfo& default_instance();

  void Swap(FateInfo* other);

  // implements Message ----------------------------------------------

  FateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FateInfo& from);
  void MergeFrom(const FateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FateInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_FateMessage_2eproto();
  friend void protobuf_AssignDesc_FateMessage_2eproto();
  friend void protobuf_ShutdownFile_FateMessage_2eproto();

  void InitAsDefaultInstance();
  static FateInfo* default_instance_;
};
// -------------------------------------------------------------------

class SymInfo : public ::google::protobuf::Message {
 public:
  SymInfo();
  virtual ~SymInfo();

  SymInfo(const SymInfo& from);

  inline SymInfo& operator=(const SymInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymInfo& default_instance();

  void Swap(SymInfo* other);

  // implements Message ----------------------------------------------

  SymInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SymInfo& from);
  void MergeFrom(const SymInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 symId = 2;
  inline bool has_symid() const;
  inline void clear_symid();
  static const int kSymIdFieldNumber = 2;
  inline ::google::protobuf::int32 symid() const;
  inline void set_symid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SymInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_symid();
  inline void clear_has_symid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 symid_;
  friend void  protobuf_AddDesc_FateMessage_2eproto();
  friend void protobuf_AssignDesc_FateMessage_2eproto();
  friend void protobuf_ShutdownFile_FateMessage_2eproto();

  void InitAsDefaultInstance();
  static SymInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGFateOperate : public ::google::protobuf::Message {
 public:
  CGFateOperate();
  virtual ~CGFateOperate();

  CGFateOperate(const CGFateOperate& from);

  inline CGFateOperate& operator=(const CGFateOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGFateOperate& default_instance();

  void Swap(CGFateOperate* other);

  // implements Message ----------------------------------------------

  CGFateOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGFateOperate& from);
  void MergeFrom(const CGFateOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGFateOperate)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_FateMessage_2eproto();
  friend void protobuf_AssignDesc_FateMessage_2eproto();
  friend void protobuf_ShutdownFile_FateMessage_2eproto();

  void InitAsDefaultInstance();
  static CGFateOperate* default_instance_;
};
// -------------------------------------------------------------------

class GCFateResult : public ::google::protobuf::Message {
 public:
  GCFateResult();
  virtual ~GCFateResult();

  GCFateResult(const GCFateResult& from);

  inline GCFateResult& operator=(const GCFateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCFateResult& default_instance();

  void Swap(GCFateResult* other);

  // implements Message ----------------------------------------------

  GCFateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCFateResult& from);
  void MergeFrom(const GCFateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // repeated .SymInfo symInfos = 2;
  inline int syminfos_size() const;
  inline void clear_syminfos();
  static const int kSymInfosFieldNumber = 2;
  inline const ::SymInfo& syminfos(int index) const;
  inline ::SymInfo* mutable_syminfos(int index);
  inline ::SymInfo* add_syminfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SymInfo >&
      syminfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SymInfo >*
      mutable_syminfos();

  // repeated .FateInfo fateInfos = 3;
  inline int fateinfos_size() const;
  inline void clear_fateinfos();
  static const int kFateInfosFieldNumber = 3;
  inline const ::FateInfo& fateinfos(int index) const;
  inline ::FateInfo* mutable_fateinfos(int index);
  inline ::FateInfo* add_fateinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::FateInfo >&
      fateinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::FateInfo >*
      mutable_fateinfos();

  // repeated .BackpackItem markItems = 4;
  inline int markitems_size() const;
  inline void clear_markitems();
  static const int kMarkItemsFieldNumber = 4;
  inline const ::BackpackItem& markitems(int index) const;
  inline ::BackpackItem* mutable_markitems(int index);
  inline ::BackpackItem* add_markitems();
  inline const ::google::protobuf::RepeatedPtrField< ::BackpackItem >&
      markitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::BackpackItem >*
      mutable_markitems();

  // optional int32 transtType = 5;
  inline bool has_transttype() const;
  inline void clear_transttype();
  static const int kTranstTypeFieldNumber = 5;
  inline ::google::protobuf::int32 transttype() const;
  inline void set_transttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCFateResult)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_transttype();
  inline void clear_has_transttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SymInfo > syminfos_;
  ::google::protobuf::RepeatedPtrField< ::FateInfo > fateinfos_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 transttype_;
  ::google::protobuf::RepeatedPtrField< ::BackpackItem > markitems_;
  friend void  protobuf_AddDesc_FateMessage_2eproto();
  friend void protobuf_AssignDesc_FateMessage_2eproto();
  friend void protobuf_ShutdownFile_FateMessage_2eproto();

  void InitAsDefaultInstance();
  static GCFateResult* default_instance_;
};
// ===================================================================


// ===================================================================

// FateInfo

// optional int32 id = 1;
inline bool FateInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FateInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FateInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FateInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FateInfo::id() const {
  // @@protoc_insertion_point(field_get:FateInfo.id)
  return id_;
}
inline void FateInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:FateInfo.id)
}

// optional int32 level = 2;
inline bool FateInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FateInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FateInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FateInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 FateInfo::level() const {
  // @@protoc_insertion_point(field_get:FateInfo.level)
  return level_;
}
inline void FateInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:FateInfo.level)
}

// optional int32 type = 3;
inline bool FateInfo::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FateInfo::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FateInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FateInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 FateInfo::type() const {
  // @@protoc_insertion_point(field_get:FateInfo.type)
  return type_;
}
inline void FateInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:FateInfo.type)
}

// -------------------------------------------------------------------

// SymInfo

// optional int32 type = 1;
inline bool SymInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SymInfo::type() const {
  // @@protoc_insertion_point(field_get:SymInfo.type)
  return type_;
}
inline void SymInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SymInfo.type)
}

// optional int32 symId = 2;
inline bool SymInfo::has_symid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymInfo::set_has_symid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymInfo::clear_has_symid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymInfo::clear_symid() {
  symid_ = 0;
  clear_has_symid();
}
inline ::google::protobuf::int32 SymInfo::symid() const {
  // @@protoc_insertion_point(field_get:SymInfo.symId)
  return symid_;
}
inline void SymInfo::set_symid(::google::protobuf::int32 value) {
  set_has_symid();
  symid_ = value;
  // @@protoc_insertion_point(field_set:SymInfo.symId)
}

// -------------------------------------------------------------------

// CGFateOperate

// optional int32 operate = 1;
inline bool CGFateOperate::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGFateOperate::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGFateOperate::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGFateOperate::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 CGFateOperate::operate() const {
  // @@protoc_insertion_point(field_get:CGFateOperate.operate)
  return operate_;
}
inline void CGFateOperate::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:CGFateOperate.operate)
}

// optional int32 id = 2;
inline bool CGFateOperate::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGFateOperate::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGFateOperate::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGFateOperate::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGFateOperate::id() const {
  // @@protoc_insertion_point(field_get:CGFateOperate.id)
  return id_;
}
inline void CGFateOperate::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGFateOperate.id)
}

// optional int32 type = 3;
inline bool CGFateOperate::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGFateOperate::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGFateOperate::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGFateOperate::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGFateOperate::type() const {
  // @@protoc_insertion_point(field_get:CGFateOperate.type)
  return type_;
}
inline void CGFateOperate::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGFateOperate.type)
}

// -------------------------------------------------------------------

// GCFateResult

// optional int32 operate = 1;
inline bool GCFateResult::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCFateResult::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCFateResult::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCFateResult::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 GCFateResult::operate() const {
  // @@protoc_insertion_point(field_get:GCFateResult.operate)
  return operate_;
}
inline void GCFateResult::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:GCFateResult.operate)
}

// repeated .SymInfo symInfos = 2;
inline int GCFateResult::syminfos_size() const {
  return syminfos_.size();
}
inline void GCFateResult::clear_syminfos() {
  syminfos_.Clear();
}
inline const ::SymInfo& GCFateResult::syminfos(int index) const {
  // @@protoc_insertion_point(field_get:GCFateResult.symInfos)
  return syminfos_.Get(index);
}
inline ::SymInfo* GCFateResult::mutable_syminfos(int index) {
  // @@protoc_insertion_point(field_mutable:GCFateResult.symInfos)
  return syminfos_.Mutable(index);
}
inline ::SymInfo* GCFateResult::add_syminfos() {
  // @@protoc_insertion_point(field_add:GCFateResult.symInfos)
  return syminfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SymInfo >&
GCFateResult::syminfos() const {
  // @@protoc_insertion_point(field_list:GCFateResult.symInfos)
  return syminfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SymInfo >*
GCFateResult::mutable_syminfos() {
  // @@protoc_insertion_point(field_mutable_list:GCFateResult.symInfos)
  return &syminfos_;
}

// repeated .FateInfo fateInfos = 3;
inline int GCFateResult::fateinfos_size() const {
  return fateinfos_.size();
}
inline void GCFateResult::clear_fateinfos() {
  fateinfos_.Clear();
}
inline const ::FateInfo& GCFateResult::fateinfos(int index) const {
  // @@protoc_insertion_point(field_get:GCFateResult.fateInfos)
  return fateinfos_.Get(index);
}
inline ::FateInfo* GCFateResult::mutable_fateinfos(int index) {
  // @@protoc_insertion_point(field_mutable:GCFateResult.fateInfos)
  return fateinfos_.Mutable(index);
}
inline ::FateInfo* GCFateResult::add_fateinfos() {
  // @@protoc_insertion_point(field_add:GCFateResult.fateInfos)
  return fateinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FateInfo >&
GCFateResult::fateinfos() const {
  // @@protoc_insertion_point(field_list:GCFateResult.fateInfos)
  return fateinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::FateInfo >*
GCFateResult::mutable_fateinfos() {
  // @@protoc_insertion_point(field_mutable_list:GCFateResult.fateInfos)
  return &fateinfos_;
}

// repeated .BackpackItem markItems = 4;
inline int GCFateResult::markitems_size() const {
  return markitems_.size();
}
inline void GCFateResult::clear_markitems() {
  markitems_.Clear();
}
inline const ::BackpackItem& GCFateResult::markitems(int index) const {
  // @@protoc_insertion_point(field_get:GCFateResult.markItems)
  return markitems_.Get(index);
}
inline ::BackpackItem* GCFateResult::mutable_markitems(int index) {
  // @@protoc_insertion_point(field_mutable:GCFateResult.markItems)
  return markitems_.Mutable(index);
}
inline ::BackpackItem* GCFateResult::add_markitems() {
  // @@protoc_insertion_point(field_add:GCFateResult.markItems)
  return markitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BackpackItem >&
GCFateResult::markitems() const {
  // @@protoc_insertion_point(field_list:GCFateResult.markItems)
  return markitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::BackpackItem >*
GCFateResult::mutable_markitems() {
  // @@protoc_insertion_point(field_mutable_list:GCFateResult.markItems)
  return &markitems_;
}

// optional int32 transtType = 5;
inline bool GCFateResult::has_transttype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCFateResult::set_has_transttype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCFateResult::clear_has_transttype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCFateResult::clear_transttype() {
  transttype_ = 0;
  clear_has_transttype();
}
inline ::google::protobuf::int32 GCFateResult::transttype() const {
  // @@protoc_insertion_point(field_get:GCFateResult.transtType)
  return transttype_;
}
inline void GCFateResult::set_transttype(::google::protobuf::int32 value) {
  set_has_transttype();
  transttype_ = value;
  // @@protoc_insertion_point(field_set:GCFateResult.transtType)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FateMessage_2eproto__INCLUDED
