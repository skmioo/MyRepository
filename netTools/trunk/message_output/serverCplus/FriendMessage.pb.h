// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FriendMessage.proto

#ifndef PROTOBUF_FriendMessage_2eproto__INCLUDED
#define PROTOBUF_FriendMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "InnerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FriendMessage_2eproto();
void protobuf_AssignDesc_FriendMessage_2eproto();
void protobuf_ShutdownFile_FriendMessage_2eproto();

class CGFriendListData;
class GCFriendListDataBack;
class CGOptionFriend;
class GCOptionFriendBack;
class GCPushAddFriend;
class GCPushPersonMessage;
class CGGetFriendData;
class GCGetFriendDataBack;
class CGFairy;
class CGTrackEnemy;
class GCTrackEnemy;

// ===================================================================

class CGFriendListData : public ::google::protobuf::Message {
 public:
  CGFriendListData();
  virtual ~CGFriendListData();

  CGFriendListData(const CGFriendListData& from);

  inline CGFriendListData& operator=(const CGFriendListData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGFriendListData& default_instance();

  void Swap(CGFriendListData* other);

  // implements Message ----------------------------------------------

  CGFriendListData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGFriendListData& from);
  void MergeFrom(const CGFriendListData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string playername = 2;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 2;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // optional int32 region = 3;
  inline bool has_region() const;
  inline void clear_region();
  static const int kRegionFieldNumber = 3;
  inline ::google::protobuf::int32 region() const;
  inline void set_region(::google::protobuf::int32 value);

  // optional int32 gender = 4;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 4;
  inline ::google::protobuf::int32 gender() const;
  inline void set_gender(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGFriendListData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_region();
  inline void clear_has_region();
  inline void set_has_gender();
  inline void clear_has_gender();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* playername_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 region_;
  ::google::protobuf::int32 gender_;
  friend void  protobuf_AddDesc_FriendMessage_2eproto();
  friend void protobuf_AssignDesc_FriendMessage_2eproto();
  friend void protobuf_ShutdownFile_FriendMessage_2eproto();

  void InitAsDefaultInstance();
  static CGFriendListData* default_instance_;
};
// -------------------------------------------------------------------

class GCFriendListDataBack : public ::google::protobuf::Message {
 public:
  GCFriendListDataBack();
  virtual ~GCFriendListDataBack();

  GCFriendListDataBack(const GCFriendListDataBack& from);

  inline GCFriendListDataBack& operator=(const GCFriendListDataBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCFriendListDataBack& default_instance();

  void Swap(GCFriendListDataBack* other);

  // implements Message ----------------------------------------------

  GCFriendListDataBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCFriendListDataBack& from);
  void MergeFrom(const GCFriendListDataBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .FriendData frienddata = 2;
  inline int frienddata_size() const;
  inline void clear_frienddata();
  static const int kFrienddataFieldNumber = 2;
  inline const ::FriendData& frienddata(int index) const;
  inline ::FriendData* mutable_frienddata(int index);
  inline ::FriendData* add_frienddata();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendData >&
      frienddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendData >*
      mutable_frienddata();

  // @@protoc_insertion_point(class_scope:GCFriendListDataBack)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::FriendData > frienddata_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_FriendMessage_2eproto();
  friend void protobuf_AssignDesc_FriendMessage_2eproto();
  friend void protobuf_ShutdownFile_FriendMessage_2eproto();

  void InitAsDefaultInstance();
  static GCFriendListDataBack* default_instance_;
};
// -------------------------------------------------------------------

class CGOptionFriend : public ::google::protobuf::Message {
 public:
  CGOptionFriend();
  virtual ~CGOptionFriend();

  CGOptionFriend(const CGOptionFriend& from);

  inline CGOptionFriend& operator=(const CGOptionFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGOptionFriend& default_instance();

  void Swap(CGOptionFriend* other);

  // implements Message ----------------------------------------------

  CGOptionFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGOptionFriend& from);
  void MergeFrom(const CGOptionFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated int64 objId = 2;
  inline int objid_size() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 2;
  inline ::google::protobuf::int64 objid(int index) const;
  inline void set_objid(int index, ::google::protobuf::int64 value);
  inline void add_objid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      objid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_objid();

  // @@protoc_insertion_point(class_scope:CGOptionFriend)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > objid_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_FriendMessage_2eproto();
  friend void protobuf_AssignDesc_FriendMessage_2eproto();
  friend void protobuf_ShutdownFile_FriendMessage_2eproto();

  void InitAsDefaultInstance();
  static CGOptionFriend* default_instance_;
};
// -------------------------------------------------------------------

class GCOptionFriendBack : public ::google::protobuf::Message {
 public:
  GCOptionFriendBack();
  virtual ~GCOptionFriendBack();

  GCOptionFriendBack(const GCOptionFriendBack& from);

  inline GCOptionFriendBack& operator=(const GCOptionFriendBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCOptionFriendBack& default_instance();

  void Swap(GCOptionFriendBack* other);

  // implements Message ----------------------------------------------

  GCOptionFriendBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCOptionFriendBack& from);
  void MergeFrom(const GCOptionFriendBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .FriendData frienddata = 3;
  inline int frienddata_size() const;
  inline void clear_frienddata();
  static const int kFrienddataFieldNumber = 3;
  inline const ::FriendData& frienddata(int index) const;
  inline ::FriendData* mutable_frienddata(int index);
  inline ::FriendData* add_frienddata();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendData >&
      frienddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendData >*
      mutable_frienddata();

  // @@protoc_insertion_point(class_scope:GCOptionFriendBack)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::RepeatedPtrField< ::FriendData > frienddata_;
  friend void  protobuf_AddDesc_FriendMessage_2eproto();
  friend void protobuf_AssignDesc_FriendMessage_2eproto();
  friend void protobuf_ShutdownFile_FriendMessage_2eproto();

  void InitAsDefaultInstance();
  static GCOptionFriendBack* default_instance_;
};
// -------------------------------------------------------------------

class GCPushAddFriend : public ::google::protobuf::Message {
 public:
  GCPushAddFriend();
  virtual ~GCPushAddFriend();

  GCPushAddFriend(const GCPushAddFriend& from);

  inline GCPushAddFriend& operator=(const GCPushAddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPushAddFriend& default_instance();

  void Swap(GCPushAddFriend* other);

  // implements Message ----------------------------------------------

  GCPushAddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPushAddFriend& from);
  void MergeFrom(const GCPushAddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FriendData frienddata = 1;
  inline int frienddata_size() const;
  inline void clear_frienddata();
  static const int kFrienddataFieldNumber = 1;
  inline const ::FriendData& frienddata(int index) const;
  inline ::FriendData* mutable_frienddata(int index);
  inline ::FriendData* add_frienddata();
  inline const ::google::protobuf::RepeatedPtrField< ::FriendData >&
      frienddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::FriendData >*
      mutable_frienddata();

  // @@protoc_insertion_point(class_scope:GCPushAddFriend)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::FriendData > frienddata_;
  friend void  protobuf_AddDesc_FriendMessage_2eproto();
  friend void protobuf_AssignDesc_FriendMessage_2eproto();
  friend void protobuf_ShutdownFile_FriendMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPushAddFriend* default_instance_;
};
// -------------------------------------------------------------------

class GCPushPersonMessage : public ::google::protobuf::Message {
 public:
  GCPushPersonMessage();
  virtual ~GCPushPersonMessage();

  GCPushPersonMessage(const GCPushPersonMessage& from);

  inline GCPushPersonMessage& operator=(const GCPushPersonMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPushPersonMessage& default_instance();

  void Swap(GCPushPersonMessage* other);

  // implements Message ----------------------------------------------

  GCPushPersonMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPushPersonMessage& from);
  void MergeFrom(const GCPushPersonMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PersonalMessagees permsg = 1;
  inline int permsg_size() const;
  inline void clear_permsg();
  static const int kPermsgFieldNumber = 1;
  inline const ::PersonalMessagees& permsg(int index) const;
  inline ::PersonalMessagees* mutable_permsg(int index);
  inline ::PersonalMessagees* add_permsg();
  inline const ::google::protobuf::RepeatedPtrField< ::PersonalMessagees >&
      permsg() const;
  inline ::google::protobuf::RepeatedPtrField< ::PersonalMessagees >*
      mutable_permsg();

  // @@protoc_insertion_point(class_scope:GCPushPersonMessage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PersonalMessagees > permsg_;
  friend void  protobuf_AddDesc_FriendMessage_2eproto();
  friend void protobuf_AssignDesc_FriendMessage_2eproto();
  friend void protobuf_ShutdownFile_FriendMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPushPersonMessage* default_instance_;
};
// -------------------------------------------------------------------

class CGGetFriendData : public ::google::protobuf::Message {
 public:
  CGGetFriendData();
  virtual ~CGGetFriendData();

  CGGetFriendData(const CGGetFriendData& from);

  inline CGGetFriendData& operator=(const CGGetFriendData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetFriendData& default_instance();

  void Swap(CGGetFriendData* other);

  // implements Message ----------------------------------------------

  CGGetFriendData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetFriendData& from);
  void MergeFrom(const CGGetFriendData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGGetFriendData)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  friend void  protobuf_AddDesc_FriendMessage_2eproto();
  friend void protobuf_AssignDesc_FriendMessage_2eproto();
  friend void protobuf_ShutdownFile_FriendMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetFriendData* default_instance_;
};
// -------------------------------------------------------------------

class GCGetFriendDataBack : public ::google::protobuf::Message {
 public:
  GCGetFriendDataBack();
  virtual ~GCGetFriendDataBack();

  GCGetFriendDataBack(const GCGetFriendDataBack& from);

  inline GCGetFriendDataBack& operator=(const GCGetFriendDataBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetFriendDataBack& default_instance();

  void Swap(GCGetFriendDataBack* other);

  // implements Message ----------------------------------------------

  GCGetFriendDataBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetFriendDataBack& from);
  void MergeFrom(const GCGetFriendDataBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .FriendData frienddata = 1;
  inline bool has_frienddata() const;
  inline void clear_frienddata();
  static const int kFrienddataFieldNumber = 1;
  inline const ::FriendData& frienddata() const;
  inline ::FriendData* mutable_frienddata();
  inline ::FriendData* release_frienddata();
  inline void set_allocated_frienddata(::FriendData* frienddata);

  // @@protoc_insertion_point(class_scope:GCGetFriendDataBack)
 private:
  inline void set_has_frienddata();
  inline void clear_has_frienddata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::FriendData* frienddata_;
  friend void  protobuf_AddDesc_FriendMessage_2eproto();
  friend void protobuf_AssignDesc_FriendMessage_2eproto();
  friend void protobuf_ShutdownFile_FriendMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetFriendDataBack* default_instance_;
};
// -------------------------------------------------------------------

class CGFairy : public ::google::protobuf::Message {
 public:
  CGFairy();
  virtual ~CGFairy();

  CGFairy(const CGFairy& from);

  inline CGFairy& operator=(const CGFairy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGFairy& default_instance();

  void Swap(CGFairy* other);

  // implements Message ----------------------------------------------

  CGFairy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGFairy& from);
  void MergeFrom(const CGFairy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:CGFairy)
 private:
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* content_;
  friend void  protobuf_AddDesc_FriendMessage_2eproto();
  friend void protobuf_AssignDesc_FriendMessage_2eproto();
  friend void protobuf_ShutdownFile_FriendMessage_2eproto();

  void InitAsDefaultInstance();
  static CGFairy* default_instance_;
};
// -------------------------------------------------------------------

class CGTrackEnemy : public ::google::protobuf::Message {
 public:
  CGTrackEnemy();
  virtual ~CGTrackEnemy();

  CGTrackEnemy(const CGTrackEnemy& from);

  inline CGTrackEnemy& operator=(const CGTrackEnemy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGTrackEnemy& default_instance();

  void Swap(CGTrackEnemy* other);

  // implements Message ----------------------------------------------

  CGTrackEnemy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGTrackEnemy& from);
  void MergeFrom(const CGTrackEnemy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 enemyPlayerId = 1;
  inline bool has_enemyplayerid() const;
  inline void clear_enemyplayerid();
  static const int kEnemyPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 enemyplayerid() const;
  inline void set_enemyplayerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGTrackEnemy)
 private:
  inline void set_has_enemyplayerid();
  inline void clear_has_enemyplayerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 enemyplayerid_;
  friend void  protobuf_AddDesc_FriendMessage_2eproto();
  friend void protobuf_AssignDesc_FriendMessage_2eproto();
  friend void protobuf_ShutdownFile_FriendMessage_2eproto();

  void InitAsDefaultInstance();
  static CGTrackEnemy* default_instance_;
};
// -------------------------------------------------------------------

class GCTrackEnemy : public ::google::protobuf::Message {
 public:
  GCTrackEnemy();
  virtual ~GCTrackEnemy();

  GCTrackEnemy(const GCTrackEnemy& from);

  inline GCTrackEnemy& operator=(const GCTrackEnemy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCTrackEnemy& default_instance();

  void Swap(GCTrackEnemy* other);

  // implements Message ----------------------------------------------

  GCTrackEnemy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCTrackEnemy& from);
  void MergeFrom(const GCTrackEnemy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Vector3Info targetPos = 2;
  inline bool has_targetpos() const;
  inline void clear_targetpos();
  static const int kTargetPosFieldNumber = 2;
  inline const ::Vector3Info& targetpos() const;
  inline ::Vector3Info* mutable_targetpos();
  inline ::Vector3Info* release_targetpos();
  inline void set_allocated_targetpos(::Vector3Info* targetpos);

  // @@protoc_insertion_point(class_scope:GCTrackEnemy)
 private:
  inline void set_has_targetpos();
  inline void clear_has_targetpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Vector3Info* targetpos_;
  friend void  protobuf_AddDesc_FriendMessage_2eproto();
  friend void protobuf_AssignDesc_FriendMessage_2eproto();
  friend void protobuf_ShutdownFile_FriendMessage_2eproto();

  void InitAsDefaultInstance();
  static GCTrackEnemy* default_instance_;
};
// ===================================================================


// ===================================================================

// CGFriendListData

// optional int32 type = 1;
inline bool CGFriendListData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGFriendListData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGFriendListData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGFriendListData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGFriendListData::type() const {
  // @@protoc_insertion_point(field_get:CGFriendListData.type)
  return type_;
}
inline void CGFriendListData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGFriendListData.type)
}

// optional string playername = 2;
inline bool CGFriendListData::has_playername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGFriendListData::set_has_playername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGFriendListData::clear_has_playername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGFriendListData::clear_playername() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& CGFriendListData::playername() const {
  // @@protoc_insertion_point(field_get:CGFriendListData.playername)
  return *playername_;
}
inline void CGFriendListData::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set:CGFriendListData.playername)
}
inline void CGFriendListData::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGFriendListData.playername)
}
inline void CGFriendListData::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGFriendListData.playername)
}
inline ::std::string* CGFriendListData::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGFriendListData.playername)
  return playername_;
}
inline ::std::string* CGFriendListData::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGFriendListData::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGFriendListData.playername)
}

// optional int32 region = 3;
inline bool CGFriendListData::has_region() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGFriendListData::set_has_region() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGFriendListData::clear_has_region() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGFriendListData::clear_region() {
  region_ = 0;
  clear_has_region();
}
inline ::google::protobuf::int32 CGFriendListData::region() const {
  // @@protoc_insertion_point(field_get:CGFriendListData.region)
  return region_;
}
inline void CGFriendListData::set_region(::google::protobuf::int32 value) {
  set_has_region();
  region_ = value;
  // @@protoc_insertion_point(field_set:CGFriendListData.region)
}

// optional int32 gender = 4;
inline bool CGFriendListData::has_gender() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGFriendListData::set_has_gender() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGFriendListData::clear_has_gender() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGFriendListData::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::google::protobuf::int32 CGFriendListData::gender() const {
  // @@protoc_insertion_point(field_get:CGFriendListData.gender)
  return gender_;
}
inline void CGFriendListData::set_gender(::google::protobuf::int32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:CGFriendListData.gender)
}

// -------------------------------------------------------------------

// GCFriendListDataBack

// optional int32 type = 1;
inline bool GCFriendListDataBack::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCFriendListDataBack::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCFriendListDataBack::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCFriendListDataBack::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCFriendListDataBack::type() const {
  // @@protoc_insertion_point(field_get:GCFriendListDataBack.type)
  return type_;
}
inline void GCFriendListDataBack::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCFriendListDataBack.type)
}

// repeated .FriendData frienddata = 2;
inline int GCFriendListDataBack::frienddata_size() const {
  return frienddata_.size();
}
inline void GCFriendListDataBack::clear_frienddata() {
  frienddata_.Clear();
}
inline const ::FriendData& GCFriendListDataBack::frienddata(int index) const {
  // @@protoc_insertion_point(field_get:GCFriendListDataBack.frienddata)
  return frienddata_.Get(index);
}
inline ::FriendData* GCFriendListDataBack::mutable_frienddata(int index) {
  // @@protoc_insertion_point(field_mutable:GCFriendListDataBack.frienddata)
  return frienddata_.Mutable(index);
}
inline ::FriendData* GCFriendListDataBack::add_frienddata() {
  // @@protoc_insertion_point(field_add:GCFriendListDataBack.frienddata)
  return frienddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendData >&
GCFriendListDataBack::frienddata() const {
  // @@protoc_insertion_point(field_list:GCFriendListDataBack.frienddata)
  return frienddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendData >*
GCFriendListDataBack::mutable_frienddata() {
  // @@protoc_insertion_point(field_mutable_list:GCFriendListDataBack.frienddata)
  return &frienddata_;
}

// -------------------------------------------------------------------

// CGOptionFriend

// optional int32 type = 1;
inline bool CGOptionFriend::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGOptionFriend::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGOptionFriend::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGOptionFriend::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGOptionFriend::type() const {
  // @@protoc_insertion_point(field_get:CGOptionFriend.type)
  return type_;
}
inline void CGOptionFriend::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGOptionFriend.type)
}

// repeated int64 objId = 2;
inline int CGOptionFriend::objid_size() const {
  return objid_.size();
}
inline void CGOptionFriend::clear_objid() {
  objid_.Clear();
}
inline ::google::protobuf::int64 CGOptionFriend::objid(int index) const {
  // @@protoc_insertion_point(field_get:CGOptionFriend.objId)
  return objid_.Get(index);
}
inline void CGOptionFriend::set_objid(int index, ::google::protobuf::int64 value) {
  objid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGOptionFriend.objId)
}
inline void CGOptionFriend::add_objid(::google::protobuf::int64 value) {
  objid_.Add(value);
  // @@protoc_insertion_point(field_add:CGOptionFriend.objId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CGOptionFriend::objid() const {
  // @@protoc_insertion_point(field_list:CGOptionFriend.objId)
  return objid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CGOptionFriend::mutable_objid() {
  // @@protoc_insertion_point(field_mutable_list:CGOptionFriend.objId)
  return &objid_;
}

// -------------------------------------------------------------------

// GCOptionFriendBack

// optional int32 flag = 1;
inline bool GCOptionFriendBack::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCOptionFriendBack::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCOptionFriendBack::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCOptionFriendBack::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCOptionFriendBack::flag() const {
  // @@protoc_insertion_point(field_get:GCOptionFriendBack.flag)
  return flag_;
}
inline void GCOptionFriendBack::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCOptionFriendBack.flag)
}

// optional int32 type = 2;
inline bool GCOptionFriendBack::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCOptionFriendBack::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCOptionFriendBack::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCOptionFriendBack::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCOptionFriendBack::type() const {
  // @@protoc_insertion_point(field_get:GCOptionFriendBack.type)
  return type_;
}
inline void GCOptionFriendBack::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCOptionFriendBack.type)
}

// repeated .FriendData frienddata = 3;
inline int GCOptionFriendBack::frienddata_size() const {
  return frienddata_.size();
}
inline void GCOptionFriendBack::clear_frienddata() {
  frienddata_.Clear();
}
inline const ::FriendData& GCOptionFriendBack::frienddata(int index) const {
  // @@protoc_insertion_point(field_get:GCOptionFriendBack.frienddata)
  return frienddata_.Get(index);
}
inline ::FriendData* GCOptionFriendBack::mutable_frienddata(int index) {
  // @@protoc_insertion_point(field_mutable:GCOptionFriendBack.frienddata)
  return frienddata_.Mutable(index);
}
inline ::FriendData* GCOptionFriendBack::add_frienddata() {
  // @@protoc_insertion_point(field_add:GCOptionFriendBack.frienddata)
  return frienddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendData >&
GCOptionFriendBack::frienddata() const {
  // @@protoc_insertion_point(field_list:GCOptionFriendBack.frienddata)
  return frienddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendData >*
GCOptionFriendBack::mutable_frienddata() {
  // @@protoc_insertion_point(field_mutable_list:GCOptionFriendBack.frienddata)
  return &frienddata_;
}

// -------------------------------------------------------------------

// GCPushAddFriend

// repeated .FriendData frienddata = 1;
inline int GCPushAddFriend::frienddata_size() const {
  return frienddata_.size();
}
inline void GCPushAddFriend::clear_frienddata() {
  frienddata_.Clear();
}
inline const ::FriendData& GCPushAddFriend::frienddata(int index) const {
  // @@protoc_insertion_point(field_get:GCPushAddFriend.frienddata)
  return frienddata_.Get(index);
}
inline ::FriendData* GCPushAddFriend::mutable_frienddata(int index) {
  // @@protoc_insertion_point(field_mutable:GCPushAddFriend.frienddata)
  return frienddata_.Mutable(index);
}
inline ::FriendData* GCPushAddFriend::add_frienddata() {
  // @@protoc_insertion_point(field_add:GCPushAddFriend.frienddata)
  return frienddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendData >&
GCPushAddFriend::frienddata() const {
  // @@protoc_insertion_point(field_list:GCPushAddFriend.frienddata)
  return frienddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::FriendData >*
GCPushAddFriend::mutable_frienddata() {
  // @@protoc_insertion_point(field_mutable_list:GCPushAddFriend.frienddata)
  return &frienddata_;
}

// -------------------------------------------------------------------

// GCPushPersonMessage

// repeated .PersonalMessagees permsg = 1;
inline int GCPushPersonMessage::permsg_size() const {
  return permsg_.size();
}
inline void GCPushPersonMessage::clear_permsg() {
  permsg_.Clear();
}
inline const ::PersonalMessagees& GCPushPersonMessage::permsg(int index) const {
  // @@protoc_insertion_point(field_get:GCPushPersonMessage.permsg)
  return permsg_.Get(index);
}
inline ::PersonalMessagees* GCPushPersonMessage::mutable_permsg(int index) {
  // @@protoc_insertion_point(field_mutable:GCPushPersonMessage.permsg)
  return permsg_.Mutable(index);
}
inline ::PersonalMessagees* GCPushPersonMessage::add_permsg() {
  // @@protoc_insertion_point(field_add:GCPushPersonMessage.permsg)
  return permsg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PersonalMessagees >&
GCPushPersonMessage::permsg() const {
  // @@protoc_insertion_point(field_list:GCPushPersonMessage.permsg)
  return permsg_;
}
inline ::google::protobuf::RepeatedPtrField< ::PersonalMessagees >*
GCPushPersonMessage::mutable_permsg() {
  // @@protoc_insertion_point(field_mutable_list:GCPushPersonMessage.permsg)
  return &permsg_;
}

// -------------------------------------------------------------------

// CGGetFriendData

// optional int64 objId = 1;
inline bool CGGetFriendData::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetFriendData::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetFriendData::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetFriendData::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 CGGetFriendData::objid() const {
  // @@protoc_insertion_point(field_get:CGGetFriendData.objId)
  return objid_;
}
inline void CGGetFriendData::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:CGGetFriendData.objId)
}

// -------------------------------------------------------------------

// GCGetFriendDataBack

// optional .FriendData frienddata = 1;
inline bool GCGetFriendDataBack::has_frienddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetFriendDataBack::set_has_frienddata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetFriendDataBack::clear_has_frienddata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetFriendDataBack::clear_frienddata() {
  if (frienddata_ != NULL) frienddata_->::FriendData::Clear();
  clear_has_frienddata();
}
inline const ::FriendData& GCGetFriendDataBack::frienddata() const {
  // @@protoc_insertion_point(field_get:GCGetFriendDataBack.frienddata)
  return frienddata_ != NULL ? *frienddata_ : *default_instance_->frienddata_;
}
inline ::FriendData* GCGetFriendDataBack::mutable_frienddata() {
  set_has_frienddata();
  if (frienddata_ == NULL) frienddata_ = new ::FriendData;
  // @@protoc_insertion_point(field_mutable:GCGetFriendDataBack.frienddata)
  return frienddata_;
}
inline ::FriendData* GCGetFriendDataBack::release_frienddata() {
  clear_has_frienddata();
  ::FriendData* temp = frienddata_;
  frienddata_ = NULL;
  return temp;
}
inline void GCGetFriendDataBack::set_allocated_frienddata(::FriendData* frienddata) {
  delete frienddata_;
  frienddata_ = frienddata;
  if (frienddata) {
    set_has_frienddata();
  } else {
    clear_has_frienddata();
  }
  // @@protoc_insertion_point(field_set_allocated:GCGetFriendDataBack.frienddata)
}

// -------------------------------------------------------------------

// CGFairy

// optional string content = 1;
inline bool CGFairy::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGFairy::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGFairy::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGFairy::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& CGFairy::content() const {
  // @@protoc_insertion_point(field_get:CGFairy.content)
  return *content_;
}
inline void CGFairy::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:CGFairy.content)
}
inline void CGFairy::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGFairy.content)
}
inline void CGFairy::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGFairy.content)
}
inline ::std::string* CGFairy::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGFairy.content)
  return content_;
}
inline ::std::string* CGFairy::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGFairy::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGFairy.content)
}

// -------------------------------------------------------------------

// CGTrackEnemy

// optional int64 enemyPlayerId = 1;
inline bool CGTrackEnemy::has_enemyplayerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGTrackEnemy::set_has_enemyplayerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGTrackEnemy::clear_has_enemyplayerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGTrackEnemy::clear_enemyplayerid() {
  enemyplayerid_ = GOOGLE_LONGLONG(0);
  clear_has_enemyplayerid();
}
inline ::google::protobuf::int64 CGTrackEnemy::enemyplayerid() const {
  // @@protoc_insertion_point(field_get:CGTrackEnemy.enemyPlayerId)
  return enemyplayerid_;
}
inline void CGTrackEnemy::set_enemyplayerid(::google::protobuf::int64 value) {
  set_has_enemyplayerid();
  enemyplayerid_ = value;
  // @@protoc_insertion_point(field_set:CGTrackEnemy.enemyPlayerId)
}

// -------------------------------------------------------------------

// GCTrackEnemy

// optional .Vector3Info targetPos = 2;
inline bool GCTrackEnemy::has_targetpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCTrackEnemy::set_has_targetpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCTrackEnemy::clear_has_targetpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCTrackEnemy::clear_targetpos() {
  if (targetpos_ != NULL) targetpos_->::Vector3Info::Clear();
  clear_has_targetpos();
}
inline const ::Vector3Info& GCTrackEnemy::targetpos() const {
  // @@protoc_insertion_point(field_get:GCTrackEnemy.targetPos)
  return targetpos_ != NULL ? *targetpos_ : *default_instance_->targetpos_;
}
inline ::Vector3Info* GCTrackEnemy::mutable_targetpos() {
  set_has_targetpos();
  if (targetpos_ == NULL) targetpos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCTrackEnemy.targetPos)
  return targetpos_;
}
inline ::Vector3Info* GCTrackEnemy::release_targetpos() {
  clear_has_targetpos();
  ::Vector3Info* temp = targetpos_;
  targetpos_ = NULL;
  return temp;
}
inline void GCTrackEnemy::set_allocated_targetpos(::Vector3Info* targetpos) {
  delete targetpos_;
  targetpos_ = targetpos;
  if (targetpos) {
    set_has_targetpos();
  } else {
    clear_has_targetpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GCTrackEnemy.targetPos)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FriendMessage_2eproto__INCLUDED
