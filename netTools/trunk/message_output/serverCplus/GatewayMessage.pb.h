// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GatewayMessage.proto

#ifndef PROTOBUF_GatewayMessage_2eproto__INCLUDED
#define PROTOBUF_GatewayMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GatewayMessage_2eproto();
void protobuf_AssignDesc_GatewayMessage_2eproto();
void protobuf_ShutdownFile_GatewayMessage_2eproto();

class CodeInfo;
class GateRegist;
class GateRegistBack;
class Gate2LoginLoadPush;
class GateWReadyPush;
class User2GameForwardMessage;
class Game2UserForwardMessage;
class Gate2GameInterruptUserSession;
class Gate2GamePlayerLoginout;

// ===================================================================

class CodeInfo : public ::google::protobuf::Message {
 public:
  CodeInfo();
  virtual ~CodeInfo();

  CodeInfo(const CodeInfo& from);

  inline CodeInfo& operator=(const CodeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CodeInfo& default_instance();

  void Swap(CodeInfo* other);

  // implements Message ----------------------------------------------

  CodeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CodeInfo& from);
  void MergeFrom(const CodeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string vilidCode = 1;
  inline bool has_vilidcode() const;
  inline void clear_vilidcode();
  static const int kVilidCodeFieldNumber = 1;
  inline const ::std::string& vilidcode() const;
  inline void set_vilidcode(const ::std::string& value);
  inline void set_vilidcode(const char* value);
  inline void set_vilidcode(const char* value, size_t size);
  inline ::std::string* mutable_vilidcode();
  inline ::std::string* release_vilidcode();
  inline void set_allocated_vilidcode(::std::string* vilidcode);

  // optional int64 accountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::int64 accountid() const;
  inline void set_accountid(::google::protobuf::int64 value);

  // optional int64 vilidityTime = 3;
  inline bool has_viliditytime() const;
  inline void clear_viliditytime();
  static const int kVilidityTimeFieldNumber = 3;
  inline ::google::protobuf::int64 viliditytime() const;
  inline void set_viliditytime(::google::protobuf::int64 value);

  // optional string platForm = 4;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatFormFieldNumber = 4;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  inline void set_allocated_platform(::std::string* platform);

  // optional string uid = 5;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 5;
  inline const ::std::string& uid() const;
  inline void set_uid(const ::std::string& value);
  inline void set_uid(const char* value);
  inline void set_uid(const char* value, size_t size);
  inline ::std::string* mutable_uid();
  inline ::std::string* release_uid();
  inline void set_allocated_uid(::std::string* uid);

  // optional int64 playerId = 6;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 6;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CodeInfo)
 private:
  inline void set_has_vilidcode();
  inline void clear_has_vilidcode();
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_viliditytime();
  inline void clear_has_viliditytime();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* vilidcode_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int64 viliditytime_;
  ::std::string* platform_;
  ::std::string* uid_;
  ::google::protobuf::int64 playerid_;
  friend void  protobuf_AddDesc_GatewayMessage_2eproto();
  friend void protobuf_AssignDesc_GatewayMessage_2eproto();
  friend void protobuf_ShutdownFile_GatewayMessage_2eproto();

  void InitAsDefaultInstance();
  static CodeInfo* default_instance_;
};
// -------------------------------------------------------------------

class GateRegist : public ::google::protobuf::Message {
 public:
  GateRegist();
  virtual ~GateRegist();

  GateRegist(const GateRegist& from);

  inline GateRegist& operator=(const GateRegist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GateRegist& default_instance();

  void Swap(GateRegist* other);

  // implements Message ----------------------------------------------

  GateRegist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GateRegist& from);
  void MergeFrom(const GateRegist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 gateId = 1;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateIdFieldNumber = 1;
  inline ::google::protobuf::int32 gateid() const;
  inline void set_gateid(::google::protobuf::int32 value);

  // optional string host = 2;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 2;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  inline void set_allocated_host(::std::string* host);

  // optional int32 port = 3;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 3;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // optional int32 onlineNum = 4;
  inline bool has_onlinenum() const;
  inline void clear_onlinenum();
  static const int kOnlineNumFieldNumber = 4;
  inline ::google::protobuf::int32 onlinenum() const;
  inline void set_onlinenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GateRegist)
 private:
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_onlinenum();
  inline void clear_has_onlinenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* host_;
  ::google::protobuf::int32 gateid_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 onlinenum_;
  friend void  protobuf_AddDesc_GatewayMessage_2eproto();
  friend void protobuf_AssignDesc_GatewayMessage_2eproto();
  friend void protobuf_ShutdownFile_GatewayMessage_2eproto();

  void InitAsDefaultInstance();
  static GateRegist* default_instance_;
};
// -------------------------------------------------------------------

class GateRegistBack : public ::google::protobuf::Message {
 public:
  GateRegistBack();
  virtual ~GateRegistBack();

  GateRegistBack(const GateRegistBack& from);

  inline GateRegistBack& operator=(const GateRegistBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GateRegistBack& default_instance();

  void Swap(GateRegistBack* other);

  // implements Message ----------------------------------------------

  GateRegistBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GateRegistBack& from);
  void MergeFrom(const GateRegistBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // repeated .CodeInfo infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::CodeInfo& infos(int index) const;
  inline ::CodeInfo* mutable_infos(int index);
  inline ::CodeInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CodeInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CodeInfo >*
      mutable_infos();

  // optional int32 serverType = 3;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServerTypeFieldNumber = 3;
  inline ::google::protobuf::int32 servertype() const;
  inline void set_servertype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GateRegistBack)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_servertype();
  inline void clear_has_servertype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CodeInfo > infos_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 servertype_;
  friend void  protobuf_AddDesc_GatewayMessage_2eproto();
  friend void protobuf_AssignDesc_GatewayMessage_2eproto();
  friend void protobuf_ShutdownFile_GatewayMessage_2eproto();

  void InitAsDefaultInstance();
  static GateRegistBack* default_instance_;
};
// -------------------------------------------------------------------

class Gate2LoginLoadPush : public ::google::protobuf::Message {
 public:
  Gate2LoginLoadPush();
  virtual ~Gate2LoginLoadPush();

  Gate2LoginLoadPush(const Gate2LoginLoadPush& from);

  inline Gate2LoginLoadPush& operator=(const Gate2LoginLoadPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gate2LoginLoadPush& default_instance();

  void Swap(Gate2LoginLoadPush* other);

  // implements Message ----------------------------------------------

  Gate2LoginLoadPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gate2LoginLoadPush& from);
  void MergeFrom(const Gate2LoginLoadPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gateId = 1;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateIdFieldNumber = 1;
  inline ::google::protobuf::int32 gateid() const;
  inline void set_gateid(::google::protobuf::int32 value);

  // required int32 playerNum = 2;
  inline bool has_playernum() const;
  inline void clear_playernum();
  static const int kPlayerNumFieldNumber = 2;
  inline ::google::protobuf::int32 playernum() const;
  inline void set_playernum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Gate2LoginLoadPush)
 private:
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_playernum();
  inline void clear_has_playernum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 gateid_;
  ::google::protobuf::int32 playernum_;
  friend void  protobuf_AddDesc_GatewayMessage_2eproto();
  friend void protobuf_AssignDesc_GatewayMessage_2eproto();
  friend void protobuf_ShutdownFile_GatewayMessage_2eproto();

  void InitAsDefaultInstance();
  static Gate2LoginLoadPush* default_instance_;
};
// -------------------------------------------------------------------

class GateWReadyPush : public ::google::protobuf::Message {
 public:
  GateWReadyPush();
  virtual ~GateWReadyPush();

  GateWReadyPush(const GateWReadyPush& from);

  inline GateWReadyPush& operator=(const GateWReadyPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GateWReadyPush& default_instance();

  void Swap(GateWReadyPush* other);

  // implements Message ----------------------------------------------

  GateWReadyPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GateWReadyPush& from);
  void MergeFrom(const GateWReadyPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GateWReadyPush)
 private:
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 code_;
  friend void  protobuf_AddDesc_GatewayMessage_2eproto();
  friend void protobuf_AssignDesc_GatewayMessage_2eproto();
  friend void protobuf_ShutdownFile_GatewayMessage_2eproto();

  void InitAsDefaultInstance();
  static GateWReadyPush* default_instance_;
};
// -------------------------------------------------------------------

class User2GameForwardMessage : public ::google::protobuf::Message {
 public:
  User2GameForwardMessage();
  virtual ~User2GameForwardMessage();

  User2GameForwardMessage(const User2GameForwardMessage& from);

  inline User2GameForwardMessage& operator=(const User2GameForwardMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User2GameForwardMessage& default_instance();

  void Swap(User2GameForwardMessage* other);

  // implements Message ----------------------------------------------

  User2GameForwardMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User2GameForwardMessage& from);
  void MergeFrom(const User2GameForwardMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 accountId = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::int64 accountid() const;
  inline void set_accountid(::google::protobuf::int64 value);

  // optional int32 messageId = 3;
  inline bool has_messageid() const;
  inline void clear_messageid();
  static const int kMessageIdFieldNumber = 3;
  inline ::google::protobuf::int32 messageid() const;
  inline void set_messageid(::google::protobuf::int32 value);

  // optional bytes innerPacket = 4;
  inline bool has_innerpacket() const;
  inline void clear_innerpacket();
  static const int kInnerPacketFieldNumber = 4;
  inline const ::std::string& innerpacket() const;
  inline void set_innerpacket(const ::std::string& value);
  inline void set_innerpacket(const char* value);
  inline void set_innerpacket(const void* value, size_t size);
  inline ::std::string* mutable_innerpacket();
  inline ::std::string* release_innerpacket();
  inline void set_allocated_innerpacket(::std::string* innerpacket);

  // optional string vilidCode = 5;
  inline bool has_vilidcode() const;
  inline void clear_vilidcode();
  static const int kVilidCodeFieldNumber = 5;
  inline const ::std::string& vilidcode() const;
  inline void set_vilidcode(const ::std::string& value);
  inline void set_vilidcode(const char* value);
  inline void set_vilidcode(const char* value, size_t size);
  inline ::std::string* mutable_vilidcode();
  inline ::std::string* release_vilidcode();
  inline void set_allocated_vilidcode(::std::string* vilidcode);

  // optional string ip = 6;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 6;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // @@protoc_insertion_point(class_scope:User2GameForwardMessage)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_messageid();
  inline void clear_has_messageid();
  inline void set_has_innerpacket();
  inline void clear_has_innerpacket();
  inline void set_has_vilidcode();
  inline void clear_has_vilidcode();
  inline void set_has_ip();
  inline void clear_has_ip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 accountid_;
  ::std::string* innerpacket_;
  ::std::string* vilidcode_;
  ::std::string* ip_;
  ::google::protobuf::int32 messageid_;
  friend void  protobuf_AddDesc_GatewayMessage_2eproto();
  friend void protobuf_AssignDesc_GatewayMessage_2eproto();
  friend void protobuf_ShutdownFile_GatewayMessage_2eproto();

  void InitAsDefaultInstance();
  static User2GameForwardMessage* default_instance_;
};
// -------------------------------------------------------------------

class Game2UserForwardMessage : public ::google::protobuf::Message {
 public:
  Game2UserForwardMessage();
  virtual ~Game2UserForwardMessage();

  Game2UserForwardMessage(const Game2UserForwardMessage& from);

  inline Game2UserForwardMessage& operator=(const Game2UserForwardMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Game2UserForwardMessage& default_instance();

  void Swap(Game2UserForwardMessage* other);

  // implements Message ----------------------------------------------

  Game2UserForwardMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Game2UserForwardMessage& from);
  void MergeFrom(const Game2UserForwardMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 allServer = 1;
  inline bool has_allserver() const;
  inline void clear_allserver();
  static const int kAllServerFieldNumber = 1;
  inline ::google::protobuf::int32 allserver() const;
  inline void set_allserver(::google::protobuf::int32 value);

  // repeated int64 accountId = 2;
  inline int accountid_size() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::int64 accountid(int index) const;
  inline void set_accountid(int index, ::google::protobuf::int64 value);
  inline void add_accountid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      accountid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_accountid();

  // optional int32 messageId = 3;
  inline bool has_messageid() const;
  inline void clear_messageid();
  static const int kMessageIdFieldNumber = 3;
  inline ::google::protobuf::int32 messageid() const;
  inline void set_messageid(::google::protobuf::int32 value);

  // optional bytes innerPacket = 4;
  inline bool has_innerpacket() const;
  inline void clear_innerpacket();
  static const int kInnerPacketFieldNumber = 4;
  inline const ::std::string& innerpacket() const;
  inline void set_innerpacket(const ::std::string& value);
  inline void set_innerpacket(const char* value);
  inline void set_innerpacket(const void* value, size_t size);
  inline ::std::string* mutable_innerpacket();
  inline ::std::string* release_innerpacket();
  inline void set_allocated_innerpacket(::std::string* innerpacket);

  // @@protoc_insertion_point(class_scope:Game2UserForwardMessage)
 private:
  inline void set_has_allserver();
  inline void clear_has_allserver();
  inline void set_has_messageid();
  inline void clear_has_messageid();
  inline void set_has_innerpacket();
  inline void clear_has_innerpacket();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > accountid_;
  ::google::protobuf::int32 allserver_;
  ::google::protobuf::int32 messageid_;
  ::std::string* innerpacket_;
  friend void  protobuf_AddDesc_GatewayMessage_2eproto();
  friend void protobuf_AssignDesc_GatewayMessage_2eproto();
  friend void protobuf_ShutdownFile_GatewayMessage_2eproto();

  void InitAsDefaultInstance();
  static Game2UserForwardMessage* default_instance_;
};
// -------------------------------------------------------------------

class Gate2GameInterruptUserSession : public ::google::protobuf::Message {
 public:
  Gate2GameInterruptUserSession();
  virtual ~Gate2GameInterruptUserSession();

  Gate2GameInterruptUserSession(const Gate2GameInterruptUserSession& from);

  inline Gate2GameInterruptUserSession& operator=(const Gate2GameInterruptUserSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gate2GameInterruptUserSession& default_instance();

  void Swap(Gate2GameInterruptUserSession* other);

  // implements Message ----------------------------------------------

  Gate2GameInterruptUserSession* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gate2GameInterruptUserSession& from);
  void MergeFrom(const Gate2GameInterruptUserSession& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 accountId = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::int64 accountid() const;
  inline void set_accountid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Gate2GameInterruptUserSession)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 accountid_;
  friend void  protobuf_AddDesc_GatewayMessage_2eproto();
  friend void protobuf_AssignDesc_GatewayMessage_2eproto();
  friend void protobuf_ShutdownFile_GatewayMessage_2eproto();

  void InitAsDefaultInstance();
  static Gate2GameInterruptUserSession* default_instance_;
};
// -------------------------------------------------------------------

class Gate2GamePlayerLoginout : public ::google::protobuf::Message {
 public:
  Gate2GamePlayerLoginout();
  virtual ~Gate2GamePlayerLoginout();

  Gate2GamePlayerLoginout(const Gate2GamePlayerLoginout& from);

  inline Gate2GamePlayerLoginout& operator=(const Gate2GamePlayerLoginout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gate2GamePlayerLoginout& default_instance();

  void Swap(Gate2GamePlayerLoginout* other);

  // implements Message ----------------------------------------------

  Gate2GamePlayerLoginout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gate2GamePlayerLoginout& from);
  void MergeFrom(const Gate2GamePlayerLoginout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // optional int64 accountId = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::int64 accountid() const;
  inline void set_accountid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Gate2GamePlayerLoginout)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_accountid();
  inline void clear_has_accountid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  ::google::protobuf::int64 accountid_;
  friend void  protobuf_AddDesc_GatewayMessage_2eproto();
  friend void protobuf_AssignDesc_GatewayMessage_2eproto();
  friend void protobuf_ShutdownFile_GatewayMessage_2eproto();

  void InitAsDefaultInstance();
  static Gate2GamePlayerLoginout* default_instance_;
};
// ===================================================================


// ===================================================================

// CodeInfo

// optional string vilidCode = 1;
inline bool CodeInfo::has_vilidcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CodeInfo::set_has_vilidcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CodeInfo::clear_has_vilidcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CodeInfo::clear_vilidcode() {
  if (vilidcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilidcode_->clear();
  }
  clear_has_vilidcode();
}
inline const ::std::string& CodeInfo::vilidcode() const {
  // @@protoc_insertion_point(field_get:CodeInfo.vilidCode)
  return *vilidcode_;
}
inline void CodeInfo::set_vilidcode(const ::std::string& value) {
  set_has_vilidcode();
  if (vilidcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilidcode_ = new ::std::string;
  }
  vilidcode_->assign(value);
  // @@protoc_insertion_point(field_set:CodeInfo.vilidCode)
}
inline void CodeInfo::set_vilidcode(const char* value) {
  set_has_vilidcode();
  if (vilidcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilidcode_ = new ::std::string;
  }
  vilidcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:CodeInfo.vilidCode)
}
inline void CodeInfo::set_vilidcode(const char* value, size_t size) {
  set_has_vilidcode();
  if (vilidcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilidcode_ = new ::std::string;
  }
  vilidcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CodeInfo.vilidCode)
}
inline ::std::string* CodeInfo::mutable_vilidcode() {
  set_has_vilidcode();
  if (vilidcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilidcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CodeInfo.vilidCode)
  return vilidcode_;
}
inline ::std::string* CodeInfo::release_vilidcode() {
  clear_has_vilidcode();
  if (vilidcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = vilidcode_;
    vilidcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CodeInfo::set_allocated_vilidcode(::std::string* vilidcode) {
  if (vilidcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vilidcode_;
  }
  if (vilidcode) {
    set_has_vilidcode();
    vilidcode_ = vilidcode;
  } else {
    clear_has_vilidcode();
    vilidcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CodeInfo.vilidCode)
}

// optional int64 accountID = 2;
inline bool CodeInfo::has_accountid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CodeInfo::set_has_accountid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CodeInfo::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CodeInfo::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
  clear_has_accountid();
}
inline ::google::protobuf::int64 CodeInfo::accountid() const {
  // @@protoc_insertion_point(field_get:CodeInfo.accountID)
  return accountid_;
}
inline void CodeInfo::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:CodeInfo.accountID)
}

// optional int64 vilidityTime = 3;
inline bool CodeInfo::has_viliditytime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CodeInfo::set_has_viliditytime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CodeInfo::clear_has_viliditytime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CodeInfo::clear_viliditytime() {
  viliditytime_ = GOOGLE_LONGLONG(0);
  clear_has_viliditytime();
}
inline ::google::protobuf::int64 CodeInfo::viliditytime() const {
  // @@protoc_insertion_point(field_get:CodeInfo.vilidityTime)
  return viliditytime_;
}
inline void CodeInfo::set_viliditytime(::google::protobuf::int64 value) {
  set_has_viliditytime();
  viliditytime_ = value;
  // @@protoc_insertion_point(field_set:CodeInfo.vilidityTime)
}

// optional string platForm = 4;
inline bool CodeInfo::has_platform() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CodeInfo::set_has_platform() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CodeInfo::clear_has_platform() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CodeInfo::clear_platform() {
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& CodeInfo::platform() const {
  // @@protoc_insertion_point(field_get:CodeInfo.platForm)
  return *platform_;
}
inline void CodeInfo::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
  // @@protoc_insertion_point(field_set:CodeInfo.platForm)
}
inline void CodeInfo::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
  // @@protoc_insertion_point(field_set_char:CodeInfo.platForm)
}
inline void CodeInfo::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CodeInfo.platForm)
}
inline ::std::string* CodeInfo::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CodeInfo.platForm)
  return platform_;
}
inline ::std::string* CodeInfo::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CodeInfo::set_allocated_platform(::std::string* platform) {
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platform_;
  }
  if (platform) {
    set_has_platform();
    platform_ = platform;
  } else {
    clear_has_platform();
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CodeInfo.platForm)
}

// optional string uid = 5;
inline bool CodeInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CodeInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CodeInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CodeInfo::clear_uid() {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_->clear();
  }
  clear_has_uid();
}
inline const ::std::string& CodeInfo::uid() const {
  // @@protoc_insertion_point(field_get:CodeInfo.uid)
  return *uid_;
}
inline void CodeInfo::set_uid(const ::std::string& value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set:CodeInfo.uid)
}
inline void CodeInfo::set_uid(const char* value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set_char:CodeInfo.uid)
}
inline void CodeInfo::set_uid(const char* value, size_t size) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CodeInfo.uid)
}
inline ::std::string* CodeInfo::mutable_uid() {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CodeInfo.uid)
  return uid_;
}
inline ::std::string* CodeInfo::release_uid() {
  clear_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = uid_;
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CodeInfo::set_allocated_uid(::std::string* uid) {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uid_;
  }
  if (uid) {
    set_has_uid();
    uid_ = uid;
  } else {
    clear_has_uid();
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CodeInfo.uid)
}

// optional int64 playerId = 6;
inline bool CodeInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CodeInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CodeInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CodeInfo::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CodeInfo::playerid() const {
  // @@protoc_insertion_point(field_get:CodeInfo.playerId)
  return playerid_;
}
inline void CodeInfo::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CodeInfo.playerId)
}

// -------------------------------------------------------------------

// GateRegist

// optional int32 gateId = 1;
inline bool GateRegist::has_gateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GateRegist::set_has_gateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GateRegist::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GateRegist::clear_gateid() {
  gateid_ = 0;
  clear_has_gateid();
}
inline ::google::protobuf::int32 GateRegist::gateid() const {
  // @@protoc_insertion_point(field_get:GateRegist.gateId)
  return gateid_;
}
inline void GateRegist::set_gateid(::google::protobuf::int32 value) {
  set_has_gateid();
  gateid_ = value;
  // @@protoc_insertion_point(field_set:GateRegist.gateId)
}

// optional string host = 2;
inline bool GateRegist::has_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GateRegist::set_has_host() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GateRegist::clear_has_host() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GateRegist::clear_host() {
  if (host_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_->clear();
  }
  clear_has_host();
}
inline const ::std::string& GateRegist::host() const {
  // @@protoc_insertion_point(field_get:GateRegist.host)
  return *host_;
}
inline void GateRegist::set_host(const ::std::string& value) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  host_->assign(value);
  // @@protoc_insertion_point(field_set:GateRegist.host)
}
inline void GateRegist::set_host(const char* value) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  host_->assign(value);
  // @@protoc_insertion_point(field_set_char:GateRegist.host)
}
inline void GateRegist::set_host(const char* value, size_t size) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  host_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GateRegist.host)
}
inline ::std::string* GateRegist::mutable_host() {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GateRegist.host)
  return host_;
}
inline ::std::string* GateRegist::release_host() {
  clear_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = host_;
    host_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GateRegist::set_allocated_host(::std::string* host) {
  if (host_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete host_;
  }
  if (host) {
    set_has_host();
    host_ = host;
  } else {
    clear_has_host();
    host_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GateRegist.host)
}

// optional int32 port = 3;
inline bool GateRegist::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GateRegist::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GateRegist::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GateRegist::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 GateRegist::port() const {
  // @@protoc_insertion_point(field_get:GateRegist.port)
  return port_;
}
inline void GateRegist::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:GateRegist.port)
}

// optional int32 onlineNum = 4;
inline bool GateRegist::has_onlinenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GateRegist::set_has_onlinenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GateRegist::clear_has_onlinenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GateRegist::clear_onlinenum() {
  onlinenum_ = 0;
  clear_has_onlinenum();
}
inline ::google::protobuf::int32 GateRegist::onlinenum() const {
  // @@protoc_insertion_point(field_get:GateRegist.onlineNum)
  return onlinenum_;
}
inline void GateRegist::set_onlinenum(::google::protobuf::int32 value) {
  set_has_onlinenum();
  onlinenum_ = value;
  // @@protoc_insertion_point(field_set:GateRegist.onlineNum)
}

// -------------------------------------------------------------------

// GateRegistBack

// optional int32 code = 1;
inline bool GateRegistBack::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GateRegistBack::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GateRegistBack::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GateRegistBack::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 GateRegistBack::code() const {
  // @@protoc_insertion_point(field_get:GateRegistBack.code)
  return code_;
}
inline void GateRegistBack::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:GateRegistBack.code)
}

// repeated .CodeInfo infos = 2;
inline int GateRegistBack::infos_size() const {
  return infos_.size();
}
inline void GateRegistBack::clear_infos() {
  infos_.Clear();
}
inline const ::CodeInfo& GateRegistBack::infos(int index) const {
  // @@protoc_insertion_point(field_get:GateRegistBack.infos)
  return infos_.Get(index);
}
inline ::CodeInfo* GateRegistBack::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:GateRegistBack.infos)
  return infos_.Mutable(index);
}
inline ::CodeInfo* GateRegistBack::add_infos() {
  // @@protoc_insertion_point(field_add:GateRegistBack.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CodeInfo >&
GateRegistBack::infos() const {
  // @@protoc_insertion_point(field_list:GateRegistBack.infos)
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CodeInfo >*
GateRegistBack::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:GateRegistBack.infos)
  return &infos_;
}

// optional int32 serverType = 3;
inline bool GateRegistBack::has_servertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GateRegistBack::set_has_servertype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GateRegistBack::clear_has_servertype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GateRegistBack::clear_servertype() {
  servertype_ = 0;
  clear_has_servertype();
}
inline ::google::protobuf::int32 GateRegistBack::servertype() const {
  // @@protoc_insertion_point(field_get:GateRegistBack.serverType)
  return servertype_;
}
inline void GateRegistBack::set_servertype(::google::protobuf::int32 value) {
  set_has_servertype();
  servertype_ = value;
  // @@protoc_insertion_point(field_set:GateRegistBack.serverType)
}

// -------------------------------------------------------------------

// Gate2LoginLoadPush

// required int32 gateId = 1;
inline bool Gate2LoginLoadPush::has_gateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Gate2LoginLoadPush::set_has_gateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Gate2LoginLoadPush::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Gate2LoginLoadPush::clear_gateid() {
  gateid_ = 0;
  clear_has_gateid();
}
inline ::google::protobuf::int32 Gate2LoginLoadPush::gateid() const {
  // @@protoc_insertion_point(field_get:Gate2LoginLoadPush.gateId)
  return gateid_;
}
inline void Gate2LoginLoadPush::set_gateid(::google::protobuf::int32 value) {
  set_has_gateid();
  gateid_ = value;
  // @@protoc_insertion_point(field_set:Gate2LoginLoadPush.gateId)
}

// required int32 playerNum = 2;
inline bool Gate2LoginLoadPush::has_playernum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Gate2LoginLoadPush::set_has_playernum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Gate2LoginLoadPush::clear_has_playernum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Gate2LoginLoadPush::clear_playernum() {
  playernum_ = 0;
  clear_has_playernum();
}
inline ::google::protobuf::int32 Gate2LoginLoadPush::playernum() const {
  // @@protoc_insertion_point(field_get:Gate2LoginLoadPush.playerNum)
  return playernum_;
}
inline void Gate2LoginLoadPush::set_playernum(::google::protobuf::int32 value) {
  set_has_playernum();
  playernum_ = value;
  // @@protoc_insertion_point(field_set:Gate2LoginLoadPush.playerNum)
}

// -------------------------------------------------------------------

// GateWReadyPush

// required int32 code = 1;
inline bool GateWReadyPush::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GateWReadyPush::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GateWReadyPush::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GateWReadyPush::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 GateWReadyPush::code() const {
  // @@protoc_insertion_point(field_get:GateWReadyPush.code)
  return code_;
}
inline void GateWReadyPush::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:GateWReadyPush.code)
}

// -------------------------------------------------------------------

// User2GameForwardMessage

// optional int64 accountId = 2;
inline bool User2GameForwardMessage::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User2GameForwardMessage::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User2GameForwardMessage::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User2GameForwardMessage::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
  clear_has_accountid();
}
inline ::google::protobuf::int64 User2GameForwardMessage::accountid() const {
  // @@protoc_insertion_point(field_get:User2GameForwardMessage.accountId)
  return accountid_;
}
inline void User2GameForwardMessage::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:User2GameForwardMessage.accountId)
}

// optional int32 messageId = 3;
inline bool User2GameForwardMessage::has_messageid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void User2GameForwardMessage::set_has_messageid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void User2GameForwardMessage::clear_has_messageid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void User2GameForwardMessage::clear_messageid() {
  messageid_ = 0;
  clear_has_messageid();
}
inline ::google::protobuf::int32 User2GameForwardMessage::messageid() const {
  // @@protoc_insertion_point(field_get:User2GameForwardMessage.messageId)
  return messageid_;
}
inline void User2GameForwardMessage::set_messageid(::google::protobuf::int32 value) {
  set_has_messageid();
  messageid_ = value;
  // @@protoc_insertion_point(field_set:User2GameForwardMessage.messageId)
}

// optional bytes innerPacket = 4;
inline bool User2GameForwardMessage::has_innerpacket() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void User2GameForwardMessage::set_has_innerpacket() {
  _has_bits_[0] |= 0x00000004u;
}
inline void User2GameForwardMessage::clear_has_innerpacket() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void User2GameForwardMessage::clear_innerpacket() {
  if (innerpacket_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_->clear();
  }
  clear_has_innerpacket();
}
inline const ::std::string& User2GameForwardMessage::innerpacket() const {
  // @@protoc_insertion_point(field_get:User2GameForwardMessage.innerPacket)
  return *innerpacket_;
}
inline void User2GameForwardMessage::set_innerpacket(const ::std::string& value) {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  innerpacket_->assign(value);
  // @@protoc_insertion_point(field_set:User2GameForwardMessage.innerPacket)
}
inline void User2GameForwardMessage::set_innerpacket(const char* value) {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  innerpacket_->assign(value);
  // @@protoc_insertion_point(field_set_char:User2GameForwardMessage.innerPacket)
}
inline void User2GameForwardMessage::set_innerpacket(const void* value, size_t size) {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  innerpacket_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User2GameForwardMessage.innerPacket)
}
inline ::std::string* User2GameForwardMessage::mutable_innerpacket() {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User2GameForwardMessage.innerPacket)
  return innerpacket_;
}
inline ::std::string* User2GameForwardMessage::release_innerpacket() {
  clear_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = innerpacket_;
    innerpacket_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void User2GameForwardMessage::set_allocated_innerpacket(::std::string* innerpacket) {
  if (innerpacket_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete innerpacket_;
  }
  if (innerpacket) {
    set_has_innerpacket();
    innerpacket_ = innerpacket;
  } else {
    clear_has_innerpacket();
    innerpacket_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User2GameForwardMessage.innerPacket)
}

// optional string vilidCode = 5;
inline bool User2GameForwardMessage::has_vilidcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void User2GameForwardMessage::set_has_vilidcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void User2GameForwardMessage::clear_has_vilidcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void User2GameForwardMessage::clear_vilidcode() {
  if (vilidcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilidcode_->clear();
  }
  clear_has_vilidcode();
}
inline const ::std::string& User2GameForwardMessage::vilidcode() const {
  // @@protoc_insertion_point(field_get:User2GameForwardMessage.vilidCode)
  return *vilidcode_;
}
inline void User2GameForwardMessage::set_vilidcode(const ::std::string& value) {
  set_has_vilidcode();
  if (vilidcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilidcode_ = new ::std::string;
  }
  vilidcode_->assign(value);
  // @@protoc_insertion_point(field_set:User2GameForwardMessage.vilidCode)
}
inline void User2GameForwardMessage::set_vilidcode(const char* value) {
  set_has_vilidcode();
  if (vilidcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilidcode_ = new ::std::string;
  }
  vilidcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:User2GameForwardMessage.vilidCode)
}
inline void User2GameForwardMessage::set_vilidcode(const char* value, size_t size) {
  set_has_vilidcode();
  if (vilidcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilidcode_ = new ::std::string;
  }
  vilidcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User2GameForwardMessage.vilidCode)
}
inline ::std::string* User2GameForwardMessage::mutable_vilidcode() {
  set_has_vilidcode();
  if (vilidcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vilidcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User2GameForwardMessage.vilidCode)
  return vilidcode_;
}
inline ::std::string* User2GameForwardMessage::release_vilidcode() {
  clear_has_vilidcode();
  if (vilidcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = vilidcode_;
    vilidcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void User2GameForwardMessage::set_allocated_vilidcode(::std::string* vilidcode) {
  if (vilidcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vilidcode_;
  }
  if (vilidcode) {
    set_has_vilidcode();
    vilidcode_ = vilidcode;
  } else {
    clear_has_vilidcode();
    vilidcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User2GameForwardMessage.vilidCode)
}

// optional string ip = 6;
inline bool User2GameForwardMessage::has_ip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void User2GameForwardMessage::set_has_ip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void User2GameForwardMessage::clear_has_ip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void User2GameForwardMessage::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& User2GameForwardMessage::ip() const {
  // @@protoc_insertion_point(field_get:User2GameForwardMessage.ip)
  return *ip_;
}
inline void User2GameForwardMessage::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:User2GameForwardMessage.ip)
}
inline void User2GameForwardMessage::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:User2GameForwardMessage.ip)
}
inline void User2GameForwardMessage::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:User2GameForwardMessage.ip)
}
inline ::std::string* User2GameForwardMessage::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:User2GameForwardMessage.ip)
  return ip_;
}
inline ::std::string* User2GameForwardMessage::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void User2GameForwardMessage::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:User2GameForwardMessage.ip)
}

// -------------------------------------------------------------------

// Game2UserForwardMessage

// optional int32 allServer = 1;
inline bool Game2UserForwardMessage::has_allserver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Game2UserForwardMessage::set_has_allserver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Game2UserForwardMessage::clear_has_allserver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Game2UserForwardMessage::clear_allserver() {
  allserver_ = 0;
  clear_has_allserver();
}
inline ::google::protobuf::int32 Game2UserForwardMessage::allserver() const {
  // @@protoc_insertion_point(field_get:Game2UserForwardMessage.allServer)
  return allserver_;
}
inline void Game2UserForwardMessage::set_allserver(::google::protobuf::int32 value) {
  set_has_allserver();
  allserver_ = value;
  // @@protoc_insertion_point(field_set:Game2UserForwardMessage.allServer)
}

// repeated int64 accountId = 2;
inline int Game2UserForwardMessage::accountid_size() const {
  return accountid_.size();
}
inline void Game2UserForwardMessage::clear_accountid() {
  accountid_.Clear();
}
inline ::google::protobuf::int64 Game2UserForwardMessage::accountid(int index) const {
  // @@protoc_insertion_point(field_get:Game2UserForwardMessage.accountId)
  return accountid_.Get(index);
}
inline void Game2UserForwardMessage::set_accountid(int index, ::google::protobuf::int64 value) {
  accountid_.Set(index, value);
  // @@protoc_insertion_point(field_set:Game2UserForwardMessage.accountId)
}
inline void Game2UserForwardMessage::add_accountid(::google::protobuf::int64 value) {
  accountid_.Add(value);
  // @@protoc_insertion_point(field_add:Game2UserForwardMessage.accountId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Game2UserForwardMessage::accountid() const {
  // @@protoc_insertion_point(field_list:Game2UserForwardMessage.accountId)
  return accountid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Game2UserForwardMessage::mutable_accountid() {
  // @@protoc_insertion_point(field_mutable_list:Game2UserForwardMessage.accountId)
  return &accountid_;
}

// optional int32 messageId = 3;
inline bool Game2UserForwardMessage::has_messageid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Game2UserForwardMessage::set_has_messageid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Game2UserForwardMessage::clear_has_messageid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Game2UserForwardMessage::clear_messageid() {
  messageid_ = 0;
  clear_has_messageid();
}
inline ::google::protobuf::int32 Game2UserForwardMessage::messageid() const {
  // @@protoc_insertion_point(field_get:Game2UserForwardMessage.messageId)
  return messageid_;
}
inline void Game2UserForwardMessage::set_messageid(::google::protobuf::int32 value) {
  set_has_messageid();
  messageid_ = value;
  // @@protoc_insertion_point(field_set:Game2UserForwardMessage.messageId)
}

// optional bytes innerPacket = 4;
inline bool Game2UserForwardMessage::has_innerpacket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Game2UserForwardMessage::set_has_innerpacket() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Game2UserForwardMessage::clear_has_innerpacket() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Game2UserForwardMessage::clear_innerpacket() {
  if (innerpacket_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_->clear();
  }
  clear_has_innerpacket();
}
inline const ::std::string& Game2UserForwardMessage::innerpacket() const {
  // @@protoc_insertion_point(field_get:Game2UserForwardMessage.innerPacket)
  return *innerpacket_;
}
inline void Game2UserForwardMessage::set_innerpacket(const ::std::string& value) {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  innerpacket_->assign(value);
  // @@protoc_insertion_point(field_set:Game2UserForwardMessage.innerPacket)
}
inline void Game2UserForwardMessage::set_innerpacket(const char* value) {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  innerpacket_->assign(value);
  // @@protoc_insertion_point(field_set_char:Game2UserForwardMessage.innerPacket)
}
inline void Game2UserForwardMessage::set_innerpacket(const void* value, size_t size) {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  innerpacket_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Game2UserForwardMessage.innerPacket)
}
inline ::std::string* Game2UserForwardMessage::mutable_innerpacket() {
  set_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    innerpacket_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Game2UserForwardMessage.innerPacket)
  return innerpacket_;
}
inline ::std::string* Game2UserForwardMessage::release_innerpacket() {
  clear_has_innerpacket();
  if (innerpacket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = innerpacket_;
    innerpacket_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Game2UserForwardMessage::set_allocated_innerpacket(::std::string* innerpacket) {
  if (innerpacket_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete innerpacket_;
  }
  if (innerpacket) {
    set_has_innerpacket();
    innerpacket_ = innerpacket;
  } else {
    clear_has_innerpacket();
    innerpacket_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Game2UserForwardMessage.innerPacket)
}

// -------------------------------------------------------------------

// Gate2GameInterruptUserSession

// optional int64 accountId = 2;
inline bool Gate2GameInterruptUserSession::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Gate2GameInterruptUserSession::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Gate2GameInterruptUserSession::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Gate2GameInterruptUserSession::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
  clear_has_accountid();
}
inline ::google::protobuf::int64 Gate2GameInterruptUserSession::accountid() const {
  // @@protoc_insertion_point(field_get:Gate2GameInterruptUserSession.accountId)
  return accountid_;
}
inline void Gate2GameInterruptUserSession::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:Gate2GameInterruptUserSession.accountId)
}

// -------------------------------------------------------------------

// Gate2GamePlayerLoginout

// optional int64 playerId = 1;
inline bool Gate2GamePlayerLoginout::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Gate2GamePlayerLoginout::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Gate2GamePlayerLoginout::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Gate2GamePlayerLoginout::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 Gate2GamePlayerLoginout::playerid() const {
  // @@protoc_insertion_point(field_get:Gate2GamePlayerLoginout.playerId)
  return playerid_;
}
inline void Gate2GamePlayerLoginout::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:Gate2GamePlayerLoginout.playerId)
}

// optional int64 accountId = 2;
inline bool Gate2GamePlayerLoginout::has_accountid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Gate2GamePlayerLoginout::set_has_accountid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Gate2GamePlayerLoginout::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Gate2GamePlayerLoginout::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
  clear_has_accountid();
}
inline ::google::protobuf::int64 Gate2GamePlayerLoginout::accountid() const {
  // @@protoc_insertion_point(field_get:Gate2GamePlayerLoginout.accountId)
  return accountid_;
}
inline void Gate2GamePlayerLoginout::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:Gate2GamePlayerLoginout.accountId)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GatewayMessage_2eproto__INCLUDED
