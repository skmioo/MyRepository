// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GongChengMessage.proto

#ifndef PROTOBUF_GongChengMessage_2eproto__INCLUDED
#define PROTOBUF_GongChengMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "InnerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GongChengMessage_2eproto();
void protobuf_AssignDesc_GongChengMessage_2eproto();
void protobuf_ShutdownFile_GongChengMessage_2eproto();

class CGEnterGongCheng;
class GCEnterGongCheng;
class GCGongChengChangeSchedule;
class CGDonateStick;
class GCDonateStick;
class CGOpenGongChengUI;
class GCOpenGongChengUI;
class GongChengDoorInfo;
class GCDoorScore;
class GCDoorHurtPercent;
class GCGongChengLongBelong;
class GCGongchengAddScore;
class CGGongChengLeave;
class GCGongChengLeave;
class CGBeforeDonateStick;
class GCBeforeDonateStick;
class GCGongChengLeaveTime;
class GCGongChengScoreCount;
class CGGongChengReceiveAward;
class GCGongChengReceiveAward;
class CGGongChengCanStatue;
class GCGongChengCanStatue;
class CGGongChengGetStatueAward;
class GCGongChengGetStatueAward;
class GCOpenGongChengEnterBoard;
class GCGongChengLeader;

// ===================================================================

class CGEnterGongCheng : public ::google::protobuf::Message {
 public:
  CGEnterGongCheng();
  virtual ~CGEnterGongCheng();

  CGEnterGongCheng(const CGEnterGongCheng& from);

  inline CGEnterGongCheng& operator=(const CGEnterGongCheng& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGEnterGongCheng& default_instance();

  void Swap(CGEnterGongCheng* other);

  // implements Message ----------------------------------------------

  CGEnterGongCheng* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGEnterGongCheng& from);
  void MergeFrom(const CGEnterGongCheng& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGEnterGongCheng)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static CGEnterGongCheng* default_instance_;
};
// -------------------------------------------------------------------

class GCEnterGongCheng : public ::google::protobuf::Message {
 public:
  GCEnterGongCheng();
  virtual ~GCEnterGongCheng();

  GCEnterGongCheng(const GCEnterGongCheng& from);

  inline GCEnterGongCheng& operator=(const GCEnterGongCheng& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCEnterGongCheng& default_instance();

  void Swap(GCEnterGongCheng* other);

  // implements Message ----------------------------------------------

  GCEnterGongCheng* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCEnterGongCheng& from);
  void MergeFrom(const GCEnterGongCheng& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 doorState = 3;
  inline bool has_doorstate() const;
  inline void clear_doorstate();
  static const int kDoorStateFieldNumber = 3;
  inline ::google::protobuf::int32 doorstate() const;
  inline void set_doorstate(::google::protobuf::int32 value);

  // optional int32 campState = 4;
  inline bool has_campstate() const;
  inline void clear_campstate();
  static const int kCampStateFieldNumber = 4;
  inline ::google::protobuf::int32 campstate() const;
  inline void set_campstate(::google::protobuf::int32 value);

  // optional int64 restTime = 5;
  inline bool has_resttime() const;
  inline void clear_resttime();
  static const int kRestTimeFieldNumber = 5;
  inline ::google::protobuf::int64 resttime() const;
  inline void set_resttime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCEnterGongCheng)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_doorstate();
  inline void clear_has_doorstate();
  inline void set_has_campstate();
  inline void clear_has_campstate();
  inline void set_has_resttime();
  inline void clear_has_resttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 doorstate_;
  ::google::protobuf::int32 campstate_;
  ::google::protobuf::int64 resttime_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCEnterGongCheng* default_instance_;
};
// -------------------------------------------------------------------

class GCGongChengChangeSchedule : public ::google::protobuf::Message {
 public:
  GCGongChengChangeSchedule();
  virtual ~GCGongChengChangeSchedule();

  GCGongChengChangeSchedule(const GCGongChengChangeSchedule& from);

  inline GCGongChengChangeSchedule& operator=(const GCGongChengChangeSchedule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGongChengChangeSchedule& default_instance();

  void Swap(GCGongChengChangeSchedule* other);

  // implements Message ----------------------------------------------

  GCGongChengChangeSchedule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGongChengChangeSchedule& from);
  void MergeFrom(const GCGongChengChangeSchedule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int64 restTime = 5;
  inline bool has_resttime() const;
  inline void clear_resttime();
  static const int kRestTimeFieldNumber = 5;
  inline ::google::protobuf::int64 resttime() const;
  inline void set_resttime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCGongChengChangeSchedule)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_resttime();
  inline void clear_has_resttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 resttime_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGongChengChangeSchedule* default_instance_;
};
// -------------------------------------------------------------------

class CGDonateStick : public ::google::protobuf::Message {
 public:
  CGDonateStick();
  virtual ~CGDonateStick();

  CGDonateStick(const CGDonateStick& from);

  inline CGDonateStick& operator=(const CGDonateStick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGDonateStick& default_instance();

  void Swap(CGDonateStick* other);

  // implements Message ----------------------------------------------

  CGDonateStick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGDonateStick& from);
  void MergeFrom(const CGDonateStick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGDonateStick)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static CGDonateStick* default_instance_;
};
// -------------------------------------------------------------------

class GCDonateStick : public ::google::protobuf::Message {
 public:
  GCDonateStick();
  virtual ~GCDonateStick();

  GCDonateStick(const GCDonateStick& from);

  inline GCDonateStick& operator=(const GCDonateStick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDonateStick& default_instance();

  void Swap(GCDonateStick* other);

  // implements Message ----------------------------------------------

  GCDonateStick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDonateStick& from);
  void MergeFrom(const GCDonateStick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCDonateStick)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDonateStick* default_instance_;
};
// -------------------------------------------------------------------

class CGOpenGongChengUI : public ::google::protobuf::Message {
 public:
  CGOpenGongChengUI();
  virtual ~CGOpenGongChengUI();

  CGOpenGongChengUI(const CGOpenGongChengUI& from);

  inline CGOpenGongChengUI& operator=(const CGOpenGongChengUI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGOpenGongChengUI& default_instance();

  void Swap(CGOpenGongChengUI* other);

  // implements Message ----------------------------------------------

  CGOpenGongChengUI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGOpenGongChengUI& from);
  void MergeFrom(const CGOpenGongChengUI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGOpenGongChengUI)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static CGOpenGongChengUI* default_instance_;
};
// -------------------------------------------------------------------

class GCOpenGongChengUI : public ::google::protobuf::Message {
 public:
  GCOpenGongChengUI();
  virtual ~GCOpenGongChengUI();

  GCOpenGongChengUI(const GCOpenGongChengUI& from);

  inline GCOpenGongChengUI& operator=(const GCOpenGongChengUI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCOpenGongChengUI& default_instance();

  void Swap(GCOpenGongChengUI* other);

  // implements Message ----------------------------------------------

  GCOpenGongChengUI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCOpenGongChengUI& from);
  void MergeFrom(const GCOpenGongChengUI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CharacterInfo characterInfo = 1;
  inline bool has_characterinfo() const;
  inline void clear_characterinfo();
  static const int kCharacterInfoFieldNumber = 1;
  inline const ::CharacterInfo& characterinfo() const;
  inline ::CharacterInfo* mutable_characterinfo();
  inline ::CharacterInfo* release_characterinfo();
  inline void set_allocated_characterinfo(::CharacterInfo* characterinfo);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional string gangName = 3;
  inline bool has_gangname() const;
  inline void clear_gangname();
  static const int kGangNameFieldNumber = 3;
  inline const ::std::string& gangname() const;
  inline void set_gangname(const ::std::string& value);
  inline void set_gangname(const char* value);
  inline void set_gangname(const char* value, size_t size);
  inline ::std::string* mutable_gangname();
  inline ::std::string* release_gangname();
  inline void set_allocated_gangname(::std::string* gangname);

  // @@protoc_insertion_point(class_scope:GCOpenGongChengUI)
 private:
  inline void set_has_characterinfo();
  inline void clear_has_characterinfo();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_gangname();
  inline void clear_has_gangname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CharacterInfo* characterinfo_;
  ::std::string* gangname_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCOpenGongChengUI* default_instance_;
};
// -------------------------------------------------------------------

class GongChengDoorInfo : public ::google::protobuf::Message {
 public:
  GongChengDoorInfo();
  virtual ~GongChengDoorInfo();

  GongChengDoorInfo(const GongChengDoorInfo& from);

  inline GongChengDoorInfo& operator=(const GongChengDoorInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GongChengDoorInfo& default_instance();

  void Swap(GongChengDoorInfo* other);

  // implements Message ----------------------------------------------

  GongChengDoorInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GongChengDoorInfo& from);
  void MergeFrom(const GongChengDoorInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gangName = 1;
  inline bool has_gangname() const;
  inline void clear_gangname();
  static const int kGangNameFieldNumber = 1;
  inline const ::std::string& gangname() const;
  inline void set_gangname(const ::std::string& value);
  inline void set_gangname(const char* value);
  inline void set_gangname(const char* value, size_t size);
  inline ::std::string* mutable_gangname();
  inline ::std::string* release_gangname();
  inline void set_allocated_gangname(::std::string* gangname);

  // optional int64 gangId = 2;
  inline bool has_gangid() const;
  inline void clear_gangid();
  static const int kGangIdFieldNumber = 2;
  inline ::google::protobuf::int64 gangid() const;
  inline void set_gangid(::google::protobuf::int64 value);

  // optional int32 gangData = 3;
  inline bool has_gangdata() const;
  inline void clear_gangdata();
  static const int kGangDataFieldNumber = 3;
  inline ::google::protobuf::int32 gangdata() const;
  inline void set_gangdata(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GongChengDoorInfo)
 private:
  inline void set_has_gangname();
  inline void clear_has_gangname();
  inline void set_has_gangid();
  inline void clear_has_gangid();
  inline void set_has_gangdata();
  inline void clear_has_gangdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gangname_;
  ::google::protobuf::int64 gangid_;
  ::google::protobuf::int32 gangdata_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GongChengDoorInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCDoorScore : public ::google::protobuf::Message {
 public:
  GCDoorScore();
  virtual ~GCDoorScore();

  GCDoorScore(const GCDoorScore& from);

  inline GCDoorScore& operator=(const GCDoorScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDoorScore& default_instance();

  void Swap(GCDoorScore* other);

  // implements Message ----------------------------------------------

  GCDoorScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDoorScore& from);
  void MergeFrom(const GCDoorScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GongChengDoorInfo gangScoreInfo = 1;
  inline int gangscoreinfo_size() const;
  inline void clear_gangscoreinfo();
  static const int kGangScoreInfoFieldNumber = 1;
  inline const ::GongChengDoorInfo& gangscoreinfo(int index) const;
  inline ::GongChengDoorInfo* mutable_gangscoreinfo(int index);
  inline ::GongChengDoorInfo* add_gangscoreinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >&
      gangscoreinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >*
      mutable_gangscoreinfo();

  // optional .GongChengDoorInfo selfGangScoreInfo = 2;
  inline bool has_selfgangscoreinfo() const;
  inline void clear_selfgangscoreinfo();
  static const int kSelfGangScoreInfoFieldNumber = 2;
  inline const ::GongChengDoorInfo& selfgangscoreinfo() const;
  inline ::GongChengDoorInfo* mutable_selfgangscoreinfo();
  inline ::GongChengDoorInfo* release_selfgangscoreinfo();
  inline void set_allocated_selfgangscoreinfo(::GongChengDoorInfo* selfgangscoreinfo);

  // @@protoc_insertion_point(class_scope:GCDoorScore)
 private:
  inline void set_has_selfgangscoreinfo();
  inline void clear_has_selfgangscoreinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo > gangscoreinfo_;
  ::GongChengDoorInfo* selfgangscoreinfo_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDoorScore* default_instance_;
};
// -------------------------------------------------------------------

class GCDoorHurtPercent : public ::google::protobuf::Message {
 public:
  GCDoorHurtPercent();
  virtual ~GCDoorHurtPercent();

  GCDoorHurtPercent(const GCDoorHurtPercent& from);

  inline GCDoorHurtPercent& operator=(const GCDoorHurtPercent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDoorHurtPercent& default_instance();

  void Swap(GCDoorHurtPercent* other);

  // implements Message ----------------------------------------------

  GCDoorHurtPercent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDoorHurtPercent& from);
  void MergeFrom(const GCDoorHurtPercent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GongChengDoorInfo gangHurtInfo = 1;
  inline int ganghurtinfo_size() const;
  inline void clear_ganghurtinfo();
  static const int kGangHurtInfoFieldNumber = 1;
  inline const ::GongChengDoorInfo& ganghurtinfo(int index) const;
  inline ::GongChengDoorInfo* mutable_ganghurtinfo(int index);
  inline ::GongChengDoorInfo* add_ganghurtinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >&
      ganghurtinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >*
      mutable_ganghurtinfo();

  // optional .GongChengDoorInfo selfGangHurtInfo = 2;
  inline bool has_selfganghurtinfo() const;
  inline void clear_selfganghurtinfo();
  static const int kSelfGangHurtInfoFieldNumber = 2;
  inline const ::GongChengDoorInfo& selfganghurtinfo() const;
  inline ::GongChengDoorInfo* mutable_selfganghurtinfo();
  inline ::GongChengDoorInfo* release_selfganghurtinfo();
  inline void set_allocated_selfganghurtinfo(::GongChengDoorInfo* selfganghurtinfo);

  // @@protoc_insertion_point(class_scope:GCDoorHurtPercent)
 private:
  inline void set_has_selfganghurtinfo();
  inline void clear_has_selfganghurtinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo > ganghurtinfo_;
  ::GongChengDoorInfo* selfganghurtinfo_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDoorHurtPercent* default_instance_;
};
// -------------------------------------------------------------------

class GCGongChengLongBelong : public ::google::protobuf::Message {
 public:
  GCGongChengLongBelong();
  virtual ~GCGongChengLongBelong();

  GCGongChengLongBelong(const GCGongChengLongBelong& from);

  inline GCGongChengLongBelong& operator=(const GCGongChengLongBelong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGongChengLongBelong& default_instance();

  void Swap(GCGongChengLongBelong* other);

  // implements Message ----------------------------------------------

  GCGongChengLongBelong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGongChengLongBelong& from);
  void MergeFrom(const GCGongChengLongBelong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GongChengDoorInfo longStickInfo = 1;
  inline int longstickinfo_size() const;
  inline void clear_longstickinfo();
  static const int kLongStickInfoFieldNumber = 1;
  inline const ::GongChengDoorInfo& longstickinfo(int index) const;
  inline ::GongChengDoorInfo* mutable_longstickinfo(int index);
  inline ::GongChengDoorInfo* add_longstickinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >&
      longstickinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >*
      mutable_longstickinfo();

  // @@protoc_insertion_point(class_scope:GCGongChengLongBelong)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo > longstickinfo_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGongChengLongBelong* default_instance_;
};
// -------------------------------------------------------------------

class GCGongchengAddScore : public ::google::protobuf::Message {
 public:
  GCGongchengAddScore();
  virtual ~GCGongchengAddScore();

  GCGongchengAddScore(const GCGongchengAddScore& from);

  inline GCGongchengAddScore& operator=(const GCGongchengAddScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGongchengAddScore& default_instance();

  void Swap(GCGongchengAddScore* other);

  // implements Message ----------------------------------------------

  GCGongchengAddScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGongchengAddScore& from);
  void MergeFrom(const GCGongchengAddScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGongchengAddScore)
 private:
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 score_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGongchengAddScore* default_instance_;
};
// -------------------------------------------------------------------

class CGGongChengLeave : public ::google::protobuf::Message {
 public:
  CGGongChengLeave();
  virtual ~CGGongChengLeave();

  CGGongChengLeave(const CGGongChengLeave& from);

  inline CGGongChengLeave& operator=(const CGGongChengLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGongChengLeave& default_instance();

  void Swap(CGGongChengLeave* other);

  // implements Message ----------------------------------------------

  CGGongChengLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGongChengLeave& from);
  void MergeFrom(const CGGongChengLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGGongChengLeave)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGongChengLeave* default_instance_;
};
// -------------------------------------------------------------------

class GCGongChengLeave : public ::google::protobuf::Message {
 public:
  GCGongChengLeave();
  virtual ~GCGongChengLeave();

  GCGongChengLeave(const GCGongChengLeave& from);

  inline GCGongChengLeave& operator=(const GCGongChengLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGongChengLeave& default_instance();

  void Swap(GCGongChengLeave* other);

  // implements Message ----------------------------------------------

  GCGongChengLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGongChengLeave& from);
  void MergeFrom(const GCGongChengLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGongChengLeave)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGongChengLeave* default_instance_;
};
// -------------------------------------------------------------------

class CGBeforeDonateStick : public ::google::protobuf::Message {
 public:
  CGBeforeDonateStick();
  virtual ~CGBeforeDonateStick();

  CGBeforeDonateStick(const CGBeforeDonateStick& from);

  inline CGBeforeDonateStick& operator=(const CGBeforeDonateStick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGBeforeDonateStick& default_instance();

  void Swap(CGBeforeDonateStick* other);

  // implements Message ----------------------------------------------

  CGBeforeDonateStick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGBeforeDonateStick& from);
  void MergeFrom(const CGBeforeDonateStick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGBeforeDonateStick)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static CGBeforeDonateStick* default_instance_;
};
// -------------------------------------------------------------------

class GCBeforeDonateStick : public ::google::protobuf::Message {
 public:
  GCBeforeDonateStick();
  virtual ~GCBeforeDonateStick();

  GCBeforeDonateStick(const GCBeforeDonateStick& from);

  inline GCBeforeDonateStick& operator=(const GCBeforeDonateStick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCBeforeDonateStick& default_instance();

  void Swap(GCBeforeDonateStick* other);

  // implements Message ----------------------------------------------

  GCBeforeDonateStick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCBeforeDonateStick& from);
  void MergeFrom(const GCBeforeDonateStick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional int32 percent = 2;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 2;
  inline ::google::protobuf::int32 percent() const;
  inline void set_percent(::google::protobuf::int32 value);

  // optional int32 canNext = 3;
  inline bool has_cannext() const;
  inline void clear_cannext();
  static const int kCanNextFieldNumber = 3;
  inline ::google::protobuf::int32 cannext() const;
  inline void set_cannext(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCBeforeDonateStick)
 private:
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_percent();
  inline void clear_has_percent();
  inline void set_has_cannext();
  inline void clear_has_cannext();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 percent_;
  ::google::protobuf::int32 cannext_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCBeforeDonateStick* default_instance_;
};
// -------------------------------------------------------------------

class GCGongChengLeaveTime : public ::google::protobuf::Message {
 public:
  GCGongChengLeaveTime();
  virtual ~GCGongChengLeaveTime();

  GCGongChengLeaveTime(const GCGongChengLeaveTime& from);

  inline GCGongChengLeaveTime& operator=(const GCGongChengLeaveTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGongChengLeaveTime& default_instance();

  void Swap(GCGongChengLeaveTime* other);

  // implements Message ----------------------------------------------

  GCGongChengLeaveTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGongChengLeaveTime& from);
  void MergeFrom(const GCGongChengLeaveTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 leaveTime = 1;
  inline bool has_leavetime() const;
  inline void clear_leavetime();
  static const int kLeaveTimeFieldNumber = 1;
  inline ::google::protobuf::int32 leavetime() const;
  inline void set_leavetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGongChengLeaveTime)
 private:
  inline void set_has_leavetime();
  inline void clear_has_leavetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 leavetime_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGongChengLeaveTime* default_instance_;
};
// -------------------------------------------------------------------

class GCGongChengScoreCount : public ::google::protobuf::Message {
 public:
  GCGongChengScoreCount();
  virtual ~GCGongChengScoreCount();

  GCGongChengScoreCount(const GCGongChengScoreCount& from);

  inline GCGongChengScoreCount& operator=(const GCGongChengScoreCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGongChengScoreCount& default_instance();

  void Swap(GCGongChengScoreCount* other);

  // implements Message ----------------------------------------------

  GCGongChengScoreCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGongChengScoreCount& from);
  void MergeFrom(const GCGongChengScoreCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GongChengDoorInfo gangScoreInfo = 1;
  inline int gangscoreinfo_size() const;
  inline void clear_gangscoreinfo();
  static const int kGangScoreInfoFieldNumber = 1;
  inline const ::GongChengDoorInfo& gangscoreinfo(int index) const;
  inline ::GongChengDoorInfo* mutable_gangscoreinfo(int index);
  inline ::GongChengDoorInfo* add_gangscoreinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >&
      gangscoreinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >*
      mutable_gangscoreinfo();

  // optional int32 closeTime = 3;
  inline bool has_closetime() const;
  inline void clear_closetime();
  static const int kCloseTimeFieldNumber = 3;
  inline ::google::protobuf::int32 closetime() const;
  inline void set_closetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGongChengScoreCount)
 private:
  inline void set_has_closetime();
  inline void clear_has_closetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo > gangscoreinfo_;
  ::google::protobuf::int32 closetime_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGongChengScoreCount* default_instance_;
};
// -------------------------------------------------------------------

class CGGongChengReceiveAward : public ::google::protobuf::Message {
 public:
  CGGongChengReceiveAward();
  virtual ~CGGongChengReceiveAward();

  CGGongChengReceiveAward(const CGGongChengReceiveAward& from);

  inline CGGongChengReceiveAward& operator=(const CGGongChengReceiveAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGongChengReceiveAward& default_instance();

  void Swap(CGGongChengReceiveAward* other);

  // implements Message ----------------------------------------------

  CGGongChengReceiveAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGongChengReceiveAward& from);
  void MergeFrom(const CGGongChengReceiveAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGGongChengReceiveAward)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGongChengReceiveAward* default_instance_;
};
// -------------------------------------------------------------------

class GCGongChengReceiveAward : public ::google::protobuf::Message {
 public:
  GCGongChengReceiveAward();
  virtual ~GCGongChengReceiveAward();

  GCGongChengReceiveAward(const GCGongChengReceiveAward& from);

  inline GCGongChengReceiveAward& operator=(const GCGongChengReceiveAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGongChengReceiveAward& default_instance();

  void Swap(GCGongChengReceiveAward* other);

  // implements Message ----------------------------------------------

  GCGongChengReceiveAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGongChengReceiveAward& from);
  void MergeFrom(const GCGongChengReceiveAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGongChengReceiveAward)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGongChengReceiveAward* default_instance_;
};
// -------------------------------------------------------------------

class CGGongChengCanStatue : public ::google::protobuf::Message {
 public:
  CGGongChengCanStatue();
  virtual ~CGGongChengCanStatue();

  CGGongChengCanStatue(const CGGongChengCanStatue& from);

  inline CGGongChengCanStatue& operator=(const CGGongChengCanStatue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGongChengCanStatue& default_instance();

  void Swap(CGGongChengCanStatue* other);

  // implements Message ----------------------------------------------

  CGGongChengCanStatue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGongChengCanStatue& from);
  void MergeFrom(const CGGongChengCanStatue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGGongChengCanStatue)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGongChengCanStatue* default_instance_;
};
// -------------------------------------------------------------------

class GCGongChengCanStatue : public ::google::protobuf::Message {
 public:
  GCGongChengCanStatue();
  virtual ~GCGongChengCanStatue();

  GCGongChengCanStatue(const GCGongChengCanStatue& from);

  inline GCGongChengCanStatue& operator=(const GCGongChengCanStatue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGongChengCanStatue& default_instance();

  void Swap(GCGongChengCanStatue* other);

  // implements Message ----------------------------------------------

  GCGongChengCanStatue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGongChengCanStatue& from);
  void MergeFrom(const GCGongChengCanStatue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 canGet = 2;
  inline bool has_canget() const;
  inline void clear_canget();
  static const int kCanGetFieldNumber = 2;
  inline ::google::protobuf::int32 canget() const;
  inline void set_canget(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGongChengCanStatue)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_canget();
  inline void clear_has_canget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 canget_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGongChengCanStatue* default_instance_;
};
// -------------------------------------------------------------------

class CGGongChengGetStatueAward : public ::google::protobuf::Message {
 public:
  CGGongChengGetStatueAward();
  virtual ~CGGongChengGetStatueAward();

  CGGongChengGetStatueAward(const CGGongChengGetStatueAward& from);

  inline CGGongChengGetStatueAward& operator=(const CGGongChengGetStatueAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGongChengGetStatueAward& default_instance();

  void Swap(CGGongChengGetStatueAward* other);

  // implements Message ----------------------------------------------

  CGGongChengGetStatueAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGongChengGetStatueAward& from);
  void MergeFrom(const CGGongChengGetStatueAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGongChengGetStatueAward)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGongChengGetStatueAward* default_instance_;
};
// -------------------------------------------------------------------

class GCGongChengGetStatueAward : public ::google::protobuf::Message {
 public:
  GCGongChengGetStatueAward();
  virtual ~GCGongChengGetStatueAward();

  GCGongChengGetStatueAward(const GCGongChengGetStatueAward& from);

  inline GCGongChengGetStatueAward& operator=(const GCGongChengGetStatueAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGongChengGetStatueAward& default_instance();

  void Swap(GCGongChengGetStatueAward* other);

  // implements Message ----------------------------------------------

  GCGongChengGetStatueAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGongChengGetStatueAward& from);
  void MergeFrom(const GCGongChengGetStatueAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGongChengGetStatueAward)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGongChengGetStatueAward* default_instance_;
};
// -------------------------------------------------------------------

class GCOpenGongChengEnterBoard : public ::google::protobuf::Message {
 public:
  GCOpenGongChengEnterBoard();
  virtual ~GCOpenGongChengEnterBoard();

  GCOpenGongChengEnterBoard(const GCOpenGongChengEnterBoard& from);

  inline GCOpenGongChengEnterBoard& operator=(const GCOpenGongChengEnterBoard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCOpenGongChengEnterBoard& default_instance();

  void Swap(GCOpenGongChengEnterBoard* other);

  // implements Message ----------------------------------------------

  GCOpenGongChengEnterBoard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCOpenGongChengEnterBoard& from);
  void MergeFrom(const GCOpenGongChengEnterBoard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCOpenGongChengEnterBoard)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCOpenGongChengEnterBoard* default_instance_;
};
// -------------------------------------------------------------------

class GCGongChengLeader : public ::google::protobuf::Message {
 public:
  GCGongChengLeader();
  virtual ~GCGongChengLeader();

  GCGongChengLeader(const GCGongChengLeader& from);

  inline GCGongChengLeader& operator=(const GCGongChengLeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGongChengLeader& default_instance();

  void Swap(GCGongChengLeader* other);

  // implements Message ----------------------------------------------

  GCGongChengLeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGongChengLeader& from);
  void MergeFrom(const GCGongChengLeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGongChengLeader)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_GongChengMessage_2eproto();
  friend void protobuf_AssignDesc_GongChengMessage_2eproto();
  friend void protobuf_ShutdownFile_GongChengMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGongChengLeader* default_instance_;
};
// ===================================================================


// ===================================================================

// CGEnterGongCheng

// optional int64 playerId = 1;
inline bool CGEnterGongCheng::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGEnterGongCheng::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGEnterGongCheng::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGEnterGongCheng::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CGEnterGongCheng::playerid() const {
  // @@protoc_insertion_point(field_get:CGEnterGongCheng.playerId)
  return playerid_;
}
inline void CGEnterGongCheng::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CGEnterGongCheng.playerId)
}

// -------------------------------------------------------------------

// GCEnterGongCheng

// optional int32 result = 1;
inline bool GCEnterGongCheng::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCEnterGongCheng::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCEnterGongCheng::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCEnterGongCheng::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCEnterGongCheng::result() const {
  // @@protoc_insertion_point(field_get:GCEnterGongCheng.result)
  return result_;
}
inline void GCEnterGongCheng::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCEnterGongCheng.result)
}

// optional int32 state = 2;
inline bool GCEnterGongCheng::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCEnterGongCheng::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCEnterGongCheng::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCEnterGongCheng::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GCEnterGongCheng::state() const {
  // @@protoc_insertion_point(field_get:GCEnterGongCheng.state)
  return state_;
}
inline void GCEnterGongCheng::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GCEnterGongCheng.state)
}

// optional int32 doorState = 3;
inline bool GCEnterGongCheng::has_doorstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCEnterGongCheng::set_has_doorstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCEnterGongCheng::clear_has_doorstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCEnterGongCheng::clear_doorstate() {
  doorstate_ = 0;
  clear_has_doorstate();
}
inline ::google::protobuf::int32 GCEnterGongCheng::doorstate() const {
  // @@protoc_insertion_point(field_get:GCEnterGongCheng.doorState)
  return doorstate_;
}
inline void GCEnterGongCheng::set_doorstate(::google::protobuf::int32 value) {
  set_has_doorstate();
  doorstate_ = value;
  // @@protoc_insertion_point(field_set:GCEnterGongCheng.doorState)
}

// optional int32 campState = 4;
inline bool GCEnterGongCheng::has_campstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCEnterGongCheng::set_has_campstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCEnterGongCheng::clear_has_campstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCEnterGongCheng::clear_campstate() {
  campstate_ = 0;
  clear_has_campstate();
}
inline ::google::protobuf::int32 GCEnterGongCheng::campstate() const {
  // @@protoc_insertion_point(field_get:GCEnterGongCheng.campState)
  return campstate_;
}
inline void GCEnterGongCheng::set_campstate(::google::protobuf::int32 value) {
  set_has_campstate();
  campstate_ = value;
  // @@protoc_insertion_point(field_set:GCEnterGongCheng.campState)
}

// optional int64 restTime = 5;
inline bool GCEnterGongCheng::has_resttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCEnterGongCheng::set_has_resttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCEnterGongCheng::clear_has_resttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCEnterGongCheng::clear_resttime() {
  resttime_ = GOOGLE_LONGLONG(0);
  clear_has_resttime();
}
inline ::google::protobuf::int64 GCEnterGongCheng::resttime() const {
  // @@protoc_insertion_point(field_get:GCEnterGongCheng.restTime)
  return resttime_;
}
inline void GCEnterGongCheng::set_resttime(::google::protobuf::int64 value) {
  set_has_resttime();
  resttime_ = value;
  // @@protoc_insertion_point(field_set:GCEnterGongCheng.restTime)
}

// -------------------------------------------------------------------

// GCGongChengChangeSchedule

// optional int32 state = 2;
inline bool GCGongChengChangeSchedule::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGongChengChangeSchedule::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGongChengChangeSchedule::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGongChengChangeSchedule::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GCGongChengChangeSchedule::state() const {
  // @@protoc_insertion_point(field_get:GCGongChengChangeSchedule.state)
  return state_;
}
inline void GCGongChengChangeSchedule::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GCGongChengChangeSchedule.state)
}

// optional int64 restTime = 5;
inline bool GCGongChengChangeSchedule::has_resttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGongChengChangeSchedule::set_has_resttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGongChengChangeSchedule::clear_has_resttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGongChengChangeSchedule::clear_resttime() {
  resttime_ = GOOGLE_LONGLONG(0);
  clear_has_resttime();
}
inline ::google::protobuf::int64 GCGongChengChangeSchedule::resttime() const {
  // @@protoc_insertion_point(field_get:GCGongChengChangeSchedule.restTime)
  return resttime_;
}
inline void GCGongChengChangeSchedule::set_resttime(::google::protobuf::int64 value) {
  set_has_resttime();
  resttime_ = value;
  // @@protoc_insertion_point(field_set:GCGongChengChangeSchedule.restTime)
}

// -------------------------------------------------------------------

// CGDonateStick

// optional int64 playerId = 1;
inline bool CGDonateStick::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGDonateStick::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGDonateStick::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGDonateStick::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CGDonateStick::playerid() const {
  // @@protoc_insertion_point(field_get:CGDonateStick.playerId)
  return playerid_;
}
inline void CGDonateStick::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CGDonateStick.playerId)
}

// -------------------------------------------------------------------

// GCDonateStick

// optional int32 result = 1;
inline bool GCDonateStick::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCDonateStick::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCDonateStick::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCDonateStick::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCDonateStick::result() const {
  // @@protoc_insertion_point(field_get:GCDonateStick.result)
  return result_;
}
inline void GCDonateStick::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCDonateStick.result)
}

// -------------------------------------------------------------------

// CGOpenGongChengUI

// optional int64 playerId = 1;
inline bool CGOpenGongChengUI::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGOpenGongChengUI::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGOpenGongChengUI::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGOpenGongChengUI::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CGOpenGongChengUI::playerid() const {
  // @@protoc_insertion_point(field_get:CGOpenGongChengUI.playerId)
  return playerid_;
}
inline void CGOpenGongChengUI::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CGOpenGongChengUI.playerId)
}

// -------------------------------------------------------------------

// GCOpenGongChengUI

// optional .CharacterInfo characterInfo = 1;
inline bool GCOpenGongChengUI::has_characterinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCOpenGongChengUI::set_has_characterinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCOpenGongChengUI::clear_has_characterinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCOpenGongChengUI::clear_characterinfo() {
  if (characterinfo_ != NULL) characterinfo_->::CharacterInfo::Clear();
  clear_has_characterinfo();
}
inline const ::CharacterInfo& GCOpenGongChengUI::characterinfo() const {
  // @@protoc_insertion_point(field_get:GCOpenGongChengUI.characterInfo)
  return characterinfo_ != NULL ? *characterinfo_ : *default_instance_->characterinfo_;
}
inline ::CharacterInfo* GCOpenGongChengUI::mutable_characterinfo() {
  set_has_characterinfo();
  if (characterinfo_ == NULL) characterinfo_ = new ::CharacterInfo;
  // @@protoc_insertion_point(field_mutable:GCOpenGongChengUI.characterInfo)
  return characterinfo_;
}
inline ::CharacterInfo* GCOpenGongChengUI::release_characterinfo() {
  clear_has_characterinfo();
  ::CharacterInfo* temp = characterinfo_;
  characterinfo_ = NULL;
  return temp;
}
inline void GCOpenGongChengUI::set_allocated_characterinfo(::CharacterInfo* characterinfo) {
  delete characterinfo_;
  characterinfo_ = characterinfo;
  if (characterinfo) {
    set_has_characterinfo();
  } else {
    clear_has_characterinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCOpenGongChengUI.characterInfo)
}

// optional int32 state = 2;
inline bool GCOpenGongChengUI::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCOpenGongChengUI::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCOpenGongChengUI::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCOpenGongChengUI::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GCOpenGongChengUI::state() const {
  // @@protoc_insertion_point(field_get:GCOpenGongChengUI.state)
  return state_;
}
inline void GCOpenGongChengUI::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GCOpenGongChengUI.state)
}

// optional string gangName = 3;
inline bool GCOpenGongChengUI::has_gangname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCOpenGongChengUI::set_has_gangname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCOpenGongChengUI::clear_has_gangname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCOpenGongChengUI::clear_gangname() {
  if (gangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_->clear();
  }
  clear_has_gangname();
}
inline const ::std::string& GCOpenGongChengUI::gangname() const {
  // @@protoc_insertion_point(field_get:GCOpenGongChengUI.gangName)
  return *gangname_;
}
inline void GCOpenGongChengUI::set_gangname(const ::std::string& value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
  // @@protoc_insertion_point(field_set:GCOpenGongChengUI.gangName)
}
inline void GCOpenGongChengUI::set_gangname(const char* value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCOpenGongChengUI.gangName)
}
inline void GCOpenGongChengUI::set_gangname(const char* value, size_t size) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCOpenGongChengUI.gangName)
}
inline ::std::string* GCOpenGongChengUI::mutable_gangname() {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCOpenGongChengUI.gangName)
  return gangname_;
}
inline ::std::string* GCOpenGongChengUI::release_gangname() {
  clear_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gangname_;
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCOpenGongChengUI::set_allocated_gangname(::std::string* gangname) {
  if (gangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gangname_;
  }
  if (gangname) {
    set_has_gangname();
    gangname_ = gangname;
  } else {
    clear_has_gangname();
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCOpenGongChengUI.gangName)
}

// -------------------------------------------------------------------

// GongChengDoorInfo

// optional string gangName = 1;
inline bool GongChengDoorInfo::has_gangname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GongChengDoorInfo::set_has_gangname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GongChengDoorInfo::clear_has_gangname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GongChengDoorInfo::clear_gangname() {
  if (gangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_->clear();
  }
  clear_has_gangname();
}
inline const ::std::string& GongChengDoorInfo::gangname() const {
  // @@protoc_insertion_point(field_get:GongChengDoorInfo.gangName)
  return *gangname_;
}
inline void GongChengDoorInfo::set_gangname(const ::std::string& value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
  // @@protoc_insertion_point(field_set:GongChengDoorInfo.gangName)
}
inline void GongChengDoorInfo::set_gangname(const char* value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GongChengDoorInfo.gangName)
}
inline void GongChengDoorInfo::set_gangname(const char* value, size_t size) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GongChengDoorInfo.gangName)
}
inline ::std::string* GongChengDoorInfo::mutable_gangname() {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GongChengDoorInfo.gangName)
  return gangname_;
}
inline ::std::string* GongChengDoorInfo::release_gangname() {
  clear_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gangname_;
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GongChengDoorInfo::set_allocated_gangname(::std::string* gangname) {
  if (gangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gangname_;
  }
  if (gangname) {
    set_has_gangname();
    gangname_ = gangname;
  } else {
    clear_has_gangname();
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GongChengDoorInfo.gangName)
}

// optional int64 gangId = 2;
inline bool GongChengDoorInfo::has_gangid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GongChengDoorInfo::set_has_gangid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GongChengDoorInfo::clear_has_gangid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GongChengDoorInfo::clear_gangid() {
  gangid_ = GOOGLE_LONGLONG(0);
  clear_has_gangid();
}
inline ::google::protobuf::int64 GongChengDoorInfo::gangid() const {
  // @@protoc_insertion_point(field_get:GongChengDoorInfo.gangId)
  return gangid_;
}
inline void GongChengDoorInfo::set_gangid(::google::protobuf::int64 value) {
  set_has_gangid();
  gangid_ = value;
  // @@protoc_insertion_point(field_set:GongChengDoorInfo.gangId)
}

// optional int32 gangData = 3;
inline bool GongChengDoorInfo::has_gangdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GongChengDoorInfo::set_has_gangdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GongChengDoorInfo::clear_has_gangdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GongChengDoorInfo::clear_gangdata() {
  gangdata_ = 0;
  clear_has_gangdata();
}
inline ::google::protobuf::int32 GongChengDoorInfo::gangdata() const {
  // @@protoc_insertion_point(field_get:GongChengDoorInfo.gangData)
  return gangdata_;
}
inline void GongChengDoorInfo::set_gangdata(::google::protobuf::int32 value) {
  set_has_gangdata();
  gangdata_ = value;
  // @@protoc_insertion_point(field_set:GongChengDoorInfo.gangData)
}

// -------------------------------------------------------------------

// GCDoorScore

// repeated .GongChengDoorInfo gangScoreInfo = 1;
inline int GCDoorScore::gangscoreinfo_size() const {
  return gangscoreinfo_.size();
}
inline void GCDoorScore::clear_gangscoreinfo() {
  gangscoreinfo_.Clear();
}
inline const ::GongChengDoorInfo& GCDoorScore::gangscoreinfo(int index) const {
  // @@protoc_insertion_point(field_get:GCDoorScore.gangScoreInfo)
  return gangscoreinfo_.Get(index);
}
inline ::GongChengDoorInfo* GCDoorScore::mutable_gangscoreinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GCDoorScore.gangScoreInfo)
  return gangscoreinfo_.Mutable(index);
}
inline ::GongChengDoorInfo* GCDoorScore::add_gangscoreinfo() {
  // @@protoc_insertion_point(field_add:GCDoorScore.gangScoreInfo)
  return gangscoreinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >&
GCDoorScore::gangscoreinfo() const {
  // @@protoc_insertion_point(field_list:GCDoorScore.gangScoreInfo)
  return gangscoreinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >*
GCDoorScore::mutable_gangscoreinfo() {
  // @@protoc_insertion_point(field_mutable_list:GCDoorScore.gangScoreInfo)
  return &gangscoreinfo_;
}

// optional .GongChengDoorInfo selfGangScoreInfo = 2;
inline bool GCDoorScore::has_selfgangscoreinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCDoorScore::set_has_selfgangscoreinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCDoorScore::clear_has_selfgangscoreinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCDoorScore::clear_selfgangscoreinfo() {
  if (selfgangscoreinfo_ != NULL) selfgangscoreinfo_->::GongChengDoorInfo::Clear();
  clear_has_selfgangscoreinfo();
}
inline const ::GongChengDoorInfo& GCDoorScore::selfgangscoreinfo() const {
  // @@protoc_insertion_point(field_get:GCDoorScore.selfGangScoreInfo)
  return selfgangscoreinfo_ != NULL ? *selfgangscoreinfo_ : *default_instance_->selfgangscoreinfo_;
}
inline ::GongChengDoorInfo* GCDoorScore::mutable_selfgangscoreinfo() {
  set_has_selfgangscoreinfo();
  if (selfgangscoreinfo_ == NULL) selfgangscoreinfo_ = new ::GongChengDoorInfo;
  // @@protoc_insertion_point(field_mutable:GCDoorScore.selfGangScoreInfo)
  return selfgangscoreinfo_;
}
inline ::GongChengDoorInfo* GCDoorScore::release_selfgangscoreinfo() {
  clear_has_selfgangscoreinfo();
  ::GongChengDoorInfo* temp = selfgangscoreinfo_;
  selfgangscoreinfo_ = NULL;
  return temp;
}
inline void GCDoorScore::set_allocated_selfgangscoreinfo(::GongChengDoorInfo* selfgangscoreinfo) {
  delete selfgangscoreinfo_;
  selfgangscoreinfo_ = selfgangscoreinfo;
  if (selfgangscoreinfo) {
    set_has_selfgangscoreinfo();
  } else {
    clear_has_selfgangscoreinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCDoorScore.selfGangScoreInfo)
}

// -------------------------------------------------------------------

// GCDoorHurtPercent

// repeated .GongChengDoorInfo gangHurtInfo = 1;
inline int GCDoorHurtPercent::ganghurtinfo_size() const {
  return ganghurtinfo_.size();
}
inline void GCDoorHurtPercent::clear_ganghurtinfo() {
  ganghurtinfo_.Clear();
}
inline const ::GongChengDoorInfo& GCDoorHurtPercent::ganghurtinfo(int index) const {
  // @@protoc_insertion_point(field_get:GCDoorHurtPercent.gangHurtInfo)
  return ganghurtinfo_.Get(index);
}
inline ::GongChengDoorInfo* GCDoorHurtPercent::mutable_ganghurtinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GCDoorHurtPercent.gangHurtInfo)
  return ganghurtinfo_.Mutable(index);
}
inline ::GongChengDoorInfo* GCDoorHurtPercent::add_ganghurtinfo() {
  // @@protoc_insertion_point(field_add:GCDoorHurtPercent.gangHurtInfo)
  return ganghurtinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >&
GCDoorHurtPercent::ganghurtinfo() const {
  // @@protoc_insertion_point(field_list:GCDoorHurtPercent.gangHurtInfo)
  return ganghurtinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >*
GCDoorHurtPercent::mutable_ganghurtinfo() {
  // @@protoc_insertion_point(field_mutable_list:GCDoorHurtPercent.gangHurtInfo)
  return &ganghurtinfo_;
}

// optional .GongChengDoorInfo selfGangHurtInfo = 2;
inline bool GCDoorHurtPercent::has_selfganghurtinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCDoorHurtPercent::set_has_selfganghurtinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCDoorHurtPercent::clear_has_selfganghurtinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCDoorHurtPercent::clear_selfganghurtinfo() {
  if (selfganghurtinfo_ != NULL) selfganghurtinfo_->::GongChengDoorInfo::Clear();
  clear_has_selfganghurtinfo();
}
inline const ::GongChengDoorInfo& GCDoorHurtPercent::selfganghurtinfo() const {
  // @@protoc_insertion_point(field_get:GCDoorHurtPercent.selfGangHurtInfo)
  return selfganghurtinfo_ != NULL ? *selfganghurtinfo_ : *default_instance_->selfganghurtinfo_;
}
inline ::GongChengDoorInfo* GCDoorHurtPercent::mutable_selfganghurtinfo() {
  set_has_selfganghurtinfo();
  if (selfganghurtinfo_ == NULL) selfganghurtinfo_ = new ::GongChengDoorInfo;
  // @@protoc_insertion_point(field_mutable:GCDoorHurtPercent.selfGangHurtInfo)
  return selfganghurtinfo_;
}
inline ::GongChengDoorInfo* GCDoorHurtPercent::release_selfganghurtinfo() {
  clear_has_selfganghurtinfo();
  ::GongChengDoorInfo* temp = selfganghurtinfo_;
  selfganghurtinfo_ = NULL;
  return temp;
}
inline void GCDoorHurtPercent::set_allocated_selfganghurtinfo(::GongChengDoorInfo* selfganghurtinfo) {
  delete selfganghurtinfo_;
  selfganghurtinfo_ = selfganghurtinfo;
  if (selfganghurtinfo) {
    set_has_selfganghurtinfo();
  } else {
    clear_has_selfganghurtinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCDoorHurtPercent.selfGangHurtInfo)
}

// -------------------------------------------------------------------

// GCGongChengLongBelong

// repeated .GongChengDoorInfo longStickInfo = 1;
inline int GCGongChengLongBelong::longstickinfo_size() const {
  return longstickinfo_.size();
}
inline void GCGongChengLongBelong::clear_longstickinfo() {
  longstickinfo_.Clear();
}
inline const ::GongChengDoorInfo& GCGongChengLongBelong::longstickinfo(int index) const {
  // @@protoc_insertion_point(field_get:GCGongChengLongBelong.longStickInfo)
  return longstickinfo_.Get(index);
}
inline ::GongChengDoorInfo* GCGongChengLongBelong::mutable_longstickinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GCGongChengLongBelong.longStickInfo)
  return longstickinfo_.Mutable(index);
}
inline ::GongChengDoorInfo* GCGongChengLongBelong::add_longstickinfo() {
  // @@protoc_insertion_point(field_add:GCGongChengLongBelong.longStickInfo)
  return longstickinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >&
GCGongChengLongBelong::longstickinfo() const {
  // @@protoc_insertion_point(field_list:GCGongChengLongBelong.longStickInfo)
  return longstickinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >*
GCGongChengLongBelong::mutable_longstickinfo() {
  // @@protoc_insertion_point(field_mutable_list:GCGongChengLongBelong.longStickInfo)
  return &longstickinfo_;
}

// -------------------------------------------------------------------

// GCGongchengAddScore

// optional int32 score = 1;
inline bool GCGongchengAddScore::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGongchengAddScore::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGongchengAddScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGongchengAddScore::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 GCGongchengAddScore::score() const {
  // @@protoc_insertion_point(field_get:GCGongchengAddScore.score)
  return score_;
}
inline void GCGongchengAddScore::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:GCGongchengAddScore.score)
}

// -------------------------------------------------------------------

// CGGongChengLeave

// optional int64 playerId = 1;
inline bool CGGongChengLeave::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGongChengLeave::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGongChengLeave::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGongChengLeave::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CGGongChengLeave::playerid() const {
  // @@protoc_insertion_point(field_get:CGGongChengLeave.playerId)
  return playerid_;
}
inline void CGGongChengLeave::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CGGongChengLeave.playerId)
}

// -------------------------------------------------------------------

// GCGongChengLeave

// optional int32 result = 1;
inline bool GCGongChengLeave::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGongChengLeave::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGongChengLeave::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGongChengLeave::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCGongChengLeave::result() const {
  // @@protoc_insertion_point(field_get:GCGongChengLeave.result)
  return result_;
}
inline void GCGongChengLeave::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCGongChengLeave.result)
}

// -------------------------------------------------------------------

// CGBeforeDonateStick

// optional int64 playerId = 1;
inline bool CGBeforeDonateStick::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGBeforeDonateStick::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGBeforeDonateStick::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGBeforeDonateStick::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CGBeforeDonateStick::playerid() const {
  // @@protoc_insertion_point(field_get:CGBeforeDonateStick.playerId)
  return playerid_;
}
inline void CGBeforeDonateStick::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CGBeforeDonateStick.playerId)
}

// -------------------------------------------------------------------

// GCBeforeDonateStick

// optional int32 money = 1;
inline bool GCBeforeDonateStick::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCBeforeDonateStick::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCBeforeDonateStick::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCBeforeDonateStick::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 GCBeforeDonateStick::money() const {
  // @@protoc_insertion_point(field_get:GCBeforeDonateStick.money)
  return money_;
}
inline void GCBeforeDonateStick::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:GCBeforeDonateStick.money)
}

// optional int32 percent = 2;
inline bool GCBeforeDonateStick::has_percent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCBeforeDonateStick::set_has_percent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCBeforeDonateStick::clear_has_percent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCBeforeDonateStick::clear_percent() {
  percent_ = 0;
  clear_has_percent();
}
inline ::google::protobuf::int32 GCBeforeDonateStick::percent() const {
  // @@protoc_insertion_point(field_get:GCBeforeDonateStick.percent)
  return percent_;
}
inline void GCBeforeDonateStick::set_percent(::google::protobuf::int32 value) {
  set_has_percent();
  percent_ = value;
  // @@protoc_insertion_point(field_set:GCBeforeDonateStick.percent)
}

// optional int32 canNext = 3;
inline bool GCBeforeDonateStick::has_cannext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCBeforeDonateStick::set_has_cannext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCBeforeDonateStick::clear_has_cannext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCBeforeDonateStick::clear_cannext() {
  cannext_ = 0;
  clear_has_cannext();
}
inline ::google::protobuf::int32 GCBeforeDonateStick::cannext() const {
  // @@protoc_insertion_point(field_get:GCBeforeDonateStick.canNext)
  return cannext_;
}
inline void GCBeforeDonateStick::set_cannext(::google::protobuf::int32 value) {
  set_has_cannext();
  cannext_ = value;
  // @@protoc_insertion_point(field_set:GCBeforeDonateStick.canNext)
}

// -------------------------------------------------------------------

// GCGongChengLeaveTime

// optional int32 leaveTime = 1;
inline bool GCGongChengLeaveTime::has_leavetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGongChengLeaveTime::set_has_leavetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGongChengLeaveTime::clear_has_leavetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGongChengLeaveTime::clear_leavetime() {
  leavetime_ = 0;
  clear_has_leavetime();
}
inline ::google::protobuf::int32 GCGongChengLeaveTime::leavetime() const {
  // @@protoc_insertion_point(field_get:GCGongChengLeaveTime.leaveTime)
  return leavetime_;
}
inline void GCGongChengLeaveTime::set_leavetime(::google::protobuf::int32 value) {
  set_has_leavetime();
  leavetime_ = value;
  // @@protoc_insertion_point(field_set:GCGongChengLeaveTime.leaveTime)
}

// -------------------------------------------------------------------

// GCGongChengScoreCount

// repeated .GongChengDoorInfo gangScoreInfo = 1;
inline int GCGongChengScoreCount::gangscoreinfo_size() const {
  return gangscoreinfo_.size();
}
inline void GCGongChengScoreCount::clear_gangscoreinfo() {
  gangscoreinfo_.Clear();
}
inline const ::GongChengDoorInfo& GCGongChengScoreCount::gangscoreinfo(int index) const {
  // @@protoc_insertion_point(field_get:GCGongChengScoreCount.gangScoreInfo)
  return gangscoreinfo_.Get(index);
}
inline ::GongChengDoorInfo* GCGongChengScoreCount::mutable_gangscoreinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GCGongChengScoreCount.gangScoreInfo)
  return gangscoreinfo_.Mutable(index);
}
inline ::GongChengDoorInfo* GCGongChengScoreCount::add_gangscoreinfo() {
  // @@protoc_insertion_point(field_add:GCGongChengScoreCount.gangScoreInfo)
  return gangscoreinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >&
GCGongChengScoreCount::gangscoreinfo() const {
  // @@protoc_insertion_point(field_list:GCGongChengScoreCount.gangScoreInfo)
  return gangscoreinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GongChengDoorInfo >*
GCGongChengScoreCount::mutable_gangscoreinfo() {
  // @@protoc_insertion_point(field_mutable_list:GCGongChengScoreCount.gangScoreInfo)
  return &gangscoreinfo_;
}

// optional int32 closeTime = 3;
inline bool GCGongChengScoreCount::has_closetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGongChengScoreCount::set_has_closetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGongChengScoreCount::clear_has_closetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGongChengScoreCount::clear_closetime() {
  closetime_ = 0;
  clear_has_closetime();
}
inline ::google::protobuf::int32 GCGongChengScoreCount::closetime() const {
  // @@protoc_insertion_point(field_get:GCGongChengScoreCount.closeTime)
  return closetime_;
}
inline void GCGongChengScoreCount::set_closetime(::google::protobuf::int32 value) {
  set_has_closetime();
  closetime_ = value;
  // @@protoc_insertion_point(field_set:GCGongChengScoreCount.closeTime)
}

// -------------------------------------------------------------------

// CGGongChengReceiveAward

// optional int64 playerId = 1;
inline bool CGGongChengReceiveAward::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGongChengReceiveAward::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGongChengReceiveAward::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGongChengReceiveAward::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CGGongChengReceiveAward::playerid() const {
  // @@protoc_insertion_point(field_get:CGGongChengReceiveAward.playerId)
  return playerid_;
}
inline void CGGongChengReceiveAward::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CGGongChengReceiveAward.playerId)
}

// -------------------------------------------------------------------

// GCGongChengReceiveAward

// optional int32 result = 1;
inline bool GCGongChengReceiveAward::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGongChengReceiveAward::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGongChengReceiveAward::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGongChengReceiveAward::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCGongChengReceiveAward::result() const {
  // @@protoc_insertion_point(field_get:GCGongChengReceiveAward.result)
  return result_;
}
inline void GCGongChengReceiveAward::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCGongChengReceiveAward.result)
}

// -------------------------------------------------------------------

// CGGongChengCanStatue

// optional int64 playerId = 1;
inline bool CGGongChengCanStatue::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGongChengCanStatue::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGongChengCanStatue::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGongChengCanStatue::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CGGongChengCanStatue::playerid() const {
  // @@protoc_insertion_point(field_get:CGGongChengCanStatue.playerId)
  return playerid_;
}
inline void CGGongChengCanStatue::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CGGongChengCanStatue.playerId)
}

// -------------------------------------------------------------------

// GCGongChengCanStatue

// optional int32 result = 1;
inline bool GCGongChengCanStatue::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGongChengCanStatue::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGongChengCanStatue::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGongChengCanStatue::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCGongChengCanStatue::result() const {
  // @@protoc_insertion_point(field_get:GCGongChengCanStatue.result)
  return result_;
}
inline void GCGongChengCanStatue::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCGongChengCanStatue.result)
}

// optional int32 canGet = 2;
inline bool GCGongChengCanStatue::has_canget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGongChengCanStatue::set_has_canget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGongChengCanStatue::clear_has_canget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGongChengCanStatue::clear_canget() {
  canget_ = 0;
  clear_has_canget();
}
inline ::google::protobuf::int32 GCGongChengCanStatue::canget() const {
  // @@protoc_insertion_point(field_get:GCGongChengCanStatue.canGet)
  return canget_;
}
inline void GCGongChengCanStatue::set_canget(::google::protobuf::int32 value) {
  set_has_canget();
  canget_ = value;
  // @@protoc_insertion_point(field_set:GCGongChengCanStatue.canGet)
}

// -------------------------------------------------------------------

// CGGongChengGetStatueAward

// optional int32 type = 1;
inline bool CGGongChengGetStatueAward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGongChengGetStatueAward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGongChengGetStatueAward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGongChengGetStatueAward::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGGongChengGetStatueAward::type() const {
  // @@protoc_insertion_point(field_get:CGGongChengGetStatueAward.type)
  return type_;
}
inline void CGGongChengGetStatueAward::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGGongChengGetStatueAward.type)
}

// -------------------------------------------------------------------

// GCGongChengGetStatueAward

// optional int32 result = 1;
inline bool GCGongChengGetStatueAward::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGongChengGetStatueAward::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGongChengGetStatueAward::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGongChengGetStatueAward::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCGongChengGetStatueAward::result() const {
  // @@protoc_insertion_point(field_get:GCGongChengGetStatueAward.result)
  return result_;
}
inline void GCGongChengGetStatueAward::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCGongChengGetStatueAward.result)
}

// -------------------------------------------------------------------

// GCOpenGongChengEnterBoard

// optional int32 type = 1;
inline bool GCOpenGongChengEnterBoard::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCOpenGongChengEnterBoard::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCOpenGongChengEnterBoard::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCOpenGongChengEnterBoard::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCOpenGongChengEnterBoard::type() const {
  // @@protoc_insertion_point(field_get:GCOpenGongChengEnterBoard.type)
  return type_;
}
inline void GCOpenGongChengEnterBoard::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCOpenGongChengEnterBoard.type)
}

// -------------------------------------------------------------------

// GCGongChengLeader

// optional int32 flag = 1;
inline bool GCGongChengLeader::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGongChengLeader::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGongChengLeader::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGongChengLeader::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCGongChengLeader::flag() const {
  // @@protoc_insertion_point(field_get:GCGongChengLeader.flag)
  return flag_;
}
inline void GCGongChengLeader::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCGongChengLeader.flag)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GongChengMessage_2eproto__INCLUDED
