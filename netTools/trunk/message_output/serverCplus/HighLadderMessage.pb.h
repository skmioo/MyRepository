// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HighLadderMessage.proto

#ifndef PROTOBUF_HighLadderMessage_2eproto__INCLUDED
#define PROTOBUF_HighLadderMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "InnerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_HighLadderMessage_2eproto();
void protobuf_AssignDesc_HighLadderMessage_2eproto();
void protobuf_ShutdownFile_HighLadderMessage_2eproto();

class GCPushHighLadderListBack;
class GCHighLadderOver;
class CGGetHighLadderReward;
class GCGetHighLadderRewardBack;
class CGGetAchievementData;
class GCGetAchievementDataBack;
class CGUseTitle;
class GCUseTitleBack;
class CGLockTitle;
class GCLockTitleBack;

// ===================================================================

class GCPushHighLadderListBack : public ::google::protobuf::Message {
 public:
  GCPushHighLadderListBack();
  virtual ~GCPushHighLadderListBack();

  GCPushHighLadderListBack(const GCPushHighLadderListBack& from);

  inline GCPushHighLadderListBack& operator=(const GCPushHighLadderListBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPushHighLadderListBack& default_instance();

  void Swap(GCPushHighLadderListBack* other);

  // implements Message ----------------------------------------------

  GCPushHighLadderListBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPushHighLadderListBack& from);
  void MergeFrom(const GCPushHighLadderListBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Titlel titlelist = 1;
  inline int titlelist_size() const;
  inline void clear_titlelist();
  static const int kTitlelistFieldNumber = 1;
  inline const ::Titlel& titlelist(int index) const;
  inline ::Titlel* mutable_titlelist(int index);
  inline ::Titlel* add_titlelist();
  inline const ::google::protobuf::RepeatedPtrField< ::Titlel >&
      titlelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Titlel >*
      mutable_titlelist();

  // optional int32 locked = 2;
  inline bool has_locked() const;
  inline void clear_locked();
  static const int kLockedFieldNumber = 2;
  inline ::google::protobuf::int32 locked() const;
  inline void set_locked(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCPushHighLadderListBack)
 private:
  inline void set_has_locked();
  inline void clear_has_locked();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Titlel > titlelist_;
  ::google::protobuf::int32 locked_;
  friend void  protobuf_AddDesc_HighLadderMessage_2eproto();
  friend void protobuf_AssignDesc_HighLadderMessage_2eproto();
  friend void protobuf_ShutdownFile_HighLadderMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPushHighLadderListBack* default_instance_;
};
// -------------------------------------------------------------------

class GCHighLadderOver : public ::google::protobuf::Message {
 public:
  GCHighLadderOver();
  virtual ~GCHighLadderOver();

  GCHighLadderOver(const GCHighLadderOver& from);

  inline GCHighLadderOver& operator=(const GCHighLadderOver& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCHighLadderOver& default_instance();

  void Swap(GCHighLadderOver* other);

  // implements Message ----------------------------------------------

  GCHighLadderOver* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCHighLadderOver& from);
  void MergeFrom(const GCHighLadderOver& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Achievement mvt = 1;
  inline bool has_mvt() const;
  inline void clear_mvt();
  static const int kMvtFieldNumber = 1;
  inline const ::Achievement& mvt() const;
  inline ::Achievement* mutable_mvt();
  inline ::Achievement* release_mvt();
  inline void set_allocated_mvt(::Achievement* mvt);

  // optional .Titlel title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::Titlel& title() const;
  inline ::Titlel* mutable_title();
  inline ::Titlel* release_title();
  inline void set_allocated_title(::Titlel* title);

  // @@protoc_insertion_point(class_scope:GCHighLadderOver)
 private:
  inline void set_has_mvt();
  inline void clear_has_mvt();
  inline void set_has_title();
  inline void clear_has_title();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Achievement* mvt_;
  ::Titlel* title_;
  friend void  protobuf_AddDesc_HighLadderMessage_2eproto();
  friend void protobuf_AssignDesc_HighLadderMessage_2eproto();
  friend void protobuf_ShutdownFile_HighLadderMessage_2eproto();

  void InitAsDefaultInstance();
  static GCHighLadderOver* default_instance_;
};
// -------------------------------------------------------------------

class CGGetHighLadderReward : public ::google::protobuf::Message {
 public:
  CGGetHighLadderReward();
  virtual ~CGGetHighLadderReward();

  CGGetHighLadderReward(const CGGetHighLadderReward& from);

  inline CGGetHighLadderReward& operator=(const CGGetHighLadderReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetHighLadderReward& default_instance();

  void Swap(CGGetHighLadderReward* other);

  // implements Message ----------------------------------------------

  CGGetHighLadderReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetHighLadderReward& from);
  void MergeFrom(const CGGetHighLadderReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 condition = 1;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 1;
  inline ::google::protobuf::int32 condition() const;
  inline void set_condition(::google::protobuf::int32 value);

  // optional int32 achievementid = 2;
  inline bool has_achievementid() const;
  inline void clear_achievementid();
  static const int kAchievementidFieldNumber = 2;
  inline ::google::protobuf::int32 achievementid() const;
  inline void set_achievementid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetHighLadderReward)
 private:
  inline void set_has_condition();
  inline void clear_has_condition();
  inline void set_has_achievementid();
  inline void clear_has_achievementid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 condition_;
  ::google::protobuf::int32 achievementid_;
  friend void  protobuf_AddDesc_HighLadderMessage_2eproto();
  friend void protobuf_AssignDesc_HighLadderMessage_2eproto();
  friend void protobuf_ShutdownFile_HighLadderMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetHighLadderReward* default_instance_;
};
// -------------------------------------------------------------------

class GCGetHighLadderRewardBack : public ::google::protobuf::Message {
 public:
  GCGetHighLadderRewardBack();
  virtual ~GCGetHighLadderRewardBack();

  GCGetHighLadderRewardBack(const GCGetHighLadderRewardBack& from);

  inline GCGetHighLadderRewardBack& operator=(const GCGetHighLadderRewardBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetHighLadderRewardBack& default_instance();

  void Swap(GCGetHighLadderRewardBack* other);

  // implements Message ----------------------------------------------

  GCGetHighLadderRewardBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetHighLadderRewardBack& from);
  void MergeFrom(const GCGetHighLadderRewardBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional int32 nextachievementid = 2;
  inline bool has_nextachievementid() const;
  inline void clear_nextachievementid();
  static const int kNextachievementidFieldNumber = 2;
  inline ::google::protobuf::int32 nextachievementid() const;
  inline void set_nextachievementid(::google::protobuf::int32 value);

  // optional int32 isover = 3;
  inline bool has_isover() const;
  inline void clear_isover();
  static const int kIsoverFieldNumber = 3;
  inline ::google::protobuf::int32 isover() const;
  inline void set_isover(::google::protobuf::int32 value);

  // optional int32 curachievementid = 4;
  inline bool has_curachievementid() const;
  inline void clear_curachievementid();
  static const int kCurachievementidFieldNumber = 4;
  inline ::google::protobuf::int32 curachievementid() const;
  inline void set_curachievementid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGetHighLadderRewardBack)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_nextachievementid();
  inline void clear_has_nextachievementid();
  inline void set_has_isover();
  inline void clear_has_isover();
  inline void set_has_curachievementid();
  inline void clear_has_curachievementid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 nextachievementid_;
  ::google::protobuf::int32 isover_;
  ::google::protobuf::int32 curachievementid_;
  friend void  protobuf_AddDesc_HighLadderMessage_2eproto();
  friend void protobuf_AssignDesc_HighLadderMessage_2eproto();
  friend void protobuf_ShutdownFile_HighLadderMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetHighLadderRewardBack* default_instance_;
};
// -------------------------------------------------------------------

class CGGetAchievementData : public ::google::protobuf::Message {
 public:
  CGGetAchievementData();
  virtual ~CGGetAchievementData();

  CGGetAchievementData(const CGGetAchievementData& from);

  inline CGGetAchievementData& operator=(const CGGetAchievementData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetAchievementData& default_instance();

  void Swap(CGGetAchievementData* other);

  // implements Message ----------------------------------------------

  CGGetAchievementData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetAchievementData& from);
  void MergeFrom(const CGGetAchievementData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGGetAchievementData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_HighLadderMessage_2eproto();
  friend void protobuf_AssignDesc_HighLadderMessage_2eproto();
  friend void protobuf_ShutdownFile_HighLadderMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetAchievementData* default_instance_;
};
// -------------------------------------------------------------------

class GCGetAchievementDataBack : public ::google::protobuf::Message {
 public:
  GCGetAchievementDataBack();
  virtual ~GCGetAchievementDataBack();

  GCGetAchievementDataBack(const GCGetAchievementDataBack& from);

  inline GCGetAchievementDataBack& operator=(const GCGetAchievementDataBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetAchievementDataBack& default_instance();

  void Swap(GCGetAchievementDataBack* other);

  // implements Message ----------------------------------------------

  GCGetAchievementDataBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetAchievementDataBack& from);
  void MergeFrom(const GCGetAchievementDataBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Achievement mvt = 1;
  inline int mvt_size() const;
  inline void clear_mvt();
  static const int kMvtFieldNumber = 1;
  inline const ::Achievement& mvt(int index) const;
  inline ::Achievement* mutable_mvt(int index);
  inline ::Achievement* add_mvt();
  inline const ::google::protobuf::RepeatedPtrField< ::Achievement >&
      mvt() const;
  inline ::google::protobuf::RepeatedPtrField< ::Achievement >*
      mutable_mvt();

  // @@protoc_insertion_point(class_scope:GCGetAchievementDataBack)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Achievement > mvt_;
  friend void  protobuf_AddDesc_HighLadderMessage_2eproto();
  friend void protobuf_AssignDesc_HighLadderMessage_2eproto();
  friend void protobuf_ShutdownFile_HighLadderMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetAchievementDataBack* default_instance_;
};
// -------------------------------------------------------------------

class CGUseTitle : public ::google::protobuf::Message {
 public:
  CGUseTitle();
  virtual ~CGUseTitle();

  CGUseTitle(const CGUseTitle& from);

  inline CGUseTitle& operator=(const CGUseTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGUseTitle& default_instance();

  void Swap(CGUseTitle* other);

  // implements Message ----------------------------------------------

  CGUseTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGUseTitle& from);
  void MergeFrom(const CGUseTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 titleid = 1;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleidFieldNumber = 1;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // optional int32 operateType = 2;
  inline bool has_operatetype() const;
  inline void clear_operatetype();
  static const int kOperateTypeFieldNumber = 2;
  inline ::google::protobuf::int32 operatetype() const;
  inline void set_operatetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGUseTitle)
 private:
  inline void set_has_titleid();
  inline void clear_has_titleid();
  inline void set_has_operatetype();
  inline void clear_has_operatetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 titleid_;
  ::google::protobuf::int32 operatetype_;
  friend void  protobuf_AddDesc_HighLadderMessage_2eproto();
  friend void protobuf_AssignDesc_HighLadderMessage_2eproto();
  friend void protobuf_ShutdownFile_HighLadderMessage_2eproto();

  void InitAsDefaultInstance();
  static CGUseTitle* default_instance_;
};
// -------------------------------------------------------------------

class GCUseTitleBack : public ::google::protobuf::Message {
 public:
  GCUseTitleBack();
  virtual ~GCUseTitleBack();

  GCUseTitleBack(const GCUseTitleBack& from);

  inline GCUseTitleBack& operator=(const GCUseTitleBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCUseTitleBack& default_instance();

  void Swap(GCUseTitleBack* other);

  // implements Message ----------------------------------------------

  GCUseTitleBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCUseTitleBack& from);
  void MergeFrom(const GCUseTitleBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional .Titlel title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::Titlel& title() const;
  inline ::Titlel* mutable_title();
  inline ::Titlel* release_title();
  inline void set_allocated_title(::Titlel* title);

  // optional int32 operateType = 3;
  inline bool has_operatetype() const;
  inline void clear_operatetype();
  static const int kOperateTypeFieldNumber = 3;
  inline ::google::protobuf::int32 operatetype() const;
  inline void set_operatetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCUseTitleBack)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_operatetype();
  inline void clear_has_operatetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Titlel* title_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 operatetype_;
  friend void  protobuf_AddDesc_HighLadderMessage_2eproto();
  friend void protobuf_AssignDesc_HighLadderMessage_2eproto();
  friend void protobuf_ShutdownFile_HighLadderMessage_2eproto();

  void InitAsDefaultInstance();
  static GCUseTitleBack* default_instance_;
};
// -------------------------------------------------------------------

class CGLockTitle : public ::google::protobuf::Message {
 public:
  CGLockTitle();
  virtual ~CGLockTitle();

  CGLockTitle(const CGLockTitle& from);

  inline CGLockTitle& operator=(const CGLockTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGLockTitle& default_instance();

  void Swap(CGLockTitle* other);

  // implements Message ----------------------------------------------

  CGLockTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGLockTitle& from);
  void MergeFrom(const CGLockTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lock = 1;
  inline bool has_lock() const;
  inline void clear_lock();
  static const int kLockFieldNumber = 1;
  inline ::google::protobuf::int32 lock() const;
  inline void set_lock(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGLockTitle)
 private:
  inline void set_has_lock();
  inline void clear_has_lock();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 lock_;
  friend void  protobuf_AddDesc_HighLadderMessage_2eproto();
  friend void protobuf_AssignDesc_HighLadderMessage_2eproto();
  friend void protobuf_ShutdownFile_HighLadderMessage_2eproto();

  void InitAsDefaultInstance();
  static CGLockTitle* default_instance_;
};
// -------------------------------------------------------------------

class GCLockTitleBack : public ::google::protobuf::Message {
 public:
  GCLockTitleBack();
  virtual ~GCLockTitleBack();

  GCLockTitleBack(const GCLockTitleBack& from);

  inline GCLockTitleBack& operator=(const GCLockTitleBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCLockTitleBack& default_instance();

  void Swap(GCLockTitleBack* other);

  // implements Message ----------------------------------------------

  GCLockTitleBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCLockTitleBack& from);
  void MergeFrom(const GCLockTitleBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional int32 lock = 2;
  inline bool has_lock() const;
  inline void clear_lock();
  static const int kLockFieldNumber = 2;
  inline ::google::protobuf::int32 lock() const;
  inline void set_lock(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCLockTitleBack)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_lock();
  inline void clear_has_lock();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 lock_;
  friend void  protobuf_AddDesc_HighLadderMessage_2eproto();
  friend void protobuf_AssignDesc_HighLadderMessage_2eproto();
  friend void protobuf_ShutdownFile_HighLadderMessage_2eproto();

  void InitAsDefaultInstance();
  static GCLockTitleBack* default_instance_;
};
// ===================================================================


// ===================================================================

// GCPushHighLadderListBack

// repeated .Titlel titlelist = 1;
inline int GCPushHighLadderListBack::titlelist_size() const {
  return titlelist_.size();
}
inline void GCPushHighLadderListBack::clear_titlelist() {
  titlelist_.Clear();
}
inline const ::Titlel& GCPushHighLadderListBack::titlelist(int index) const {
  // @@protoc_insertion_point(field_get:GCPushHighLadderListBack.titlelist)
  return titlelist_.Get(index);
}
inline ::Titlel* GCPushHighLadderListBack::mutable_titlelist(int index) {
  // @@protoc_insertion_point(field_mutable:GCPushHighLadderListBack.titlelist)
  return titlelist_.Mutable(index);
}
inline ::Titlel* GCPushHighLadderListBack::add_titlelist() {
  // @@protoc_insertion_point(field_add:GCPushHighLadderListBack.titlelist)
  return titlelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Titlel >&
GCPushHighLadderListBack::titlelist() const {
  // @@protoc_insertion_point(field_list:GCPushHighLadderListBack.titlelist)
  return titlelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Titlel >*
GCPushHighLadderListBack::mutable_titlelist() {
  // @@protoc_insertion_point(field_mutable_list:GCPushHighLadderListBack.titlelist)
  return &titlelist_;
}

// optional int32 locked = 2;
inline bool GCPushHighLadderListBack::has_locked() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCPushHighLadderListBack::set_has_locked() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCPushHighLadderListBack::clear_has_locked() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCPushHighLadderListBack::clear_locked() {
  locked_ = 0;
  clear_has_locked();
}
inline ::google::protobuf::int32 GCPushHighLadderListBack::locked() const {
  // @@protoc_insertion_point(field_get:GCPushHighLadderListBack.locked)
  return locked_;
}
inline void GCPushHighLadderListBack::set_locked(::google::protobuf::int32 value) {
  set_has_locked();
  locked_ = value;
  // @@protoc_insertion_point(field_set:GCPushHighLadderListBack.locked)
}

// -------------------------------------------------------------------

// GCHighLadderOver

// optional .Achievement mvt = 1;
inline bool GCHighLadderOver::has_mvt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCHighLadderOver::set_has_mvt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCHighLadderOver::clear_has_mvt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCHighLadderOver::clear_mvt() {
  if (mvt_ != NULL) mvt_->::Achievement::Clear();
  clear_has_mvt();
}
inline const ::Achievement& GCHighLadderOver::mvt() const {
  // @@protoc_insertion_point(field_get:GCHighLadderOver.mvt)
  return mvt_ != NULL ? *mvt_ : *default_instance_->mvt_;
}
inline ::Achievement* GCHighLadderOver::mutable_mvt() {
  set_has_mvt();
  if (mvt_ == NULL) mvt_ = new ::Achievement;
  // @@protoc_insertion_point(field_mutable:GCHighLadderOver.mvt)
  return mvt_;
}
inline ::Achievement* GCHighLadderOver::release_mvt() {
  clear_has_mvt();
  ::Achievement* temp = mvt_;
  mvt_ = NULL;
  return temp;
}
inline void GCHighLadderOver::set_allocated_mvt(::Achievement* mvt) {
  delete mvt_;
  mvt_ = mvt;
  if (mvt) {
    set_has_mvt();
  } else {
    clear_has_mvt();
  }
  // @@protoc_insertion_point(field_set_allocated:GCHighLadderOver.mvt)
}

// optional .Titlel title = 2;
inline bool GCHighLadderOver::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCHighLadderOver::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCHighLadderOver::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCHighLadderOver::clear_title() {
  if (title_ != NULL) title_->::Titlel::Clear();
  clear_has_title();
}
inline const ::Titlel& GCHighLadderOver::title() const {
  // @@protoc_insertion_point(field_get:GCHighLadderOver.title)
  return title_ != NULL ? *title_ : *default_instance_->title_;
}
inline ::Titlel* GCHighLadderOver::mutable_title() {
  set_has_title();
  if (title_ == NULL) title_ = new ::Titlel;
  // @@protoc_insertion_point(field_mutable:GCHighLadderOver.title)
  return title_;
}
inline ::Titlel* GCHighLadderOver::release_title() {
  clear_has_title();
  ::Titlel* temp = title_;
  title_ = NULL;
  return temp;
}
inline void GCHighLadderOver::set_allocated_title(::Titlel* title) {
  delete title_;
  title_ = title;
  if (title) {
    set_has_title();
  } else {
    clear_has_title();
  }
  // @@protoc_insertion_point(field_set_allocated:GCHighLadderOver.title)
}

// -------------------------------------------------------------------

// CGGetHighLadderReward

// optional int32 condition = 1;
inline bool CGGetHighLadderReward::has_condition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetHighLadderReward::set_has_condition() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetHighLadderReward::clear_has_condition() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetHighLadderReward::clear_condition() {
  condition_ = 0;
  clear_has_condition();
}
inline ::google::protobuf::int32 CGGetHighLadderReward::condition() const {
  // @@protoc_insertion_point(field_get:CGGetHighLadderReward.condition)
  return condition_;
}
inline void CGGetHighLadderReward::set_condition(::google::protobuf::int32 value) {
  set_has_condition();
  condition_ = value;
  // @@protoc_insertion_point(field_set:CGGetHighLadderReward.condition)
}

// optional int32 achievementid = 2;
inline bool CGGetHighLadderReward::has_achievementid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGGetHighLadderReward::set_has_achievementid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGGetHighLadderReward::clear_has_achievementid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGGetHighLadderReward::clear_achievementid() {
  achievementid_ = 0;
  clear_has_achievementid();
}
inline ::google::protobuf::int32 CGGetHighLadderReward::achievementid() const {
  // @@protoc_insertion_point(field_get:CGGetHighLadderReward.achievementid)
  return achievementid_;
}
inline void CGGetHighLadderReward::set_achievementid(::google::protobuf::int32 value) {
  set_has_achievementid();
  achievementid_ = value;
  // @@protoc_insertion_point(field_set:CGGetHighLadderReward.achievementid)
}

// -------------------------------------------------------------------

// GCGetHighLadderRewardBack

// optional int32 flag = 1;
inline bool GCGetHighLadderRewardBack::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetHighLadderRewardBack::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetHighLadderRewardBack::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetHighLadderRewardBack::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCGetHighLadderRewardBack::flag() const {
  // @@protoc_insertion_point(field_get:GCGetHighLadderRewardBack.flag)
  return flag_;
}
inline void GCGetHighLadderRewardBack::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCGetHighLadderRewardBack.flag)
}

// optional int32 nextachievementid = 2;
inline bool GCGetHighLadderRewardBack::has_nextachievementid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGetHighLadderRewardBack::set_has_nextachievementid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGetHighLadderRewardBack::clear_has_nextachievementid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGetHighLadderRewardBack::clear_nextachievementid() {
  nextachievementid_ = 0;
  clear_has_nextachievementid();
}
inline ::google::protobuf::int32 GCGetHighLadderRewardBack::nextachievementid() const {
  // @@protoc_insertion_point(field_get:GCGetHighLadderRewardBack.nextachievementid)
  return nextachievementid_;
}
inline void GCGetHighLadderRewardBack::set_nextachievementid(::google::protobuf::int32 value) {
  set_has_nextachievementid();
  nextachievementid_ = value;
  // @@protoc_insertion_point(field_set:GCGetHighLadderRewardBack.nextachievementid)
}

// optional int32 isover = 3;
inline bool GCGetHighLadderRewardBack::has_isover() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCGetHighLadderRewardBack::set_has_isover() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCGetHighLadderRewardBack::clear_has_isover() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCGetHighLadderRewardBack::clear_isover() {
  isover_ = 0;
  clear_has_isover();
}
inline ::google::protobuf::int32 GCGetHighLadderRewardBack::isover() const {
  // @@protoc_insertion_point(field_get:GCGetHighLadderRewardBack.isover)
  return isover_;
}
inline void GCGetHighLadderRewardBack::set_isover(::google::protobuf::int32 value) {
  set_has_isover();
  isover_ = value;
  // @@protoc_insertion_point(field_set:GCGetHighLadderRewardBack.isover)
}

// optional int32 curachievementid = 4;
inline bool GCGetHighLadderRewardBack::has_curachievementid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCGetHighLadderRewardBack::set_has_curachievementid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCGetHighLadderRewardBack::clear_has_curachievementid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCGetHighLadderRewardBack::clear_curachievementid() {
  curachievementid_ = 0;
  clear_has_curachievementid();
}
inline ::google::protobuf::int32 GCGetHighLadderRewardBack::curachievementid() const {
  // @@protoc_insertion_point(field_get:GCGetHighLadderRewardBack.curachievementid)
  return curachievementid_;
}
inline void GCGetHighLadderRewardBack::set_curachievementid(::google::protobuf::int32 value) {
  set_has_curachievementid();
  curachievementid_ = value;
  // @@protoc_insertion_point(field_set:GCGetHighLadderRewardBack.curachievementid)
}

// -------------------------------------------------------------------

// CGGetAchievementData

// -------------------------------------------------------------------

// GCGetAchievementDataBack

// repeated .Achievement mvt = 1;
inline int GCGetAchievementDataBack::mvt_size() const {
  return mvt_.size();
}
inline void GCGetAchievementDataBack::clear_mvt() {
  mvt_.Clear();
}
inline const ::Achievement& GCGetAchievementDataBack::mvt(int index) const {
  // @@protoc_insertion_point(field_get:GCGetAchievementDataBack.mvt)
  return mvt_.Get(index);
}
inline ::Achievement* GCGetAchievementDataBack::mutable_mvt(int index) {
  // @@protoc_insertion_point(field_mutable:GCGetAchievementDataBack.mvt)
  return mvt_.Mutable(index);
}
inline ::Achievement* GCGetAchievementDataBack::add_mvt() {
  // @@protoc_insertion_point(field_add:GCGetAchievementDataBack.mvt)
  return mvt_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Achievement >&
GCGetAchievementDataBack::mvt() const {
  // @@protoc_insertion_point(field_list:GCGetAchievementDataBack.mvt)
  return mvt_;
}
inline ::google::protobuf::RepeatedPtrField< ::Achievement >*
GCGetAchievementDataBack::mutable_mvt() {
  // @@protoc_insertion_point(field_mutable_list:GCGetAchievementDataBack.mvt)
  return &mvt_;
}

// -------------------------------------------------------------------

// CGUseTitle

// optional int32 titleid = 1;
inline bool CGUseTitle::has_titleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGUseTitle::set_has_titleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGUseTitle::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGUseTitle::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 CGUseTitle::titleid() const {
  // @@protoc_insertion_point(field_get:CGUseTitle.titleid)
  return titleid_;
}
inline void CGUseTitle::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
  // @@protoc_insertion_point(field_set:CGUseTitle.titleid)
}

// optional int32 operateType = 2;
inline bool CGUseTitle::has_operatetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGUseTitle::set_has_operatetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGUseTitle::clear_has_operatetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGUseTitle::clear_operatetype() {
  operatetype_ = 0;
  clear_has_operatetype();
}
inline ::google::protobuf::int32 CGUseTitle::operatetype() const {
  // @@protoc_insertion_point(field_get:CGUseTitle.operateType)
  return operatetype_;
}
inline void CGUseTitle::set_operatetype(::google::protobuf::int32 value) {
  set_has_operatetype();
  operatetype_ = value;
  // @@protoc_insertion_point(field_set:CGUseTitle.operateType)
}

// -------------------------------------------------------------------

// GCUseTitleBack

// optional int32 flag = 1;
inline bool GCUseTitleBack::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCUseTitleBack::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCUseTitleBack::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCUseTitleBack::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCUseTitleBack::flag() const {
  // @@protoc_insertion_point(field_get:GCUseTitleBack.flag)
  return flag_;
}
inline void GCUseTitleBack::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCUseTitleBack.flag)
}

// optional .Titlel title = 2;
inline bool GCUseTitleBack::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCUseTitleBack::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCUseTitleBack::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCUseTitleBack::clear_title() {
  if (title_ != NULL) title_->::Titlel::Clear();
  clear_has_title();
}
inline const ::Titlel& GCUseTitleBack::title() const {
  // @@protoc_insertion_point(field_get:GCUseTitleBack.title)
  return title_ != NULL ? *title_ : *default_instance_->title_;
}
inline ::Titlel* GCUseTitleBack::mutable_title() {
  set_has_title();
  if (title_ == NULL) title_ = new ::Titlel;
  // @@protoc_insertion_point(field_mutable:GCUseTitleBack.title)
  return title_;
}
inline ::Titlel* GCUseTitleBack::release_title() {
  clear_has_title();
  ::Titlel* temp = title_;
  title_ = NULL;
  return temp;
}
inline void GCUseTitleBack::set_allocated_title(::Titlel* title) {
  delete title_;
  title_ = title;
  if (title) {
    set_has_title();
  } else {
    clear_has_title();
  }
  // @@protoc_insertion_point(field_set_allocated:GCUseTitleBack.title)
}

// optional int32 operateType = 3;
inline bool GCUseTitleBack::has_operatetype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCUseTitleBack::set_has_operatetype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCUseTitleBack::clear_has_operatetype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCUseTitleBack::clear_operatetype() {
  operatetype_ = 0;
  clear_has_operatetype();
}
inline ::google::protobuf::int32 GCUseTitleBack::operatetype() const {
  // @@protoc_insertion_point(field_get:GCUseTitleBack.operateType)
  return operatetype_;
}
inline void GCUseTitleBack::set_operatetype(::google::protobuf::int32 value) {
  set_has_operatetype();
  operatetype_ = value;
  // @@protoc_insertion_point(field_set:GCUseTitleBack.operateType)
}

// -------------------------------------------------------------------

// CGLockTitle

// optional int32 lock = 1;
inline bool CGLockTitle::has_lock() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGLockTitle::set_has_lock() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGLockTitle::clear_has_lock() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGLockTitle::clear_lock() {
  lock_ = 0;
  clear_has_lock();
}
inline ::google::protobuf::int32 CGLockTitle::lock() const {
  // @@protoc_insertion_point(field_get:CGLockTitle.lock)
  return lock_;
}
inline void CGLockTitle::set_lock(::google::protobuf::int32 value) {
  set_has_lock();
  lock_ = value;
  // @@protoc_insertion_point(field_set:CGLockTitle.lock)
}

// -------------------------------------------------------------------

// GCLockTitleBack

// optional int32 flag = 1;
inline bool GCLockTitleBack::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCLockTitleBack::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCLockTitleBack::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCLockTitleBack::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCLockTitleBack::flag() const {
  // @@protoc_insertion_point(field_get:GCLockTitleBack.flag)
  return flag_;
}
inline void GCLockTitleBack::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCLockTitleBack.flag)
}

// optional int32 lock = 2;
inline bool GCLockTitleBack::has_lock() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCLockTitleBack::set_has_lock() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCLockTitleBack::clear_has_lock() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCLockTitleBack::clear_lock() {
  lock_ = 0;
  clear_has_lock();
}
inline ::google::protobuf::int32 GCLockTitleBack::lock() const {
  // @@protoc_insertion_point(field_get:GCLockTitleBack.lock)
  return lock_;
}
inline void GCLockTitleBack::set_lock(::google::protobuf::int32 value) {
  set_has_lock();
  lock_ = value;
  // @@protoc_insertion_point(field_set:GCLockTitleBack.lock)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_HighLadderMessage_2eproto__INCLUDED
