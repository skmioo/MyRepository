// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ImpactMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ImpactMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ImpactData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ImpactData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCSyncImpactList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCSyncImpactList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGTriggerImpact_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGTriggerImpact_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCTriggerImpact_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCTriggerImpact_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ImpactMessage_2eproto() {
  protobuf_AddDesc_ImpactMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ImpactMessage.proto");
  GOOGLE_CHECK(file != NULL);
  ImpactData_descriptor_ = file->message_type(0);
  static const int ImpactData_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImpactData, impactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImpactData, starttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImpactData, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImpactData, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImpactData, attack_id_),
  };
  ImpactData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ImpactData_descriptor_,
      ImpactData::default_instance_,
      ImpactData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImpactData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImpactData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ImpactData));
  GCSyncImpactList_descriptor_ = file->message_type(1);
  static const int GCSyncImpactList_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCSyncImpactList, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCSyncImpactList, dirtyflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCSyncImpactList, impactdatas_),
  };
  GCSyncImpactList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCSyncImpactList_descriptor_,
      GCSyncImpactList::default_instance_,
      GCSyncImpactList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCSyncImpactList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCSyncImpactList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCSyncImpactList));
  CGTriggerImpact_descriptor_ = file->message_type(2);
  static const int CGTriggerImpact_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGTriggerImpact, targetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGTriggerImpact, impactid_),
  };
  CGTriggerImpact_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CGTriggerImpact_descriptor_,
      CGTriggerImpact::default_instance_,
      CGTriggerImpact_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGTriggerImpact, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGTriggerImpact, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CGTriggerImpact));
  GCTriggerImpact_descriptor_ = file->message_type(3);
  static const int GCTriggerImpact_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCTriggerImpact, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCTriggerImpact, attackid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCTriggerImpact, impactids_),
  };
  GCTriggerImpact_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCTriggerImpact_descriptor_,
      GCTriggerImpact::default_instance_,
      GCTriggerImpact_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCTriggerImpact, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCTriggerImpact, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCTriggerImpact));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ImpactMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ImpactData_descriptor_, &ImpactData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCSyncImpactList_descriptor_, &GCSyncImpactList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CGTriggerImpact_descriptor_, &CGTriggerImpact::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCTriggerImpact_descriptor_, &GCTriggerImpact::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ImpactMessage_2eproto() {
  delete ImpactData::default_instance_;
  delete ImpactData_reflection_;
  delete GCSyncImpactList::default_instance_;
  delete GCSyncImpactList_reflection_;
  delete CGTriggerImpact::default_instance_;
  delete CGTriggerImpact_reflection_;
  delete GCTriggerImpact::default_instance_;
  delete GCTriggerImpact_reflection_;
}

void protobuf_AddDesc_ImpactMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_InnerMessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ImpactMessage.proto\032\022InnerMessage.prot"
    "o\"d\n\nImpactData\022\020\n\010impactId\030\001 \001(\005\022\021\n\tsta"
    "rtTime\030\002 \001(\003\022\017\n\007endTime\030\003 \001(\003\022\r\n\005param\030\004"
    " \003(\005\022\021\n\tattack_id\030\005 \001(\003\"U\n\020GCSyncImpactL"
    "ist\022\014\n\004guid\030\001 \001(\003\022\021\n\tdirtyFlag\030\002 \003(\005\022 \n\013"
    "impactDatas\030\003 \003(\0132\013.ImpactData\"5\n\017CGTrig"
    "gerImpact\022\020\n\010targetId\030\001 \001(\003\022\020\n\010impactId\030"
    "\002 \001(\005\"D\n\017GCTriggerImpact\022\014\n\004guid\030\001 \001(\003\022\020"
    "\n\010attackId\030\002 \001(\003\022\021\n\timpactIds\030\003 \003(\005B\031\n\027c"
    "om.mile.common.message", 382);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ImpactMessage.proto", &protobuf_RegisterTypes);
  ImpactData::default_instance_ = new ImpactData();
  GCSyncImpactList::default_instance_ = new GCSyncImpactList();
  CGTriggerImpact::default_instance_ = new CGTriggerImpact();
  GCTriggerImpact::default_instance_ = new GCTriggerImpact();
  ImpactData::default_instance_->InitAsDefaultInstance();
  GCSyncImpactList::default_instance_->InitAsDefaultInstance();
  CGTriggerImpact::default_instance_->InitAsDefaultInstance();
  GCTriggerImpact::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ImpactMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ImpactMessage_2eproto {
  StaticDescriptorInitializer_ImpactMessage_2eproto() {
    protobuf_AddDesc_ImpactMessage_2eproto();
  }
} static_descriptor_initializer_ImpactMessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ImpactData::kImpactIdFieldNumber;
const int ImpactData::kStartTimeFieldNumber;
const int ImpactData::kEndTimeFieldNumber;
const int ImpactData::kParamFieldNumber;
const int ImpactData::kAttackIdFieldNumber;
#endif  // !_MSC_VER

ImpactData::ImpactData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImpactData)
}

void ImpactData::InitAsDefaultInstance() {
}

ImpactData::ImpactData(const ImpactData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ImpactData)
}

void ImpactData::SharedCtor() {
  _cached_size_ = 0;
  impactid_ = 0;
  starttime_ = GOOGLE_LONGLONG(0);
  endtime_ = GOOGLE_LONGLONG(0);
  attack_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ImpactData::~ImpactData() {
  // @@protoc_insertion_point(destructor:ImpactData)
  SharedDtor();
}

void ImpactData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ImpactData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImpactData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImpactData_descriptor_;
}

const ImpactData& ImpactData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ImpactMessage_2eproto();
  return *default_instance_;
}

ImpactData* ImpactData::default_instance_ = NULL;

ImpactData* ImpactData::New() const {
  return new ImpactData;
}

void ImpactData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ImpactData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(starttime_, endtime_);
  ZR_(attack_id_, impactid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  param_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ImpactData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImpactData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 impactId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &impactid_)));
          set_has_impactid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_startTime;
        break;
      }

      // optional int64 startTime = 2;
      case 2: {
        if (tag == 16) {
         parse_startTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_endTime;
        break;
      }

      // optional int64 endTime = 3;
      case 3: {
        if (tag == 24) {
         parse_endTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_param;
        break;
      }

      // repeated int32 param = 4;
      case 4: {
        if (tag == 32) {
         parse_param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_param())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_param())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_param;
        if (input->ExpectTag(40)) goto parse_attack_id;
        break;
      }

      // optional int64 attack_id = 5;
      case 5: {
        if (tag == 40) {
         parse_attack_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &attack_id_)));
          set_has_attack_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImpactData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImpactData)
  return false;
#undef DO_
}

void ImpactData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImpactData)
  // optional int32 impactId = 1;
  if (has_impactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->impactid(), output);
  }

  // optional int64 startTime = 2;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->starttime(), output);
  }

  // optional int64 endTime = 3;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->endtime(), output);
  }

  // repeated int32 param = 4;
  for (int i = 0; i < this->param_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->param(i), output);
  }

  // optional int64 attack_id = 5;
  if (has_attack_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->attack_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ImpactData)
}

::google::protobuf::uint8* ImpactData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ImpactData)
  // optional int32 impactId = 1;
  if (has_impactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->impactid(), target);
  }

  // optional int64 startTime = 2;
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->starttime(), target);
  }

  // optional int64 endTime = 3;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->endtime(), target);
  }

  // repeated int32 param = 4;
  for (int i = 0; i < this->param_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->param(i), target);
  }

  // optional int64 attack_id = 5;
  if (has_attack_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->attack_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImpactData)
  return target;
}

int ImpactData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 impactId = 1;
    if (has_impactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->impactid());
    }

    // optional int64 startTime = 2;
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->starttime());
    }

    // optional int64 endTime = 3;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->endtime());
    }

    // optional int64 attack_id = 5;
    if (has_attack_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->attack_id());
    }

  }
  // repeated int32 param = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->param_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->param(i));
    }
    total_size += 1 * this->param_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImpactData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ImpactData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ImpactData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ImpactData::MergeFrom(const ImpactData& from) {
  GOOGLE_CHECK_NE(&from, this);
  param_.MergeFrom(from.param_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_impactid()) {
      set_impactid(from.impactid());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
    if (from.has_attack_id()) {
      set_attack_id(from.attack_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ImpactData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpactData::CopyFrom(const ImpactData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpactData::IsInitialized() const {

  return true;
}

void ImpactData::Swap(ImpactData* other) {
  if (other != this) {
    std::swap(impactid_, other->impactid_);
    std::swap(starttime_, other->starttime_);
    std::swap(endtime_, other->endtime_);
    param_.Swap(&other->param_);
    std::swap(attack_id_, other->attack_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ImpactData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ImpactData_descriptor_;
  metadata.reflection = ImpactData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCSyncImpactList::kGuidFieldNumber;
const int GCSyncImpactList::kDirtyFlagFieldNumber;
const int GCSyncImpactList::kImpactDatasFieldNumber;
#endif  // !_MSC_VER

GCSyncImpactList::GCSyncImpactList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCSyncImpactList)
}

void GCSyncImpactList::InitAsDefaultInstance() {
}

GCSyncImpactList::GCSyncImpactList(const GCSyncImpactList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCSyncImpactList)
}

void GCSyncImpactList::SharedCtor() {
  _cached_size_ = 0;
  guid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCSyncImpactList::~GCSyncImpactList() {
  // @@protoc_insertion_point(destructor:GCSyncImpactList)
  SharedDtor();
}

void GCSyncImpactList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GCSyncImpactList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCSyncImpactList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCSyncImpactList_descriptor_;
}

const GCSyncImpactList& GCSyncImpactList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ImpactMessage_2eproto();
  return *default_instance_;
}

GCSyncImpactList* GCSyncImpactList::default_instance_ = NULL;

GCSyncImpactList* GCSyncImpactList::New() const {
  return new GCSyncImpactList;
}

void GCSyncImpactList::Clear() {
  guid_ = GOOGLE_LONGLONG(0);
  dirtyflag_.Clear();
  impactdatas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCSyncImpactList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCSyncImpactList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 guid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dirtyFlag;
        break;
      }

      // repeated int32 dirtyFlag = 2;
      case 2: {
        if (tag == 16) {
         parse_dirtyFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_dirtyflag())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dirtyflag())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dirtyFlag;
        if (input->ExpectTag(26)) goto parse_impactDatas;
        break;
      }

      // repeated .ImpactData impactDatas = 3;
      case 3: {
        if (tag == 26) {
         parse_impactDatas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_impactdatas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_impactDatas;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCSyncImpactList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCSyncImpactList)
  return false;
#undef DO_
}

void GCSyncImpactList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCSyncImpactList)
  // optional int64 guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  // repeated int32 dirtyFlag = 2;
  for (int i = 0; i < this->dirtyflag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->dirtyflag(i), output);
  }

  // repeated .ImpactData impactDatas = 3;
  for (int i = 0; i < this->impactdatas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->impactdatas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCSyncImpactList)
}

::google::protobuf::uint8* GCSyncImpactList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCSyncImpactList)
  // optional int64 guid = 1;
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  // repeated int32 dirtyFlag = 2;
  for (int i = 0; i < this->dirtyflag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->dirtyflag(i), target);
  }

  // repeated .ImpactData impactDatas = 3;
  for (int i = 0; i < this->impactdatas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->impactdatas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCSyncImpactList)
  return target;
}

int GCSyncImpactList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->guid());
    }

  }
  // repeated int32 dirtyFlag = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->dirtyflag_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->dirtyflag(i));
    }
    total_size += 1 * this->dirtyflag_size() + data_size;
  }

  // repeated .ImpactData impactDatas = 3;
  total_size += 1 * this->impactdatas_size();
  for (int i = 0; i < this->impactdatas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->impactdatas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCSyncImpactList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCSyncImpactList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCSyncImpactList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCSyncImpactList::MergeFrom(const GCSyncImpactList& from) {
  GOOGLE_CHECK_NE(&from, this);
  dirtyflag_.MergeFrom(from.dirtyflag_);
  impactdatas_.MergeFrom(from.impactdatas_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCSyncImpactList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCSyncImpactList::CopyFrom(const GCSyncImpactList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCSyncImpactList::IsInitialized() const {

  return true;
}

void GCSyncImpactList::Swap(GCSyncImpactList* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    dirtyflag_.Swap(&other->dirtyflag_);
    impactdatas_.Swap(&other->impactdatas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCSyncImpactList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCSyncImpactList_descriptor_;
  metadata.reflection = GCSyncImpactList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CGTriggerImpact::kTargetIdFieldNumber;
const int CGTriggerImpact::kImpactIdFieldNumber;
#endif  // !_MSC_VER

CGTriggerImpact::CGTriggerImpact()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGTriggerImpact)
}

void CGTriggerImpact::InitAsDefaultInstance() {
}

CGTriggerImpact::CGTriggerImpact(const CGTriggerImpact& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGTriggerImpact)
}

void CGTriggerImpact::SharedCtor() {
  _cached_size_ = 0;
  targetid_ = GOOGLE_LONGLONG(0);
  impactid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGTriggerImpact::~CGTriggerImpact() {
  // @@protoc_insertion_point(destructor:CGTriggerImpact)
  SharedDtor();
}

void CGTriggerImpact::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGTriggerImpact::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGTriggerImpact::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGTriggerImpact_descriptor_;
}

const CGTriggerImpact& CGTriggerImpact::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ImpactMessage_2eproto();
  return *default_instance_;
}

CGTriggerImpact* CGTriggerImpact::default_instance_ = NULL;

CGTriggerImpact* CGTriggerImpact::New() const {
  return new CGTriggerImpact;
}

void CGTriggerImpact::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CGTriggerImpact*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(targetid_, impactid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CGTriggerImpact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGTriggerImpact)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 targetId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &targetid_)));
          set_has_targetid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_impactId;
        break;
      }

      // optional int32 impactId = 2;
      case 2: {
        if (tag == 16) {
         parse_impactId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &impactid_)));
          set_has_impactid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGTriggerImpact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGTriggerImpact)
  return false;
#undef DO_
}

void CGTriggerImpact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGTriggerImpact)
  // optional int64 targetId = 1;
  if (has_targetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->targetid(), output);
  }

  // optional int32 impactId = 2;
  if (has_impactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->impactid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGTriggerImpact)
}

::google::protobuf::uint8* CGTriggerImpact::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGTriggerImpact)
  // optional int64 targetId = 1;
  if (has_targetid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->targetid(), target);
  }

  // optional int32 impactId = 2;
  if (has_impactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->impactid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGTriggerImpact)
  return target;
}

int CGTriggerImpact::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 targetId = 1;
    if (has_targetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->targetid());
    }

    // optional int32 impactId = 2;
    if (has_impactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->impactid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGTriggerImpact::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CGTriggerImpact* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CGTriggerImpact*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGTriggerImpact::MergeFrom(const CGTriggerImpact& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_targetid()) {
      set_targetid(from.targetid());
    }
    if (from.has_impactid()) {
      set_impactid(from.impactid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CGTriggerImpact::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGTriggerImpact::CopyFrom(const CGTriggerImpact& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGTriggerImpact::IsInitialized() const {

  return true;
}

void CGTriggerImpact::Swap(CGTriggerImpact* other) {
  if (other != this) {
    std::swap(targetid_, other->targetid_);
    std::swap(impactid_, other->impactid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CGTriggerImpact::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGTriggerImpact_descriptor_;
  metadata.reflection = CGTriggerImpact_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCTriggerImpact::kGuidFieldNumber;
const int GCTriggerImpact::kAttackIdFieldNumber;
const int GCTriggerImpact::kImpactIdsFieldNumber;
#endif  // !_MSC_VER

GCTriggerImpact::GCTriggerImpact()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCTriggerImpact)
}

void GCTriggerImpact::InitAsDefaultInstance() {
}

GCTriggerImpact::GCTriggerImpact(const GCTriggerImpact& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCTriggerImpact)
}

void GCTriggerImpact::SharedCtor() {
  _cached_size_ = 0;
  guid_ = GOOGLE_LONGLONG(0);
  attackid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCTriggerImpact::~GCTriggerImpact() {
  // @@protoc_insertion_point(destructor:GCTriggerImpact)
  SharedDtor();
}

void GCTriggerImpact::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GCTriggerImpact::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCTriggerImpact::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCTriggerImpact_descriptor_;
}

const GCTriggerImpact& GCTriggerImpact::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ImpactMessage_2eproto();
  return *default_instance_;
}

GCTriggerImpact* GCTriggerImpact::default_instance_ = NULL;

GCTriggerImpact* GCTriggerImpact::New() const {
  return new GCTriggerImpact;
}

void GCTriggerImpact::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GCTriggerImpact*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(guid_, attackid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  impactids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCTriggerImpact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCTriggerImpact)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 guid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &guid_)));
          set_has_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_attackId;
        break;
      }

      // optional int64 attackId = 2;
      case 2: {
        if (tag == 16) {
         parse_attackId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &attackid_)));
          set_has_attackid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_impactIds;
        break;
      }

      // repeated int32 impactIds = 3;
      case 3: {
        if (tag == 24) {
         parse_impactIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_impactids())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_impactids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_impactIds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCTriggerImpact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCTriggerImpact)
  return false;
#undef DO_
}

void GCTriggerImpact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCTriggerImpact)
  // optional int64 guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->guid(), output);
  }

  // optional int64 attackId = 2;
  if (has_attackid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->attackid(), output);
  }

  // repeated int32 impactIds = 3;
  for (int i = 0; i < this->impactids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->impactids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCTriggerImpact)
}

::google::protobuf::uint8* GCTriggerImpact::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCTriggerImpact)
  // optional int64 guid = 1;
  if (has_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->guid(), target);
  }

  // optional int64 attackId = 2;
  if (has_attackid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->attackid(), target);
  }

  // repeated int32 impactIds = 3;
  for (int i = 0; i < this->impactids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->impactids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCTriggerImpact)
  return target;
}

int GCTriggerImpact::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->guid());
    }

    // optional int64 attackId = 2;
    if (has_attackid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->attackid());
    }

  }
  // repeated int32 impactIds = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->impactids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->impactids(i));
    }
    total_size += 1 * this->impactids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCTriggerImpact::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCTriggerImpact* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCTriggerImpact*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCTriggerImpact::MergeFrom(const GCTriggerImpact& from) {
  GOOGLE_CHECK_NE(&from, this);
  impactids_.MergeFrom(from.impactids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_attackid()) {
      set_attackid(from.attackid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCTriggerImpact::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCTriggerImpact::CopyFrom(const GCTriggerImpact& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCTriggerImpact::IsInitialized() const {

  return true;
}

void GCTriggerImpact::Swap(GCTriggerImpact* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(attackid_, other->attackid_);
    impactids_.Swap(&other->impactids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCTriggerImpact::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCTriggerImpact_descriptor_;
  metadata.reflection = GCTriggerImpact_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
