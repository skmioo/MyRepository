// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InnerMessage.proto

#ifndef PROTOBUF_InnerMessage_2eproto__INCLUDED
#define PROTOBUF_InnerMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_InnerMessage_2eproto();
void protobuf_AssignDesc_InnerMessage_2eproto();
void protobuf_ShutdownFile_InnerMessage_2eproto();

class RandomIsland;
class Vector3Info;
class SkillItemData;
class CharacterViewMsg;
class CharacterInfo;
class HorseInfo;
class ChangeEquipInfo;
class PlayerFashion;
class RedCross;
class CharacterAttr;
class PetAttr;
class PetInfo;
class GCChangeAttribute;
class GCErroeHintBack;
class DeviceInfo;
class Achievement;
class Titlel;
class TrapData;
class TrapItemData;
class VipData;
class GangInfo;
class FriendData;
class PersonalMessagees;
class GCCmmonDialog;
class SkillAttackRelation;
class GCSendAddExp;
class GCAddVerifyBox;
class CGVerifyBoxResult;
class GCCharacterTalk;
class GGDungeonChangeScene;
class RandomIndexInfo;
class Iteminfo;
class GCPlayEffect;

// ===================================================================

class RandomIsland : public ::google::protobuf::Message {
 public:
  RandomIsland();
  virtual ~RandomIsland();

  RandomIsland(const RandomIsland& from);

  inline RandomIsland& operator=(const RandomIsland& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RandomIsland& default_instance();

  void Swap(RandomIsland* other);

  // implements Message ----------------------------------------------

  RandomIsland* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RandomIsland& from);
  void MergeFrom(const RandomIsland& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string islandName = 1;
  inline bool has_islandname() const;
  inline void clear_islandname();
  static const int kIslandNameFieldNumber = 1;
  inline const ::std::string& islandname() const;
  inline void set_islandname(const ::std::string& value);
  inline void set_islandname(const char* value);
  inline void set_islandname(const char* value, size_t size);
  inline ::std::string* mutable_islandname();
  inline ::std::string* release_islandname();
  inline void set_allocated_islandname(::std::string* islandname);

  // optional int32 PosX = 2;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 2;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);

  // optional int32 PosY = 3;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 3;
  inline ::google::protobuf::int32 posy() const;
  inline void set_posy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RandomIsland)
 private:
  inline void set_has_islandname();
  inline void clear_has_islandname();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* islandname_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posy_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static RandomIsland* default_instance_;
};
// -------------------------------------------------------------------

class Vector3Info : public ::google::protobuf::Message {
 public:
  Vector3Info();
  virtual ~Vector3Info();

  Vector3Info(const Vector3Info& from);

  inline Vector3Info& operator=(const Vector3Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector3Info& default_instance();

  void Swap(Vector3Info* other);

  // implements Message ----------------------------------------------

  Vector3Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Vector3Info& from);
  void MergeFrom(const Vector3Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // optional int32 z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline ::google::protobuf::int32 z() const;
  inline void set_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Vector3Info)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 z_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static Vector3Info* default_instance_;
};
// -------------------------------------------------------------------

class SkillItemData : public ::google::protobuf::Message {
 public:
  SkillItemData();
  virtual ~SkillItemData();

  SkillItemData(const SkillItemData& from);

  inline SkillItemData& operator=(const SkillItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillItemData& default_instance();

  void Swap(SkillItemData* other);

  // implements Message ----------------------------------------------

  SkillItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillItemData& from);
  void MergeFrom(const SkillItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 skilllevel = 2;
  inline bool has_skilllevel() const;
  inline void clear_skilllevel();
  static const int kSkilllevelFieldNumber = 2;
  inline ::google::protobuf::int32 skilllevel() const;
  inline void set_skilllevel(::google::protobuf::int32 value);

  // optional int32 skillposition = 3;
  inline bool has_skillposition() const;
  inline void clear_skillposition();
  static const int kSkillpositionFieldNumber = 3;
  inline ::google::protobuf::int32 skillposition() const;
  inline void set_skillposition(::google::protobuf::int32 value);

  // optional int32 flagnormal = 4;
  inline bool has_flagnormal() const;
  inline void clear_flagnormal();
  static const int kFlagnormalFieldNumber = 4;
  inline ::google::protobuf::int32 flagnormal() const;
  inline void set_flagnormal(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SkillItemData)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_skilllevel();
  inline void clear_has_skilllevel();
  inline void set_has_skillposition();
  inline void clear_has_skillposition();
  inline void set_has_flagnormal();
  inline void clear_has_flagnormal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 skilllevel_;
  ::google::protobuf::int32 skillposition_;
  ::google::protobuf::int32 flagnormal_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static SkillItemData* default_instance_;
};
// -------------------------------------------------------------------

class CharacterViewMsg : public ::google::protobuf::Message {
 public:
  CharacterViewMsg();
  virtual ~CharacterViewMsg();

  CharacterViewMsg(const CharacterViewMsg& from);

  inline CharacterViewMsg& operator=(const CharacterViewMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterViewMsg& default_instance();

  void Swap(CharacterViewMsg* other);

  // implements Message ----------------------------------------------

  CharacterViewMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterViewMsg& from);
  void MergeFrom(const CharacterViewMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 viewType = 1;
  inline bool has_viewtype() const;
  inline void clear_viewtype();
  static const int kViewTypeFieldNumber = 1;
  inline ::google::protobuf::int32 viewtype() const;
  inline void set_viewtype(::google::protobuf::int32 value);

  // optional string viewValue = 2;
  inline bool has_viewvalue() const;
  inline void clear_viewvalue();
  static const int kViewValueFieldNumber = 2;
  inline const ::std::string& viewvalue() const;
  inline void set_viewvalue(const ::std::string& value);
  inline void set_viewvalue(const char* value);
  inline void set_viewvalue(const char* value, size_t size);
  inline ::std::string* mutable_viewvalue();
  inline ::std::string* release_viewvalue();
  inline void set_allocated_viewvalue(::std::string* viewvalue);

  // @@protoc_insertion_point(class_scope:CharacterViewMsg)
 private:
  inline void set_has_viewtype();
  inline void clear_has_viewtype();
  inline void set_has_viewvalue();
  inline void clear_has_viewvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* viewvalue_;
  ::google::protobuf::int32 viewtype_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static CharacterViewMsg* default_instance_;
};
// -------------------------------------------------------------------

class CharacterInfo : public ::google::protobuf::Message {
 public:
  CharacterInfo();
  virtual ~CharacterInfo();

  CharacterInfo(const CharacterInfo& from);

  inline CharacterInfo& operator=(const CharacterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterInfo& default_instance();

  void Swap(CharacterInfo* other);

  // implements Message ----------------------------------------------

  CharacterInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterInfo& from);
  void MergeFrom(const CharacterInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // optional string charName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional .Vector3Info pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::Vector3Info& pos() const;
  inline ::Vector3Info* mutable_pos();
  inline ::Vector3Info* release_pos();
  inline void set_allocated_pos(::Vector3Info* pos);

  // optional .Vector3Info direction = 4;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 4;
  inline const ::Vector3Info& direction() const;
  inline ::Vector3Info* mutable_direction();
  inline ::Vector3Info* release_direction();
  inline void set_allocated_direction(::Vector3Info* direction);

  // optional int32 sid = 5;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 5;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int32 bid = 6;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 6;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // repeated .CharacterAttr charAttr = 7;
  inline int charattr_size() const;
  inline void clear_charattr();
  static const int kCharAttrFieldNumber = 7;
  inline const ::CharacterAttr& charattr(int index) const;
  inline ::CharacterAttr* mutable_charattr(int index);
  inline ::CharacterAttr* add_charattr();
  inline const ::google::protobuf::RepeatedPtrField< ::CharacterAttr >&
      charattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CharacterAttr >*
      mutable_charattr();

  // optional .ChangeEquipInfo changeEquipInfo = 8;
  inline bool has_changeequipinfo() const;
  inline void clear_changeequipinfo();
  static const int kChangeEquipInfoFieldNumber = 8;
  inline const ::ChangeEquipInfo& changeequipinfo() const;
  inline ::ChangeEquipInfo* mutable_changeequipinfo();
  inline ::ChangeEquipInfo* release_changeequipinfo();
  inline void set_allocated_changeequipinfo(::ChangeEquipInfo* changeequipinfo);

  // optional string interactId = 9;
  inline bool has_interactid() const;
  inline void clear_interactid();
  static const int kInteractIdFieldNumber = 9;
  inline const ::std::string& interactid() const;
  inline void set_interactid(const ::std::string& value);
  inline void set_interactid(const char* value);
  inline void set_interactid(const char* value, size_t size);
  inline ::std::string* mutable_interactid();
  inline ::std::string* release_interactid();
  inline void set_allocated_interactid(::std::string* interactid);

  // optional int32 liveTime = 10;
  inline bool has_livetime() const;
  inline void clear_livetime();
  static const int kLiveTimeFieldNumber = 10;
  inline ::google::protobuf::int32 livetime() const;
  inline void set_livetime(::google::protobuf::int32 value);

  // optional .RedCross redcross = 12;
  inline bool has_redcross() const;
  inline void clear_redcross();
  static const int kRedcrossFieldNumber = 12;
  inline const ::RedCross& redcross() const;
  inline ::RedCross* mutable_redcross();
  inline ::RedCross* release_redcross();
  inline void set_allocated_redcross(::RedCross* redcross);

  // optional int32 horseid = 13;
  inline bool has_horseid() const;
  inline void clear_horseid();
  static const int kHorseidFieldNumber = 13;
  inline ::google::protobuf::int32 horseid() const;
  inline void set_horseid(::google::protobuf::int32 value);

  // optional int32 usehorseflag = 14;
  inline bool has_usehorseflag() const;
  inline void clear_usehorseflag();
  static const int kUsehorseflagFieldNumber = 14;
  inline ::google::protobuf::int32 usehorseflag() const;
  inline void set_usehorseflag(::google::protobuf::int32 value);

  // optional int32 titleid = 15;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleidFieldNumber = 15;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // repeated int64 belongObjId = 16;
  inline int belongobjid_size() const;
  inline void clear_belongobjid();
  static const int kBelongObjIdFieldNumber = 16;
  inline ::google::protobuf::int64 belongobjid(int index) const;
  inline void set_belongobjid(int index, ::google::protobuf::int64 value);
  inline void add_belongobjid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      belongobjid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_belongobjid();

  // optional int32 gemEffect = 17;
  inline bool has_gemeffect() const;
  inline void clear_gemeffect();
  static const int kGemEffectFieldNumber = 17;
  inline ::google::protobuf::int32 gemeffect() const;
  inline void set_gemeffect(::google::protobuf::int32 value);

  // optional .GangInfo gangInfo = 18;
  inline bool has_ganginfo() const;
  inline void clear_ganginfo();
  static const int kGangInfoFieldNumber = 18;
  inline const ::GangInfo& ganginfo() const;
  inline ::GangInfo* mutable_ganginfo();
  inline ::GangInfo* release_ganginfo();
  inline void set_allocated_ganginfo(::GangInfo* ganginfo);

  // optional int32 enterDungeon = 19;
  inline bool has_enterdungeon() const;
  inline void clear_enterdungeon();
  static const int kEnterDungeonFieldNumber = 19;
  inline ::google::protobuf::int32 enterdungeon() const;
  inline void set_enterdungeon(::google::protobuf::int32 value);

  // optional int32 powerEffect = 20;
  inline bool has_powereffect() const;
  inline void clear_powereffect();
  static const int kPowerEffectFieldNumber = 20;
  inline ::google::protobuf::int32 powereffect() const;
  inline void set_powereffect(::google::protobuf::int32 value);

  // optional int32 awakeEffect = 21;
  inline bool has_awakeeffect() const;
  inline void clear_awakeeffect();
  static const int kAwakeEffectFieldNumber = 21;
  inline ::google::protobuf::int32 awakeeffect() const;
  inline void set_awakeeffect(::google::protobuf::int32 value);

  // optional string vipName = 22;
  inline bool has_vipname() const;
  inline void clear_vipname();
  static const int kVipNameFieldNumber = 22;
  inline const ::std::string& vipname() const;
  inline void set_vipname(const ::std::string& value);
  inline void set_vipname(const char* value);
  inline void set_vipname(const char* value, size_t size);
  inline ::std::string* mutable_vipname();
  inline ::std::string* release_vipname();
  inline void set_allocated_vipname(::std::string* vipname);

  // optional .RandomIndexInfo randomIndexInfo = 23;
  inline bool has_randomindexinfo() const;
  inline void clear_randomindexinfo();
  static const int kRandomIndexInfoFieldNumber = 23;
  inline const ::RandomIndexInfo& randomindexinfo() const;
  inline ::RandomIndexInfo* mutable_randomindexinfo();
  inline ::RandomIndexInfo* release_randomindexinfo();
  inline void set_allocated_randomindexinfo(::RandomIndexInfo* randomindexinfo);

  // optional int32 horseEquipEffect = 24;
  inline bool has_horseequipeffect() const;
  inline void clear_horseequipeffect();
  static const int kHorseEquipEffectFieldNumber = 24;
  inline ::google::protobuf::int32 horseequipeffect() const;
  inline void set_horseequipeffect(::google::protobuf::int32 value);

  // optional int32 flowerValue = 25;
  inline bool has_flowervalue() const;
  inline void clear_flowervalue();
  static const int kFlowerValueFieldNumber = 25;
  inline ::google::protobuf::int32 flowervalue() const;
  inline void set_flowervalue(::google::protobuf::int32 value);

  // optional string otherName = 26;
  inline bool has_othername() const;
  inline void clear_othername();
  static const int kOtherNameFieldNumber = 26;
  inline const ::std::string& othername() const;
  inline void set_othername(const ::std::string& value);
  inline void set_othername(const char* value);
  inline void set_othername(const char* value, size_t size);
  inline ::std::string* mutable_othername();
  inline ::std::string* release_othername();
  inline void set_allocated_othername(::std::string* othername);

  // optional int32 otherSex = 27;
  inline bool has_othersex() const;
  inline void clear_othersex();
  static const int kOtherSexFieldNumber = 27;
  inline ::google::protobuf::int32 othersex() const;
  inline void set_othersex(::google::protobuf::int32 value);

  // repeated .Vector3Info roads = 28;
  inline int roads_size() const;
  inline void clear_roads();
  static const int kRoadsFieldNumber = 28;
  inline const ::Vector3Info& roads(int index) const;
  inline ::Vector3Info* mutable_roads(int index);
  inline ::Vector3Info* add_roads();
  inline const ::google::protobuf::RepeatedPtrField< ::Vector3Info >&
      roads() const;
  inline ::google::protobuf::RepeatedPtrField< ::Vector3Info >*
      mutable_roads();

  // optional int64 ownId = 29;
  inline bool has_ownid() const;
  inline void clear_ownid();
  static const int kOwnIdFieldNumber = 29;
  inline ::google::protobuf::int64 ownid() const;
  inline void set_ownid(::google::protobuf::int64 value);

  // repeated .CharacterViewMsg views = 30;
  inline int views_size() const;
  inline void clear_views();
  static const int kViewsFieldNumber = 30;
  inline const ::CharacterViewMsg& views(int index) const;
  inline ::CharacterViewMsg* mutable_views(int index);
  inline ::CharacterViewMsg* add_views();
  inline const ::google::protobuf::RepeatedPtrField< ::CharacterViewMsg >&
      views() const;
  inline ::google::protobuf::RepeatedPtrField< ::CharacterViewMsg >*
      mutable_views();

  // optional int32 catchState = 31;
  inline bool has_catchstate() const;
  inline void clear_catchstate();
  static const int kCatchStateFieldNumber = 31;
  inline ::google::protobuf::int32 catchstate() const;
  inline void set_catchstate(::google::protobuf::int32 value);

  // optional int64 deleteTime = 32;
  inline bool has_deletetime() const;
  inline void clear_deletetime();
  static const int kDeleteTimeFieldNumber = 32;
  inline ::google::protobuf::int64 deletetime() const;
  inline void set_deletetime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CharacterInfo)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_changeequipinfo();
  inline void clear_has_changeequipinfo();
  inline void set_has_interactid();
  inline void clear_has_interactid();
  inline void set_has_livetime();
  inline void clear_has_livetime();
  inline void set_has_redcross();
  inline void clear_has_redcross();
  inline void set_has_horseid();
  inline void clear_has_horseid();
  inline void set_has_usehorseflag();
  inline void clear_has_usehorseflag();
  inline void set_has_titleid();
  inline void clear_has_titleid();
  inline void set_has_gemeffect();
  inline void clear_has_gemeffect();
  inline void set_has_ganginfo();
  inline void clear_has_ganginfo();
  inline void set_has_enterdungeon();
  inline void clear_has_enterdungeon();
  inline void set_has_powereffect();
  inline void clear_has_powereffect();
  inline void set_has_awakeeffect();
  inline void clear_has_awakeeffect();
  inline void set_has_vipname();
  inline void clear_has_vipname();
  inline void set_has_randomindexinfo();
  inline void clear_has_randomindexinfo();
  inline void set_has_horseequipeffect();
  inline void clear_has_horseequipeffect();
  inline void set_has_flowervalue();
  inline void clear_has_flowervalue();
  inline void set_has_othername();
  inline void clear_has_othername();
  inline void set_has_othersex();
  inline void clear_has_othersex();
  inline void set_has_ownid();
  inline void clear_has_ownid();
  inline void set_has_catchstate();
  inline void clear_has_catchstate();
  inline void set_has_deletetime();
  inline void clear_has_deletetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::std::string* charname_;
  ::Vector3Info* pos_;
  ::Vector3Info* direction_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 bid_;
  ::google::protobuf::RepeatedPtrField< ::CharacterAttr > charattr_;
  ::ChangeEquipInfo* changeequipinfo_;
  ::std::string* interactid_;
  ::RedCross* redcross_;
  ::google::protobuf::int32 livetime_;
  ::google::protobuf::int32 horseid_;
  ::google::protobuf::int32 usehorseflag_;
  ::google::protobuf::int32 titleid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > belongobjid_;
  ::GangInfo* ganginfo_;
  ::google::protobuf::int32 gemeffect_;
  ::google::protobuf::int32 enterdungeon_;
  ::google::protobuf::int32 powereffect_;
  ::google::protobuf::int32 awakeeffect_;
  ::std::string* vipname_;
  ::RandomIndexInfo* randomindexinfo_;
  ::google::protobuf::int32 horseequipeffect_;
  ::google::protobuf::int32 flowervalue_;
  ::std::string* othername_;
  ::google::protobuf::RepeatedPtrField< ::Vector3Info > roads_;
  ::google::protobuf::int64 ownid_;
  ::google::protobuf::int32 othersex_;
  ::google::protobuf::int32 catchstate_;
  ::google::protobuf::RepeatedPtrField< ::CharacterViewMsg > views_;
  ::google::protobuf::int64 deletetime_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static CharacterInfo* default_instance_;
};
// -------------------------------------------------------------------

class HorseInfo : public ::google::protobuf::Message {
 public:
  HorseInfo();
  virtual ~HorseInfo();

  HorseInfo(const HorseInfo& from);

  inline HorseInfo& operator=(const HorseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HorseInfo& default_instance();

  void Swap(HorseInfo* other);

  // implements Message ----------------------------------------------

  HorseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HorseInfo& from);
  void MergeFrom(const HorseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tableid = 1;
  inline bool has_tableid() const;
  inline void clear_tableid();
  static const int kTableidFieldNumber = 1;
  inline ::google::protobuf::int32 tableid() const;
  inline void set_tableid(::google::protobuf::int32 value);

  // optional int64 serverid = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 2;
  inline ::google::protobuf::int64 serverid() const;
  inline void set_serverid(::google::protobuf::int64 value);

  // optional int32 isuse = 3;
  inline bool has_isuse() const;
  inline void clear_isuse();
  static const int kIsuseFieldNumber = 3;
  inline ::google::protobuf::int32 isuse() const;
  inline void set_isuse(::google::protobuf::int32 value);

  // optional int32 upstarrate = 4;
  inline bool has_upstarrate() const;
  inline void clear_upstarrate();
  static const int kUpstarrateFieldNumber = 4;
  inline ::google::protobuf::int32 upstarrate() const;
  inline void set_upstarrate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HorseInfo)
 private:
  inline void set_has_tableid();
  inline void clear_has_tableid();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_isuse();
  inline void clear_has_isuse();
  inline void set_has_upstarrate();
  inline void clear_has_upstarrate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 serverid_;
  ::google::protobuf::int32 tableid_;
  ::google::protobuf::int32 isuse_;
  ::google::protobuf::int32 upstarrate_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static HorseInfo* default_instance_;
};
// -------------------------------------------------------------------

class ChangeEquipInfo : public ::google::protobuf::Message {
 public:
  ChangeEquipInfo();
  virtual ~ChangeEquipInfo();

  ChangeEquipInfo(const ChangeEquipInfo& from);

  inline ChangeEquipInfo& operator=(const ChangeEquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeEquipInfo& default_instance();

  void Swap(ChangeEquipInfo* other);

  // implements Message ----------------------------------------------

  ChangeEquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeEquipInfo& from);
  void MergeFrom(const ChangeEquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 hair = 1;
  inline bool has_hair() const;
  inline void clear_hair();
  static const int kHairFieldNumber = 1;
  inline ::google::protobuf::int32 hair() const;
  inline void set_hair(::google::protobuf::int32 value);

  // optional int32 face = 2;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 2;
  inline ::google::protobuf::int32 face() const;
  inline void set_face(::google::protobuf::int32 value);

  // optional int32 weapon = 3;
  inline bool has_weapon() const;
  inline void clear_weapon();
  static const int kWeaponFieldNumber = 3;
  inline ::google::protobuf::int32 weapon() const;
  inline void set_weapon(::google::protobuf::int32 value);

  // optional int32 clothes = 4;
  inline bool has_clothes() const;
  inline void clear_clothes();
  static const int kClothesFieldNumber = 4;
  inline ::google::protobuf::int32 clothes() const;
  inline void set_clothes(::google::protobuf::int32 value);

  // optional int32 fashionClothes = 5;
  inline bool has_fashionclothes() const;
  inline void clear_fashionclothes();
  static const int kFashionClothesFieldNumber = 5;
  inline ::google::protobuf::int32 fashionclothes() const;
  inline void set_fashionclothes(::google::protobuf::int32 value);

  // optional int32 fashionWeapon = 6;
  inline bool has_fashionweapon() const;
  inline void clear_fashionweapon();
  static const int kFashionWeaponFieldNumber = 6;
  inline ::google::protobuf::int32 fashionweapon() const;
  inline void set_fashionweapon(::google::protobuf::int32 value);

  // optional int32 fashionHair = 7;
  inline bool has_fashionhair() const;
  inline void clear_fashionhair();
  static const int kFashionHairFieldNumber = 7;
  inline ::google::protobuf::int32 fashionhair() const;
  inline void set_fashionhair(::google::protobuf::int32 value);

  // optional int32 isview = 8;
  inline bool has_isview() const;
  inline void clear_isview();
  static const int kIsviewFieldNumber = 8;
  inline ::google::protobuf::int32 isview() const;
  inline void set_isview(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChangeEquipInfo)
 private:
  inline void set_has_hair();
  inline void clear_has_hair();
  inline void set_has_face();
  inline void clear_has_face();
  inline void set_has_weapon();
  inline void clear_has_weapon();
  inline void set_has_clothes();
  inline void clear_has_clothes();
  inline void set_has_fashionclothes();
  inline void clear_has_fashionclothes();
  inline void set_has_fashionweapon();
  inline void clear_has_fashionweapon();
  inline void set_has_fashionhair();
  inline void clear_has_fashionhair();
  inline void set_has_isview();
  inline void clear_has_isview();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 hair_;
  ::google::protobuf::int32 face_;
  ::google::protobuf::int32 weapon_;
  ::google::protobuf::int32 clothes_;
  ::google::protobuf::int32 fashionclothes_;
  ::google::protobuf::int32 fashionweapon_;
  ::google::protobuf::int32 fashionhair_;
  ::google::protobuf::int32 isview_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static ChangeEquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class PlayerFashion : public ::google::protobuf::Message {
 public:
  PlayerFashion();
  virtual ~PlayerFashion();

  PlayerFashion(const PlayerFashion& from);

  inline PlayerFashion& operator=(const PlayerFashion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerFashion& default_instance();

  void Swap(PlayerFashion* other);

  // implements Message ----------------------------------------------

  PlayerFashion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerFashion& from);
  void MergeFrom(const PlayerFashion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tableid = 1;
  inline bool has_tableid() const;
  inline void clear_tableid();
  static const int kTableidFieldNumber = 1;
  inline ::google::protobuf::int32 tableid() const;
  inline void set_tableid(::google::protobuf::int32 value);

  // optional int64 serverid = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 2;
  inline ::google::protobuf::int64 serverid() const;
  inline void set_serverid(::google::protobuf::int64 value);

  // optional int64 invalidtime = 3;
  inline bool has_invalidtime() const;
  inline void clear_invalidtime();
  static const int kInvalidtimeFieldNumber = 3;
  inline ::google::protobuf::int64 invalidtime() const;
  inline void set_invalidtime(::google::protobuf::int64 value);

  // optional int32 timetype = 4;
  inline bool has_timetype() const;
  inline void clear_timetype();
  static const int kTimetypeFieldNumber = 4;
  inline ::google::protobuf::int32 timetype() const;
  inline void set_timetype(::google::protobuf::int32 value);

  // optional int32 isuser = 5;
  inline bool has_isuser() const;
  inline void clear_isuser();
  static const int kIsuserFieldNumber = 5;
  inline ::google::protobuf::int32 isuser() const;
  inline void set_isuser(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerFashion)
 private:
  inline void set_has_tableid();
  inline void clear_has_tableid();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_invalidtime();
  inline void clear_has_invalidtime();
  inline void set_has_timetype();
  inline void clear_has_timetype();
  inline void set_has_isuser();
  inline void clear_has_isuser();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 serverid_;
  ::google::protobuf::int32 tableid_;
  ::google::protobuf::int32 timetype_;
  ::google::protobuf::int64 invalidtime_;
  ::google::protobuf::int32 isuser_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerFashion* default_instance_;
};
// -------------------------------------------------------------------

class RedCross : public ::google::protobuf::Message {
 public:
  RedCross();
  virtual ~RedCross();

  RedCross(const RedCross& from);

  inline RedCross& operator=(const RedCross& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedCross& default_instance();

  void Swap(RedCross* other);

  // implements Message ----------------------------------------------

  RedCross* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RedCross& from);
  void MergeFrom(const RedCross& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 redcrossmaxhp = 1;
  inline bool has_redcrossmaxhp() const;
  inline void clear_redcrossmaxhp();
  static const int kRedcrossmaxhpFieldNumber = 1;
  inline ::google::protobuf::int64 redcrossmaxhp() const;
  inline void set_redcrossmaxhp(::google::protobuf::int64 value);

  // optional int64 redcrosshp = 2;
  inline bool has_redcrosshp() const;
  inline void clear_redcrosshp();
  static const int kRedcrosshpFieldNumber = 2;
  inline ::google::protobuf::int64 redcrosshp() const;
  inline void set_redcrosshp(::google::protobuf::int64 value);

  // optional int64 redcrossmaxmp = 3;
  inline bool has_redcrossmaxmp() const;
  inline void clear_redcrossmaxmp();
  static const int kRedcrossmaxmpFieldNumber = 3;
  inline ::google::protobuf::int64 redcrossmaxmp() const;
  inline void set_redcrossmaxmp(::google::protobuf::int64 value);

  // optional int64 redcrossmp = 4;
  inline bool has_redcrossmp() const;
  inline void clear_redcrossmp();
  static const int kRedcrossmpFieldNumber = 4;
  inline ::google::protobuf::int64 redcrossmp() const;
  inline void set_redcrossmp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RedCross)
 private:
  inline void set_has_redcrossmaxhp();
  inline void clear_has_redcrossmaxhp();
  inline void set_has_redcrosshp();
  inline void clear_has_redcrosshp();
  inline void set_has_redcrossmaxmp();
  inline void clear_has_redcrossmaxmp();
  inline void set_has_redcrossmp();
  inline void clear_has_redcrossmp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 redcrossmaxhp_;
  ::google::protobuf::int64 redcrosshp_;
  ::google::protobuf::int64 redcrossmaxmp_;
  ::google::protobuf::int64 redcrossmp_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static RedCross* default_instance_;
};
// -------------------------------------------------------------------

class CharacterAttr : public ::google::protobuf::Message {
 public:
  CharacterAttr();
  virtual ~CharacterAttr();

  CharacterAttr(const CharacterAttr& from);

  inline CharacterAttr& operator=(const CharacterAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterAttr& default_instance();

  void Swap(CharacterAttr* other);

  // implements Message ----------------------------------------------

  CharacterAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterAttr& from);
  void MergeFrom(const CharacterAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 attrkey = 1;
  inline bool has_attrkey() const;
  inline void clear_attrkey();
  static const int kAttrkeyFieldNumber = 1;
  inline ::google::protobuf::int32 attrkey() const;
  inline void set_attrkey(::google::protobuf::int32 value);

  // optional int64 attrvalue = 2;
  inline bool has_attrvalue() const;
  inline void clear_attrvalue();
  static const int kAttrvalueFieldNumber = 2;
  inline ::google::protobuf::int64 attrvalue() const;
  inline void set_attrvalue(::google::protobuf::int64 value);

  // optional int32 viewflag = 3;
  inline bool has_viewflag() const;
  inline void clear_viewflag();
  static const int kViewflagFieldNumber = 3;
  inline ::google::protobuf::int32 viewflag() const;
  inline void set_viewflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharacterAttr)
 private:
  inline void set_has_attrkey();
  inline void clear_has_attrkey();
  inline void set_has_attrvalue();
  inline void clear_has_attrvalue();
  inline void set_has_viewflag();
  inline void clear_has_viewflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 attrvalue_;
  ::google::protobuf::int32 attrkey_;
  ::google::protobuf::int32 viewflag_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static CharacterAttr* default_instance_;
};
// -------------------------------------------------------------------

class PetAttr : public ::google::protobuf::Message {
 public:
  PetAttr();
  virtual ~PetAttr();

  PetAttr(const PetAttr& from);

  inline PetAttr& operator=(const PetAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetAttr& default_instance();

  void Swap(PetAttr* other);

  // implements Message ----------------------------------------------

  PetAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetAttr& from);
  void MergeFrom(const PetAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 attrkey = 1;
  inline bool has_attrkey() const;
  inline void clear_attrkey();
  static const int kAttrkeyFieldNumber = 1;
  inline ::google::protobuf::int32 attrkey() const;
  inline void set_attrkey(::google::protobuf::int32 value);

  // optional int32 attrvalue = 2;
  inline bool has_attrvalue() const;
  inline void clear_attrvalue();
  static const int kAttrvalueFieldNumber = 2;
  inline ::google::protobuf::int32 attrvalue() const;
  inline void set_attrvalue(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PetAttr)
 private:
  inline void set_has_attrkey();
  inline void clear_has_attrkey();
  inline void set_has_attrvalue();
  inline void clear_has_attrvalue();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 attrkey_;
  ::google::protobuf::int32 attrvalue_;
  ::google::protobuf::int32 num_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static PetAttr* default_instance_;
};
// -------------------------------------------------------------------

class PetInfo : public ::google::protobuf::Message {
 public:
  PetInfo();
  virtual ~PetInfo();

  PetInfo(const PetInfo& from);

  inline PetInfo& operator=(const PetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetInfo& default_instance();

  void Swap(PetInfo* other);

  // implements Message ----------------------------------------------

  PetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetInfo& from);
  void MergeFrom(const PetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 sex = 3;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 3;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);

  // optional int32 quality = 4;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 4;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 character = 5;
  inline bool has_character() const;
  inline void clear_character();
  static const int kCharacterFieldNumber = 5;
  inline ::google::protobuf::int32 character() const;
  inline void set_character(::google::protobuf::int32 value);

  // optional int32 battleflag = 6;
  inline bool has_battleflag() const;
  inline void clear_battleflag();
  static const int kBattleflagFieldNumber = 6;
  inline ::google::protobuf::int32 battleflag() const;
  inline void set_battleflag(::google::protobuf::int32 value);

  // optional int32 petGrow = 7;
  inline bool has_petgrow() const;
  inline void clear_petgrow();
  static const int kPetGrowFieldNumber = 7;
  inline ::google::protobuf::int32 petgrow() const;
  inline void set_petgrow(::google::protobuf::int32 value);

  // optional int32 starlevel = 8;
  inline bool has_starlevel() const;
  inline void clear_starlevel();
  static const int kStarlevelFieldNumber = 8;
  inline ::google::protobuf::int32 starlevel() const;
  inline void set_starlevel(::google::protobuf::int32 value);

  // optional int32 level = 9;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 9;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int64 petId = 10;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetIdFieldNumber = 10;
  inline ::google::protobuf::int64 petid() const;
  inline void set_petid(::google::protobuf::int64 value);

  // repeated .PetAttr petAttr = 11;
  inline int petattr_size() const;
  inline void clear_petattr();
  static const int kPetAttrFieldNumber = 11;
  inline const ::PetAttr& petattr(int index) const;
  inline ::PetAttr* mutable_petattr(int index);
  inline ::PetAttr* add_petattr();
  inline const ::google::protobuf::RepeatedPtrField< ::PetAttr >&
      petattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::PetAttr >*
      mutable_petattr();

  // repeated .PetAttr petAttrDown = 12;
  inline int petattrdown_size() const;
  inline void clear_petattrdown();
  static const int kPetAttrDownFieldNumber = 12;
  inline const ::PetAttr& petattrdown(int index) const;
  inline ::PetAttr* mutable_petattrdown(int index);
  inline ::PetAttr* add_petattrdown();
  inline const ::google::protobuf::RepeatedPtrField< ::PetAttr >&
      petattrdown() const;
  inline ::google::protobuf::RepeatedPtrField< ::PetAttr >*
      mutable_petattrdown();

  // repeated .SkillItemData skilldata = 13;
  inline int skilldata_size() const;
  inline void clear_skilldata();
  static const int kSkilldataFieldNumber = 13;
  inline const ::SkillItemData& skilldata(int index) const;
  inline ::SkillItemData* mutable_skilldata(int index);
  inline ::SkillItemData* add_skilldata();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillItemData >&
      skilldata() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillItemData >*
      mutable_skilldata();

  // optional int64 objid = 14;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjidFieldNumber = 14;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PetInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_character();
  inline void clear_has_character();
  inline void set_has_battleflag();
  inline void clear_has_battleflag();
  inline void set_has_petgrow();
  inline void clear_has_petgrow();
  inline void set_has_starlevel();
  inline void clear_has_starlevel();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 character_;
  ::google::protobuf::int32 battleflag_;
  ::google::protobuf::int32 petgrow_;
  ::google::protobuf::int32 starlevel_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int64 petid_;
  ::google::protobuf::RepeatedPtrField< ::PetAttr > petattr_;
  ::google::protobuf::RepeatedPtrField< ::PetAttr > petattrdown_;
  ::google::protobuf::RepeatedPtrField< ::SkillItemData > skilldata_;
  ::google::protobuf::int64 objid_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static PetInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCChangeAttribute : public ::google::protobuf::Message {
 public:
  GCChangeAttribute();
  virtual ~GCChangeAttribute();

  GCChangeAttribute(const GCChangeAttribute& from);

  inline GCChangeAttribute& operator=(const GCChangeAttribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCChangeAttribute& default_instance();

  void Swap(GCChangeAttribute* other);

  // implements Message ----------------------------------------------

  GCChangeAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCChangeAttribute& from);
  void MergeFrom(const GCChangeAttribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 bid = 3;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 3;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // optional int32 sid = 4;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 4;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional string interactId = 5;
  inline bool has_interactid() const;
  inline void clear_interactid();
  static const int kInteractIdFieldNumber = 5;
  inline const ::std::string& interactid() const;
  inline void set_interactid(const ::std::string& value);
  inline void set_interactid(const char* value);
  inline void set_interactid(const char* value, size_t size);
  inline ::std::string* mutable_interactid();
  inline ::std::string* release_interactid();
  inline void set_allocated_interactid(::std::string* interactid);

  // optional .CharacterInfo info = 6;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 6;
  inline const ::CharacterInfo& info() const;
  inline ::CharacterInfo* mutable_info();
  inline ::CharacterInfo* release_info();
  inline void set_allocated_info(::CharacterInfo* info);

  // @@protoc_insertion_point(class_scope:GCChangeAttribute)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_interactid();
  inline void clear_has_interactid();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 bid_;
  ::std::string* interactid_;
  ::CharacterInfo* info_;
  ::google::protobuf::int32 sid_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCChangeAttribute* default_instance_;
};
// -------------------------------------------------------------------

class GCErroeHintBack : public ::google::protobuf::Message {
 public:
  GCErroeHintBack();
  virtual ~GCErroeHintBack();

  GCErroeHintBack(const GCErroeHintBack& from);

  inline GCErroeHintBack& operator=(const GCErroeHintBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCErroeHintBack& default_instance();

  void Swap(GCErroeHintBack* other);

  // implements Message ----------------------------------------------

  GCErroeHintBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCErroeHintBack& from);
  void MergeFrom(const GCErroeHintBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 errorCode = 1;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);

  // optional string errorDesc = 2;
  inline bool has_errordesc() const;
  inline void clear_errordesc();
  static const int kErrorDescFieldNumber = 2;
  inline const ::std::string& errordesc() const;
  inline void set_errordesc(const ::std::string& value);
  inline void set_errordesc(const char* value);
  inline void set_errordesc(const char* value, size_t size);
  inline ::std::string* mutable_errordesc();
  inline ::std::string* release_errordesc();
  inline void set_allocated_errordesc(::std::string* errordesc);

  // repeated string parm = 3;
  inline int parm_size() const;
  inline void clear_parm();
  static const int kParmFieldNumber = 3;
  inline const ::std::string& parm(int index) const;
  inline ::std::string* mutable_parm(int index);
  inline void set_parm(int index, const ::std::string& value);
  inline void set_parm(int index, const char* value);
  inline void set_parm(int index, const char* value, size_t size);
  inline ::std::string* add_parm();
  inline void add_parm(const ::std::string& value);
  inline void add_parm(const char* value);
  inline void add_parm(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& parm() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_parm();

  // optional int32 boxType = 4;
  inline bool has_boxtype() const;
  inline void clear_boxtype();
  static const int kBoxTypeFieldNumber = 4;
  inline ::google::protobuf::int32 boxtype() const;
  inline void set_boxtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCErroeHintBack)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_errordesc();
  inline void clear_has_errordesc();
  inline void set_has_boxtype();
  inline void clear_has_boxtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* errordesc_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 boxtype_;
  ::google::protobuf::RepeatedPtrField< ::std::string> parm_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCErroeHintBack* default_instance_;
};
// -------------------------------------------------------------------

class DeviceInfo : public ::google::protobuf::Message {
 public:
  DeviceInfo();
  virtual ~DeviceInfo();

  DeviceInfo(const DeviceInfo& from);

  inline DeviceInfo& operator=(const DeviceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceInfo& default_instance();

  void Swap(DeviceInfo* other);

  // implements Message ----------------------------------------------

  DeviceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeviceInfo& from);
  void MergeFrom(const DeviceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // optional .Vector3Info pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::Vector3Info& pos() const;
  inline ::Vector3Info* mutable_pos();
  inline ::Vector3Info* release_pos();
  inline void set_allocated_pos(::Vector3Info* pos);

  // optional int32 bid = 3;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 3;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // optional int32 sid = 4;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 4;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int32 deviceType = 5;
  inline bool has_devicetype() const;
  inline void clear_devicetype();
  static const int kDeviceTypeFieldNumber = 5;
  inline ::google::protobuf::int32 devicetype() const;
  inline void set_devicetype(::google::protobuf::int32 value);

  // optional int32 num = 6;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 6;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 status = 7;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 7;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional .Vector3Info srcPos = 8;
  inline bool has_srcpos() const;
  inline void clear_srcpos();
  static const int kSrcPosFieldNumber = 8;
  inline const ::Vector3Info& srcpos() const;
  inline ::Vector3Info* mutable_srcpos();
  inline ::Vector3Info* release_srcpos();
  inline void set_allocated_srcpos(::Vector3Info* srcpos);

  // optional int32 camp = 9;
  inline bool has_camp() const;
  inline void clear_camp();
  static const int kCampFieldNumber = 9;
  inline ::google::protobuf::int32 camp() const;
  inline void set_camp(::google::protobuf::int32 value);

  // optional int32 isCurrency = 10;
  inline bool has_iscurrency() const;
  inline void clear_iscurrency();
  static const int kIsCurrencyFieldNumber = 10;
  inline ::google::protobuf::int32 iscurrency() const;
  inline void set_iscurrency(::google::protobuf::int32 value);

  // optional string str = 11;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 11;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // optional .Vector3Info direction = 12;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 12;
  inline const ::Vector3Info& direction() const;
  inline ::Vector3Info* mutable_direction();
  inline ::Vector3Info* release_direction();
  inline void set_allocated_direction(::Vector3Info* direction);

  // @@protoc_insertion_point(class_scope:DeviceInfo)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_devicetype();
  inline void clear_has_devicetype();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_srcpos();
  inline void clear_has_srcpos();
  inline void set_has_camp();
  inline void clear_has_camp();
  inline void set_has_iscurrency();
  inline void clear_has_iscurrency();
  inline void set_has_str();
  inline void clear_has_str();
  inline void set_has_direction();
  inline void clear_has_direction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::Vector3Info* pos_;
  ::google::protobuf::int32 bid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 devicetype_;
  ::google::protobuf::int32 num_;
  ::Vector3Info* srcpos_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 camp_;
  ::std::string* str_;
  ::Vector3Info* direction_;
  ::google::protobuf::int32 iscurrency_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static DeviceInfo* default_instance_;
};
// -------------------------------------------------------------------

class Achievement : public ::google::protobuf::Message {
 public:
  Achievement();
  virtual ~Achievement();

  Achievement(const Achievement& from);

  inline Achievement& operator=(const Achievement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Achievement& default_instance();

  void Swap(Achievement* other);

  // implements Message ----------------------------------------------

  Achievement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Achievement& from);
  void MergeFrom(const Achievement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 isover = 2;
  inline bool has_isover() const;
  inline void clear_isover();
  static const int kIsoverFieldNumber = 2;
  inline ::google::protobuf::int32 isover() const;
  inline void set_isover(::google::protobuf::int32 value);

  // optional int32 isget = 3;
  inline bool has_isget() const;
  inline void clear_isget();
  static const int kIsgetFieldNumber = 3;
  inline ::google::protobuf::int32 isget() const;
  inline void set_isget(::google::protobuf::int32 value);

  // optional int64 value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // optional int64 getachievetime = 5;
  inline bool has_getachievetime() const;
  inline void clear_getachievetime();
  static const int kGetachievetimeFieldNumber = 5;
  inline ::google::protobuf::int64 getachievetime() const;
  inline void set_getachievetime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Achievement)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_isover();
  inline void clear_has_isover();
  inline void set_has_isget();
  inline void clear_has_isget();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_getachievetime();
  inline void clear_has_getachievetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 isover_;
  ::google::protobuf::int64 value_;
  ::google::protobuf::int64 getachievetime_;
  ::google::protobuf::int32 isget_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static Achievement* default_instance_;
};
// -------------------------------------------------------------------

class Titlel : public ::google::protobuf::Message {
 public:
  Titlel();
  virtual ~Titlel();

  Titlel(const Titlel& from);

  inline Titlel& operator=(const Titlel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Titlel& default_instance();

  void Swap(Titlel* other);

  // implements Message ----------------------------------------------

  Titlel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Titlel& from);
  void MergeFrom(const Titlel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int64 endtime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Titlel)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static Titlel* default_instance_;
};
// -------------------------------------------------------------------

class TrapData : public ::google::protobuf::Message {
 public:
  TrapData();
  virtual ~TrapData();

  TrapData(const TrapData& from);

  inline TrapData& operator=(const TrapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrapData& default_instance();

  void Swap(TrapData* other);

  // implements Message ----------------------------------------------

  TrapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrapData& from);
  void MergeFrom(const TrapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // optional int32 sid = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // repeated .TrapItemData items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::TrapItemData& items(int index) const;
  inline ::TrapItemData* mutable_items(int index);
  inline ::TrapItemData* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::TrapItemData >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::TrapItemData >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:TrapData)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_sid();
  inline void clear_has_sid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::google::protobuf::RepeatedPtrField< ::TrapItemData > items_;
  ::google::protobuf::int32 sid_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static TrapData* default_instance_;
};
// -------------------------------------------------------------------

class TrapItemData : public ::google::protobuf::Message {
 public:
  TrapItemData();
  virtual ~TrapItemData();

  TrapItemData(const TrapItemData& from);

  inline TrapItemData& operator=(const TrapItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrapItemData& default_instance();

  void Swap(TrapItemData* other);

  // implements Message ----------------------------------------------

  TrapItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrapItemData& from);
  void MergeFrom(const TrapItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // optional int32 sid = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional .Vector3Info pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::Vector3Info& pos() const;
  inline ::Vector3Info* mutable_pos();
  inline ::Vector3Info* release_pos();
  inline void set_allocated_pos(::Vector3Info* pos);

  // optional .Vector3Info dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline const ::Vector3Info& dir() const;
  inline ::Vector3Info* mutable_dir();
  inline ::Vector3Info* release_dir();
  inline void set_allocated_dir(::Vector3Info* dir);

  // @@protoc_insertion_point(class_scope:TrapItemData)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::Vector3Info* pos_;
  ::Vector3Info* dir_;
  ::google::protobuf::int32 sid_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static TrapItemData* default_instance_;
};
// -------------------------------------------------------------------

class VipData : public ::google::protobuf::Message {
 public:
  VipData();
  virtual ~VipData();

  VipData(const VipData& from);

  inline VipData& operator=(const VipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipData& default_instance();

  void Swap(VipData* other);

  // implements Message ----------------------------------------------

  VipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipData& from);
  void MergeFrom(const VipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 viplevel = 1;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 1;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // optional int32 getflag = 2;
  inline bool has_getflag() const;
  inline void clear_getflag();
  static const int kGetflagFieldNumber = 2;
  inline ::google::protobuf::int32 getflag() const;
  inline void set_getflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:VipData)
 private:
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_getflag();
  inline void clear_has_getflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 viplevel_;
  ::google::protobuf::int32 getflag_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static VipData* default_instance_;
};
// -------------------------------------------------------------------

class GangInfo : public ::google::protobuf::Message {
 public:
  GangInfo();
  virtual ~GangInfo();

  GangInfo(const GangInfo& from);

  inline GangInfo& operator=(const GangInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GangInfo& default_instance();

  void Swap(GangInfo* other);

  // implements Message ----------------------------------------------

  GangInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GangInfo& from);
  void MergeFrom(const GangInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 gangId = 1;
  inline bool has_gangid() const;
  inline void clear_gangid();
  static const int kGangIdFieldNumber = 1;
  inline ::google::protobuf::int64 gangid() const;
  inline void set_gangid(::google::protobuf::int64 value);

  // optional string gangName = 2;
  inline bool has_gangname() const;
  inline void clear_gangname();
  static const int kGangNameFieldNumber = 2;
  inline const ::std::string& gangname() const;
  inline void set_gangname(const ::std::string& value);
  inline void set_gangname(const char* value);
  inline void set_gangname(const char* value, size_t size);
  inline ::std::string* mutable_gangname();
  inline ::std::string* release_gangname();
  inline void set_allocated_gangname(::std::string* gangname);

  // optional string totemName = 3;
  inline bool has_totemname() const;
  inline void clear_totemname();
  static const int kTotemNameFieldNumber = 3;
  inline const ::std::string& totemname() const;
  inline void set_totemname(const ::std::string& value);
  inline void set_totemname(const char* value);
  inline void set_totemname(const char* value, size_t size);
  inline ::std::string* mutable_totemname();
  inline ::std::string* release_totemname();
  inline void set_allocated_totemname(::std::string* totemname);

  // optional int32 gangJob = 4;
  inline bool has_gangjob() const;
  inline void clear_gangjob();
  static const int kGangJobFieldNumber = 4;
  inline ::google::protobuf::int32 gangjob() const;
  inline void set_gangjob(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GangInfo)
 private:
  inline void set_has_gangid();
  inline void clear_has_gangid();
  inline void set_has_gangname();
  inline void clear_has_gangname();
  inline void set_has_totemname();
  inline void clear_has_totemname();
  inline void set_has_gangjob();
  inline void clear_has_gangjob();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 gangid_;
  ::std::string* gangname_;
  ::std::string* totemname_;
  ::google::protobuf::int32 gangjob_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static GangInfo* default_instance_;
};
// -------------------------------------------------------------------

class FriendData : public ::google::protobuf::Message {
 public:
  FriendData();
  virtual ~FriendData();

  FriendData(const FriendData& from);

  inline FriendData& operator=(const FriendData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendData& default_instance();

  void Swap(FriendData* other);

  // implements Message ----------------------------------------------

  FriendData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendData& from);
  void MergeFrom(const FriendData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // optional string address = 2;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 2;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  inline ::std::string* release_address();
  inline void set_allocated_address(::std::string* address);

  // optional int32 online = 3;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 3;
  inline ::google::protobuf::int32 online() const;
  inline void set_online(::google::protobuf::int32 value);

  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 career = 5;
  inline bool has_career() const;
  inline void clear_career();
  static const int kCareerFieldNumber = 5;
  inline ::google::protobuf::int32 career() const;
  inline void set_career(::google::protobuf::int32 value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 sex = 8;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 8;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);

  // optional int32 vip = 9;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 9;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FriendData)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_career();
  inline void clear_has_career();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_vip();
  inline void clear_has_vip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::std::string* address_;
  ::google::protobuf::int32 online_;
  ::google::protobuf::int32 type_;
  ::std::string* name_;
  ::google::protobuf::int32 career_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 vip_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static FriendData* default_instance_;
};
// -------------------------------------------------------------------

class PersonalMessagees : public ::google::protobuf::Message {
 public:
  PersonalMessagees();
  virtual ~PersonalMessagees();

  PersonalMessagees(const PersonalMessagees& from);

  inline PersonalMessagees& operator=(const PersonalMessagees& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PersonalMessagees& default_instance();

  void Swap(PersonalMessagees* other);

  // implements Message ----------------------------------------------

  PersonalMessagees* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PersonalMessagees& from);
  void MergeFrom(const PersonalMessagees& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 objId = 2;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 2;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:PersonalMessagees)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::std::string* name_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static PersonalMessagees* default_instance_;
};
// -------------------------------------------------------------------

class GCCmmonDialog : public ::google::protobuf::Message {
 public:
  GCCmmonDialog();
  virtual ~GCCmmonDialog();

  GCCmmonDialog(const GCCmmonDialog& from);

  inline GCCmmonDialog& operator=(const GCCmmonDialog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCmmonDialog& default_instance();

  void Swap(GCCmmonDialog* other);

  // implements Message ----------------------------------------------

  GCCmmonDialog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCmmonDialog& from);
  void MergeFrom(const GCCmmonDialog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated string contents = 2;
  inline int contents_size() const;
  inline void clear_contents();
  static const int kContentsFieldNumber = 2;
  inline const ::std::string& contents(int index) const;
  inline ::std::string* mutable_contents(int index);
  inline void set_contents(int index, const ::std::string& value);
  inline void set_contents(int index, const char* value);
  inline void set_contents(int index, const char* value, size_t size);
  inline ::std::string* add_contents();
  inline void add_contents(const ::std::string& value);
  inline void add_contents(const char* value);
  inline void add_contents(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& contents() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_contents();

  // @@protoc_insertion_point(class_scope:GCCmmonDialog)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> contents_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCmmonDialog* default_instance_;
};
// -------------------------------------------------------------------

class SkillAttackRelation : public ::google::protobuf::Message {
 public:
  SkillAttackRelation();
  virtual ~SkillAttackRelation();

  SkillAttackRelation(const SkillAttackRelation& from);

  inline SkillAttackRelation& operator=(const SkillAttackRelation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillAttackRelation& default_instance();

  void Swap(SkillAttackRelation* other);

  // implements Message ----------------------------------------------

  SkillAttackRelation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillAttackRelation& from);
  void MergeFrom(const SkillAttackRelation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // optional int32 relation = 2;
  inline bool has_relation() const;
  inline void clear_relation();
  static const int kRelationFieldNumber = 2;
  inline ::google::protobuf::int32 relation() const;
  inline void set_relation(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SkillAttackRelation)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_relation();
  inline void clear_has_relation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::google::protobuf::int32 relation_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static SkillAttackRelation* default_instance_;
};
// -------------------------------------------------------------------

class GCSendAddExp : public ::google::protobuf::Message {
 public:
  GCSendAddExp();
  virtual ~GCSendAddExp();

  GCSendAddExp(const GCSendAddExp& from);

  inline GCSendAddExp& operator=(const GCSendAddExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendAddExp& default_instance();

  void Swap(GCSendAddExp* other);

  // implements Message ----------------------------------------------

  GCSendAddExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendAddExp& from);
  void MergeFrom(const GCSendAddExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bid = 1;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 1;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // optional int64 sid = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 2;
  inline ::google::protobuf::int64 sid() const;
  inline void set_sid(::google::protobuf::int64 value);

  // optional int32 addExp = 3;
  inline bool has_addexp() const;
  inline void clear_addexp();
  static const int kAddExpFieldNumber = 3;
  inline ::google::protobuf::int32 addexp() const;
  inline void set_addexp(::google::protobuf::int32 value);

  // optional int32 source = 4;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 4;
  inline ::google::protobuf::int32 source() const;
  inline void set_source(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCSendAddExp)
 private:
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_addexp();
  inline void clear_has_addexp();
  inline void set_has_source();
  inline void clear_has_source();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 sid_;
  ::google::protobuf::int32 bid_;
  ::google::protobuf::int32 addexp_;
  ::google::protobuf::int32 source_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendAddExp* default_instance_;
};
// -------------------------------------------------------------------

class GCAddVerifyBox : public ::google::protobuf::Message {
 public:
  GCAddVerifyBox();
  virtual ~GCAddVerifyBox();

  GCAddVerifyBox(const GCAddVerifyBox& from);

  inline GCAddVerifyBox& operator=(const GCAddVerifyBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCAddVerifyBox& default_instance();

  void Swap(GCAddVerifyBox* other);

  // implements Message ----------------------------------------------

  GCAddVerifyBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCAddVerifyBox& from);
  void MergeFrom(const GCAddVerifyBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 operate = 2;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 2;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // repeated string params = 4;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 4;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // optional int32 messageID = 5;
  inline bool has_messageid() const;
  inline void clear_messageid();
  static const int kMessageIDFieldNumber = 5;
  inline ::google::protobuf::int32 messageid() const;
  inline void set_messageid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCAddVerifyBox)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_messageid();
  inline void clear_has_messageid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 messageid_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCAddVerifyBox* default_instance_;
};
// -------------------------------------------------------------------

class CGVerifyBoxResult : public ::google::protobuf::Message {
 public:
  CGVerifyBoxResult();
  virtual ~CGVerifyBoxResult();

  CGVerifyBoxResult(const CGVerifyBoxResult& from);

  inline CGVerifyBoxResult& operator=(const CGVerifyBoxResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGVerifyBoxResult& default_instance();

  void Swap(CGVerifyBoxResult* other);

  // implements Message ----------------------------------------------

  CGVerifyBoxResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGVerifyBoxResult& from);
  void MergeFrom(const CGVerifyBoxResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 operate = 2;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 2;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // repeated string params = 3;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 3;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // @@protoc_insertion_point(class_scope:CGVerifyBoxResult)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_operate();
  inline void clear_has_operate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGVerifyBoxResult* default_instance_;
};
// -------------------------------------------------------------------

class GCCharacterTalk : public ::google::protobuf::Message {
 public:
  GCCharacterTalk();
  virtual ~GCCharacterTalk();

  GCCharacterTalk(const GCCharacterTalk& from);

  inline GCCharacterTalk& operator=(const GCCharacterTalk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCharacterTalk& default_instance();

  void Swap(GCCharacterTalk* other);

  // implements Message ----------------------------------------------

  GCCharacterTalk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCharacterTalk& from);
  void MergeFrom(const GCCharacterTalk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // optional int32 talkWord = 2;
  inline bool has_talkword() const;
  inline void clear_talkword();
  static const int kTalkWordFieldNumber = 2;
  inline ::google::protobuf::int32 talkword() const;
  inline void set_talkword(::google::protobuf::int32 value);

  // optional int32 talkVoice = 3;
  inline bool has_talkvoice() const;
  inline void clear_talkvoice();
  static const int kTalkVoiceFieldNumber = 3;
  inline ::google::protobuf::int32 talkvoice() const;
  inline void set_talkvoice(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCCharacterTalk)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_talkword();
  inline void clear_has_talkword();
  inline void set_has_talkvoice();
  inline void clear_has_talkvoice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::google::protobuf::int32 talkword_;
  ::google::protobuf::int32 talkvoice_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCharacterTalk* default_instance_;
};
// -------------------------------------------------------------------

class GGDungeonChangeScene : public ::google::protobuf::Message {
 public:
  GGDungeonChangeScene();
  virtual ~GGDungeonChangeScene();

  GGDungeonChangeScene(const GGDungeonChangeScene& from);

  inline GGDungeonChangeScene& operator=(const GGDungeonChangeScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GGDungeonChangeScene& default_instance();

  void Swap(GGDungeonChangeScene* other);

  // implements Message ----------------------------------------------

  GGDungeonChangeScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GGDungeonChangeScene& from);
  void MergeFrom(const GGDungeonChangeScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 instanceId = 3;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 3;
  inline ::google::protobuf::int32 instanceid() const;
  inline void set_instanceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GGDungeonChangeScene)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 instanceid_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static GGDungeonChangeScene* default_instance_;
};
// -------------------------------------------------------------------

class RandomIndexInfo : public ::google::protobuf::Message {
 public:
  RandomIndexInfo();
  virtual ~RandomIndexInfo();

  RandomIndexInfo(const RandomIndexInfo& from);

  inline RandomIndexInfo& operator=(const RandomIndexInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RandomIndexInfo& default_instance();

  void Swap(RandomIndexInfo* other);

  // implements Message ----------------------------------------------

  RandomIndexInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RandomIndexInfo& from);
  void MergeFrom(const RandomIndexInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 randomIndexHitChances = 1;
  inline bool has_randomindexhitchances() const;
  inline void clear_randomindexhitchances();
  static const int kRandomIndexHitChancesFieldNumber = 1;
  inline ::google::protobuf::int32 randomindexhitchances() const;
  inline void set_randomindexhitchances(::google::protobuf::int32 value);

  // optional int32 randomIndexCrit = 2;
  inline bool has_randomindexcrit() const;
  inline void clear_randomindexcrit();
  static const int kRandomIndexCritFieldNumber = 2;
  inline ::google::protobuf::int32 randomindexcrit() const;
  inline void set_randomindexcrit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RandomIndexInfo)
 private:
  inline void set_has_randomindexhitchances();
  inline void clear_has_randomindexhitchances();
  inline void set_has_randomindexcrit();
  inline void clear_has_randomindexcrit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 randomindexhitchances_;
  ::google::protobuf::int32 randomindexcrit_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static RandomIndexInfo* default_instance_;
};
// -------------------------------------------------------------------

class Iteminfo : public ::google::protobuf::Message {
 public:
  Iteminfo();
  virtual ~Iteminfo();

  Iteminfo(const Iteminfo& from);

  inline Iteminfo& operator=(const Iteminfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Iteminfo& default_instance();

  void Swap(Iteminfo* other);

  // implements Message ----------------------------------------------

  Iteminfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Iteminfo& from);
  void MergeFrom(const Iteminfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bid = 1;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 1;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // optional int32 sid = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Iteminfo)
 private:
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 bid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 num_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static Iteminfo* default_instance_;
};
// -------------------------------------------------------------------

class GCPlayEffect : public ::google::protobuf::Message {
 public:
  GCPlayEffect();
  virtual ~GCPlayEffect();

  GCPlayEffect(const GCPlayEffect& from);

  inline GCPlayEffect& operator=(const GCPlayEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPlayEffect& default_instance();

  void Swap(GCPlayEffect* other);

  // implements Message ----------------------------------------------

  GCPlayEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPlayEffect& from);
  void MergeFrom(const GCPlayEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCPlayEffect)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_InnerMessage_2eproto();
  friend void protobuf_AssignDesc_InnerMessage_2eproto();
  friend void protobuf_ShutdownFile_InnerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPlayEffect* default_instance_;
};
// ===================================================================


// ===================================================================

// RandomIsland

// optional string islandName = 1;
inline bool RandomIsland::has_islandname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RandomIsland::set_has_islandname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RandomIsland::clear_has_islandname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RandomIsland::clear_islandname() {
  if (islandname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    islandname_->clear();
  }
  clear_has_islandname();
}
inline const ::std::string& RandomIsland::islandname() const {
  // @@protoc_insertion_point(field_get:RandomIsland.islandName)
  return *islandname_;
}
inline void RandomIsland::set_islandname(const ::std::string& value) {
  set_has_islandname();
  if (islandname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    islandname_ = new ::std::string;
  }
  islandname_->assign(value);
  // @@protoc_insertion_point(field_set:RandomIsland.islandName)
}
inline void RandomIsland::set_islandname(const char* value) {
  set_has_islandname();
  if (islandname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    islandname_ = new ::std::string;
  }
  islandname_->assign(value);
  // @@protoc_insertion_point(field_set_char:RandomIsland.islandName)
}
inline void RandomIsland::set_islandname(const char* value, size_t size) {
  set_has_islandname();
  if (islandname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    islandname_ = new ::std::string;
  }
  islandname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RandomIsland.islandName)
}
inline ::std::string* RandomIsland::mutable_islandname() {
  set_has_islandname();
  if (islandname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    islandname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:RandomIsland.islandName)
  return islandname_;
}
inline ::std::string* RandomIsland::release_islandname() {
  clear_has_islandname();
  if (islandname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = islandname_;
    islandname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RandomIsland::set_allocated_islandname(::std::string* islandname) {
  if (islandname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete islandname_;
  }
  if (islandname) {
    set_has_islandname();
    islandname_ = islandname;
  } else {
    clear_has_islandname();
    islandname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:RandomIsland.islandName)
}

// optional int32 PosX = 2;
inline bool RandomIsland::has_posx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RandomIsland::set_has_posx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RandomIsland::clear_has_posx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RandomIsland::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline ::google::protobuf::int32 RandomIsland::posx() const {
  // @@protoc_insertion_point(field_get:RandomIsland.PosX)
  return posx_;
}
inline void RandomIsland::set_posx(::google::protobuf::int32 value) {
  set_has_posx();
  posx_ = value;
  // @@protoc_insertion_point(field_set:RandomIsland.PosX)
}

// optional int32 PosY = 3;
inline bool RandomIsland::has_posy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RandomIsland::set_has_posy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RandomIsland::clear_has_posy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RandomIsland::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline ::google::protobuf::int32 RandomIsland::posy() const {
  // @@protoc_insertion_point(field_get:RandomIsland.PosY)
  return posy_;
}
inline void RandomIsland::set_posy(::google::protobuf::int32 value) {
  set_has_posy();
  posy_ = value;
  // @@protoc_insertion_point(field_set:RandomIsland.PosY)
}

// -------------------------------------------------------------------

// Vector3Info

// optional int32 x = 1;
inline bool Vector3Info::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vector3Info::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vector3Info::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vector3Info::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Vector3Info::x() const {
  // @@protoc_insertion_point(field_get:Vector3Info.x)
  return x_;
}
inline void Vector3Info::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Vector3Info.x)
}

// optional int32 y = 2;
inline bool Vector3Info::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Vector3Info::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Vector3Info::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Vector3Info::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Vector3Info::y() const {
  // @@protoc_insertion_point(field_get:Vector3Info.y)
  return y_;
}
inline void Vector3Info::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Vector3Info.y)
}

// optional int32 z = 3;
inline bool Vector3Info::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Vector3Info::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Vector3Info::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Vector3Info::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 Vector3Info::z() const {
  // @@protoc_insertion_point(field_get:Vector3Info.z)
  return z_;
}
inline void Vector3Info::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:Vector3Info.z)
}

// -------------------------------------------------------------------

// SkillItemData

// optional int32 skillid = 1;
inline bool SkillItemData::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillItemData::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillItemData::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillItemData::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 SkillItemData::skillid() const {
  // @@protoc_insertion_point(field_get:SkillItemData.skillid)
  return skillid_;
}
inline void SkillItemData::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillItemData.skillid)
}

// optional int32 skilllevel = 2;
inline bool SkillItemData::has_skilllevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillItemData::set_has_skilllevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillItemData::clear_has_skilllevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillItemData::clear_skilllevel() {
  skilllevel_ = 0;
  clear_has_skilllevel();
}
inline ::google::protobuf::int32 SkillItemData::skilllevel() const {
  // @@protoc_insertion_point(field_get:SkillItemData.skilllevel)
  return skilllevel_;
}
inline void SkillItemData::set_skilllevel(::google::protobuf::int32 value) {
  set_has_skilllevel();
  skilllevel_ = value;
  // @@protoc_insertion_point(field_set:SkillItemData.skilllevel)
}

// optional int32 skillposition = 3;
inline bool SkillItemData::has_skillposition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillItemData::set_has_skillposition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillItemData::clear_has_skillposition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillItemData::clear_skillposition() {
  skillposition_ = 0;
  clear_has_skillposition();
}
inline ::google::protobuf::int32 SkillItemData::skillposition() const {
  // @@protoc_insertion_point(field_get:SkillItemData.skillposition)
  return skillposition_;
}
inline void SkillItemData::set_skillposition(::google::protobuf::int32 value) {
  set_has_skillposition();
  skillposition_ = value;
  // @@protoc_insertion_point(field_set:SkillItemData.skillposition)
}

// optional int32 flagnormal = 4;
inline bool SkillItemData::has_flagnormal() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillItemData::set_has_flagnormal() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillItemData::clear_has_flagnormal() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillItemData::clear_flagnormal() {
  flagnormal_ = 0;
  clear_has_flagnormal();
}
inline ::google::protobuf::int32 SkillItemData::flagnormal() const {
  // @@protoc_insertion_point(field_get:SkillItemData.flagnormal)
  return flagnormal_;
}
inline void SkillItemData::set_flagnormal(::google::protobuf::int32 value) {
  set_has_flagnormal();
  flagnormal_ = value;
  // @@protoc_insertion_point(field_set:SkillItemData.flagnormal)
}

// -------------------------------------------------------------------

// CharacterViewMsg

// optional int32 viewType = 1;
inline bool CharacterViewMsg::has_viewtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterViewMsg::set_has_viewtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterViewMsg::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterViewMsg::clear_viewtype() {
  viewtype_ = 0;
  clear_has_viewtype();
}
inline ::google::protobuf::int32 CharacterViewMsg::viewtype() const {
  // @@protoc_insertion_point(field_get:CharacterViewMsg.viewType)
  return viewtype_;
}
inline void CharacterViewMsg::set_viewtype(::google::protobuf::int32 value) {
  set_has_viewtype();
  viewtype_ = value;
  // @@protoc_insertion_point(field_set:CharacterViewMsg.viewType)
}

// optional string viewValue = 2;
inline bool CharacterViewMsg::has_viewvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterViewMsg::set_has_viewvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterViewMsg::clear_has_viewvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterViewMsg::clear_viewvalue() {
  if (viewvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    viewvalue_->clear();
  }
  clear_has_viewvalue();
}
inline const ::std::string& CharacterViewMsg::viewvalue() const {
  // @@protoc_insertion_point(field_get:CharacterViewMsg.viewValue)
  return *viewvalue_;
}
inline void CharacterViewMsg::set_viewvalue(const ::std::string& value) {
  set_has_viewvalue();
  if (viewvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    viewvalue_ = new ::std::string;
  }
  viewvalue_->assign(value);
  // @@protoc_insertion_point(field_set:CharacterViewMsg.viewValue)
}
inline void CharacterViewMsg::set_viewvalue(const char* value) {
  set_has_viewvalue();
  if (viewvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    viewvalue_ = new ::std::string;
  }
  viewvalue_->assign(value);
  // @@protoc_insertion_point(field_set_char:CharacterViewMsg.viewValue)
}
inline void CharacterViewMsg::set_viewvalue(const char* value, size_t size) {
  set_has_viewvalue();
  if (viewvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    viewvalue_ = new ::std::string;
  }
  viewvalue_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CharacterViewMsg.viewValue)
}
inline ::std::string* CharacterViewMsg::mutable_viewvalue() {
  set_has_viewvalue();
  if (viewvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    viewvalue_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CharacterViewMsg.viewValue)
  return viewvalue_;
}
inline ::std::string* CharacterViewMsg::release_viewvalue() {
  clear_has_viewvalue();
  if (viewvalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = viewvalue_;
    viewvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CharacterViewMsg::set_allocated_viewvalue(::std::string* viewvalue) {
  if (viewvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete viewvalue_;
  }
  if (viewvalue) {
    set_has_viewvalue();
    viewvalue_ = viewvalue;
  } else {
    clear_has_viewvalue();
    viewvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterViewMsg.viewValue)
}

// -------------------------------------------------------------------

// CharacterInfo

// optional int64 objId = 1;
inline bool CharacterInfo::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterInfo::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterInfo::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterInfo::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 CharacterInfo::objid() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.objId)
  return objid_;
}
inline void CharacterInfo::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.objId)
}

// optional string charName = 2;
inline bool CharacterInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& CharacterInfo::charname() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.charName)
  return *charname_;
}
inline void CharacterInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:CharacterInfo.charName)
}
inline void CharacterInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:CharacterInfo.charName)
}
inline void CharacterInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CharacterInfo.charName)
}
inline ::std::string* CharacterInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CharacterInfo.charName)
  return charname_;
}
inline ::std::string* CharacterInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CharacterInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterInfo.charName)
}

// optional .Vector3Info pos = 3;
inline bool CharacterInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterInfo::clear_pos() {
  if (pos_ != NULL) pos_->::Vector3Info::Clear();
  clear_has_pos();
}
inline const ::Vector3Info& CharacterInfo::pos() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Vector3Info* CharacterInfo::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CharacterInfo.pos)
  return pos_;
}
inline ::Vector3Info* CharacterInfo::release_pos() {
  clear_has_pos();
  ::Vector3Info* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void CharacterInfo::set_allocated_pos(::Vector3Info* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterInfo.pos)
}

// optional .Vector3Info direction = 4;
inline bool CharacterInfo::has_direction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterInfo::set_has_direction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterInfo::clear_has_direction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterInfo::clear_direction() {
  if (direction_ != NULL) direction_->::Vector3Info::Clear();
  clear_has_direction();
}
inline const ::Vector3Info& CharacterInfo::direction() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.direction)
  return direction_ != NULL ? *direction_ : *default_instance_->direction_;
}
inline ::Vector3Info* CharacterInfo::mutable_direction() {
  set_has_direction();
  if (direction_ == NULL) direction_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CharacterInfo.direction)
  return direction_;
}
inline ::Vector3Info* CharacterInfo::release_direction() {
  clear_has_direction();
  ::Vector3Info* temp = direction_;
  direction_ = NULL;
  return temp;
}
inline void CharacterInfo::set_allocated_direction(::Vector3Info* direction) {
  delete direction_;
  direction_ = direction;
  if (direction) {
    set_has_direction();
  } else {
    clear_has_direction();
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterInfo.direction)
}

// optional int32 sid = 5;
inline bool CharacterInfo::has_sid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterInfo::set_has_sid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterInfo::clear_has_sid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterInfo::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 CharacterInfo::sid() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.sid)
  return sid_;
}
inline void CharacterInfo::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.sid)
}

// optional int32 bid = 6;
inline bool CharacterInfo::has_bid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterInfo::set_has_bid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterInfo::clear_has_bid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterInfo::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 CharacterInfo::bid() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.bid)
  return bid_;
}
inline void CharacterInfo::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.bid)
}

// repeated .CharacterAttr charAttr = 7;
inline int CharacterInfo::charattr_size() const {
  return charattr_.size();
}
inline void CharacterInfo::clear_charattr() {
  charattr_.Clear();
}
inline const ::CharacterAttr& CharacterInfo::charattr(int index) const {
  // @@protoc_insertion_point(field_get:CharacterInfo.charAttr)
  return charattr_.Get(index);
}
inline ::CharacterAttr* CharacterInfo::mutable_charattr(int index) {
  // @@protoc_insertion_point(field_mutable:CharacterInfo.charAttr)
  return charattr_.Mutable(index);
}
inline ::CharacterAttr* CharacterInfo::add_charattr() {
  // @@protoc_insertion_point(field_add:CharacterInfo.charAttr)
  return charattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CharacterAttr >&
CharacterInfo::charattr() const {
  // @@protoc_insertion_point(field_list:CharacterInfo.charAttr)
  return charattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CharacterAttr >*
CharacterInfo::mutable_charattr() {
  // @@protoc_insertion_point(field_mutable_list:CharacterInfo.charAttr)
  return &charattr_;
}

// optional .ChangeEquipInfo changeEquipInfo = 8;
inline bool CharacterInfo::has_changeequipinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharacterInfo::set_has_changeequipinfo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharacterInfo::clear_has_changeequipinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharacterInfo::clear_changeequipinfo() {
  if (changeequipinfo_ != NULL) changeequipinfo_->::ChangeEquipInfo::Clear();
  clear_has_changeequipinfo();
}
inline const ::ChangeEquipInfo& CharacterInfo::changeequipinfo() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.changeEquipInfo)
  return changeequipinfo_ != NULL ? *changeequipinfo_ : *default_instance_->changeequipinfo_;
}
inline ::ChangeEquipInfo* CharacterInfo::mutable_changeequipinfo() {
  set_has_changeequipinfo();
  if (changeequipinfo_ == NULL) changeequipinfo_ = new ::ChangeEquipInfo;
  // @@protoc_insertion_point(field_mutable:CharacterInfo.changeEquipInfo)
  return changeequipinfo_;
}
inline ::ChangeEquipInfo* CharacterInfo::release_changeequipinfo() {
  clear_has_changeequipinfo();
  ::ChangeEquipInfo* temp = changeequipinfo_;
  changeequipinfo_ = NULL;
  return temp;
}
inline void CharacterInfo::set_allocated_changeequipinfo(::ChangeEquipInfo* changeequipinfo) {
  delete changeequipinfo_;
  changeequipinfo_ = changeequipinfo;
  if (changeequipinfo) {
    set_has_changeequipinfo();
  } else {
    clear_has_changeequipinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterInfo.changeEquipInfo)
}

// optional string interactId = 9;
inline bool CharacterInfo::has_interactid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharacterInfo::set_has_interactid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharacterInfo::clear_has_interactid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharacterInfo::clear_interactid() {
  if (interactid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    interactid_->clear();
  }
  clear_has_interactid();
}
inline const ::std::string& CharacterInfo::interactid() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.interactId)
  return *interactid_;
}
inline void CharacterInfo::set_interactid(const ::std::string& value) {
  set_has_interactid();
  if (interactid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    interactid_ = new ::std::string;
  }
  interactid_->assign(value);
  // @@protoc_insertion_point(field_set:CharacterInfo.interactId)
}
inline void CharacterInfo::set_interactid(const char* value) {
  set_has_interactid();
  if (interactid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    interactid_ = new ::std::string;
  }
  interactid_->assign(value);
  // @@protoc_insertion_point(field_set_char:CharacterInfo.interactId)
}
inline void CharacterInfo::set_interactid(const char* value, size_t size) {
  set_has_interactid();
  if (interactid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    interactid_ = new ::std::string;
  }
  interactid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CharacterInfo.interactId)
}
inline ::std::string* CharacterInfo::mutable_interactid() {
  set_has_interactid();
  if (interactid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    interactid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CharacterInfo.interactId)
  return interactid_;
}
inline ::std::string* CharacterInfo::release_interactid() {
  clear_has_interactid();
  if (interactid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = interactid_;
    interactid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CharacterInfo::set_allocated_interactid(::std::string* interactid) {
  if (interactid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete interactid_;
  }
  if (interactid) {
    set_has_interactid();
    interactid_ = interactid;
  } else {
    clear_has_interactid();
    interactid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterInfo.interactId)
}

// optional int32 liveTime = 10;
inline bool CharacterInfo::has_livetime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CharacterInfo::set_has_livetime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CharacterInfo::clear_has_livetime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CharacterInfo::clear_livetime() {
  livetime_ = 0;
  clear_has_livetime();
}
inline ::google::protobuf::int32 CharacterInfo::livetime() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.liveTime)
  return livetime_;
}
inline void CharacterInfo::set_livetime(::google::protobuf::int32 value) {
  set_has_livetime();
  livetime_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.liveTime)
}

// optional .RedCross redcross = 12;
inline bool CharacterInfo::has_redcross() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CharacterInfo::set_has_redcross() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CharacterInfo::clear_has_redcross() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CharacterInfo::clear_redcross() {
  if (redcross_ != NULL) redcross_->::RedCross::Clear();
  clear_has_redcross();
}
inline const ::RedCross& CharacterInfo::redcross() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.redcross)
  return redcross_ != NULL ? *redcross_ : *default_instance_->redcross_;
}
inline ::RedCross* CharacterInfo::mutable_redcross() {
  set_has_redcross();
  if (redcross_ == NULL) redcross_ = new ::RedCross;
  // @@protoc_insertion_point(field_mutable:CharacterInfo.redcross)
  return redcross_;
}
inline ::RedCross* CharacterInfo::release_redcross() {
  clear_has_redcross();
  ::RedCross* temp = redcross_;
  redcross_ = NULL;
  return temp;
}
inline void CharacterInfo::set_allocated_redcross(::RedCross* redcross) {
  delete redcross_;
  redcross_ = redcross;
  if (redcross) {
    set_has_redcross();
  } else {
    clear_has_redcross();
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterInfo.redcross)
}

// optional int32 horseid = 13;
inline bool CharacterInfo::has_horseid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CharacterInfo::set_has_horseid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CharacterInfo::clear_has_horseid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CharacterInfo::clear_horseid() {
  horseid_ = 0;
  clear_has_horseid();
}
inline ::google::protobuf::int32 CharacterInfo::horseid() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.horseid)
  return horseid_;
}
inline void CharacterInfo::set_horseid(::google::protobuf::int32 value) {
  set_has_horseid();
  horseid_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.horseid)
}

// optional int32 usehorseflag = 14;
inline bool CharacterInfo::has_usehorseflag() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CharacterInfo::set_has_usehorseflag() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CharacterInfo::clear_has_usehorseflag() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CharacterInfo::clear_usehorseflag() {
  usehorseflag_ = 0;
  clear_has_usehorseflag();
}
inline ::google::protobuf::int32 CharacterInfo::usehorseflag() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.usehorseflag)
  return usehorseflag_;
}
inline void CharacterInfo::set_usehorseflag(::google::protobuf::int32 value) {
  set_has_usehorseflag();
  usehorseflag_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.usehorseflag)
}

// optional int32 titleid = 15;
inline bool CharacterInfo::has_titleid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CharacterInfo::set_has_titleid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CharacterInfo::clear_has_titleid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CharacterInfo::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 CharacterInfo::titleid() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.titleid)
  return titleid_;
}
inline void CharacterInfo::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.titleid)
}

// repeated int64 belongObjId = 16;
inline int CharacterInfo::belongobjid_size() const {
  return belongobjid_.size();
}
inline void CharacterInfo::clear_belongobjid() {
  belongobjid_.Clear();
}
inline ::google::protobuf::int64 CharacterInfo::belongobjid(int index) const {
  // @@protoc_insertion_point(field_get:CharacterInfo.belongObjId)
  return belongobjid_.Get(index);
}
inline void CharacterInfo::set_belongobjid(int index, ::google::protobuf::int64 value) {
  belongobjid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CharacterInfo.belongObjId)
}
inline void CharacterInfo::add_belongobjid(::google::protobuf::int64 value) {
  belongobjid_.Add(value);
  // @@protoc_insertion_point(field_add:CharacterInfo.belongObjId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CharacterInfo::belongobjid() const {
  // @@protoc_insertion_point(field_list:CharacterInfo.belongObjId)
  return belongobjid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CharacterInfo::mutable_belongobjid() {
  // @@protoc_insertion_point(field_mutable_list:CharacterInfo.belongObjId)
  return &belongobjid_;
}

// optional int32 gemEffect = 17;
inline bool CharacterInfo::has_gemeffect() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CharacterInfo::set_has_gemeffect() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CharacterInfo::clear_has_gemeffect() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CharacterInfo::clear_gemeffect() {
  gemeffect_ = 0;
  clear_has_gemeffect();
}
inline ::google::protobuf::int32 CharacterInfo::gemeffect() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.gemEffect)
  return gemeffect_;
}
inline void CharacterInfo::set_gemeffect(::google::protobuf::int32 value) {
  set_has_gemeffect();
  gemeffect_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.gemEffect)
}

// optional .GangInfo gangInfo = 18;
inline bool CharacterInfo::has_ganginfo() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CharacterInfo::set_has_ganginfo() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CharacterInfo::clear_has_ganginfo() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CharacterInfo::clear_ganginfo() {
  if (ganginfo_ != NULL) ganginfo_->::GangInfo::Clear();
  clear_has_ganginfo();
}
inline const ::GangInfo& CharacterInfo::ganginfo() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.gangInfo)
  return ganginfo_ != NULL ? *ganginfo_ : *default_instance_->ganginfo_;
}
inline ::GangInfo* CharacterInfo::mutable_ganginfo() {
  set_has_ganginfo();
  if (ganginfo_ == NULL) ganginfo_ = new ::GangInfo;
  // @@protoc_insertion_point(field_mutable:CharacterInfo.gangInfo)
  return ganginfo_;
}
inline ::GangInfo* CharacterInfo::release_ganginfo() {
  clear_has_ganginfo();
  ::GangInfo* temp = ganginfo_;
  ganginfo_ = NULL;
  return temp;
}
inline void CharacterInfo::set_allocated_ganginfo(::GangInfo* ganginfo) {
  delete ganginfo_;
  ganginfo_ = ganginfo;
  if (ganginfo) {
    set_has_ganginfo();
  } else {
    clear_has_ganginfo();
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterInfo.gangInfo)
}

// optional int32 enterDungeon = 19;
inline bool CharacterInfo::has_enterdungeon() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CharacterInfo::set_has_enterdungeon() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CharacterInfo::clear_has_enterdungeon() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CharacterInfo::clear_enterdungeon() {
  enterdungeon_ = 0;
  clear_has_enterdungeon();
}
inline ::google::protobuf::int32 CharacterInfo::enterdungeon() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.enterDungeon)
  return enterdungeon_;
}
inline void CharacterInfo::set_enterdungeon(::google::protobuf::int32 value) {
  set_has_enterdungeon();
  enterdungeon_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.enterDungeon)
}

// optional int32 powerEffect = 20;
inline bool CharacterInfo::has_powereffect() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CharacterInfo::set_has_powereffect() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CharacterInfo::clear_has_powereffect() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CharacterInfo::clear_powereffect() {
  powereffect_ = 0;
  clear_has_powereffect();
}
inline ::google::protobuf::int32 CharacterInfo::powereffect() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.powerEffect)
  return powereffect_;
}
inline void CharacterInfo::set_powereffect(::google::protobuf::int32 value) {
  set_has_powereffect();
  powereffect_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.powerEffect)
}

// optional int32 awakeEffect = 21;
inline bool CharacterInfo::has_awakeeffect() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CharacterInfo::set_has_awakeeffect() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CharacterInfo::clear_has_awakeeffect() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CharacterInfo::clear_awakeeffect() {
  awakeeffect_ = 0;
  clear_has_awakeeffect();
}
inline ::google::protobuf::int32 CharacterInfo::awakeeffect() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.awakeEffect)
  return awakeeffect_;
}
inline void CharacterInfo::set_awakeeffect(::google::protobuf::int32 value) {
  set_has_awakeeffect();
  awakeeffect_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.awakeEffect)
}

// optional string vipName = 22;
inline bool CharacterInfo::has_vipname() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CharacterInfo::set_has_vipname() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CharacterInfo::clear_has_vipname() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CharacterInfo::clear_vipname() {
  if (vipname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vipname_->clear();
  }
  clear_has_vipname();
}
inline const ::std::string& CharacterInfo::vipname() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.vipName)
  return *vipname_;
}
inline void CharacterInfo::set_vipname(const ::std::string& value) {
  set_has_vipname();
  if (vipname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vipname_ = new ::std::string;
  }
  vipname_->assign(value);
  // @@protoc_insertion_point(field_set:CharacterInfo.vipName)
}
inline void CharacterInfo::set_vipname(const char* value) {
  set_has_vipname();
  if (vipname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vipname_ = new ::std::string;
  }
  vipname_->assign(value);
  // @@protoc_insertion_point(field_set_char:CharacterInfo.vipName)
}
inline void CharacterInfo::set_vipname(const char* value, size_t size) {
  set_has_vipname();
  if (vipname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vipname_ = new ::std::string;
  }
  vipname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CharacterInfo.vipName)
}
inline ::std::string* CharacterInfo::mutable_vipname() {
  set_has_vipname();
  if (vipname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    vipname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CharacterInfo.vipName)
  return vipname_;
}
inline ::std::string* CharacterInfo::release_vipname() {
  clear_has_vipname();
  if (vipname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = vipname_;
    vipname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CharacterInfo::set_allocated_vipname(::std::string* vipname) {
  if (vipname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vipname_;
  }
  if (vipname) {
    set_has_vipname();
    vipname_ = vipname;
  } else {
    clear_has_vipname();
    vipname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterInfo.vipName)
}

// optional .RandomIndexInfo randomIndexInfo = 23;
inline bool CharacterInfo::has_randomindexinfo() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CharacterInfo::set_has_randomindexinfo() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CharacterInfo::clear_has_randomindexinfo() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CharacterInfo::clear_randomindexinfo() {
  if (randomindexinfo_ != NULL) randomindexinfo_->::RandomIndexInfo::Clear();
  clear_has_randomindexinfo();
}
inline const ::RandomIndexInfo& CharacterInfo::randomindexinfo() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.randomIndexInfo)
  return randomindexinfo_ != NULL ? *randomindexinfo_ : *default_instance_->randomindexinfo_;
}
inline ::RandomIndexInfo* CharacterInfo::mutable_randomindexinfo() {
  set_has_randomindexinfo();
  if (randomindexinfo_ == NULL) randomindexinfo_ = new ::RandomIndexInfo;
  // @@protoc_insertion_point(field_mutable:CharacterInfo.randomIndexInfo)
  return randomindexinfo_;
}
inline ::RandomIndexInfo* CharacterInfo::release_randomindexinfo() {
  clear_has_randomindexinfo();
  ::RandomIndexInfo* temp = randomindexinfo_;
  randomindexinfo_ = NULL;
  return temp;
}
inline void CharacterInfo::set_allocated_randomindexinfo(::RandomIndexInfo* randomindexinfo) {
  delete randomindexinfo_;
  randomindexinfo_ = randomindexinfo;
  if (randomindexinfo) {
    set_has_randomindexinfo();
  } else {
    clear_has_randomindexinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterInfo.randomIndexInfo)
}

// optional int32 horseEquipEffect = 24;
inline bool CharacterInfo::has_horseequipeffect() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CharacterInfo::set_has_horseequipeffect() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CharacterInfo::clear_has_horseequipeffect() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CharacterInfo::clear_horseequipeffect() {
  horseequipeffect_ = 0;
  clear_has_horseequipeffect();
}
inline ::google::protobuf::int32 CharacterInfo::horseequipeffect() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.horseEquipEffect)
  return horseequipeffect_;
}
inline void CharacterInfo::set_horseequipeffect(::google::protobuf::int32 value) {
  set_has_horseequipeffect();
  horseequipeffect_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.horseEquipEffect)
}

// optional int32 flowerValue = 25;
inline bool CharacterInfo::has_flowervalue() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CharacterInfo::set_has_flowervalue() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CharacterInfo::clear_has_flowervalue() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CharacterInfo::clear_flowervalue() {
  flowervalue_ = 0;
  clear_has_flowervalue();
}
inline ::google::protobuf::int32 CharacterInfo::flowervalue() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.flowerValue)
  return flowervalue_;
}
inline void CharacterInfo::set_flowervalue(::google::protobuf::int32 value) {
  set_has_flowervalue();
  flowervalue_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.flowerValue)
}

// optional string otherName = 26;
inline bool CharacterInfo::has_othername() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CharacterInfo::set_has_othername() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CharacterInfo::clear_has_othername() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CharacterInfo::clear_othername() {
  if (othername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_->clear();
  }
  clear_has_othername();
}
inline const ::std::string& CharacterInfo::othername() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.otherName)
  return *othername_;
}
inline void CharacterInfo::set_othername(const ::std::string& value) {
  set_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_ = new ::std::string;
  }
  othername_->assign(value);
  // @@protoc_insertion_point(field_set:CharacterInfo.otherName)
}
inline void CharacterInfo::set_othername(const char* value) {
  set_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_ = new ::std::string;
  }
  othername_->assign(value);
  // @@protoc_insertion_point(field_set_char:CharacterInfo.otherName)
}
inline void CharacterInfo::set_othername(const char* value, size_t size) {
  set_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_ = new ::std::string;
  }
  othername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CharacterInfo.otherName)
}
inline ::std::string* CharacterInfo::mutable_othername() {
  set_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CharacterInfo.otherName)
  return othername_;
}
inline ::std::string* CharacterInfo::release_othername() {
  clear_has_othername();
  if (othername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = othername_;
    othername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CharacterInfo::set_allocated_othername(::std::string* othername) {
  if (othername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete othername_;
  }
  if (othername) {
    set_has_othername();
    othername_ = othername;
  } else {
    clear_has_othername();
    othername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterInfo.otherName)
}

// optional int32 otherSex = 27;
inline bool CharacterInfo::has_othersex() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CharacterInfo::set_has_othersex() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CharacterInfo::clear_has_othersex() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CharacterInfo::clear_othersex() {
  othersex_ = 0;
  clear_has_othersex();
}
inline ::google::protobuf::int32 CharacterInfo::othersex() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.otherSex)
  return othersex_;
}
inline void CharacterInfo::set_othersex(::google::protobuf::int32 value) {
  set_has_othersex();
  othersex_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.otherSex)
}

// repeated .Vector3Info roads = 28;
inline int CharacterInfo::roads_size() const {
  return roads_.size();
}
inline void CharacterInfo::clear_roads() {
  roads_.Clear();
}
inline const ::Vector3Info& CharacterInfo::roads(int index) const {
  // @@protoc_insertion_point(field_get:CharacterInfo.roads)
  return roads_.Get(index);
}
inline ::Vector3Info* CharacterInfo::mutable_roads(int index) {
  // @@protoc_insertion_point(field_mutable:CharacterInfo.roads)
  return roads_.Mutable(index);
}
inline ::Vector3Info* CharacterInfo::add_roads() {
  // @@protoc_insertion_point(field_add:CharacterInfo.roads)
  return roads_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Vector3Info >&
CharacterInfo::roads() const {
  // @@protoc_insertion_point(field_list:CharacterInfo.roads)
  return roads_;
}
inline ::google::protobuf::RepeatedPtrField< ::Vector3Info >*
CharacterInfo::mutable_roads() {
  // @@protoc_insertion_point(field_mutable_list:CharacterInfo.roads)
  return &roads_;
}

// optional int64 ownId = 29;
inline bool CharacterInfo::has_ownid() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CharacterInfo::set_has_ownid() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CharacterInfo::clear_has_ownid() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CharacterInfo::clear_ownid() {
  ownid_ = GOOGLE_LONGLONG(0);
  clear_has_ownid();
}
inline ::google::protobuf::int64 CharacterInfo::ownid() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.ownId)
  return ownid_;
}
inline void CharacterInfo::set_ownid(::google::protobuf::int64 value) {
  set_has_ownid();
  ownid_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.ownId)
}

// repeated .CharacterViewMsg views = 30;
inline int CharacterInfo::views_size() const {
  return views_.size();
}
inline void CharacterInfo::clear_views() {
  views_.Clear();
}
inline const ::CharacterViewMsg& CharacterInfo::views(int index) const {
  // @@protoc_insertion_point(field_get:CharacterInfo.views)
  return views_.Get(index);
}
inline ::CharacterViewMsg* CharacterInfo::mutable_views(int index) {
  // @@protoc_insertion_point(field_mutable:CharacterInfo.views)
  return views_.Mutable(index);
}
inline ::CharacterViewMsg* CharacterInfo::add_views() {
  // @@protoc_insertion_point(field_add:CharacterInfo.views)
  return views_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CharacterViewMsg >&
CharacterInfo::views() const {
  // @@protoc_insertion_point(field_list:CharacterInfo.views)
  return views_;
}
inline ::google::protobuf::RepeatedPtrField< ::CharacterViewMsg >*
CharacterInfo::mutable_views() {
  // @@protoc_insertion_point(field_mutable_list:CharacterInfo.views)
  return &views_;
}

// optional int32 catchState = 31;
inline bool CharacterInfo::has_catchstate() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CharacterInfo::set_has_catchstate() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CharacterInfo::clear_has_catchstate() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CharacterInfo::clear_catchstate() {
  catchstate_ = 0;
  clear_has_catchstate();
}
inline ::google::protobuf::int32 CharacterInfo::catchstate() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.catchState)
  return catchstate_;
}
inline void CharacterInfo::set_catchstate(::google::protobuf::int32 value) {
  set_has_catchstate();
  catchstate_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.catchState)
}

// optional int64 deleteTime = 32;
inline bool CharacterInfo::has_deletetime() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CharacterInfo::set_has_deletetime() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CharacterInfo::clear_has_deletetime() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CharacterInfo::clear_deletetime() {
  deletetime_ = GOOGLE_LONGLONG(0);
  clear_has_deletetime();
}
inline ::google::protobuf::int64 CharacterInfo::deletetime() const {
  // @@protoc_insertion_point(field_get:CharacterInfo.deleteTime)
  return deletetime_;
}
inline void CharacterInfo::set_deletetime(::google::protobuf::int64 value) {
  set_has_deletetime();
  deletetime_ = value;
  // @@protoc_insertion_point(field_set:CharacterInfo.deleteTime)
}

// -------------------------------------------------------------------

// HorseInfo

// optional int32 tableid = 1;
inline bool HorseInfo::has_tableid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HorseInfo::set_has_tableid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HorseInfo::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HorseInfo::clear_tableid() {
  tableid_ = 0;
  clear_has_tableid();
}
inline ::google::protobuf::int32 HorseInfo::tableid() const {
  // @@protoc_insertion_point(field_get:HorseInfo.tableid)
  return tableid_;
}
inline void HorseInfo::set_tableid(::google::protobuf::int32 value) {
  set_has_tableid();
  tableid_ = value;
  // @@protoc_insertion_point(field_set:HorseInfo.tableid)
}

// optional int64 serverid = 2;
inline bool HorseInfo::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HorseInfo::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HorseInfo::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HorseInfo::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::int64 HorseInfo::serverid() const {
  // @@protoc_insertion_point(field_get:HorseInfo.serverid)
  return serverid_;
}
inline void HorseInfo::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:HorseInfo.serverid)
}

// optional int32 isuse = 3;
inline bool HorseInfo::has_isuse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HorseInfo::set_has_isuse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HorseInfo::clear_has_isuse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HorseInfo::clear_isuse() {
  isuse_ = 0;
  clear_has_isuse();
}
inline ::google::protobuf::int32 HorseInfo::isuse() const {
  // @@protoc_insertion_point(field_get:HorseInfo.isuse)
  return isuse_;
}
inline void HorseInfo::set_isuse(::google::protobuf::int32 value) {
  set_has_isuse();
  isuse_ = value;
  // @@protoc_insertion_point(field_set:HorseInfo.isuse)
}

// optional int32 upstarrate = 4;
inline bool HorseInfo::has_upstarrate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HorseInfo::set_has_upstarrate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HorseInfo::clear_has_upstarrate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HorseInfo::clear_upstarrate() {
  upstarrate_ = 0;
  clear_has_upstarrate();
}
inline ::google::protobuf::int32 HorseInfo::upstarrate() const {
  // @@protoc_insertion_point(field_get:HorseInfo.upstarrate)
  return upstarrate_;
}
inline void HorseInfo::set_upstarrate(::google::protobuf::int32 value) {
  set_has_upstarrate();
  upstarrate_ = value;
  // @@protoc_insertion_point(field_set:HorseInfo.upstarrate)
}

// -------------------------------------------------------------------

// ChangeEquipInfo

// optional int32 hair = 1;
inline bool ChangeEquipInfo::has_hair() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeEquipInfo::set_has_hair() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeEquipInfo::clear_has_hair() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeEquipInfo::clear_hair() {
  hair_ = 0;
  clear_has_hair();
}
inline ::google::protobuf::int32 ChangeEquipInfo::hair() const {
  // @@protoc_insertion_point(field_get:ChangeEquipInfo.hair)
  return hair_;
}
inline void ChangeEquipInfo::set_hair(::google::protobuf::int32 value) {
  set_has_hair();
  hair_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquipInfo.hair)
}

// optional int32 face = 2;
inline bool ChangeEquipInfo::has_face() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeEquipInfo::set_has_face() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeEquipInfo::clear_has_face() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeEquipInfo::clear_face() {
  face_ = 0;
  clear_has_face();
}
inline ::google::protobuf::int32 ChangeEquipInfo::face() const {
  // @@protoc_insertion_point(field_get:ChangeEquipInfo.face)
  return face_;
}
inline void ChangeEquipInfo::set_face(::google::protobuf::int32 value) {
  set_has_face();
  face_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquipInfo.face)
}

// optional int32 weapon = 3;
inline bool ChangeEquipInfo::has_weapon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeEquipInfo::set_has_weapon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeEquipInfo::clear_has_weapon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeEquipInfo::clear_weapon() {
  weapon_ = 0;
  clear_has_weapon();
}
inline ::google::protobuf::int32 ChangeEquipInfo::weapon() const {
  // @@protoc_insertion_point(field_get:ChangeEquipInfo.weapon)
  return weapon_;
}
inline void ChangeEquipInfo::set_weapon(::google::protobuf::int32 value) {
  set_has_weapon();
  weapon_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquipInfo.weapon)
}

// optional int32 clothes = 4;
inline bool ChangeEquipInfo::has_clothes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeEquipInfo::set_has_clothes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeEquipInfo::clear_has_clothes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeEquipInfo::clear_clothes() {
  clothes_ = 0;
  clear_has_clothes();
}
inline ::google::protobuf::int32 ChangeEquipInfo::clothes() const {
  // @@protoc_insertion_point(field_get:ChangeEquipInfo.clothes)
  return clothes_;
}
inline void ChangeEquipInfo::set_clothes(::google::protobuf::int32 value) {
  set_has_clothes();
  clothes_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquipInfo.clothes)
}

// optional int32 fashionClothes = 5;
inline bool ChangeEquipInfo::has_fashionclothes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChangeEquipInfo::set_has_fashionclothes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChangeEquipInfo::clear_has_fashionclothes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChangeEquipInfo::clear_fashionclothes() {
  fashionclothes_ = 0;
  clear_has_fashionclothes();
}
inline ::google::protobuf::int32 ChangeEquipInfo::fashionclothes() const {
  // @@protoc_insertion_point(field_get:ChangeEquipInfo.fashionClothes)
  return fashionclothes_;
}
inline void ChangeEquipInfo::set_fashionclothes(::google::protobuf::int32 value) {
  set_has_fashionclothes();
  fashionclothes_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquipInfo.fashionClothes)
}

// optional int32 fashionWeapon = 6;
inline bool ChangeEquipInfo::has_fashionweapon() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChangeEquipInfo::set_has_fashionweapon() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChangeEquipInfo::clear_has_fashionweapon() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChangeEquipInfo::clear_fashionweapon() {
  fashionweapon_ = 0;
  clear_has_fashionweapon();
}
inline ::google::protobuf::int32 ChangeEquipInfo::fashionweapon() const {
  // @@protoc_insertion_point(field_get:ChangeEquipInfo.fashionWeapon)
  return fashionweapon_;
}
inline void ChangeEquipInfo::set_fashionweapon(::google::protobuf::int32 value) {
  set_has_fashionweapon();
  fashionweapon_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquipInfo.fashionWeapon)
}

// optional int32 fashionHair = 7;
inline bool ChangeEquipInfo::has_fashionhair() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChangeEquipInfo::set_has_fashionhair() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChangeEquipInfo::clear_has_fashionhair() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChangeEquipInfo::clear_fashionhair() {
  fashionhair_ = 0;
  clear_has_fashionhair();
}
inline ::google::protobuf::int32 ChangeEquipInfo::fashionhair() const {
  // @@protoc_insertion_point(field_get:ChangeEquipInfo.fashionHair)
  return fashionhair_;
}
inline void ChangeEquipInfo::set_fashionhair(::google::protobuf::int32 value) {
  set_has_fashionhair();
  fashionhair_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquipInfo.fashionHair)
}

// optional int32 isview = 8;
inline bool ChangeEquipInfo::has_isview() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ChangeEquipInfo::set_has_isview() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ChangeEquipInfo::clear_has_isview() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ChangeEquipInfo::clear_isview() {
  isview_ = 0;
  clear_has_isview();
}
inline ::google::protobuf::int32 ChangeEquipInfo::isview() const {
  // @@protoc_insertion_point(field_get:ChangeEquipInfo.isview)
  return isview_;
}
inline void ChangeEquipInfo::set_isview(::google::protobuf::int32 value) {
  set_has_isview();
  isview_ = value;
  // @@protoc_insertion_point(field_set:ChangeEquipInfo.isview)
}

// -------------------------------------------------------------------

// PlayerFashion

// optional int32 tableid = 1;
inline bool PlayerFashion::has_tableid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerFashion::set_has_tableid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerFashion::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerFashion::clear_tableid() {
  tableid_ = 0;
  clear_has_tableid();
}
inline ::google::protobuf::int32 PlayerFashion::tableid() const {
  // @@protoc_insertion_point(field_get:PlayerFashion.tableid)
  return tableid_;
}
inline void PlayerFashion::set_tableid(::google::protobuf::int32 value) {
  set_has_tableid();
  tableid_ = value;
  // @@protoc_insertion_point(field_set:PlayerFashion.tableid)
}

// optional int64 serverid = 2;
inline bool PlayerFashion::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerFashion::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerFashion::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerFashion::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::int64 PlayerFashion::serverid() const {
  // @@protoc_insertion_point(field_get:PlayerFashion.serverid)
  return serverid_;
}
inline void PlayerFashion::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:PlayerFashion.serverid)
}

// optional int64 invalidtime = 3;
inline bool PlayerFashion::has_invalidtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerFashion::set_has_invalidtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerFashion::clear_has_invalidtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerFashion::clear_invalidtime() {
  invalidtime_ = GOOGLE_LONGLONG(0);
  clear_has_invalidtime();
}
inline ::google::protobuf::int64 PlayerFashion::invalidtime() const {
  // @@protoc_insertion_point(field_get:PlayerFashion.invalidtime)
  return invalidtime_;
}
inline void PlayerFashion::set_invalidtime(::google::protobuf::int64 value) {
  set_has_invalidtime();
  invalidtime_ = value;
  // @@protoc_insertion_point(field_set:PlayerFashion.invalidtime)
}

// optional int32 timetype = 4;
inline bool PlayerFashion::has_timetype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerFashion::set_has_timetype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerFashion::clear_has_timetype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerFashion::clear_timetype() {
  timetype_ = 0;
  clear_has_timetype();
}
inline ::google::protobuf::int32 PlayerFashion::timetype() const {
  // @@protoc_insertion_point(field_get:PlayerFashion.timetype)
  return timetype_;
}
inline void PlayerFashion::set_timetype(::google::protobuf::int32 value) {
  set_has_timetype();
  timetype_ = value;
  // @@protoc_insertion_point(field_set:PlayerFashion.timetype)
}

// optional int32 isuser = 5;
inline bool PlayerFashion::has_isuser() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerFashion::set_has_isuser() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerFashion::clear_has_isuser() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerFashion::clear_isuser() {
  isuser_ = 0;
  clear_has_isuser();
}
inline ::google::protobuf::int32 PlayerFashion::isuser() const {
  // @@protoc_insertion_point(field_get:PlayerFashion.isuser)
  return isuser_;
}
inline void PlayerFashion::set_isuser(::google::protobuf::int32 value) {
  set_has_isuser();
  isuser_ = value;
  // @@protoc_insertion_point(field_set:PlayerFashion.isuser)
}

// -------------------------------------------------------------------

// RedCross

// optional int64 redcrossmaxhp = 1;
inline bool RedCross::has_redcrossmaxhp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedCross::set_has_redcrossmaxhp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedCross::clear_has_redcrossmaxhp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedCross::clear_redcrossmaxhp() {
  redcrossmaxhp_ = GOOGLE_LONGLONG(0);
  clear_has_redcrossmaxhp();
}
inline ::google::protobuf::int64 RedCross::redcrossmaxhp() const {
  // @@protoc_insertion_point(field_get:RedCross.redcrossmaxhp)
  return redcrossmaxhp_;
}
inline void RedCross::set_redcrossmaxhp(::google::protobuf::int64 value) {
  set_has_redcrossmaxhp();
  redcrossmaxhp_ = value;
  // @@protoc_insertion_point(field_set:RedCross.redcrossmaxhp)
}

// optional int64 redcrosshp = 2;
inline bool RedCross::has_redcrosshp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RedCross::set_has_redcrosshp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RedCross::clear_has_redcrosshp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RedCross::clear_redcrosshp() {
  redcrosshp_ = GOOGLE_LONGLONG(0);
  clear_has_redcrosshp();
}
inline ::google::protobuf::int64 RedCross::redcrosshp() const {
  // @@protoc_insertion_point(field_get:RedCross.redcrosshp)
  return redcrosshp_;
}
inline void RedCross::set_redcrosshp(::google::protobuf::int64 value) {
  set_has_redcrosshp();
  redcrosshp_ = value;
  // @@protoc_insertion_point(field_set:RedCross.redcrosshp)
}

// optional int64 redcrossmaxmp = 3;
inline bool RedCross::has_redcrossmaxmp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RedCross::set_has_redcrossmaxmp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RedCross::clear_has_redcrossmaxmp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RedCross::clear_redcrossmaxmp() {
  redcrossmaxmp_ = GOOGLE_LONGLONG(0);
  clear_has_redcrossmaxmp();
}
inline ::google::protobuf::int64 RedCross::redcrossmaxmp() const {
  // @@protoc_insertion_point(field_get:RedCross.redcrossmaxmp)
  return redcrossmaxmp_;
}
inline void RedCross::set_redcrossmaxmp(::google::protobuf::int64 value) {
  set_has_redcrossmaxmp();
  redcrossmaxmp_ = value;
  // @@protoc_insertion_point(field_set:RedCross.redcrossmaxmp)
}

// optional int64 redcrossmp = 4;
inline bool RedCross::has_redcrossmp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RedCross::set_has_redcrossmp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RedCross::clear_has_redcrossmp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RedCross::clear_redcrossmp() {
  redcrossmp_ = GOOGLE_LONGLONG(0);
  clear_has_redcrossmp();
}
inline ::google::protobuf::int64 RedCross::redcrossmp() const {
  // @@protoc_insertion_point(field_get:RedCross.redcrossmp)
  return redcrossmp_;
}
inline void RedCross::set_redcrossmp(::google::protobuf::int64 value) {
  set_has_redcrossmp();
  redcrossmp_ = value;
  // @@protoc_insertion_point(field_set:RedCross.redcrossmp)
}

// -------------------------------------------------------------------

// CharacterAttr

// optional int32 attrkey = 1;
inline bool CharacterAttr::has_attrkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterAttr::set_has_attrkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterAttr::clear_has_attrkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterAttr::clear_attrkey() {
  attrkey_ = 0;
  clear_has_attrkey();
}
inline ::google::protobuf::int32 CharacterAttr::attrkey() const {
  // @@protoc_insertion_point(field_get:CharacterAttr.attrkey)
  return attrkey_;
}
inline void CharacterAttr::set_attrkey(::google::protobuf::int32 value) {
  set_has_attrkey();
  attrkey_ = value;
  // @@protoc_insertion_point(field_set:CharacterAttr.attrkey)
}

// optional int64 attrvalue = 2;
inline bool CharacterAttr::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterAttr::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterAttr::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterAttr::clear_attrvalue() {
  attrvalue_ = GOOGLE_LONGLONG(0);
  clear_has_attrvalue();
}
inline ::google::protobuf::int64 CharacterAttr::attrvalue() const {
  // @@protoc_insertion_point(field_get:CharacterAttr.attrvalue)
  return attrvalue_;
}
inline void CharacterAttr::set_attrvalue(::google::protobuf::int64 value) {
  set_has_attrvalue();
  attrvalue_ = value;
  // @@protoc_insertion_point(field_set:CharacterAttr.attrvalue)
}

// optional int32 viewflag = 3;
inline bool CharacterAttr::has_viewflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterAttr::set_has_viewflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterAttr::clear_has_viewflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterAttr::clear_viewflag() {
  viewflag_ = 0;
  clear_has_viewflag();
}
inline ::google::protobuf::int32 CharacterAttr::viewflag() const {
  // @@protoc_insertion_point(field_get:CharacterAttr.viewflag)
  return viewflag_;
}
inline void CharacterAttr::set_viewflag(::google::protobuf::int32 value) {
  set_has_viewflag();
  viewflag_ = value;
  // @@protoc_insertion_point(field_set:CharacterAttr.viewflag)
}

// -------------------------------------------------------------------

// PetAttr

// optional int32 attrkey = 1;
inline bool PetAttr::has_attrkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetAttr::set_has_attrkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetAttr::clear_has_attrkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetAttr::clear_attrkey() {
  attrkey_ = 0;
  clear_has_attrkey();
}
inline ::google::protobuf::int32 PetAttr::attrkey() const {
  // @@protoc_insertion_point(field_get:PetAttr.attrkey)
  return attrkey_;
}
inline void PetAttr::set_attrkey(::google::protobuf::int32 value) {
  set_has_attrkey();
  attrkey_ = value;
  // @@protoc_insertion_point(field_set:PetAttr.attrkey)
}

// optional int32 attrvalue = 2;
inline bool PetAttr::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetAttr::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetAttr::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetAttr::clear_attrvalue() {
  attrvalue_ = 0;
  clear_has_attrvalue();
}
inline ::google::protobuf::int32 PetAttr::attrvalue() const {
  // @@protoc_insertion_point(field_get:PetAttr.attrvalue)
  return attrvalue_;
}
inline void PetAttr::set_attrvalue(::google::protobuf::int32 value) {
  set_has_attrvalue();
  attrvalue_ = value;
  // @@protoc_insertion_point(field_set:PetAttr.attrvalue)
}

// optional int32 num = 3;
inline bool PetAttr::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetAttr::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetAttr::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetAttr::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 PetAttr::num() const {
  // @@protoc_insertion_point(field_get:PetAttr.num)
  return num_;
}
inline void PetAttr::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:PetAttr.num)
}

// -------------------------------------------------------------------

// PetInfo

// optional int32 id = 1;
inline bool PetInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PetInfo::id() const {
  // @@protoc_insertion_point(field_get:PetInfo.id)
  return id_;
}
inline void PetInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PetInfo.id)
}

// optional string name = 2;
inline bool PetInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PetInfo::name() const {
  // @@protoc_insertion_point(field_get:PetInfo.name)
  return *name_;
}
inline void PetInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:PetInfo.name)
}
inline void PetInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:PetInfo.name)
}
inline void PetInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PetInfo.name)
}
inline ::std::string* PetInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PetInfo.name)
  return name_;
}
inline ::std::string* PetInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PetInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PetInfo.name)
}

// optional int32 sex = 3;
inline bool PetInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetInfo::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 PetInfo::sex() const {
  // @@protoc_insertion_point(field_get:PetInfo.sex)
  return sex_;
}
inline void PetInfo::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:PetInfo.sex)
}

// optional int32 quality = 4;
inline bool PetInfo::has_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetInfo::set_has_quality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetInfo::clear_has_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetInfo::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 PetInfo::quality() const {
  // @@protoc_insertion_point(field_get:PetInfo.quality)
  return quality_;
}
inline void PetInfo::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:PetInfo.quality)
}

// optional int32 character = 5;
inline bool PetInfo::has_character() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PetInfo::set_has_character() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PetInfo::clear_has_character() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PetInfo::clear_character() {
  character_ = 0;
  clear_has_character();
}
inline ::google::protobuf::int32 PetInfo::character() const {
  // @@protoc_insertion_point(field_get:PetInfo.character)
  return character_;
}
inline void PetInfo::set_character(::google::protobuf::int32 value) {
  set_has_character();
  character_ = value;
  // @@protoc_insertion_point(field_set:PetInfo.character)
}

// optional int32 battleflag = 6;
inline bool PetInfo::has_battleflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PetInfo::set_has_battleflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PetInfo::clear_has_battleflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PetInfo::clear_battleflag() {
  battleflag_ = 0;
  clear_has_battleflag();
}
inline ::google::protobuf::int32 PetInfo::battleflag() const {
  // @@protoc_insertion_point(field_get:PetInfo.battleflag)
  return battleflag_;
}
inline void PetInfo::set_battleflag(::google::protobuf::int32 value) {
  set_has_battleflag();
  battleflag_ = value;
  // @@protoc_insertion_point(field_set:PetInfo.battleflag)
}

// optional int32 petGrow = 7;
inline bool PetInfo::has_petgrow() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PetInfo::set_has_petgrow() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PetInfo::clear_has_petgrow() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PetInfo::clear_petgrow() {
  petgrow_ = 0;
  clear_has_petgrow();
}
inline ::google::protobuf::int32 PetInfo::petgrow() const {
  // @@protoc_insertion_point(field_get:PetInfo.petGrow)
  return petgrow_;
}
inline void PetInfo::set_petgrow(::google::protobuf::int32 value) {
  set_has_petgrow();
  petgrow_ = value;
  // @@protoc_insertion_point(field_set:PetInfo.petGrow)
}

// optional int32 starlevel = 8;
inline bool PetInfo::has_starlevel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PetInfo::set_has_starlevel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PetInfo::clear_has_starlevel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PetInfo::clear_starlevel() {
  starlevel_ = 0;
  clear_has_starlevel();
}
inline ::google::protobuf::int32 PetInfo::starlevel() const {
  // @@protoc_insertion_point(field_get:PetInfo.starlevel)
  return starlevel_;
}
inline void PetInfo::set_starlevel(::google::protobuf::int32 value) {
  set_has_starlevel();
  starlevel_ = value;
  // @@protoc_insertion_point(field_set:PetInfo.starlevel)
}

// optional int32 level = 9;
inline bool PetInfo::has_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PetInfo::set_has_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PetInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PetInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PetInfo::level() const {
  // @@protoc_insertion_point(field_get:PetInfo.level)
  return level_;
}
inline void PetInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:PetInfo.level)
}

// optional int64 petId = 10;
inline bool PetInfo::has_petid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PetInfo::set_has_petid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PetInfo::clear_has_petid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PetInfo::clear_petid() {
  petid_ = GOOGLE_LONGLONG(0);
  clear_has_petid();
}
inline ::google::protobuf::int64 PetInfo::petid() const {
  // @@protoc_insertion_point(field_get:PetInfo.petId)
  return petid_;
}
inline void PetInfo::set_petid(::google::protobuf::int64 value) {
  set_has_petid();
  petid_ = value;
  // @@protoc_insertion_point(field_set:PetInfo.petId)
}

// repeated .PetAttr petAttr = 11;
inline int PetInfo::petattr_size() const {
  return petattr_.size();
}
inline void PetInfo::clear_petattr() {
  petattr_.Clear();
}
inline const ::PetAttr& PetInfo::petattr(int index) const {
  // @@protoc_insertion_point(field_get:PetInfo.petAttr)
  return petattr_.Get(index);
}
inline ::PetAttr* PetInfo::mutable_petattr(int index) {
  // @@protoc_insertion_point(field_mutable:PetInfo.petAttr)
  return petattr_.Mutable(index);
}
inline ::PetAttr* PetInfo::add_petattr() {
  // @@protoc_insertion_point(field_add:PetInfo.petAttr)
  return petattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PetAttr >&
PetInfo::petattr() const {
  // @@protoc_insertion_point(field_list:PetInfo.petAttr)
  return petattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::PetAttr >*
PetInfo::mutable_petattr() {
  // @@protoc_insertion_point(field_mutable_list:PetInfo.petAttr)
  return &petattr_;
}

// repeated .PetAttr petAttrDown = 12;
inline int PetInfo::petattrdown_size() const {
  return petattrdown_.size();
}
inline void PetInfo::clear_petattrdown() {
  petattrdown_.Clear();
}
inline const ::PetAttr& PetInfo::petattrdown(int index) const {
  // @@protoc_insertion_point(field_get:PetInfo.petAttrDown)
  return petattrdown_.Get(index);
}
inline ::PetAttr* PetInfo::mutable_petattrdown(int index) {
  // @@protoc_insertion_point(field_mutable:PetInfo.petAttrDown)
  return petattrdown_.Mutable(index);
}
inline ::PetAttr* PetInfo::add_petattrdown() {
  // @@protoc_insertion_point(field_add:PetInfo.petAttrDown)
  return petattrdown_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PetAttr >&
PetInfo::petattrdown() const {
  // @@protoc_insertion_point(field_list:PetInfo.petAttrDown)
  return petattrdown_;
}
inline ::google::protobuf::RepeatedPtrField< ::PetAttr >*
PetInfo::mutable_petattrdown() {
  // @@protoc_insertion_point(field_mutable_list:PetInfo.petAttrDown)
  return &petattrdown_;
}

// repeated .SkillItemData skilldata = 13;
inline int PetInfo::skilldata_size() const {
  return skilldata_.size();
}
inline void PetInfo::clear_skilldata() {
  skilldata_.Clear();
}
inline const ::SkillItemData& PetInfo::skilldata(int index) const {
  // @@protoc_insertion_point(field_get:PetInfo.skilldata)
  return skilldata_.Get(index);
}
inline ::SkillItemData* PetInfo::mutable_skilldata(int index) {
  // @@protoc_insertion_point(field_mutable:PetInfo.skilldata)
  return skilldata_.Mutable(index);
}
inline ::SkillItemData* PetInfo::add_skilldata() {
  // @@protoc_insertion_point(field_add:PetInfo.skilldata)
  return skilldata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillItemData >&
PetInfo::skilldata() const {
  // @@protoc_insertion_point(field_list:PetInfo.skilldata)
  return skilldata_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillItemData >*
PetInfo::mutable_skilldata() {
  // @@protoc_insertion_point(field_mutable_list:PetInfo.skilldata)
  return &skilldata_;
}

// optional int64 objid = 14;
inline bool PetInfo::has_objid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PetInfo::set_has_objid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PetInfo::clear_has_objid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PetInfo::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 PetInfo::objid() const {
  // @@protoc_insertion_point(field_get:PetInfo.objid)
  return objid_;
}
inline void PetInfo::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:PetInfo.objid)
}

// -------------------------------------------------------------------

// GCChangeAttribute

// optional int64 objId = 1;
inline bool GCChangeAttribute::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCChangeAttribute::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCChangeAttribute::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCChangeAttribute::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 GCChangeAttribute::objid() const {
  // @@protoc_insertion_point(field_get:GCChangeAttribute.objId)
  return objid_;
}
inline void GCChangeAttribute::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:GCChangeAttribute.objId)
}

// optional int32 type = 2;
inline bool GCChangeAttribute::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCChangeAttribute::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCChangeAttribute::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCChangeAttribute::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCChangeAttribute::type() const {
  // @@protoc_insertion_point(field_get:GCChangeAttribute.type)
  return type_;
}
inline void GCChangeAttribute::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCChangeAttribute.type)
}

// optional int32 bid = 3;
inline bool GCChangeAttribute::has_bid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCChangeAttribute::set_has_bid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCChangeAttribute::clear_has_bid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCChangeAttribute::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 GCChangeAttribute::bid() const {
  // @@protoc_insertion_point(field_get:GCChangeAttribute.bid)
  return bid_;
}
inline void GCChangeAttribute::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
  // @@protoc_insertion_point(field_set:GCChangeAttribute.bid)
}

// optional int32 sid = 4;
inline bool GCChangeAttribute::has_sid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCChangeAttribute::set_has_sid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCChangeAttribute::clear_has_sid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCChangeAttribute::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 GCChangeAttribute::sid() const {
  // @@protoc_insertion_point(field_get:GCChangeAttribute.sid)
  return sid_;
}
inline void GCChangeAttribute::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:GCChangeAttribute.sid)
}

// optional string interactId = 5;
inline bool GCChangeAttribute::has_interactid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCChangeAttribute::set_has_interactid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCChangeAttribute::clear_has_interactid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCChangeAttribute::clear_interactid() {
  if (interactid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    interactid_->clear();
  }
  clear_has_interactid();
}
inline const ::std::string& GCChangeAttribute::interactid() const {
  // @@protoc_insertion_point(field_get:GCChangeAttribute.interactId)
  return *interactid_;
}
inline void GCChangeAttribute::set_interactid(const ::std::string& value) {
  set_has_interactid();
  if (interactid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    interactid_ = new ::std::string;
  }
  interactid_->assign(value);
  // @@protoc_insertion_point(field_set:GCChangeAttribute.interactId)
}
inline void GCChangeAttribute::set_interactid(const char* value) {
  set_has_interactid();
  if (interactid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    interactid_ = new ::std::string;
  }
  interactid_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCChangeAttribute.interactId)
}
inline void GCChangeAttribute::set_interactid(const char* value, size_t size) {
  set_has_interactid();
  if (interactid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    interactid_ = new ::std::string;
  }
  interactid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCChangeAttribute.interactId)
}
inline ::std::string* GCChangeAttribute::mutable_interactid() {
  set_has_interactid();
  if (interactid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    interactid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCChangeAttribute.interactId)
  return interactid_;
}
inline ::std::string* GCChangeAttribute::release_interactid() {
  clear_has_interactid();
  if (interactid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = interactid_;
    interactid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCChangeAttribute::set_allocated_interactid(::std::string* interactid) {
  if (interactid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete interactid_;
  }
  if (interactid) {
    set_has_interactid();
    interactid_ = interactid;
  } else {
    clear_has_interactid();
    interactid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCChangeAttribute.interactId)
}

// optional .CharacterInfo info = 6;
inline bool GCChangeAttribute::has_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCChangeAttribute::set_has_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCChangeAttribute::clear_has_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCChangeAttribute::clear_info() {
  if (info_ != NULL) info_->::CharacterInfo::Clear();
  clear_has_info();
}
inline const ::CharacterInfo& GCChangeAttribute::info() const {
  // @@protoc_insertion_point(field_get:GCChangeAttribute.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::CharacterInfo* GCChangeAttribute::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::CharacterInfo;
  // @@protoc_insertion_point(field_mutable:GCChangeAttribute.info)
  return info_;
}
inline ::CharacterInfo* GCChangeAttribute::release_info() {
  clear_has_info();
  ::CharacterInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GCChangeAttribute::set_allocated_info(::CharacterInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:GCChangeAttribute.info)
}

// -------------------------------------------------------------------

// GCErroeHintBack

// optional int32 errorCode = 1;
inline bool GCErroeHintBack::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCErroeHintBack::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCErroeHintBack::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCErroeHintBack::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 GCErroeHintBack::errorcode() const {
  // @@protoc_insertion_point(field_get:GCErroeHintBack.errorCode)
  return errorcode_;
}
inline void GCErroeHintBack::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:GCErroeHintBack.errorCode)
}

// optional string errorDesc = 2;
inline bool GCErroeHintBack::has_errordesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCErroeHintBack::set_has_errordesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCErroeHintBack::clear_has_errordesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCErroeHintBack::clear_errordesc() {
  if (errordesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errordesc_->clear();
  }
  clear_has_errordesc();
}
inline const ::std::string& GCErroeHintBack::errordesc() const {
  // @@protoc_insertion_point(field_get:GCErroeHintBack.errorDesc)
  return *errordesc_;
}
inline void GCErroeHintBack::set_errordesc(const ::std::string& value) {
  set_has_errordesc();
  if (errordesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errordesc_ = new ::std::string;
  }
  errordesc_->assign(value);
  // @@protoc_insertion_point(field_set:GCErroeHintBack.errorDesc)
}
inline void GCErroeHintBack::set_errordesc(const char* value) {
  set_has_errordesc();
  if (errordesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errordesc_ = new ::std::string;
  }
  errordesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCErroeHintBack.errorDesc)
}
inline void GCErroeHintBack::set_errordesc(const char* value, size_t size) {
  set_has_errordesc();
  if (errordesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errordesc_ = new ::std::string;
  }
  errordesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCErroeHintBack.errorDesc)
}
inline ::std::string* GCErroeHintBack::mutable_errordesc() {
  set_has_errordesc();
  if (errordesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errordesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCErroeHintBack.errorDesc)
  return errordesc_;
}
inline ::std::string* GCErroeHintBack::release_errordesc() {
  clear_has_errordesc();
  if (errordesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = errordesc_;
    errordesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCErroeHintBack::set_allocated_errordesc(::std::string* errordesc) {
  if (errordesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete errordesc_;
  }
  if (errordesc) {
    set_has_errordesc();
    errordesc_ = errordesc;
  } else {
    clear_has_errordesc();
    errordesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCErroeHintBack.errorDesc)
}

// repeated string parm = 3;
inline int GCErroeHintBack::parm_size() const {
  return parm_.size();
}
inline void GCErroeHintBack::clear_parm() {
  parm_.Clear();
}
inline const ::std::string& GCErroeHintBack::parm(int index) const {
  // @@protoc_insertion_point(field_get:GCErroeHintBack.parm)
  return parm_.Get(index);
}
inline ::std::string* GCErroeHintBack::mutable_parm(int index) {
  // @@protoc_insertion_point(field_mutable:GCErroeHintBack.parm)
  return parm_.Mutable(index);
}
inline void GCErroeHintBack::set_parm(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:GCErroeHintBack.parm)
  parm_.Mutable(index)->assign(value);
}
inline void GCErroeHintBack::set_parm(int index, const char* value) {
  parm_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:GCErroeHintBack.parm)
}
inline void GCErroeHintBack::set_parm(int index, const char* value, size_t size) {
  parm_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCErroeHintBack.parm)
}
inline ::std::string* GCErroeHintBack::add_parm() {
  return parm_.Add();
}
inline void GCErroeHintBack::add_parm(const ::std::string& value) {
  parm_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:GCErroeHintBack.parm)
}
inline void GCErroeHintBack::add_parm(const char* value) {
  parm_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:GCErroeHintBack.parm)
}
inline void GCErroeHintBack::add_parm(const char* value, size_t size) {
  parm_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:GCErroeHintBack.parm)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GCErroeHintBack::parm() const {
  // @@protoc_insertion_point(field_list:GCErroeHintBack.parm)
  return parm_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GCErroeHintBack::mutable_parm() {
  // @@protoc_insertion_point(field_mutable_list:GCErroeHintBack.parm)
  return &parm_;
}

// optional int32 boxType = 4;
inline bool GCErroeHintBack::has_boxtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCErroeHintBack::set_has_boxtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCErroeHintBack::clear_has_boxtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCErroeHintBack::clear_boxtype() {
  boxtype_ = 0;
  clear_has_boxtype();
}
inline ::google::protobuf::int32 GCErroeHintBack::boxtype() const {
  // @@protoc_insertion_point(field_get:GCErroeHintBack.boxType)
  return boxtype_;
}
inline void GCErroeHintBack::set_boxtype(::google::protobuf::int32 value) {
  set_has_boxtype();
  boxtype_ = value;
  // @@protoc_insertion_point(field_set:GCErroeHintBack.boxType)
}

// -------------------------------------------------------------------

// DeviceInfo

// optional int64 objId = 1;
inline bool DeviceInfo::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceInfo::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeviceInfo::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeviceInfo::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 DeviceInfo::objid() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.objId)
  return objid_;
}
inline void DeviceInfo::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:DeviceInfo.objId)
}

// optional .Vector3Info pos = 2;
inline bool DeviceInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeviceInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeviceInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeviceInfo::clear_pos() {
  if (pos_ != NULL) pos_->::Vector3Info::Clear();
  clear_has_pos();
}
inline const ::Vector3Info& DeviceInfo::pos() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Vector3Info* DeviceInfo::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:DeviceInfo.pos)
  return pos_;
}
inline ::Vector3Info* DeviceInfo::release_pos() {
  clear_has_pos();
  ::Vector3Info* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void DeviceInfo::set_allocated_pos(::Vector3Info* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:DeviceInfo.pos)
}

// optional int32 bid = 3;
inline bool DeviceInfo::has_bid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeviceInfo::set_has_bid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeviceInfo::clear_has_bid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeviceInfo::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 DeviceInfo::bid() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.bid)
  return bid_;
}
inline void DeviceInfo::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
  // @@protoc_insertion_point(field_set:DeviceInfo.bid)
}

// optional int32 sid = 4;
inline bool DeviceInfo::has_sid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeviceInfo::set_has_sid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeviceInfo::clear_has_sid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeviceInfo::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 DeviceInfo::sid() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.sid)
  return sid_;
}
inline void DeviceInfo::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:DeviceInfo.sid)
}

// optional int32 deviceType = 5;
inline bool DeviceInfo::has_devicetype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DeviceInfo::set_has_devicetype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DeviceInfo::clear_has_devicetype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DeviceInfo::clear_devicetype() {
  devicetype_ = 0;
  clear_has_devicetype();
}
inline ::google::protobuf::int32 DeviceInfo::devicetype() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.deviceType)
  return devicetype_;
}
inline void DeviceInfo::set_devicetype(::google::protobuf::int32 value) {
  set_has_devicetype();
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:DeviceInfo.deviceType)
}

// optional int32 num = 6;
inline bool DeviceInfo::has_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DeviceInfo::set_has_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DeviceInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DeviceInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 DeviceInfo::num() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.num)
  return num_;
}
inline void DeviceInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:DeviceInfo.num)
}

// optional int32 status = 7;
inline bool DeviceInfo::has_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DeviceInfo::set_has_status() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DeviceInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DeviceInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DeviceInfo::status() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.status)
  return status_;
}
inline void DeviceInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:DeviceInfo.status)
}

// optional .Vector3Info srcPos = 8;
inline bool DeviceInfo::has_srcpos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DeviceInfo::set_has_srcpos() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DeviceInfo::clear_has_srcpos() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DeviceInfo::clear_srcpos() {
  if (srcpos_ != NULL) srcpos_->::Vector3Info::Clear();
  clear_has_srcpos();
}
inline const ::Vector3Info& DeviceInfo::srcpos() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.srcPos)
  return srcpos_ != NULL ? *srcpos_ : *default_instance_->srcpos_;
}
inline ::Vector3Info* DeviceInfo::mutable_srcpos() {
  set_has_srcpos();
  if (srcpos_ == NULL) srcpos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:DeviceInfo.srcPos)
  return srcpos_;
}
inline ::Vector3Info* DeviceInfo::release_srcpos() {
  clear_has_srcpos();
  ::Vector3Info* temp = srcpos_;
  srcpos_ = NULL;
  return temp;
}
inline void DeviceInfo::set_allocated_srcpos(::Vector3Info* srcpos) {
  delete srcpos_;
  srcpos_ = srcpos;
  if (srcpos) {
    set_has_srcpos();
  } else {
    clear_has_srcpos();
  }
  // @@protoc_insertion_point(field_set_allocated:DeviceInfo.srcPos)
}

// optional int32 camp = 9;
inline bool DeviceInfo::has_camp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DeviceInfo::set_has_camp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DeviceInfo::clear_has_camp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DeviceInfo::clear_camp() {
  camp_ = 0;
  clear_has_camp();
}
inline ::google::protobuf::int32 DeviceInfo::camp() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.camp)
  return camp_;
}
inline void DeviceInfo::set_camp(::google::protobuf::int32 value) {
  set_has_camp();
  camp_ = value;
  // @@protoc_insertion_point(field_set:DeviceInfo.camp)
}

// optional int32 isCurrency = 10;
inline bool DeviceInfo::has_iscurrency() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DeviceInfo::set_has_iscurrency() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DeviceInfo::clear_has_iscurrency() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DeviceInfo::clear_iscurrency() {
  iscurrency_ = 0;
  clear_has_iscurrency();
}
inline ::google::protobuf::int32 DeviceInfo::iscurrency() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.isCurrency)
  return iscurrency_;
}
inline void DeviceInfo::set_iscurrency(::google::protobuf::int32 value) {
  set_has_iscurrency();
  iscurrency_ = value;
  // @@protoc_insertion_point(field_set:DeviceInfo.isCurrency)
}

// optional string str = 11;
inline bool DeviceInfo::has_str() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DeviceInfo::set_has_str() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DeviceInfo::clear_has_str() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DeviceInfo::clear_str() {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& DeviceInfo::str() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.str)
  return *str_;
}
inline void DeviceInfo::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set:DeviceInfo.str)
}
inline void DeviceInfo::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set_char:DeviceInfo.str)
}
inline void DeviceInfo::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DeviceInfo.str)
}
inline ::std::string* DeviceInfo::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:DeviceInfo.str)
  return str_;
}
inline ::std::string* DeviceInfo::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeviceInfo::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:DeviceInfo.str)
}

// optional .Vector3Info direction = 12;
inline bool DeviceInfo::has_direction() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DeviceInfo::set_has_direction() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DeviceInfo::clear_has_direction() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DeviceInfo::clear_direction() {
  if (direction_ != NULL) direction_->::Vector3Info::Clear();
  clear_has_direction();
}
inline const ::Vector3Info& DeviceInfo::direction() const {
  // @@protoc_insertion_point(field_get:DeviceInfo.direction)
  return direction_ != NULL ? *direction_ : *default_instance_->direction_;
}
inline ::Vector3Info* DeviceInfo::mutable_direction() {
  set_has_direction();
  if (direction_ == NULL) direction_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:DeviceInfo.direction)
  return direction_;
}
inline ::Vector3Info* DeviceInfo::release_direction() {
  clear_has_direction();
  ::Vector3Info* temp = direction_;
  direction_ = NULL;
  return temp;
}
inline void DeviceInfo::set_allocated_direction(::Vector3Info* direction) {
  delete direction_;
  direction_ = direction;
  if (direction) {
    set_has_direction();
  } else {
    clear_has_direction();
  }
  // @@protoc_insertion_point(field_set_allocated:DeviceInfo.direction)
}

// -------------------------------------------------------------------

// Achievement

// optional int32 id = 1;
inline bool Achievement::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Achievement::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Achievement::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Achievement::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Achievement::id() const {
  // @@protoc_insertion_point(field_get:Achievement.id)
  return id_;
}
inline void Achievement::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Achievement.id)
}

// optional int32 isover = 2;
inline bool Achievement::has_isover() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Achievement::set_has_isover() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Achievement::clear_has_isover() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Achievement::clear_isover() {
  isover_ = 0;
  clear_has_isover();
}
inline ::google::protobuf::int32 Achievement::isover() const {
  // @@protoc_insertion_point(field_get:Achievement.isover)
  return isover_;
}
inline void Achievement::set_isover(::google::protobuf::int32 value) {
  set_has_isover();
  isover_ = value;
  // @@protoc_insertion_point(field_set:Achievement.isover)
}

// optional int32 isget = 3;
inline bool Achievement::has_isget() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Achievement::set_has_isget() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Achievement::clear_has_isget() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Achievement::clear_isget() {
  isget_ = 0;
  clear_has_isget();
}
inline ::google::protobuf::int32 Achievement::isget() const {
  // @@protoc_insertion_point(field_get:Achievement.isget)
  return isget_;
}
inline void Achievement::set_isget(::google::protobuf::int32 value) {
  set_has_isget();
  isget_ = value;
  // @@protoc_insertion_point(field_set:Achievement.isget)
}

// optional int64 value = 4;
inline bool Achievement::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Achievement::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Achievement::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Achievement::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 Achievement::value() const {
  // @@protoc_insertion_point(field_get:Achievement.value)
  return value_;
}
inline void Achievement::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Achievement.value)
}

// optional int64 getachievetime = 5;
inline bool Achievement::has_getachievetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Achievement::set_has_getachievetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Achievement::clear_has_getachievetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Achievement::clear_getachievetime() {
  getachievetime_ = GOOGLE_LONGLONG(0);
  clear_has_getachievetime();
}
inline ::google::protobuf::int64 Achievement::getachievetime() const {
  // @@protoc_insertion_point(field_get:Achievement.getachievetime)
  return getachievetime_;
}
inline void Achievement::set_getachievetime(::google::protobuf::int64 value) {
  set_has_getachievetime();
  getachievetime_ = value;
  // @@protoc_insertion_point(field_set:Achievement.getachievetime)
}

// -------------------------------------------------------------------

// Titlel

// optional int32 id = 1;
inline bool Titlel::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Titlel::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Titlel::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Titlel::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Titlel::id() const {
  // @@protoc_insertion_point(field_get:Titlel.id)
  return id_;
}
inline void Titlel::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Titlel.id)
}

// optional int32 flag = 2;
inline bool Titlel::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Titlel::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Titlel::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Titlel::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 Titlel::flag() const {
  // @@protoc_insertion_point(field_get:Titlel.flag)
  return flag_;
}
inline void Titlel::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:Titlel.flag)
}

// optional int32 status = 3;
inline bool Titlel::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Titlel::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Titlel::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Titlel::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 Titlel::status() const {
  // @@protoc_insertion_point(field_get:Titlel.status)
  return status_;
}
inline void Titlel::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Titlel.status)
}

// optional int64 endtime = 4;
inline bool Titlel::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Titlel::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Titlel::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Titlel::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 Titlel::endtime() const {
  // @@protoc_insertion_point(field_get:Titlel.endtime)
  return endtime_;
}
inline void Titlel::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Titlel.endtime)
}

// -------------------------------------------------------------------

// TrapData

// optional int64 objId = 1;
inline bool TrapData::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrapData::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrapData::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrapData::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 TrapData::objid() const {
  // @@protoc_insertion_point(field_get:TrapData.objId)
  return objid_;
}
inline void TrapData::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:TrapData.objId)
}

// optional int32 sid = 2;
inline bool TrapData::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrapData::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrapData::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrapData::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 TrapData::sid() const {
  // @@protoc_insertion_point(field_get:TrapData.sid)
  return sid_;
}
inline void TrapData::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:TrapData.sid)
}

// repeated .TrapItemData items = 3;
inline int TrapData::items_size() const {
  return items_.size();
}
inline void TrapData::clear_items() {
  items_.Clear();
}
inline const ::TrapItemData& TrapData::items(int index) const {
  // @@protoc_insertion_point(field_get:TrapData.items)
  return items_.Get(index);
}
inline ::TrapItemData* TrapData::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:TrapData.items)
  return items_.Mutable(index);
}
inline ::TrapItemData* TrapData::add_items() {
  // @@protoc_insertion_point(field_add:TrapData.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TrapItemData >&
TrapData::items() const {
  // @@protoc_insertion_point(field_list:TrapData.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::TrapItemData >*
TrapData::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:TrapData.items)
  return &items_;
}

// -------------------------------------------------------------------

// TrapItemData

// optional int64 objId = 1;
inline bool TrapItemData::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrapItemData::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrapItemData::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrapItemData::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 TrapItemData::objid() const {
  // @@protoc_insertion_point(field_get:TrapItemData.objId)
  return objid_;
}
inline void TrapItemData::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:TrapItemData.objId)
}

// optional int32 sid = 2;
inline bool TrapItemData::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrapItemData::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrapItemData::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrapItemData::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 TrapItemData::sid() const {
  // @@protoc_insertion_point(field_get:TrapItemData.sid)
  return sid_;
}
inline void TrapItemData::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:TrapItemData.sid)
}

// optional .Vector3Info pos = 3;
inline bool TrapItemData::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrapItemData::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrapItemData::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrapItemData::clear_pos() {
  if (pos_ != NULL) pos_->::Vector3Info::Clear();
  clear_has_pos();
}
inline const ::Vector3Info& TrapItemData::pos() const {
  // @@protoc_insertion_point(field_get:TrapItemData.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Vector3Info* TrapItemData::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:TrapItemData.pos)
  return pos_;
}
inline ::Vector3Info* TrapItemData::release_pos() {
  clear_has_pos();
  ::Vector3Info* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void TrapItemData::set_allocated_pos(::Vector3Info* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:TrapItemData.pos)
}

// optional .Vector3Info dir = 4;
inline bool TrapItemData::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TrapItemData::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TrapItemData::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TrapItemData::clear_dir() {
  if (dir_ != NULL) dir_->::Vector3Info::Clear();
  clear_has_dir();
}
inline const ::Vector3Info& TrapItemData::dir() const {
  // @@protoc_insertion_point(field_get:TrapItemData.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::Vector3Info* TrapItemData::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:TrapItemData.dir)
  return dir_;
}
inline ::Vector3Info* TrapItemData::release_dir() {
  clear_has_dir();
  ::Vector3Info* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void TrapItemData::set_allocated_dir(::Vector3Info* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:TrapItemData.dir)
}

// -------------------------------------------------------------------

// VipData

// optional int32 viplevel = 1;
inline bool VipData::has_viplevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipData::set_has_viplevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipData::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipData::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 VipData::viplevel() const {
  // @@protoc_insertion_point(field_get:VipData.viplevel)
  return viplevel_;
}
inline void VipData::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:VipData.viplevel)
}

// optional int32 getflag = 2;
inline bool VipData::has_getflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipData::set_has_getflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipData::clear_has_getflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipData::clear_getflag() {
  getflag_ = 0;
  clear_has_getflag();
}
inline ::google::protobuf::int32 VipData::getflag() const {
  // @@protoc_insertion_point(field_get:VipData.getflag)
  return getflag_;
}
inline void VipData::set_getflag(::google::protobuf::int32 value) {
  set_has_getflag();
  getflag_ = value;
  // @@protoc_insertion_point(field_set:VipData.getflag)
}

// -------------------------------------------------------------------

// GangInfo

// optional int64 gangId = 1;
inline bool GangInfo::has_gangid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GangInfo::set_has_gangid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GangInfo::clear_has_gangid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GangInfo::clear_gangid() {
  gangid_ = GOOGLE_LONGLONG(0);
  clear_has_gangid();
}
inline ::google::protobuf::int64 GangInfo::gangid() const {
  // @@protoc_insertion_point(field_get:GangInfo.gangId)
  return gangid_;
}
inline void GangInfo::set_gangid(::google::protobuf::int64 value) {
  set_has_gangid();
  gangid_ = value;
  // @@protoc_insertion_point(field_set:GangInfo.gangId)
}

// optional string gangName = 2;
inline bool GangInfo::has_gangname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GangInfo::set_has_gangname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GangInfo::clear_has_gangname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GangInfo::clear_gangname() {
  if (gangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_->clear();
  }
  clear_has_gangname();
}
inline const ::std::string& GangInfo::gangname() const {
  // @@protoc_insertion_point(field_get:GangInfo.gangName)
  return *gangname_;
}
inline void GangInfo::set_gangname(const ::std::string& value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
  // @@protoc_insertion_point(field_set:GangInfo.gangName)
}
inline void GangInfo::set_gangname(const char* value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GangInfo.gangName)
}
inline void GangInfo::set_gangname(const char* value, size_t size) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GangInfo.gangName)
}
inline ::std::string* GangInfo::mutable_gangname() {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GangInfo.gangName)
  return gangname_;
}
inline ::std::string* GangInfo::release_gangname() {
  clear_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gangname_;
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GangInfo::set_allocated_gangname(::std::string* gangname) {
  if (gangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gangname_;
  }
  if (gangname) {
    set_has_gangname();
    gangname_ = gangname;
  } else {
    clear_has_gangname();
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GangInfo.gangName)
}

// optional string totemName = 3;
inline bool GangInfo::has_totemname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GangInfo::set_has_totemname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GangInfo::clear_has_totemname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GangInfo::clear_totemname() {
  if (totemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    totemname_->clear();
  }
  clear_has_totemname();
}
inline const ::std::string& GangInfo::totemname() const {
  // @@protoc_insertion_point(field_get:GangInfo.totemName)
  return *totemname_;
}
inline void GangInfo::set_totemname(const ::std::string& value) {
  set_has_totemname();
  if (totemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    totemname_ = new ::std::string;
  }
  totemname_->assign(value);
  // @@protoc_insertion_point(field_set:GangInfo.totemName)
}
inline void GangInfo::set_totemname(const char* value) {
  set_has_totemname();
  if (totemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    totemname_ = new ::std::string;
  }
  totemname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GangInfo.totemName)
}
inline void GangInfo::set_totemname(const char* value, size_t size) {
  set_has_totemname();
  if (totemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    totemname_ = new ::std::string;
  }
  totemname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GangInfo.totemName)
}
inline ::std::string* GangInfo::mutable_totemname() {
  set_has_totemname();
  if (totemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    totemname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GangInfo.totemName)
  return totemname_;
}
inline ::std::string* GangInfo::release_totemname() {
  clear_has_totemname();
  if (totemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = totemname_;
    totemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GangInfo::set_allocated_totemname(::std::string* totemname) {
  if (totemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete totemname_;
  }
  if (totemname) {
    set_has_totemname();
    totemname_ = totemname;
  } else {
    clear_has_totemname();
    totemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GangInfo.totemName)
}

// optional int32 gangJob = 4;
inline bool GangInfo::has_gangjob() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GangInfo::set_has_gangjob() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GangInfo::clear_has_gangjob() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GangInfo::clear_gangjob() {
  gangjob_ = 0;
  clear_has_gangjob();
}
inline ::google::protobuf::int32 GangInfo::gangjob() const {
  // @@protoc_insertion_point(field_get:GangInfo.gangJob)
  return gangjob_;
}
inline void GangInfo::set_gangjob(::google::protobuf::int32 value) {
  set_has_gangjob();
  gangjob_ = value;
  // @@protoc_insertion_point(field_set:GangInfo.gangJob)
}

// -------------------------------------------------------------------

// FriendData

// optional int64 objId = 1;
inline bool FriendData::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendData::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendData::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendData::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 FriendData::objid() const {
  // @@protoc_insertion_point(field_get:FriendData.objId)
  return objid_;
}
inline void FriendData::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:FriendData.objId)
}

// optional string address = 2;
inline bool FriendData::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendData::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendData::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendData::clear_address() {
  if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_->clear();
  }
  clear_has_address();
}
inline const ::std::string& FriendData::address() const {
  // @@protoc_insertion_point(field_get:FriendData.address)
  return *address_;
}
inline void FriendData::set_address(const ::std::string& value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(value);
  // @@protoc_insertion_point(field_set:FriendData.address)
}
inline void FriendData::set_address(const char* value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(value);
  // @@protoc_insertion_point(field_set_char:FriendData.address)
}
inline void FriendData::set_address(const char* value, size_t size) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FriendData.address)
}
inline ::std::string* FriendData::mutable_address() {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FriendData.address)
  return address_;
}
inline ::std::string* FriendData::release_address() {
  clear_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = address_;
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendData::set_allocated_address(::std::string* address) {
  if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete address_;
  }
  if (address) {
    set_has_address();
    address_ = address;
  } else {
    clear_has_address();
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FriendData.address)
}

// optional int32 online = 3;
inline bool FriendData::has_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendData::set_has_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendData::clear_has_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendData::clear_online() {
  online_ = 0;
  clear_has_online();
}
inline ::google::protobuf::int32 FriendData::online() const {
  // @@protoc_insertion_point(field_get:FriendData.online)
  return online_;
}
inline void FriendData::set_online(::google::protobuf::int32 value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:FriendData.online)
}

// optional int32 type = 4;
inline bool FriendData::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendData::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendData::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 FriendData::type() const {
  // @@protoc_insertion_point(field_get:FriendData.type)
  return type_;
}
inline void FriendData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:FriendData.type)
}

// optional int32 career = 5;
inline bool FriendData::has_career() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendData::set_has_career() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendData::clear_has_career() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendData::clear_career() {
  career_ = 0;
  clear_has_career();
}
inline ::google::protobuf::int32 FriendData::career() const {
  // @@protoc_insertion_point(field_get:FriendData.career)
  return career_;
}
inline void FriendData::set_career(::google::protobuf::int32 value) {
  set_has_career();
  career_ = value;
  // @@protoc_insertion_point(field_set:FriendData.career)
}

// optional string name = 6;
inline bool FriendData::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FriendData::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FriendData::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FriendData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FriendData::name() const {
  // @@protoc_insertion_point(field_get:FriendData.name)
  return *name_;
}
inline void FriendData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:FriendData.name)
}
inline void FriendData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:FriendData.name)
}
inline void FriendData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FriendData.name)
}
inline ::std::string* FriendData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FriendData.name)
  return name_;
}
inline ::std::string* FriendData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FriendData.name)
}

// optional int32 level = 7;
inline bool FriendData::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FriendData::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FriendData::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FriendData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 FriendData::level() const {
  // @@protoc_insertion_point(field_get:FriendData.level)
  return level_;
}
inline void FriendData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:FriendData.level)
}

// optional int32 sex = 8;
inline bool FriendData::has_sex() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FriendData::set_has_sex() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FriendData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FriendData::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 FriendData::sex() const {
  // @@protoc_insertion_point(field_get:FriendData.sex)
  return sex_;
}
inline void FriendData::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:FriendData.sex)
}

// optional int32 vip = 9;
inline bool FriendData::has_vip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FriendData::set_has_vip() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FriendData::clear_has_vip() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FriendData::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 FriendData::vip() const {
  // @@protoc_insertion_point(field_get:FriendData.vip)
  return vip_;
}
inline void FriendData::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:FriendData.vip)
}

// -------------------------------------------------------------------

// PersonalMessagees

// optional int32 type = 1;
inline bool PersonalMessagees::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PersonalMessagees::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PersonalMessagees::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PersonalMessagees::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PersonalMessagees::type() const {
  // @@protoc_insertion_point(field_get:PersonalMessagees.type)
  return type_;
}
inline void PersonalMessagees::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:PersonalMessagees.type)
}

// optional int64 objId = 2;
inline bool PersonalMessagees::has_objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PersonalMessagees::set_has_objid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PersonalMessagees::clear_has_objid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PersonalMessagees::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 PersonalMessagees::objid() const {
  // @@protoc_insertion_point(field_get:PersonalMessagees.objId)
  return objid_;
}
inline void PersonalMessagees::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:PersonalMessagees.objId)
}

// optional string name = 3;
inline bool PersonalMessagees::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PersonalMessagees::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PersonalMessagees::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PersonalMessagees::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PersonalMessagees::name() const {
  // @@protoc_insertion_point(field_get:PersonalMessagees.name)
  return *name_;
}
inline void PersonalMessagees::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:PersonalMessagees.name)
}
inline void PersonalMessagees::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:PersonalMessagees.name)
}
inline void PersonalMessagees::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PersonalMessagees.name)
}
inline ::std::string* PersonalMessagees::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PersonalMessagees.name)
  return name_;
}
inline ::std::string* PersonalMessagees::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PersonalMessagees::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PersonalMessagees.name)
}

// -------------------------------------------------------------------

// GCCmmonDialog

// optional int32 type = 1;
inline bool GCCmmonDialog::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCCmmonDialog::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCCmmonDialog::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCCmmonDialog::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCCmmonDialog::type() const {
  // @@protoc_insertion_point(field_get:GCCmmonDialog.type)
  return type_;
}
inline void GCCmmonDialog::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCCmmonDialog.type)
}

// repeated string contents = 2;
inline int GCCmmonDialog::contents_size() const {
  return contents_.size();
}
inline void GCCmmonDialog::clear_contents() {
  contents_.Clear();
}
inline const ::std::string& GCCmmonDialog::contents(int index) const {
  // @@protoc_insertion_point(field_get:GCCmmonDialog.contents)
  return contents_.Get(index);
}
inline ::std::string* GCCmmonDialog::mutable_contents(int index) {
  // @@protoc_insertion_point(field_mutable:GCCmmonDialog.contents)
  return contents_.Mutable(index);
}
inline void GCCmmonDialog::set_contents(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:GCCmmonDialog.contents)
  contents_.Mutable(index)->assign(value);
}
inline void GCCmmonDialog::set_contents(int index, const char* value) {
  contents_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:GCCmmonDialog.contents)
}
inline void GCCmmonDialog::set_contents(int index, const char* value, size_t size) {
  contents_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCCmmonDialog.contents)
}
inline ::std::string* GCCmmonDialog::add_contents() {
  return contents_.Add();
}
inline void GCCmmonDialog::add_contents(const ::std::string& value) {
  contents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:GCCmmonDialog.contents)
}
inline void GCCmmonDialog::add_contents(const char* value) {
  contents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:GCCmmonDialog.contents)
}
inline void GCCmmonDialog::add_contents(const char* value, size_t size) {
  contents_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:GCCmmonDialog.contents)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GCCmmonDialog::contents() const {
  // @@protoc_insertion_point(field_list:GCCmmonDialog.contents)
  return contents_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GCCmmonDialog::mutable_contents() {
  // @@protoc_insertion_point(field_mutable_list:GCCmmonDialog.contents)
  return &contents_;
}

// -------------------------------------------------------------------

// SkillAttackRelation

// optional int64 objId = 1;
inline bool SkillAttackRelation::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillAttackRelation::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillAttackRelation::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillAttackRelation::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 SkillAttackRelation::objid() const {
  // @@protoc_insertion_point(field_get:SkillAttackRelation.objId)
  return objid_;
}
inline void SkillAttackRelation::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:SkillAttackRelation.objId)
}

// optional int32 relation = 2;
inline bool SkillAttackRelation::has_relation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillAttackRelation::set_has_relation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillAttackRelation::clear_has_relation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillAttackRelation::clear_relation() {
  relation_ = 0;
  clear_has_relation();
}
inline ::google::protobuf::int32 SkillAttackRelation::relation() const {
  // @@protoc_insertion_point(field_get:SkillAttackRelation.relation)
  return relation_;
}
inline void SkillAttackRelation::set_relation(::google::protobuf::int32 value) {
  set_has_relation();
  relation_ = value;
  // @@protoc_insertion_point(field_set:SkillAttackRelation.relation)
}

// -------------------------------------------------------------------

// GCSendAddExp

// optional int32 bid = 1;
inline bool GCSendAddExp::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSendAddExp::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSendAddExp::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSendAddExp::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 GCSendAddExp::bid() const {
  // @@protoc_insertion_point(field_get:GCSendAddExp.bid)
  return bid_;
}
inline void GCSendAddExp::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
  // @@protoc_insertion_point(field_set:GCSendAddExp.bid)
}

// optional int64 sid = 2;
inline bool GCSendAddExp::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSendAddExp::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSendAddExp::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSendAddExp::clear_sid() {
  sid_ = GOOGLE_LONGLONG(0);
  clear_has_sid();
}
inline ::google::protobuf::int64 GCSendAddExp::sid() const {
  // @@protoc_insertion_point(field_get:GCSendAddExp.sid)
  return sid_;
}
inline void GCSendAddExp::set_sid(::google::protobuf::int64 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:GCSendAddExp.sid)
}

// optional int32 addExp = 3;
inline bool GCSendAddExp::has_addexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSendAddExp::set_has_addexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSendAddExp::clear_has_addexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSendAddExp::clear_addexp() {
  addexp_ = 0;
  clear_has_addexp();
}
inline ::google::protobuf::int32 GCSendAddExp::addexp() const {
  // @@protoc_insertion_point(field_get:GCSendAddExp.addExp)
  return addexp_;
}
inline void GCSendAddExp::set_addexp(::google::protobuf::int32 value) {
  set_has_addexp();
  addexp_ = value;
  // @@protoc_insertion_point(field_set:GCSendAddExp.addExp)
}

// optional int32 source = 4;
inline bool GCSendAddExp::has_source() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCSendAddExp::set_has_source() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCSendAddExp::clear_has_source() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCSendAddExp::clear_source() {
  source_ = 0;
  clear_has_source();
}
inline ::google::protobuf::int32 GCSendAddExp::source() const {
  // @@protoc_insertion_point(field_get:GCSendAddExp.source)
  return source_;
}
inline void GCSendAddExp::set_source(::google::protobuf::int32 value) {
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:GCSendAddExp.source)
}

// -------------------------------------------------------------------

// GCAddVerifyBox

// optional int32 type = 1;
inline bool GCAddVerifyBox::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCAddVerifyBox::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCAddVerifyBox::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCAddVerifyBox::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCAddVerifyBox::type() const {
  // @@protoc_insertion_point(field_get:GCAddVerifyBox.type)
  return type_;
}
inline void GCAddVerifyBox::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCAddVerifyBox.type)
}

// optional int32 operate = 2;
inline bool GCAddVerifyBox::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCAddVerifyBox::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCAddVerifyBox::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCAddVerifyBox::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 GCAddVerifyBox::operate() const {
  // @@protoc_insertion_point(field_get:GCAddVerifyBox.operate)
  return operate_;
}
inline void GCAddVerifyBox::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:GCAddVerifyBox.operate)
}

// optional int32 time = 3;
inline bool GCAddVerifyBox::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCAddVerifyBox::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCAddVerifyBox::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCAddVerifyBox::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 GCAddVerifyBox::time() const {
  // @@protoc_insertion_point(field_get:GCAddVerifyBox.time)
  return time_;
}
inline void GCAddVerifyBox::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GCAddVerifyBox.time)
}

// repeated string params = 4;
inline int GCAddVerifyBox::params_size() const {
  return params_.size();
}
inline void GCAddVerifyBox::clear_params() {
  params_.Clear();
}
inline const ::std::string& GCAddVerifyBox::params(int index) const {
  // @@protoc_insertion_point(field_get:GCAddVerifyBox.params)
  return params_.Get(index);
}
inline ::std::string* GCAddVerifyBox::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:GCAddVerifyBox.params)
  return params_.Mutable(index);
}
inline void GCAddVerifyBox::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:GCAddVerifyBox.params)
  params_.Mutable(index)->assign(value);
}
inline void GCAddVerifyBox::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:GCAddVerifyBox.params)
}
inline void GCAddVerifyBox::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCAddVerifyBox.params)
}
inline ::std::string* GCAddVerifyBox::add_params() {
  return params_.Add();
}
inline void GCAddVerifyBox::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:GCAddVerifyBox.params)
}
inline void GCAddVerifyBox::add_params(const char* value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:GCAddVerifyBox.params)
}
inline void GCAddVerifyBox::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:GCAddVerifyBox.params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GCAddVerifyBox::params() const {
  // @@protoc_insertion_point(field_list:GCAddVerifyBox.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GCAddVerifyBox::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:GCAddVerifyBox.params)
  return &params_;
}

// optional int32 messageID = 5;
inline bool GCAddVerifyBox::has_messageid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCAddVerifyBox::set_has_messageid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCAddVerifyBox::clear_has_messageid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCAddVerifyBox::clear_messageid() {
  messageid_ = 0;
  clear_has_messageid();
}
inline ::google::protobuf::int32 GCAddVerifyBox::messageid() const {
  // @@protoc_insertion_point(field_get:GCAddVerifyBox.messageID)
  return messageid_;
}
inline void GCAddVerifyBox::set_messageid(::google::protobuf::int32 value) {
  set_has_messageid();
  messageid_ = value;
  // @@protoc_insertion_point(field_set:GCAddVerifyBox.messageID)
}

// -------------------------------------------------------------------

// CGVerifyBoxResult

// optional int32 type = 1;
inline bool CGVerifyBoxResult::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGVerifyBoxResult::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGVerifyBoxResult::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGVerifyBoxResult::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGVerifyBoxResult::type() const {
  // @@protoc_insertion_point(field_get:CGVerifyBoxResult.type)
  return type_;
}
inline void CGVerifyBoxResult::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGVerifyBoxResult.type)
}

// optional int32 operate = 2;
inline bool CGVerifyBoxResult::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGVerifyBoxResult::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGVerifyBoxResult::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGVerifyBoxResult::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 CGVerifyBoxResult::operate() const {
  // @@protoc_insertion_point(field_get:CGVerifyBoxResult.operate)
  return operate_;
}
inline void CGVerifyBoxResult::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:CGVerifyBoxResult.operate)
}

// repeated string params = 3;
inline int CGVerifyBoxResult::params_size() const {
  return params_.size();
}
inline void CGVerifyBoxResult::clear_params() {
  params_.Clear();
}
inline const ::std::string& CGVerifyBoxResult::params(int index) const {
  // @@protoc_insertion_point(field_get:CGVerifyBoxResult.params)
  return params_.Get(index);
}
inline ::std::string* CGVerifyBoxResult::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:CGVerifyBoxResult.params)
  return params_.Mutable(index);
}
inline void CGVerifyBoxResult::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CGVerifyBoxResult.params)
  params_.Mutable(index)->assign(value);
}
inline void CGVerifyBoxResult::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CGVerifyBoxResult.params)
}
inline void CGVerifyBoxResult::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGVerifyBoxResult.params)
}
inline ::std::string* CGVerifyBoxResult::add_params() {
  return params_.Add();
}
inline void CGVerifyBoxResult::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CGVerifyBoxResult.params)
}
inline void CGVerifyBoxResult::add_params(const char* value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CGVerifyBoxResult.params)
}
inline void CGVerifyBoxResult::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CGVerifyBoxResult.params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CGVerifyBoxResult::params() const {
  // @@protoc_insertion_point(field_list:CGVerifyBoxResult.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CGVerifyBoxResult::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:CGVerifyBoxResult.params)
  return &params_;
}

// -------------------------------------------------------------------

// GCCharacterTalk

// optional int64 objId = 1;
inline bool GCCharacterTalk::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCCharacterTalk::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCCharacterTalk::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCCharacterTalk::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 GCCharacterTalk::objid() const {
  // @@protoc_insertion_point(field_get:GCCharacterTalk.objId)
  return objid_;
}
inline void GCCharacterTalk::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:GCCharacterTalk.objId)
}

// optional int32 talkWord = 2;
inline bool GCCharacterTalk::has_talkword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCCharacterTalk::set_has_talkword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCCharacterTalk::clear_has_talkword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCCharacterTalk::clear_talkword() {
  talkword_ = 0;
  clear_has_talkword();
}
inline ::google::protobuf::int32 GCCharacterTalk::talkword() const {
  // @@protoc_insertion_point(field_get:GCCharacterTalk.talkWord)
  return talkword_;
}
inline void GCCharacterTalk::set_talkword(::google::protobuf::int32 value) {
  set_has_talkword();
  talkword_ = value;
  // @@protoc_insertion_point(field_set:GCCharacterTalk.talkWord)
}

// optional int32 talkVoice = 3;
inline bool GCCharacterTalk::has_talkvoice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCCharacterTalk::set_has_talkvoice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCCharacterTalk::clear_has_talkvoice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCCharacterTalk::clear_talkvoice() {
  talkvoice_ = 0;
  clear_has_talkvoice();
}
inline ::google::protobuf::int32 GCCharacterTalk::talkvoice() const {
  // @@protoc_insertion_point(field_get:GCCharacterTalk.talkVoice)
  return talkvoice_;
}
inline void GCCharacterTalk::set_talkvoice(::google::protobuf::int32 value) {
  set_has_talkvoice();
  talkvoice_ = value;
  // @@protoc_insertion_point(field_set:GCCharacterTalk.talkVoice)
}

// -------------------------------------------------------------------

// GGDungeonChangeScene

// optional int32 id = 1;
inline bool GGDungeonChangeScene::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GGDungeonChangeScene::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GGDungeonChangeScene::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GGDungeonChangeScene::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GGDungeonChangeScene::id() const {
  // @@protoc_insertion_point(field_get:GGDungeonChangeScene.id)
  return id_;
}
inline void GGDungeonChangeScene::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GGDungeonChangeScene.id)
}

// optional int32 type = 2;
inline bool GGDungeonChangeScene::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GGDungeonChangeScene::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GGDungeonChangeScene::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GGDungeonChangeScene::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GGDungeonChangeScene::type() const {
  // @@protoc_insertion_point(field_get:GGDungeonChangeScene.type)
  return type_;
}
inline void GGDungeonChangeScene::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GGDungeonChangeScene.type)
}

// optional int32 instanceId = 3;
inline bool GGDungeonChangeScene::has_instanceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GGDungeonChangeScene::set_has_instanceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GGDungeonChangeScene::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GGDungeonChangeScene::clear_instanceid() {
  instanceid_ = 0;
  clear_has_instanceid();
}
inline ::google::protobuf::int32 GGDungeonChangeScene::instanceid() const {
  // @@protoc_insertion_point(field_get:GGDungeonChangeScene.instanceId)
  return instanceid_;
}
inline void GGDungeonChangeScene::set_instanceid(::google::protobuf::int32 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:GGDungeonChangeScene.instanceId)
}

// -------------------------------------------------------------------

// RandomIndexInfo

// optional int32 randomIndexHitChances = 1;
inline bool RandomIndexInfo::has_randomindexhitchances() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RandomIndexInfo::set_has_randomindexhitchances() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RandomIndexInfo::clear_has_randomindexhitchances() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RandomIndexInfo::clear_randomindexhitchances() {
  randomindexhitchances_ = 0;
  clear_has_randomindexhitchances();
}
inline ::google::protobuf::int32 RandomIndexInfo::randomindexhitchances() const {
  // @@protoc_insertion_point(field_get:RandomIndexInfo.randomIndexHitChances)
  return randomindexhitchances_;
}
inline void RandomIndexInfo::set_randomindexhitchances(::google::protobuf::int32 value) {
  set_has_randomindexhitchances();
  randomindexhitchances_ = value;
  // @@protoc_insertion_point(field_set:RandomIndexInfo.randomIndexHitChances)
}

// optional int32 randomIndexCrit = 2;
inline bool RandomIndexInfo::has_randomindexcrit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RandomIndexInfo::set_has_randomindexcrit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RandomIndexInfo::clear_has_randomindexcrit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RandomIndexInfo::clear_randomindexcrit() {
  randomindexcrit_ = 0;
  clear_has_randomindexcrit();
}
inline ::google::protobuf::int32 RandomIndexInfo::randomindexcrit() const {
  // @@protoc_insertion_point(field_get:RandomIndexInfo.randomIndexCrit)
  return randomindexcrit_;
}
inline void RandomIndexInfo::set_randomindexcrit(::google::protobuf::int32 value) {
  set_has_randomindexcrit();
  randomindexcrit_ = value;
  // @@protoc_insertion_point(field_set:RandomIndexInfo.randomIndexCrit)
}

// -------------------------------------------------------------------

// Iteminfo

// optional int32 bid = 1;
inline bool Iteminfo::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Iteminfo::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Iteminfo::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Iteminfo::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 Iteminfo::bid() const {
  // @@protoc_insertion_point(field_get:Iteminfo.bid)
  return bid_;
}
inline void Iteminfo::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
  // @@protoc_insertion_point(field_set:Iteminfo.bid)
}

// optional int32 sid = 2;
inline bool Iteminfo::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Iteminfo::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Iteminfo::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Iteminfo::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 Iteminfo::sid() const {
  // @@protoc_insertion_point(field_get:Iteminfo.sid)
  return sid_;
}
inline void Iteminfo::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:Iteminfo.sid)
}

// optional int32 num = 3;
inline bool Iteminfo::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Iteminfo::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Iteminfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Iteminfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 Iteminfo::num() const {
  // @@protoc_insertion_point(field_get:Iteminfo.num)
  return num_;
}
inline void Iteminfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Iteminfo.num)
}

// -------------------------------------------------------------------

// GCPlayEffect

// optional int32 id = 1;
inline bool GCPlayEffect::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPlayEffect::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPlayEffect::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPlayEffect::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCPlayEffect::id() const {
  // @@protoc_insertion_point(field_get:GCPlayEffect.id)
  return id_;
}
inline void GCPlayEffect::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCPlayEffect.id)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_InnerMessage_2eproto__INCLUDED
