// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MailMessage.proto

#ifndef PROTOBUF_MailMessage_2eproto__INCLUDED
#define PROTOBUF_MailMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "BackpackMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MailMessage_2eproto();
void protobuf_AssignDesc_MailMessage_2eproto();
void protobuf_ShutdownFile_MailMessage_2eproto();

class MailInfo;
class GCSendMailStatus;
class CGSendMail2Player;
class GCSendMail2Player;
class GCSysSendMail2Player;
class CGGetMailList;
class GCGetMailList;
class CGReadMail;
class GCReadMail;
class CGGetItemInMail;
class GCGetItemInMail;
class CGDelMail;
class GCDelMail;

// ===================================================================

class MailInfo : public ::google::protobuf::Message {
 public:
  MailInfo();
  virtual ~MailInfo();

  MailInfo(const MailInfo& from);

  inline MailInfo& operator=(const MailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailInfo& default_instance();

  void Swap(MailInfo* other);

  // implements Message ----------------------------------------------

  MailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailInfo& from);
  void MergeFrom(const MailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::int64 mailid() const;
  inline void set_mailid(::google::protobuf::int64 value);

  // optional int64 receivePlayerID = 2;
  inline bool has_receiveplayerid() const;
  inline void clear_receiveplayerid();
  static const int kReceivePlayerIDFieldNumber = 2;
  inline ::google::protobuf::int64 receiveplayerid() const;
  inline void set_receiveplayerid(::google::protobuf::int64 value);

  // optional int32 sendType = 3;
  inline bool has_sendtype() const;
  inline void clear_sendtype();
  static const int kSendTypeFieldNumber = 3;
  inline ::google::protobuf::int32 sendtype() const;
  inline void set_sendtype(::google::protobuf::int32 value);

  // optional int64 playerID = 4;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 4;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // optional string sendName = 5;
  inline bool has_sendname() const;
  inline void clear_sendname();
  static const int kSendNameFieldNumber = 5;
  inline const ::std::string& sendname() const;
  inline void set_sendname(const ::std::string& value);
  inline void set_sendname(const char* value);
  inline void set_sendname(const char* value, size_t size);
  inline ::std::string* mutable_sendname();
  inline ::std::string* release_sendname();
  inline void set_allocated_sendname(::std::string* sendname);

  // optional string content = 6;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 6;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // repeated .BackpackItem items = 7;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 7;
  inline const ::BackpackItem& items(int index) const;
  inline ::BackpackItem* mutable_items(int index);
  inline ::BackpackItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::BackpackItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::BackpackItem >*
      mutable_items();

  // optional int64 sendTime = 8;
  inline bool has_sendtime() const;
  inline void clear_sendtime();
  static const int kSendTimeFieldNumber = 8;
  inline ::google::protobuf::int64 sendtime() const;
  inline void set_sendtime(::google::protobuf::int64 value);

  // optional int32 state = 9;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 9;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional string title = 10;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 10;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // @@protoc_insertion_point(class_scope:MailInfo)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_receiveplayerid();
  inline void clear_has_receiveplayerid();
  inline void set_has_sendtype();
  inline void clear_has_sendtype();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_sendname();
  inline void clear_has_sendname();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_sendtime();
  inline void clear_has_sendtime();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_title();
  inline void clear_has_title();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 mailid_;
  ::google::protobuf::int64 receiveplayerid_;
  ::google::protobuf::int64 playerid_;
  ::std::string* sendname_;
  ::std::string* content_;
  ::google::protobuf::int32 sendtype_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::RepeatedPtrField< ::BackpackItem > items_;
  ::google::protobuf::int64 sendtime_;
  ::std::string* title_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static MailInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCSendMailStatus : public ::google::protobuf::Message {
 public:
  GCSendMailStatus();
  virtual ~GCSendMailStatus();

  GCSendMailStatus(const GCSendMailStatus& from);

  inline GCSendMailStatus& operator=(const GCSendMailStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendMailStatus& default_instance();

  void Swap(GCSendMailStatus* other);

  // implements Message ----------------------------------------------

  GCSendMailStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendMailStatus& from);
  void MergeFrom(const GCSendMailStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 offRead = 1;
  inline bool has_offread() const;
  inline void clear_offread();
  static const int kOffReadFieldNumber = 1;
  inline ::google::protobuf::int32 offread() const;
  inline void set_offread(::google::protobuf::int32 value);

  // optional int32 total = 2;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 2;
  inline ::google::protobuf::int32 total() const;
  inline void set_total(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCSendMailStatus)
 private:
  inline void set_has_offread();
  inline void clear_has_offread();
  inline void set_has_total();
  inline void clear_has_total();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 offread_;
  ::google::protobuf::int32 total_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendMailStatus* default_instance_;
};
// -------------------------------------------------------------------

class CGSendMail2Player : public ::google::protobuf::Message {
 public:
  CGSendMail2Player();
  virtual ~CGSendMail2Player();

  CGSendMail2Player(const CGSendMail2Player& from);

  inline CGSendMail2Player& operator=(const CGSendMail2Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSendMail2Player& default_instance();

  void Swap(CGSendMail2Player* other);

  // implements Message ----------------------------------------------

  CGSendMail2Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSendMail2Player& from);
  void MergeFrom(const CGSendMail2Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MailInfo mail = 1;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 1;
  inline const ::MailInfo& mail() const;
  inline ::MailInfo* mutable_mail();
  inline ::MailInfo* release_mail();
  inline void set_allocated_mail(::MailInfo* mail);

  // @@protoc_insertion_point(class_scope:CGSendMail2Player)
 private:
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MailInfo* mail_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSendMail2Player* default_instance_;
};
// -------------------------------------------------------------------

class GCSendMail2Player : public ::google::protobuf::Message {
 public:
  GCSendMail2Player();
  virtual ~GCSendMail2Player();

  GCSendMail2Player(const GCSendMail2Player& from);

  inline GCSendMail2Player& operator=(const GCSendMail2Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendMail2Player& default_instance();

  void Swap(GCSendMail2Player* other);

  // implements Message ----------------------------------------------

  GCSendMail2Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendMail2Player& from);
  void MergeFrom(const GCSendMail2Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCSendMail2Player)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendMail2Player* default_instance_;
};
// -------------------------------------------------------------------

class GCSysSendMail2Player : public ::google::protobuf::Message {
 public:
  GCSysSendMail2Player();
  virtual ~GCSysSendMail2Player();

  GCSysSendMail2Player(const GCSysSendMail2Player& from);

  inline GCSysSendMail2Player& operator=(const GCSysSendMail2Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSysSendMail2Player& default_instance();

  void Swap(GCSysSendMail2Player* other);

  // implements Message ----------------------------------------------

  GCSysSendMail2Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSysSendMail2Player& from);
  void MergeFrom(const GCSysSendMail2Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MailInfo mail = 1;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 1;
  inline const ::MailInfo& mail() const;
  inline ::MailInfo* mutable_mail();
  inline ::MailInfo* release_mail();
  inline void set_allocated_mail(::MailInfo* mail);

  // @@protoc_insertion_point(class_scope:GCSysSendMail2Player)
 private:
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MailInfo* mail_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSysSendMail2Player* default_instance_;
};
// -------------------------------------------------------------------

class CGGetMailList : public ::google::protobuf::Message {
 public:
  CGGetMailList();
  virtual ~CGGetMailList();

  CGGetMailList(const CGGetMailList& from);

  inline CGGetMailList& operator=(const CGGetMailList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetMailList& default_instance();

  void Swap(CGGetMailList* other);

  // implements Message ----------------------------------------------

  CGGetMailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetMailList& from);
  void MergeFrom(const CGGetMailList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGGetMailList)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetMailList* default_instance_;
};
// -------------------------------------------------------------------

class GCGetMailList : public ::google::protobuf::Message {
 public:
  GCGetMailList();
  virtual ~GCGetMailList();

  GCGetMailList(const GCGetMailList& from);

  inline GCGetMailList& operator=(const GCGetMailList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetMailList& default_instance();

  void Swap(GCGetMailList* other);

  // implements Message ----------------------------------------------

  GCGetMailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetMailList& from);
  void MergeFrom(const GCGetMailList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MailInfo mails = 1;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 1;
  inline const ::MailInfo& mails(int index) const;
  inline ::MailInfo* mutable_mails(int index);
  inline ::MailInfo* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::MailInfo >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::MailInfo >*
      mutable_mails();

  // @@protoc_insertion_point(class_scope:GCGetMailList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MailInfo > mails_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetMailList* default_instance_;
};
// -------------------------------------------------------------------

class CGReadMail : public ::google::protobuf::Message {
 public:
  CGReadMail();
  virtual ~CGReadMail();

  CGReadMail(const CGReadMail& from);

  inline CGReadMail& operator=(const CGReadMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGReadMail& default_instance();

  void Swap(CGReadMail* other);

  // implements Message ----------------------------------------------

  CGReadMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGReadMail& from);
  void MergeFrom(const CGReadMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::int64 mailid() const;
  inline void set_mailid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGReadMail)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 mailid_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static CGReadMail* default_instance_;
};
// -------------------------------------------------------------------

class GCReadMail : public ::google::protobuf::Message {
 public:
  GCReadMail();
  virtual ~GCReadMail();

  GCReadMail(const GCReadMail& from);

  inline GCReadMail& operator=(const GCReadMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCReadMail& default_instance();

  void Swap(GCReadMail* other);

  // implements Message ----------------------------------------------

  GCReadMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCReadMail& from);
  void MergeFrom(const GCReadMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::int64 mailid() const;
  inline void set_mailid(::google::protobuf::int64 value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCReadMail)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 mailid_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static GCReadMail* default_instance_;
};
// -------------------------------------------------------------------

class CGGetItemInMail : public ::google::protobuf::Message {
 public:
  CGGetItemInMail();
  virtual ~CGGetItemInMail();

  CGGetItemInMail(const CGGetItemInMail& from);

  inline CGGetItemInMail& operator=(const CGGetItemInMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetItemInMail& default_instance();

  void Swap(CGGetItemInMail* other);

  // implements Message ----------------------------------------------

  CGGetItemInMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetItemInMail& from);
  void MergeFrom(const CGGetItemInMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 mailID = 1;
  inline int mailid_size() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::int64 mailid(int index) const;
  inline void set_mailid(int index, ::google::protobuf::int64 value);
  inline void add_mailid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      mailid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_mailid();

  // @@protoc_insertion_point(class_scope:CGGetItemInMail)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > mailid_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetItemInMail* default_instance_;
};
// -------------------------------------------------------------------

class GCGetItemInMail : public ::google::protobuf::Message {
 public:
  GCGetItemInMail();
  virtual ~GCGetItemInMail();

  GCGetItemInMail(const GCGetItemInMail& from);

  inline GCGetItemInMail& operator=(const GCGetItemInMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetItemInMail& default_instance();

  void Swap(GCGetItemInMail* other);

  // implements Message ----------------------------------------------

  GCGetItemInMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetItemInMail& from);
  void MergeFrom(const GCGetItemInMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 mailID = 1;
  inline int mailid_size() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::int64 mailid(int index) const;
  inline void set_mailid(int index, ::google::protobuf::int64 value);
  inline void add_mailid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      mailid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_mailid();

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGetItemInMail)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > mailid_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetItemInMail* default_instance_;
};
// -------------------------------------------------------------------

class CGDelMail : public ::google::protobuf::Message {
 public:
  CGDelMail();
  virtual ~CGDelMail();

  CGDelMail(const CGDelMail& from);

  inline CGDelMail& operator=(const CGDelMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGDelMail& default_instance();

  void Swap(CGDelMail* other);

  // implements Message ----------------------------------------------

  CGDelMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGDelMail& from);
  void MergeFrom(const CGDelMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 mailID = 1;
  inline int mailid_size() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::int64 mailid(int index) const;
  inline void set_mailid(int index, ::google::protobuf::int64 value);
  inline void add_mailid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      mailid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_mailid();

  // @@protoc_insertion_point(class_scope:CGDelMail)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > mailid_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static CGDelMail* default_instance_;
};
// -------------------------------------------------------------------

class GCDelMail : public ::google::protobuf::Message {
 public:
  GCDelMail();
  virtual ~GCDelMail();

  GCDelMail(const GCDelMail& from);

  inline GCDelMail& operator=(const GCDelMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDelMail& default_instance();

  void Swap(GCDelMail* other);

  // implements Message ----------------------------------------------

  GCDelMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDelMail& from);
  void MergeFrom(const GCDelMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 mailID = 1;
  inline int mailid_size() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::int64 mailid(int index) const;
  inline void set_mailid(int index, ::google::protobuf::int64 value);
  inline void add_mailid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      mailid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_mailid();

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCDelMail)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > mailid_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_MailMessage_2eproto();
  friend void protobuf_AssignDesc_MailMessage_2eproto();
  friend void protobuf_ShutdownFile_MailMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDelMail* default_instance_;
};
// ===================================================================


// ===================================================================

// MailInfo

// optional int64 mailID = 1;
inline bool MailInfo::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailInfo::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailInfo::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailInfo::clear_mailid() {
  mailid_ = GOOGLE_LONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::int64 MailInfo::mailid() const {
  // @@protoc_insertion_point(field_get:MailInfo.mailID)
  return mailid_;
}
inline void MailInfo::set_mailid(::google::protobuf::int64 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:MailInfo.mailID)
}

// optional int64 receivePlayerID = 2;
inline bool MailInfo::has_receiveplayerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailInfo::set_has_receiveplayerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailInfo::clear_has_receiveplayerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailInfo::clear_receiveplayerid() {
  receiveplayerid_ = GOOGLE_LONGLONG(0);
  clear_has_receiveplayerid();
}
inline ::google::protobuf::int64 MailInfo::receiveplayerid() const {
  // @@protoc_insertion_point(field_get:MailInfo.receivePlayerID)
  return receiveplayerid_;
}
inline void MailInfo::set_receiveplayerid(::google::protobuf::int64 value) {
  set_has_receiveplayerid();
  receiveplayerid_ = value;
  // @@protoc_insertion_point(field_set:MailInfo.receivePlayerID)
}

// optional int32 sendType = 3;
inline bool MailInfo::has_sendtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailInfo::set_has_sendtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailInfo::clear_has_sendtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailInfo::clear_sendtype() {
  sendtype_ = 0;
  clear_has_sendtype();
}
inline ::google::protobuf::int32 MailInfo::sendtype() const {
  // @@protoc_insertion_point(field_get:MailInfo.sendType)
  return sendtype_;
}
inline void MailInfo::set_sendtype(::google::protobuf::int32 value) {
  set_has_sendtype();
  sendtype_ = value;
  // @@protoc_insertion_point(field_set:MailInfo.sendType)
}

// optional int64 playerID = 4;
inline bool MailInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailInfo::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 MailInfo::playerid() const {
  // @@protoc_insertion_point(field_get:MailInfo.playerID)
  return playerid_;
}
inline void MailInfo::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:MailInfo.playerID)
}

// optional string sendName = 5;
inline bool MailInfo::has_sendname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailInfo::set_has_sendname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailInfo::clear_has_sendname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailInfo::clear_sendname() {
  if (sendname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendname_->clear();
  }
  clear_has_sendname();
}
inline const ::std::string& MailInfo::sendname() const {
  // @@protoc_insertion_point(field_get:MailInfo.sendName)
  return *sendname_;
}
inline void MailInfo::set_sendname(const ::std::string& value) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(value);
  // @@protoc_insertion_point(field_set:MailInfo.sendName)
}
inline void MailInfo::set_sendname(const char* value) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MailInfo.sendName)
}
inline void MailInfo::set_sendname(const char* value, size_t size) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MailInfo.sendName)
}
inline ::std::string* MailInfo::mutable_sendname() {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MailInfo.sendName)
  return sendname_;
}
inline ::std::string* MailInfo::release_sendname() {
  clear_has_sendname();
  if (sendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sendname_;
    sendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailInfo::set_allocated_sendname(::std::string* sendname) {
  if (sendname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sendname_;
  }
  if (sendname) {
    set_has_sendname();
    sendname_ = sendname;
  } else {
    clear_has_sendname();
    sendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MailInfo.sendName)
}

// optional string content = 6;
inline bool MailInfo::has_content() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailInfo::set_has_content() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailInfo::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& MailInfo::content() const {
  // @@protoc_insertion_point(field_get:MailInfo.content)
  return *content_;
}
inline void MailInfo::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:MailInfo.content)
}
inline void MailInfo::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:MailInfo.content)
}
inline void MailInfo::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MailInfo.content)
}
inline ::std::string* MailInfo::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MailInfo.content)
  return content_;
}
inline ::std::string* MailInfo::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailInfo::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MailInfo.content)
}

// repeated .BackpackItem items = 7;
inline int MailInfo::items_size() const {
  return items_.size();
}
inline void MailInfo::clear_items() {
  items_.Clear();
}
inline const ::BackpackItem& MailInfo::items(int index) const {
  // @@protoc_insertion_point(field_get:MailInfo.items)
  return items_.Get(index);
}
inline ::BackpackItem* MailInfo::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:MailInfo.items)
  return items_.Mutable(index);
}
inline ::BackpackItem* MailInfo::add_items() {
  // @@protoc_insertion_point(field_add:MailInfo.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BackpackItem >&
MailInfo::items() const {
  // @@protoc_insertion_point(field_list:MailInfo.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::BackpackItem >*
MailInfo::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:MailInfo.items)
  return &items_;
}

// optional int64 sendTime = 8;
inline bool MailInfo::has_sendtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailInfo::set_has_sendtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailInfo::clear_has_sendtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailInfo::clear_sendtime() {
  sendtime_ = GOOGLE_LONGLONG(0);
  clear_has_sendtime();
}
inline ::google::protobuf::int64 MailInfo::sendtime() const {
  // @@protoc_insertion_point(field_get:MailInfo.sendTime)
  return sendtime_;
}
inline void MailInfo::set_sendtime(::google::protobuf::int64 value) {
  set_has_sendtime();
  sendtime_ = value;
  // @@protoc_insertion_point(field_set:MailInfo.sendTime)
}

// optional int32 state = 9;
inline bool MailInfo::has_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailInfo::set_has_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 MailInfo::state() const {
  // @@protoc_insertion_point(field_get:MailInfo.state)
  return state_;
}
inline void MailInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:MailInfo.state)
}

// optional string title = 10;
inline bool MailInfo::has_title() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MailInfo::set_has_title() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MailInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MailInfo::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& MailInfo::title() const {
  // @@protoc_insertion_point(field_get:MailInfo.title)
  return *title_;
}
inline void MailInfo::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:MailInfo.title)
}
inline void MailInfo::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:MailInfo.title)
}
inline void MailInfo::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MailInfo.title)
}
inline ::std::string* MailInfo::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MailInfo.title)
  return title_;
}
inline ::std::string* MailInfo::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailInfo::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MailInfo.title)
}

// -------------------------------------------------------------------

// GCSendMailStatus

// optional int32 offRead = 1;
inline bool GCSendMailStatus::has_offread() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSendMailStatus::set_has_offread() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSendMailStatus::clear_has_offread() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSendMailStatus::clear_offread() {
  offread_ = 0;
  clear_has_offread();
}
inline ::google::protobuf::int32 GCSendMailStatus::offread() const {
  // @@protoc_insertion_point(field_get:GCSendMailStatus.offRead)
  return offread_;
}
inline void GCSendMailStatus::set_offread(::google::protobuf::int32 value) {
  set_has_offread();
  offread_ = value;
  // @@protoc_insertion_point(field_set:GCSendMailStatus.offRead)
}

// optional int32 total = 2;
inline bool GCSendMailStatus::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSendMailStatus::set_has_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSendMailStatus::clear_has_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSendMailStatus::clear_total() {
  total_ = 0;
  clear_has_total();
}
inline ::google::protobuf::int32 GCSendMailStatus::total() const {
  // @@protoc_insertion_point(field_get:GCSendMailStatus.total)
  return total_;
}
inline void GCSendMailStatus::set_total(::google::protobuf::int32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:GCSendMailStatus.total)
}

// -------------------------------------------------------------------

// CGSendMail2Player

// optional .MailInfo mail = 1;
inline bool CGSendMail2Player::has_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSendMail2Player::set_has_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSendMail2Player::clear_has_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSendMail2Player::clear_mail() {
  if (mail_ != NULL) mail_->::MailInfo::Clear();
  clear_has_mail();
}
inline const ::MailInfo& CGSendMail2Player::mail() const {
  // @@protoc_insertion_point(field_get:CGSendMail2Player.mail)
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::MailInfo* CGSendMail2Player::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::MailInfo;
  // @@protoc_insertion_point(field_mutable:CGSendMail2Player.mail)
  return mail_;
}
inline ::MailInfo* CGSendMail2Player::release_mail() {
  clear_has_mail();
  ::MailInfo* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void CGSendMail2Player::set_allocated_mail(::MailInfo* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
  // @@protoc_insertion_point(field_set_allocated:CGSendMail2Player.mail)
}

// -------------------------------------------------------------------

// GCSendMail2Player

// optional int32 result = 1;
inline bool GCSendMail2Player::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSendMail2Player::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSendMail2Player::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSendMail2Player::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCSendMail2Player::result() const {
  // @@protoc_insertion_point(field_get:GCSendMail2Player.result)
  return result_;
}
inline void GCSendMail2Player::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCSendMail2Player.result)
}

// -------------------------------------------------------------------

// GCSysSendMail2Player

// optional .MailInfo mail = 1;
inline bool GCSysSendMail2Player::has_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSysSendMail2Player::set_has_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSysSendMail2Player::clear_has_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSysSendMail2Player::clear_mail() {
  if (mail_ != NULL) mail_->::MailInfo::Clear();
  clear_has_mail();
}
inline const ::MailInfo& GCSysSendMail2Player::mail() const {
  // @@protoc_insertion_point(field_get:GCSysSendMail2Player.mail)
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::MailInfo* GCSysSendMail2Player::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::MailInfo;
  // @@protoc_insertion_point(field_mutable:GCSysSendMail2Player.mail)
  return mail_;
}
inline ::MailInfo* GCSysSendMail2Player::release_mail() {
  clear_has_mail();
  ::MailInfo* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void GCSysSendMail2Player::set_allocated_mail(::MailInfo* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSysSendMail2Player.mail)
}

// -------------------------------------------------------------------

// CGGetMailList

// optional int64 playerID = 1;
inline bool CGGetMailList::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetMailList::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetMailList::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetMailList::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CGGetMailList::playerid() const {
  // @@protoc_insertion_point(field_get:CGGetMailList.playerID)
  return playerid_;
}
inline void CGGetMailList::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CGGetMailList.playerID)
}

// -------------------------------------------------------------------

// GCGetMailList

// repeated .MailInfo mails = 1;
inline int GCGetMailList::mails_size() const {
  return mails_.size();
}
inline void GCGetMailList::clear_mails() {
  mails_.Clear();
}
inline const ::MailInfo& GCGetMailList::mails(int index) const {
  // @@protoc_insertion_point(field_get:GCGetMailList.mails)
  return mails_.Get(index);
}
inline ::MailInfo* GCGetMailList::mutable_mails(int index) {
  // @@protoc_insertion_point(field_mutable:GCGetMailList.mails)
  return mails_.Mutable(index);
}
inline ::MailInfo* GCGetMailList::add_mails() {
  // @@protoc_insertion_point(field_add:GCGetMailList.mails)
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MailInfo >&
GCGetMailList::mails() const {
  // @@protoc_insertion_point(field_list:GCGetMailList.mails)
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::MailInfo >*
GCGetMailList::mutable_mails() {
  // @@protoc_insertion_point(field_mutable_list:GCGetMailList.mails)
  return &mails_;
}

// -------------------------------------------------------------------

// CGReadMail

// optional int64 mailID = 1;
inline bool CGReadMail::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGReadMail::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGReadMail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGReadMail::clear_mailid() {
  mailid_ = GOOGLE_LONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::int64 CGReadMail::mailid() const {
  // @@protoc_insertion_point(field_get:CGReadMail.mailID)
  return mailid_;
}
inline void CGReadMail::set_mailid(::google::protobuf::int64 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:CGReadMail.mailID)
}

// -------------------------------------------------------------------

// GCReadMail

// optional int64 mailID = 1;
inline bool GCReadMail::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCReadMail::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCReadMail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCReadMail::clear_mailid() {
  mailid_ = GOOGLE_LONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::int64 GCReadMail::mailid() const {
  // @@protoc_insertion_point(field_get:GCReadMail.mailID)
  return mailid_;
}
inline void GCReadMail::set_mailid(::google::protobuf::int64 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:GCReadMail.mailID)
}

// optional int32 result = 2;
inline bool GCReadMail::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCReadMail::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCReadMail::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCReadMail::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCReadMail::result() const {
  // @@protoc_insertion_point(field_get:GCReadMail.result)
  return result_;
}
inline void GCReadMail::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCReadMail.result)
}

// -------------------------------------------------------------------

// CGGetItemInMail

// repeated int64 mailID = 1;
inline int CGGetItemInMail::mailid_size() const {
  return mailid_.size();
}
inline void CGGetItemInMail::clear_mailid() {
  mailid_.Clear();
}
inline ::google::protobuf::int64 CGGetItemInMail::mailid(int index) const {
  // @@protoc_insertion_point(field_get:CGGetItemInMail.mailID)
  return mailid_.Get(index);
}
inline void CGGetItemInMail::set_mailid(int index, ::google::protobuf::int64 value) {
  mailid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGGetItemInMail.mailID)
}
inline void CGGetItemInMail::add_mailid(::google::protobuf::int64 value) {
  mailid_.Add(value);
  // @@protoc_insertion_point(field_add:CGGetItemInMail.mailID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CGGetItemInMail::mailid() const {
  // @@protoc_insertion_point(field_list:CGGetItemInMail.mailID)
  return mailid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CGGetItemInMail::mutable_mailid() {
  // @@protoc_insertion_point(field_mutable_list:CGGetItemInMail.mailID)
  return &mailid_;
}

// -------------------------------------------------------------------

// GCGetItemInMail

// repeated int64 mailID = 1;
inline int GCGetItemInMail::mailid_size() const {
  return mailid_.size();
}
inline void GCGetItemInMail::clear_mailid() {
  mailid_.Clear();
}
inline ::google::protobuf::int64 GCGetItemInMail::mailid(int index) const {
  // @@protoc_insertion_point(field_get:GCGetItemInMail.mailID)
  return mailid_.Get(index);
}
inline void GCGetItemInMail::set_mailid(int index, ::google::protobuf::int64 value) {
  mailid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCGetItemInMail.mailID)
}
inline void GCGetItemInMail::add_mailid(::google::protobuf::int64 value) {
  mailid_.Add(value);
  // @@protoc_insertion_point(field_add:GCGetItemInMail.mailID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GCGetItemInMail::mailid() const {
  // @@protoc_insertion_point(field_list:GCGetItemInMail.mailID)
  return mailid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GCGetItemInMail::mutable_mailid() {
  // @@protoc_insertion_point(field_mutable_list:GCGetItemInMail.mailID)
  return &mailid_;
}

// optional int32 result = 2;
inline bool GCGetItemInMail::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGetItemInMail::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGetItemInMail::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGetItemInMail::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCGetItemInMail::result() const {
  // @@protoc_insertion_point(field_get:GCGetItemInMail.result)
  return result_;
}
inline void GCGetItemInMail::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCGetItemInMail.result)
}

// -------------------------------------------------------------------

// CGDelMail

// repeated int64 mailID = 1;
inline int CGDelMail::mailid_size() const {
  return mailid_.size();
}
inline void CGDelMail::clear_mailid() {
  mailid_.Clear();
}
inline ::google::protobuf::int64 CGDelMail::mailid(int index) const {
  // @@protoc_insertion_point(field_get:CGDelMail.mailID)
  return mailid_.Get(index);
}
inline void CGDelMail::set_mailid(int index, ::google::protobuf::int64 value) {
  mailid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGDelMail.mailID)
}
inline void CGDelMail::add_mailid(::google::protobuf::int64 value) {
  mailid_.Add(value);
  // @@protoc_insertion_point(field_add:CGDelMail.mailID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CGDelMail::mailid() const {
  // @@protoc_insertion_point(field_list:CGDelMail.mailID)
  return mailid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CGDelMail::mutable_mailid() {
  // @@protoc_insertion_point(field_mutable_list:CGDelMail.mailID)
  return &mailid_;
}

// -------------------------------------------------------------------

// GCDelMail

// repeated int64 mailID = 1;
inline int GCDelMail::mailid_size() const {
  return mailid_.size();
}
inline void GCDelMail::clear_mailid() {
  mailid_.Clear();
}
inline ::google::protobuf::int64 GCDelMail::mailid(int index) const {
  // @@protoc_insertion_point(field_get:GCDelMail.mailID)
  return mailid_.Get(index);
}
inline void GCDelMail::set_mailid(int index, ::google::protobuf::int64 value) {
  mailid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCDelMail.mailID)
}
inline void GCDelMail::add_mailid(::google::protobuf::int64 value) {
  mailid_.Add(value);
  // @@protoc_insertion_point(field_add:GCDelMail.mailID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GCDelMail::mailid() const {
  // @@protoc_insertion_point(field_list:GCDelMail.mailID)
  return mailid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GCDelMail::mutable_mailid() {
  // @@protoc_insertion_point(field_mutable_list:GCDelMail.mailID)
  return &mailid_;
}

// optional int32 result = 2;
inline bool GCDelMail::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCDelMail::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCDelMail::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCDelMail::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCDelMail::result() const {
  // @@protoc_insertion_point(field_get:GCDelMail.result)
  return result_;
}
inline void GCDelMail::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCDelMail.result)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MailMessage_2eproto__INCLUDED
