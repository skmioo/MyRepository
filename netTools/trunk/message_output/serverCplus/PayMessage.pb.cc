// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PayMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PayMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* OrderInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCreateOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCreateOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCCreateOrderBack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCCreateOrderBack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGGetOrderState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGGetOrderState_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCOrderStateBack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCOrderStateBack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGVerifyIOSPay_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGVerifyIOSPay_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCVerifyIOSPayBack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCVerifyIOSPayBack_reflection_ = NULL;
const ::google::protobuf::Descriptor* RechargeItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RechargeItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCRechargeItemInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCRechargeItemInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PayMessage_2eproto() {
  protobuf_AddDesc_PayMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PayMessage.proto");
  GOOGLE_CHECK(file != NULL);
  OrderInfo_descriptor_ = file->message_type(0);
  static const int OrderInfo_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, appporderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, accountid_),
  };
  OrderInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrderInfo_descriptor_,
      OrderInfo::default_instance_,
      OrderInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrderInfo));
  CGCreateOrder_descriptor_ = file->message_type(1);
  static const int CGCreateOrder_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCreateOrder, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCreateOrder, appporderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCreateOrder, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCreateOrder, parse_),
  };
  CGCreateOrder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CGCreateOrder_descriptor_,
      CGCreateOrder::default_instance_,
      CGCreateOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCreateOrder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCreateOrder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CGCreateOrder));
  GCCreateOrderBack_descriptor_ = file->message_type(2);
  static const int GCCreateOrderBack_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCCreateOrderBack, orderinfo_),
  };
  GCCreateOrderBack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCCreateOrderBack_descriptor_,
      GCCreateOrderBack::default_instance_,
      GCCreateOrderBack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCCreateOrderBack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCCreateOrderBack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCCreateOrderBack));
  CGGetOrderState_descriptor_ = file->message_type(3);
  static const int CGGetOrderState_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGGetOrderState, orderid_),
  };
  CGGetOrderState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CGGetOrderState_descriptor_,
      CGGetOrderState::default_instance_,
      CGGetOrderState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGGetOrderState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGGetOrderState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CGGetOrderState));
  GCOrderStateBack_descriptor_ = file->message_type(4);
  static const int GCOrderStateBack_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCOrderStateBack, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCOrderStateBack, state_),
  };
  GCOrderStateBack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCOrderStateBack_descriptor_,
      GCOrderStateBack::default_instance_,
      GCOrderStateBack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCOrderStateBack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCOrderStateBack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCOrderStateBack));
  CGVerifyIOSPay_descriptor_ = file->message_type(5);
  static const int CGVerifyIOSPay_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGVerifyIOSPay, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGVerifyIOSPay, receipt_),
  };
  CGVerifyIOSPay_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CGVerifyIOSPay_descriptor_,
      CGVerifyIOSPay::default_instance_,
      CGVerifyIOSPay_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGVerifyIOSPay, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGVerifyIOSPay, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CGVerifyIOSPay));
  GCVerifyIOSPayBack_descriptor_ = file->message_type(6);
  static const int GCVerifyIOSPayBack_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCVerifyIOSPayBack, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCVerifyIOSPayBack, transaction_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCVerifyIOSPayBack, state_),
  };
  GCVerifyIOSPayBack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCVerifyIOSPayBack_descriptor_,
      GCVerifyIOSPayBack::default_instance_,
      GCVerifyIOSPayBack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCVerifyIOSPayBack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCVerifyIOSPayBack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCVerifyIOSPayBack));
  RechargeItem_descriptor_ = file->message_type(7);
  static const int RechargeItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeItem, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeItem, curtimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeItem, maxtimes_),
  };
  RechargeItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RechargeItem_descriptor_,
      RechargeItem::default_instance_,
      RechargeItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RechargeItem));
  GCRechargeItemInfo_descriptor_ = file->message_type(8);
  static const int GCRechargeItemInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCRechargeItemInfo, rechargeitemlist_),
  };
  GCRechargeItemInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCRechargeItemInfo_descriptor_,
      GCRechargeItemInfo::default_instance_,
      GCRechargeItemInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCRechargeItemInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCRechargeItemInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCRechargeItemInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PayMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrderInfo_descriptor_, &OrderInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CGCreateOrder_descriptor_, &CGCreateOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCCreateOrderBack_descriptor_, &GCCreateOrderBack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CGGetOrderState_descriptor_, &CGGetOrderState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCOrderStateBack_descriptor_, &GCOrderStateBack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CGVerifyIOSPay_descriptor_, &CGVerifyIOSPay::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCVerifyIOSPayBack_descriptor_, &GCVerifyIOSPayBack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RechargeItem_descriptor_, &RechargeItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCRechargeItemInfo_descriptor_, &GCRechargeItemInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PayMessage_2eproto() {
  delete OrderInfo::default_instance_;
  delete OrderInfo_reflection_;
  delete CGCreateOrder::default_instance_;
  delete CGCreateOrder_reflection_;
  delete GCCreateOrderBack::default_instance_;
  delete GCCreateOrderBack_reflection_;
  delete CGGetOrderState::default_instance_;
  delete CGGetOrderState_reflection_;
  delete GCOrderStateBack::default_instance_;
  delete GCOrderStateBack_reflection_;
  delete CGVerifyIOSPay::default_instance_;
  delete CGVerifyIOSPay_reflection_;
  delete GCVerifyIOSPayBack::default_instance_;
  delete GCVerifyIOSPayBack_reflection_;
  delete RechargeItem::default_instance_;
  delete RechargeItem_reflection_;
  delete GCRechargeItemInfo::default_instance_;
  delete GCRechargeItemInfo_reflection_;
}

void protobuf_AddDesc_PayMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020PayMessage.proto\"\307\001\n\tOrderInfo\022\017\n\007orde"
    "rID\030\001 \001(\t\022\020\n\010playerID\030\002 \001(\003\022\014\n\004type\030\003 \001("
    "\005\022\r\n\005state\030\004 \001(\005\022\022\n\ncreateTime\030\005 \001(\t\022\r\n\005"
    "money\030\006 \001(\005\022\020\n\010platForm\030\007 \001(\t\022\023\n\013apppOrd"
    "erID\030\010 \001(\t\022\020\n\010serverID\030\t \001(\005\022\013\n\003sid\030\n \001("
    "\005\022\021\n\taccountID\030\013 \001(\003\"R\n\rCGCreateOrder\022\013\n"
    "\003sid\030\001 \001(\005\022\023\n\013apppOrderID\030\002 \001(\t\022\020\n\010platF"
    "orm\030\003 \001(\t\022\r\n\005parse\030\004 \001(\t\"2\n\021GCCreateOrde"
    "rBack\022\035\n\torderInfo\030\001 \001(\0132\n.OrderInfo\"\"\n\017"
    "CGGetOrderState\022\017\n\007orderID\030\001 \001(\t\"2\n\020GCOr"
    "derStateBack\022\017\n\007orderID\030\001 \001(\t\022\r\n\005state\030\002"
    " \001(\005\"2\n\016CGVerifyIOSPay\022\017\n\007orderID\030\001 \001(\t\022"
    "\017\n\007receipt\030\002 \001(\t\"L\n\022GCVerifyIOSPayBack\022\017"
    "\n\007orderID\030\001 \001(\t\022\026\n\016transaction_id\030\002 \001(\t\022"
    "\r\n\005state\030\003 \001(\005\"\?\n\014RechargeItem\022\013\n\003sid\030\001 "
    "\001(\005\022\020\n\010curTimes\030\002 \001(\005\022\020\n\010maxTimes\030\003 \001(\005\""
    "=\n\022GCRechargeItemInfo\022\'\n\020rechargeItemLis"
    "t\030\001 \003(\0132\r.RechargeItemB\031\n\027com.mile.commo"
    "n.message", 729);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PayMessage.proto", &protobuf_RegisterTypes);
  OrderInfo::default_instance_ = new OrderInfo();
  CGCreateOrder::default_instance_ = new CGCreateOrder();
  GCCreateOrderBack::default_instance_ = new GCCreateOrderBack();
  CGGetOrderState::default_instance_ = new CGGetOrderState();
  GCOrderStateBack::default_instance_ = new GCOrderStateBack();
  CGVerifyIOSPay::default_instance_ = new CGVerifyIOSPay();
  GCVerifyIOSPayBack::default_instance_ = new GCVerifyIOSPayBack();
  RechargeItem::default_instance_ = new RechargeItem();
  GCRechargeItemInfo::default_instance_ = new GCRechargeItemInfo();
  OrderInfo::default_instance_->InitAsDefaultInstance();
  CGCreateOrder::default_instance_->InitAsDefaultInstance();
  GCCreateOrderBack::default_instance_->InitAsDefaultInstance();
  CGGetOrderState::default_instance_->InitAsDefaultInstance();
  GCOrderStateBack::default_instance_->InitAsDefaultInstance();
  CGVerifyIOSPay::default_instance_->InitAsDefaultInstance();
  GCVerifyIOSPayBack::default_instance_->InitAsDefaultInstance();
  RechargeItem::default_instance_->InitAsDefaultInstance();
  GCRechargeItemInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PayMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PayMessage_2eproto {
  StaticDescriptorInitializer_PayMessage_2eproto() {
    protobuf_AddDesc_PayMessage_2eproto();
  }
} static_descriptor_initializer_PayMessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int OrderInfo::kOrderIDFieldNumber;
const int OrderInfo::kPlayerIDFieldNumber;
const int OrderInfo::kTypeFieldNumber;
const int OrderInfo::kStateFieldNumber;
const int OrderInfo::kCreateTimeFieldNumber;
const int OrderInfo::kMoneyFieldNumber;
const int OrderInfo::kPlatFormFieldNumber;
const int OrderInfo::kApppOrderIDFieldNumber;
const int OrderInfo::kServerIDFieldNumber;
const int OrderInfo::kSidFieldNumber;
const int OrderInfo::kAccountIDFieldNumber;
#endif  // !_MSC_VER

OrderInfo::OrderInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrderInfo)
}

void OrderInfo::InitAsDefaultInstance() {
}

OrderInfo::OrderInfo(const OrderInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OrderInfo)
}

void OrderInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  state_ = 0;
  createtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  money_ = 0;
  platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appporderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_ = 0;
  sid_ = 0;
  accountid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderInfo::~OrderInfo() {
  // @@protoc_insertion_point(destructor:OrderInfo)
  SharedDtor();
}

void OrderInfo::SharedDtor() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (createtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createtime_;
  }
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platform_;
  }
  if (appporderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete appporderid_;
  }
  if (this != default_instance_) {
  }
}

void OrderInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderInfo_descriptor_;
}

const OrderInfo& OrderInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PayMessage_2eproto();
  return *default_instance_;
}

OrderInfo* OrderInfo::default_instance_ = NULL;

OrderInfo* OrderInfo::New() const {
  return new OrderInfo;
}

void OrderInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<OrderInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(playerid_, state_);
    if (has_orderid()) {
      if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        orderid_->clear();
      }
    }
    if (has_createtime()) {
      if (createtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        createtime_->clear();
      }
    }
    money_ = 0;
    if (has_platform()) {
      if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        platform_->clear();
      }
    }
    if (has_appporderid()) {
      if (appporderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        appporderid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 1792) {
    ZR_(accountid_, sid_);
    serverid_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrderInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrderInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string orderID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orderid().data(), this->orderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orderid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_playerID;
        break;
      }

      // optional int64 playerID = 2;
      case 2: {
        if (tag == 16) {
         parse_playerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &playerid_)));
          set_has_playerid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional int32 type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_state;
        break;
      }

      // optional int32 state = 4;
      case 4: {
        if (tag == 32) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_createTime;
        break;
      }

      // optional string createTime = 5;
      case 5: {
        if (tag == 42) {
         parse_createTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createtime().data(), this->createtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "createtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_money;
        break;
      }

      // optional int32 money = 6;
      case 6: {
        if (tag == 48) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_platForm;
        break;
      }

      // optional string platForm = 7;
      case 7: {
        if (tag == 58) {
         parse_platForm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platform().data(), this->platform().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "platform");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_apppOrderID;
        break;
      }

      // optional string apppOrderID = 8;
      case 8: {
        if (tag == 66) {
         parse_apppOrderID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appporderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appporderid().data(), this->appporderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "appporderid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_serverID;
        break;
      }

      // optional int32 serverID = 9;
      case 9: {
        if (tag == 72) {
         parse_serverID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
          set_has_serverid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_sid;
        break;
      }

      // optional int32 sid = 10;
      case 10: {
        if (tag == 80) {
         parse_sid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sid_)));
          set_has_sid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_accountID;
        break;
      }

      // optional int64 accountID = 11;
      case 11: {
        if (tag == 88) {
         parse_accountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
          set_has_accountid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrderInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrderInfo)
  return false;
#undef DO_
}

void OrderInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrderInfo)
  // optional string orderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orderid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->orderid(), output);
  }

  // optional int64 playerID = 2;
  if (has_playerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->playerid(), output);
  }

  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // optional int32 state = 4;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // optional string createTime = 5;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->createtime(), output);
  }

  // optional int32 money = 6;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->money(), output);
  }

  // optional string platForm = 7;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->platform(), output);
  }

  // optional string apppOrderID = 8;
  if (has_appporderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appporderid().data(), this->appporderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appporderid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->appporderid(), output);
  }

  // optional int32 serverID = 9;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->serverid(), output);
  }

  // optional int32 sid = 10;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->sid(), output);
  }

  // optional int64 accountID = 11;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->accountid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrderInfo)
}

::google::protobuf::uint8* OrderInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrderInfo)
  // optional string orderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orderid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->orderid(), target);
  }

  // optional int64 playerID = 2;
  if (has_playerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->playerid(), target);
  }

  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // optional int32 state = 4;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // optional string createTime = 5;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->createtime(), target);
  }

  // optional int32 money = 6;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->money(), target);
  }

  // optional string platForm = 7;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->platform(), target);
  }

  // optional string apppOrderID = 8;
  if (has_appporderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appporderid().data(), this->appporderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appporderid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->appporderid(), target);
  }

  // optional int32 serverID = 9;
  if (has_serverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->serverid(), target);
  }

  // optional int32 sid = 10;
  if (has_sid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->sid(), target);
  }

  // optional int64 accountID = 11;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->accountid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrderInfo)
  return target;
}

int OrderInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string orderID = 1;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orderid());
    }

    // optional int64 playerID = 2;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->playerid());
    }

    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 state = 4;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // optional string createTime = 5;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createtime());
    }

    // optional int32 money = 6;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional string platForm = 7;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platform());
    }

    // optional string apppOrderID = 8;
    if (has_appporderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appporderid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 serverID = 9;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serverid());
    }

    // optional int32 sid = 10;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sid());
    }

    // optional int64 accountID = 11;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->accountid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrderInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrderInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrderInfo::MergeFrom(const OrderInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_playerid()) {
      set_playerid(from.playerid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_createtime()) {
      set_createtime(from.createtime());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_appporderid()) {
      set_appporderid(from.appporderid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
    if (from.has_sid()) {
      set_sid(from.sid());
    }
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrderInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderInfo::CopyFrom(const OrderInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderInfo::IsInitialized() const {

  return true;
}

void OrderInfo::Swap(OrderInfo* other) {
  if (other != this) {
    std::swap(orderid_, other->orderid_);
    std::swap(playerid_, other->playerid_);
    std::swap(type_, other->type_);
    std::swap(state_, other->state_);
    std::swap(createtime_, other->createtime_);
    std::swap(money_, other->money_);
    std::swap(platform_, other->platform_);
    std::swap(appporderid_, other->appporderid_);
    std::swap(serverid_, other->serverid_);
    std::swap(sid_, other->sid_);
    std::swap(accountid_, other->accountid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrderInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderInfo_descriptor_;
  metadata.reflection = OrderInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CGCreateOrder::kSidFieldNumber;
const int CGCreateOrder::kApppOrderIDFieldNumber;
const int CGCreateOrder::kPlatFormFieldNumber;
const int CGCreateOrder::kParseFieldNumber;
#endif  // !_MSC_VER

CGCreateOrder::CGCreateOrder()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCreateOrder)
}

void CGCreateOrder::InitAsDefaultInstance() {
}

CGCreateOrder::CGCreateOrder(const CGCreateOrder& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCreateOrder)
}

void CGCreateOrder::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sid_ = 0;
  appporderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parse_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCreateOrder::~CGCreateOrder() {
  // @@protoc_insertion_point(destructor:CGCreateOrder)
  SharedDtor();
}

void CGCreateOrder::SharedDtor() {
  if (appporderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete appporderid_;
  }
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platform_;
  }
  if (parse_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete parse_;
  }
  if (this != default_instance_) {
  }
}

void CGCreateOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCreateOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCreateOrder_descriptor_;
}

const CGCreateOrder& CGCreateOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PayMessage_2eproto();
  return *default_instance_;
}

CGCreateOrder* CGCreateOrder::default_instance_ = NULL;

CGCreateOrder* CGCreateOrder::New() const {
  return new CGCreateOrder;
}

void CGCreateOrder::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    sid_ = 0;
    if (has_appporderid()) {
      if (appporderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        appporderid_->clear();
      }
    }
    if (has_platform()) {
      if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        platform_->clear();
      }
    }
    if (has_parse()) {
      if (parse_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        parse_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CGCreateOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCreateOrder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sid_)));
          set_has_sid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_apppOrderID;
        break;
      }

      // optional string apppOrderID = 2;
      case 2: {
        if (tag == 18) {
         parse_apppOrderID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appporderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appporderid().data(), this->appporderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "appporderid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_platForm;
        break;
      }

      // optional string platForm = 3;
      case 3: {
        if (tag == 26) {
         parse_platForm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platform().data(), this->platform().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "platform");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_parse;
        break;
      }

      // optional string parse = 4;
      case 4: {
        if (tag == 34) {
         parse_parse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parse()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parse().data(), this->parse().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "parse");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCreateOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCreateOrder)
  return false;
#undef DO_
}

void CGCreateOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCreateOrder)
  // optional int32 sid = 1;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sid(), output);
  }

  // optional string apppOrderID = 2;
  if (has_appporderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appporderid().data(), this->appporderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appporderid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appporderid(), output);
  }

  // optional string platForm = 3;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->platform(), output);
  }

  // optional string parse = 4;
  if (has_parse()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parse().data(), this->parse().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parse");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parse(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCreateOrder)
}

::google::protobuf::uint8* CGCreateOrder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCreateOrder)
  // optional int32 sid = 1;
  if (has_sid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sid(), target);
  }

  // optional string apppOrderID = 2;
  if (has_appporderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appporderid().data(), this->appporderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appporderid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appporderid(), target);
  }

  // optional string platForm = 3;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->platform(), target);
  }

  // optional string parse = 4;
  if (has_parse()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parse().data(), this->parse().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parse");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parse(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCreateOrder)
  return target;
}

int CGCreateOrder::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sid = 1;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sid());
    }

    // optional string apppOrderID = 2;
    if (has_appporderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appporderid());
    }

    // optional string platForm = 3;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platform());
    }

    // optional string parse = 4;
    if (has_parse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parse());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCreateOrder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CGCreateOrder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CGCreateOrder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCreateOrder::MergeFrom(const CGCreateOrder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sid()) {
      set_sid(from.sid());
    }
    if (from.has_appporderid()) {
      set_appporderid(from.appporderid());
    }
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_parse()) {
      set_parse(from.parse());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CGCreateOrder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCreateOrder::CopyFrom(const CGCreateOrder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCreateOrder::IsInitialized() const {

  return true;
}

void CGCreateOrder::Swap(CGCreateOrder* other) {
  if (other != this) {
    std::swap(sid_, other->sid_);
    std::swap(appporderid_, other->appporderid_);
    std::swap(platform_, other->platform_);
    std::swap(parse_, other->parse_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CGCreateOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCreateOrder_descriptor_;
  metadata.reflection = CGCreateOrder_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCCreateOrderBack::kOrderInfoFieldNumber;
#endif  // !_MSC_VER

GCCreateOrderBack::GCCreateOrderBack()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCCreateOrderBack)
}

void GCCreateOrderBack::InitAsDefaultInstance() {
  orderinfo_ = const_cast< ::OrderInfo*>(&::OrderInfo::default_instance());
}

GCCreateOrderBack::GCCreateOrderBack(const GCCreateOrderBack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCCreateOrderBack)
}

void GCCreateOrderBack::SharedCtor() {
  _cached_size_ = 0;
  orderinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCCreateOrderBack::~GCCreateOrderBack() {
  // @@protoc_insertion_point(destructor:GCCreateOrderBack)
  SharedDtor();
}

void GCCreateOrderBack::SharedDtor() {
  if (this != default_instance_) {
    delete orderinfo_;
  }
}

void GCCreateOrderBack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCCreateOrderBack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCCreateOrderBack_descriptor_;
}

const GCCreateOrderBack& GCCreateOrderBack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PayMessage_2eproto();
  return *default_instance_;
}

GCCreateOrderBack* GCCreateOrderBack::default_instance_ = NULL;

GCCreateOrderBack* GCCreateOrderBack::New() const {
  return new GCCreateOrderBack;
}

void GCCreateOrderBack::Clear() {
  if (has_orderinfo()) {
    if (orderinfo_ != NULL) orderinfo_->::OrderInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCCreateOrderBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCCreateOrderBack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OrderInfo orderInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_orderinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCCreateOrderBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCCreateOrderBack)
  return false;
#undef DO_
}

void GCCreateOrderBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCCreateOrderBack)
  // optional .OrderInfo orderInfo = 1;
  if (has_orderinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->orderinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCCreateOrderBack)
}

::google::protobuf::uint8* GCCreateOrderBack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCCreateOrderBack)
  // optional .OrderInfo orderInfo = 1;
  if (has_orderinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->orderinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCCreateOrderBack)
  return target;
}

int GCCreateOrderBack::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .OrderInfo orderInfo = 1;
    if (has_orderinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->orderinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCCreateOrderBack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCCreateOrderBack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCCreateOrderBack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCCreateOrderBack::MergeFrom(const GCCreateOrderBack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderinfo()) {
      mutable_orderinfo()->::OrderInfo::MergeFrom(from.orderinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCCreateOrderBack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCCreateOrderBack::CopyFrom(const GCCreateOrderBack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCCreateOrderBack::IsInitialized() const {

  return true;
}

void GCCreateOrderBack::Swap(GCCreateOrderBack* other) {
  if (other != this) {
    std::swap(orderinfo_, other->orderinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCCreateOrderBack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCCreateOrderBack_descriptor_;
  metadata.reflection = GCCreateOrderBack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CGGetOrderState::kOrderIDFieldNumber;
#endif  // !_MSC_VER

CGGetOrderState::CGGetOrderState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGGetOrderState)
}

void CGGetOrderState::InitAsDefaultInstance() {
}

CGGetOrderState::CGGetOrderState(const CGGetOrderState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGGetOrderState)
}

void CGGetOrderState::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGGetOrderState::~CGGetOrderState() {
  // @@protoc_insertion_point(destructor:CGGetOrderState)
  SharedDtor();
}

void CGGetOrderState::SharedDtor() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (this != default_instance_) {
  }
}

void CGGetOrderState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGGetOrderState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGGetOrderState_descriptor_;
}

const CGGetOrderState& CGGetOrderState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PayMessage_2eproto();
  return *default_instance_;
}

CGGetOrderState* CGGetOrderState::default_instance_ = NULL;

CGGetOrderState* CGGetOrderState::New() const {
  return new CGGetOrderState;
}

void CGGetOrderState::Clear() {
  if (has_orderid()) {
    if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      orderid_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CGGetOrderState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGGetOrderState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string orderID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orderid().data(), this->orderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orderid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGGetOrderState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGGetOrderState)
  return false;
#undef DO_
}

void CGGetOrderState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGGetOrderState)
  // optional string orderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orderid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->orderid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGGetOrderState)
}

::google::protobuf::uint8* CGGetOrderState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGGetOrderState)
  // optional string orderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orderid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->orderid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGGetOrderState)
  return target;
}

int CGGetOrderState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string orderID = 1;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orderid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGGetOrderState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CGGetOrderState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CGGetOrderState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGGetOrderState::MergeFrom(const CGGetOrderState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CGGetOrderState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGGetOrderState::CopyFrom(const CGGetOrderState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGGetOrderState::IsInitialized() const {

  return true;
}

void CGGetOrderState::Swap(CGGetOrderState* other) {
  if (other != this) {
    std::swap(orderid_, other->orderid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CGGetOrderState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGGetOrderState_descriptor_;
  metadata.reflection = CGGetOrderState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCOrderStateBack::kOrderIDFieldNumber;
const int GCOrderStateBack::kStateFieldNumber;
#endif  // !_MSC_VER

GCOrderStateBack::GCOrderStateBack()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCOrderStateBack)
}

void GCOrderStateBack::InitAsDefaultInstance() {
}

GCOrderStateBack::GCOrderStateBack(const GCOrderStateBack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCOrderStateBack)
}

void GCOrderStateBack::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCOrderStateBack::~GCOrderStateBack() {
  // @@protoc_insertion_point(destructor:GCOrderStateBack)
  SharedDtor();
}

void GCOrderStateBack::SharedDtor() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (this != default_instance_) {
  }
}

void GCOrderStateBack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCOrderStateBack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCOrderStateBack_descriptor_;
}

const GCOrderStateBack& GCOrderStateBack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PayMessage_2eproto();
  return *default_instance_;
}

GCOrderStateBack* GCOrderStateBack::default_instance_ = NULL;

GCOrderStateBack* GCOrderStateBack::New() const {
  return new GCOrderStateBack;
}

void GCOrderStateBack::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_orderid()) {
      if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        orderid_->clear();
      }
    }
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCOrderStateBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCOrderStateBack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string orderID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orderid().data(), this->orderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orderid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional int32 state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCOrderStateBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCOrderStateBack)
  return false;
#undef DO_
}

void GCOrderStateBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCOrderStateBack)
  // optional string orderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orderid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->orderid(), output);
  }

  // optional int32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCOrderStateBack)
}

::google::protobuf::uint8* GCOrderStateBack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCOrderStateBack)
  // optional string orderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orderid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->orderid(), target);
  }

  // optional int32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCOrderStateBack)
  return target;
}

int GCOrderStateBack::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string orderID = 1;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orderid());
    }

    // optional int32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCOrderStateBack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCOrderStateBack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCOrderStateBack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCOrderStateBack::MergeFrom(const GCOrderStateBack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCOrderStateBack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCOrderStateBack::CopyFrom(const GCOrderStateBack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCOrderStateBack::IsInitialized() const {

  return true;
}

void GCOrderStateBack::Swap(GCOrderStateBack* other) {
  if (other != this) {
    std::swap(orderid_, other->orderid_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCOrderStateBack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCOrderStateBack_descriptor_;
  metadata.reflection = GCOrderStateBack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CGVerifyIOSPay::kOrderIDFieldNumber;
const int CGVerifyIOSPay::kReceiptFieldNumber;
#endif  // !_MSC_VER

CGVerifyIOSPay::CGVerifyIOSPay()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGVerifyIOSPay)
}

void CGVerifyIOSPay::InitAsDefaultInstance() {
}

CGVerifyIOSPay::CGVerifyIOSPay(const CGVerifyIOSPay& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGVerifyIOSPay)
}

void CGVerifyIOSPay::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGVerifyIOSPay::~CGVerifyIOSPay() {
  // @@protoc_insertion_point(destructor:CGVerifyIOSPay)
  SharedDtor();
}

void CGVerifyIOSPay::SharedDtor() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (receipt_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete receipt_;
  }
  if (this != default_instance_) {
  }
}

void CGVerifyIOSPay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGVerifyIOSPay::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGVerifyIOSPay_descriptor_;
}

const CGVerifyIOSPay& CGVerifyIOSPay::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PayMessage_2eproto();
  return *default_instance_;
}

CGVerifyIOSPay* CGVerifyIOSPay::default_instance_ = NULL;

CGVerifyIOSPay* CGVerifyIOSPay::New() const {
  return new CGVerifyIOSPay;
}

void CGVerifyIOSPay::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_orderid()) {
      if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        orderid_->clear();
      }
    }
    if (has_receipt()) {
      if (receipt_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        receipt_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CGVerifyIOSPay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGVerifyIOSPay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string orderID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orderid().data(), this->orderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orderid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_receipt;
        break;
      }

      // optional string receipt = 2;
      case 2: {
        if (tag == 18) {
         parse_receipt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receipt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->receipt().data(), this->receipt().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "receipt");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGVerifyIOSPay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGVerifyIOSPay)
  return false;
#undef DO_
}

void CGVerifyIOSPay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGVerifyIOSPay)
  // optional string orderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orderid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->orderid(), output);
  }

  // optional string receipt = 2;
  if (has_receipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receipt().data(), this->receipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "receipt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->receipt(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGVerifyIOSPay)
}

::google::protobuf::uint8* CGVerifyIOSPay::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGVerifyIOSPay)
  // optional string orderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orderid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->orderid(), target);
  }

  // optional string receipt = 2;
  if (has_receipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receipt().data(), this->receipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "receipt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->receipt(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGVerifyIOSPay)
  return target;
}

int CGVerifyIOSPay::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string orderID = 1;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orderid());
    }

    // optional string receipt = 2;
    if (has_receipt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receipt());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGVerifyIOSPay::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CGVerifyIOSPay* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CGVerifyIOSPay*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGVerifyIOSPay::MergeFrom(const CGVerifyIOSPay& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_receipt()) {
      set_receipt(from.receipt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CGVerifyIOSPay::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGVerifyIOSPay::CopyFrom(const CGVerifyIOSPay& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGVerifyIOSPay::IsInitialized() const {

  return true;
}

void CGVerifyIOSPay::Swap(CGVerifyIOSPay* other) {
  if (other != this) {
    std::swap(orderid_, other->orderid_);
    std::swap(receipt_, other->receipt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CGVerifyIOSPay::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGVerifyIOSPay_descriptor_;
  metadata.reflection = CGVerifyIOSPay_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCVerifyIOSPayBack::kOrderIDFieldNumber;
const int GCVerifyIOSPayBack::kTransactionIdFieldNumber;
const int GCVerifyIOSPayBack::kStateFieldNumber;
#endif  // !_MSC_VER

GCVerifyIOSPayBack::GCVerifyIOSPayBack()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCVerifyIOSPayBack)
}

void GCVerifyIOSPayBack::InitAsDefaultInstance() {
}

GCVerifyIOSPayBack::GCVerifyIOSPayBack(const GCVerifyIOSPayBack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCVerifyIOSPayBack)
}

void GCVerifyIOSPayBack::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCVerifyIOSPayBack::~GCVerifyIOSPayBack() {
  // @@protoc_insertion_point(destructor:GCVerifyIOSPayBack)
  SharedDtor();
}

void GCVerifyIOSPayBack::SharedDtor() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (transaction_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transaction_id_;
  }
  if (this != default_instance_) {
  }
}

void GCVerifyIOSPayBack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCVerifyIOSPayBack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCVerifyIOSPayBack_descriptor_;
}

const GCVerifyIOSPayBack& GCVerifyIOSPayBack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PayMessage_2eproto();
  return *default_instance_;
}

GCVerifyIOSPayBack* GCVerifyIOSPayBack::default_instance_ = NULL;

GCVerifyIOSPayBack* GCVerifyIOSPayBack::New() const {
  return new GCVerifyIOSPayBack;
}

void GCVerifyIOSPayBack::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_orderid()) {
      if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        orderid_->clear();
      }
    }
    if (has_transaction_id()) {
      if (transaction_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transaction_id_->clear();
      }
    }
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCVerifyIOSPayBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCVerifyIOSPayBack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string orderID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orderid().data(), this->orderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orderid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_transaction_id;
        break;
      }

      // optional string transaction_id = 2;
      case 2: {
        if (tag == 18) {
         parse_transaction_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transaction_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transaction_id().data(), this->transaction_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transaction_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }

      // optional int32 state = 3;
      case 3: {
        if (tag == 24) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCVerifyIOSPayBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCVerifyIOSPayBack)
  return false;
#undef DO_
}

void GCVerifyIOSPayBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCVerifyIOSPayBack)
  // optional string orderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orderid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->orderid(), output);
  }

  // optional string transaction_id = 2;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transaction_id().data(), this->transaction_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transaction_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->transaction_id(), output);
  }

  // optional int32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCVerifyIOSPayBack)
}

::google::protobuf::uint8* GCVerifyIOSPayBack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCVerifyIOSPayBack)
  // optional string orderID = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orderid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->orderid(), target);
  }

  // optional string transaction_id = 2;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transaction_id().data(), this->transaction_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transaction_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->transaction_id(), target);
  }

  // optional int32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCVerifyIOSPayBack)
  return target;
}

int GCVerifyIOSPayBack::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string orderID = 1;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orderid());
    }

    // optional string transaction_id = 2;
    if (has_transaction_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transaction_id());
    }

    // optional int32 state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCVerifyIOSPayBack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCVerifyIOSPayBack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCVerifyIOSPayBack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCVerifyIOSPayBack::MergeFrom(const GCVerifyIOSPayBack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_transaction_id()) {
      set_transaction_id(from.transaction_id());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCVerifyIOSPayBack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCVerifyIOSPayBack::CopyFrom(const GCVerifyIOSPayBack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCVerifyIOSPayBack::IsInitialized() const {

  return true;
}

void GCVerifyIOSPayBack::Swap(GCVerifyIOSPayBack* other) {
  if (other != this) {
    std::swap(orderid_, other->orderid_);
    std::swap(transaction_id_, other->transaction_id_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCVerifyIOSPayBack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCVerifyIOSPayBack_descriptor_;
  metadata.reflection = GCVerifyIOSPayBack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RechargeItem::kSidFieldNumber;
const int RechargeItem::kCurTimesFieldNumber;
const int RechargeItem::kMaxTimesFieldNumber;
#endif  // !_MSC_VER

RechargeItem::RechargeItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RechargeItem)
}

void RechargeItem::InitAsDefaultInstance() {
}

RechargeItem::RechargeItem(const RechargeItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RechargeItem)
}

void RechargeItem::SharedCtor() {
  _cached_size_ = 0;
  sid_ = 0;
  curtimes_ = 0;
  maxtimes_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RechargeItem::~RechargeItem() {
  // @@protoc_insertion_point(destructor:RechargeItem)
  SharedDtor();
}

void RechargeItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RechargeItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RechargeItem_descriptor_;
}

const RechargeItem& RechargeItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PayMessage_2eproto();
  return *default_instance_;
}

RechargeItem* RechargeItem::default_instance_ = NULL;

RechargeItem* RechargeItem::New() const {
  return new RechargeItem;
}

void RechargeItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RechargeItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(sid_, maxtimes_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RechargeItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RechargeItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sid_)));
          set_has_sid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_curTimes;
        break;
      }

      // optional int32 curTimes = 2;
      case 2: {
        if (tag == 16) {
         parse_curTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curtimes_)));
          set_has_curtimes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_maxTimes;
        break;
      }

      // optional int32 maxTimes = 3;
      case 3: {
        if (tag == 24) {
         parse_maxTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxtimes_)));
          set_has_maxtimes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RechargeItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RechargeItem)
  return false;
#undef DO_
}

void RechargeItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RechargeItem)
  // optional int32 sid = 1;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sid(), output);
  }

  // optional int32 curTimes = 2;
  if (has_curtimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->curtimes(), output);
  }

  // optional int32 maxTimes = 3;
  if (has_maxtimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxtimes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RechargeItem)
}

::google::protobuf::uint8* RechargeItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RechargeItem)
  // optional int32 sid = 1;
  if (has_sid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sid(), target);
  }

  // optional int32 curTimes = 2;
  if (has_curtimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->curtimes(), target);
  }

  // optional int32 maxTimes = 3;
  if (has_maxtimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxtimes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RechargeItem)
  return target;
}

int RechargeItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sid = 1;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sid());
    }

    // optional int32 curTimes = 2;
    if (has_curtimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->curtimes());
    }

    // optional int32 maxTimes = 3;
    if (has_maxtimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxtimes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RechargeItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RechargeItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RechargeItem::MergeFrom(const RechargeItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sid()) {
      set_sid(from.sid());
    }
    if (from.has_curtimes()) {
      set_curtimes(from.curtimes());
    }
    if (from.has_maxtimes()) {
      set_maxtimes(from.maxtimes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RechargeItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeItem::CopyFrom(const RechargeItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeItem::IsInitialized() const {

  return true;
}

void RechargeItem::Swap(RechargeItem* other) {
  if (other != this) {
    std::swap(sid_, other->sid_);
    std::swap(curtimes_, other->curtimes_);
    std::swap(maxtimes_, other->maxtimes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RechargeItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RechargeItem_descriptor_;
  metadata.reflection = RechargeItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCRechargeItemInfo::kRechargeItemListFieldNumber;
#endif  // !_MSC_VER

GCRechargeItemInfo::GCRechargeItemInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCRechargeItemInfo)
}

void GCRechargeItemInfo::InitAsDefaultInstance() {
}

GCRechargeItemInfo::GCRechargeItemInfo(const GCRechargeItemInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCRechargeItemInfo)
}

void GCRechargeItemInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCRechargeItemInfo::~GCRechargeItemInfo() {
  // @@protoc_insertion_point(destructor:GCRechargeItemInfo)
  SharedDtor();
}

void GCRechargeItemInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GCRechargeItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCRechargeItemInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCRechargeItemInfo_descriptor_;
}

const GCRechargeItemInfo& GCRechargeItemInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PayMessage_2eproto();
  return *default_instance_;
}

GCRechargeItemInfo* GCRechargeItemInfo::default_instance_ = NULL;

GCRechargeItemInfo* GCRechargeItemInfo::New() const {
  return new GCRechargeItemInfo;
}

void GCRechargeItemInfo::Clear() {
  rechargeitemlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCRechargeItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCRechargeItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .RechargeItem rechargeItemList = 1;
      case 1: {
        if (tag == 10) {
         parse_rechargeItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rechargeitemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rechargeItemList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCRechargeItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCRechargeItemInfo)
  return false;
#undef DO_
}

void GCRechargeItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCRechargeItemInfo)
  // repeated .RechargeItem rechargeItemList = 1;
  for (int i = 0; i < this->rechargeitemlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rechargeitemlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCRechargeItemInfo)
}

::google::protobuf::uint8* GCRechargeItemInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCRechargeItemInfo)
  // repeated .RechargeItem rechargeItemList = 1;
  for (int i = 0; i < this->rechargeitemlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rechargeitemlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCRechargeItemInfo)
  return target;
}

int GCRechargeItemInfo::ByteSize() const {
  int total_size = 0;

  // repeated .RechargeItem rechargeItemList = 1;
  total_size += 1 * this->rechargeitemlist_size();
  for (int i = 0; i < this->rechargeitemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rechargeitemlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCRechargeItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCRechargeItemInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCRechargeItemInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCRechargeItemInfo::MergeFrom(const GCRechargeItemInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  rechargeitemlist_.MergeFrom(from.rechargeitemlist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCRechargeItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCRechargeItemInfo::CopyFrom(const GCRechargeItemInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCRechargeItemInfo::IsInitialized() const {

  return true;
}

void GCRechargeItemInfo::Swap(GCRechargeItemInfo* other) {
  if (other != this) {
    rechargeitemlist_.Swap(&other->rechargeitemlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCRechargeItemInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCRechargeItemInfo_descriptor_;
  metadata.reflection = GCRechargeItemInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
