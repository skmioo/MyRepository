// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PayMessage.proto

#ifndef PROTOBUF_PayMessage_2eproto__INCLUDED
#define PROTOBUF_PayMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PayMessage_2eproto();
void protobuf_AssignDesc_PayMessage_2eproto();
void protobuf_ShutdownFile_PayMessage_2eproto();

class OrderInfo;
class CGCreateOrder;
class GCCreateOrderBack;
class CGGetOrderState;
class GCOrderStateBack;
class CGVerifyIOSPay;
class GCVerifyIOSPayBack;
class RechargeItem;
class GCRechargeItemInfo;

// ===================================================================

class OrderInfo : public ::google::protobuf::Message {
 public:
  OrderInfo();
  virtual ~OrderInfo();

  OrderInfo(const OrderInfo& from);

  inline OrderInfo& operator=(const OrderInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderInfo& default_instance();

  void Swap(OrderInfo* other);

  // implements Message ----------------------------------------------

  OrderInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderInfo& from);
  void MergeFrom(const OrderInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string orderID = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  inline const ::std::string& orderid() const;
  inline void set_orderid(const ::std::string& value);
  inline void set_orderid(const char* value);
  inline void set_orderid(const char* value, size_t size);
  inline ::std::string* mutable_orderid();
  inline ::std::string* release_orderid();
  inline void set_allocated_orderid(::std::string* orderid);

  // optional int64 playerID = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 2;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional string createTime = 5;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 5;
  inline const ::std::string& createtime() const;
  inline void set_createtime(const ::std::string& value);
  inline void set_createtime(const char* value);
  inline void set_createtime(const char* value, size_t size);
  inline ::std::string* mutable_createtime();
  inline ::std::string* release_createtime();
  inline void set_allocated_createtime(::std::string* createtime);

  // optional int32 money = 6;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 6;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional string platForm = 7;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatFormFieldNumber = 7;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  inline void set_allocated_platform(::std::string* platform);

  // optional string apppOrderID = 8;
  inline bool has_appporderid() const;
  inline void clear_appporderid();
  static const int kApppOrderIDFieldNumber = 8;
  inline const ::std::string& appporderid() const;
  inline void set_appporderid(const ::std::string& value);
  inline void set_appporderid(const char* value);
  inline void set_appporderid(const char* value, size_t size);
  inline ::std::string* mutable_appporderid();
  inline ::std::string* release_appporderid();
  inline void set_allocated_appporderid(::std::string* appporderid);

  // optional int32 serverID = 9;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 9;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // optional int32 sid = 10;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 10;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int64 accountID = 11;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 11;
  inline ::google::protobuf::int64 accountid() const;
  inline void set_accountid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:OrderInfo)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_appporderid();
  inline void clear_has_appporderid();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_accountid();
  inline void clear_has_accountid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* orderid_;
  ::google::protobuf::int64 playerid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  ::std::string* createtime_;
  ::std::string* platform_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 serverid_;
  ::std::string* appporderid_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int32 sid_;
  friend void  protobuf_AddDesc_PayMessage_2eproto();
  friend void protobuf_AssignDesc_PayMessage_2eproto();
  friend void protobuf_ShutdownFile_PayMessage_2eproto();

  void InitAsDefaultInstance();
  static OrderInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGCreateOrder : public ::google::protobuf::Message {
 public:
  CGCreateOrder();
  virtual ~CGCreateOrder();

  CGCreateOrder(const CGCreateOrder& from);

  inline CGCreateOrder& operator=(const CGCreateOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCreateOrder& default_instance();

  void Swap(CGCreateOrder* other);

  // implements Message ----------------------------------------------

  CGCreateOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCreateOrder& from);
  void MergeFrom(const CGCreateOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sid = 1;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 1;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional string apppOrderID = 2;
  inline bool has_appporderid() const;
  inline void clear_appporderid();
  static const int kApppOrderIDFieldNumber = 2;
  inline const ::std::string& appporderid() const;
  inline void set_appporderid(const ::std::string& value);
  inline void set_appporderid(const char* value);
  inline void set_appporderid(const char* value, size_t size);
  inline ::std::string* mutable_appporderid();
  inline ::std::string* release_appporderid();
  inline void set_allocated_appporderid(::std::string* appporderid);

  // optional string platForm = 3;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatFormFieldNumber = 3;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  inline void set_allocated_platform(::std::string* platform);

  // optional string parse = 4;
  inline bool has_parse() const;
  inline void clear_parse();
  static const int kParseFieldNumber = 4;
  inline const ::std::string& parse() const;
  inline void set_parse(const ::std::string& value);
  inline void set_parse(const char* value);
  inline void set_parse(const char* value, size_t size);
  inline ::std::string* mutable_parse();
  inline ::std::string* release_parse();
  inline void set_allocated_parse(::std::string* parse);

  // @@protoc_insertion_point(class_scope:CGCreateOrder)
 private:
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_appporderid();
  inline void clear_has_appporderid();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_parse();
  inline void clear_has_parse();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* appporderid_;
  ::std::string* platform_;
  ::std::string* parse_;
  ::google::protobuf::int32 sid_;
  friend void  protobuf_AddDesc_PayMessage_2eproto();
  friend void protobuf_AssignDesc_PayMessage_2eproto();
  friend void protobuf_ShutdownFile_PayMessage_2eproto();

  void InitAsDefaultInstance();
  static CGCreateOrder* default_instance_;
};
// -------------------------------------------------------------------

class GCCreateOrderBack : public ::google::protobuf::Message {
 public:
  GCCreateOrderBack();
  virtual ~GCCreateOrderBack();

  GCCreateOrderBack(const GCCreateOrderBack& from);

  inline GCCreateOrderBack& operator=(const GCCreateOrderBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCreateOrderBack& default_instance();

  void Swap(GCCreateOrderBack* other);

  // implements Message ----------------------------------------------

  GCCreateOrderBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCreateOrderBack& from);
  void MergeFrom(const GCCreateOrderBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OrderInfo orderInfo = 1;
  inline bool has_orderinfo() const;
  inline void clear_orderinfo();
  static const int kOrderInfoFieldNumber = 1;
  inline const ::OrderInfo& orderinfo() const;
  inline ::OrderInfo* mutable_orderinfo();
  inline ::OrderInfo* release_orderinfo();
  inline void set_allocated_orderinfo(::OrderInfo* orderinfo);

  // @@protoc_insertion_point(class_scope:GCCreateOrderBack)
 private:
  inline void set_has_orderinfo();
  inline void clear_has_orderinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OrderInfo* orderinfo_;
  friend void  protobuf_AddDesc_PayMessage_2eproto();
  friend void protobuf_AssignDesc_PayMessage_2eproto();
  friend void protobuf_ShutdownFile_PayMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCreateOrderBack* default_instance_;
};
// -------------------------------------------------------------------

class CGGetOrderState : public ::google::protobuf::Message {
 public:
  CGGetOrderState();
  virtual ~CGGetOrderState();

  CGGetOrderState(const CGGetOrderState& from);

  inline CGGetOrderState& operator=(const CGGetOrderState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetOrderState& default_instance();

  void Swap(CGGetOrderState* other);

  // implements Message ----------------------------------------------

  CGGetOrderState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetOrderState& from);
  void MergeFrom(const CGGetOrderState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string orderID = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  inline const ::std::string& orderid() const;
  inline void set_orderid(const ::std::string& value);
  inline void set_orderid(const char* value);
  inline void set_orderid(const char* value, size_t size);
  inline ::std::string* mutable_orderid();
  inline ::std::string* release_orderid();
  inline void set_allocated_orderid(::std::string* orderid);

  // @@protoc_insertion_point(class_scope:CGGetOrderState)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* orderid_;
  friend void  protobuf_AddDesc_PayMessage_2eproto();
  friend void protobuf_AssignDesc_PayMessage_2eproto();
  friend void protobuf_ShutdownFile_PayMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetOrderState* default_instance_;
};
// -------------------------------------------------------------------

class GCOrderStateBack : public ::google::protobuf::Message {
 public:
  GCOrderStateBack();
  virtual ~GCOrderStateBack();

  GCOrderStateBack(const GCOrderStateBack& from);

  inline GCOrderStateBack& operator=(const GCOrderStateBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCOrderStateBack& default_instance();

  void Swap(GCOrderStateBack* other);

  // implements Message ----------------------------------------------

  GCOrderStateBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCOrderStateBack& from);
  void MergeFrom(const GCOrderStateBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string orderID = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  inline const ::std::string& orderid() const;
  inline void set_orderid(const ::std::string& value);
  inline void set_orderid(const char* value);
  inline void set_orderid(const char* value, size_t size);
  inline ::std::string* mutable_orderid();
  inline ::std::string* release_orderid();
  inline void set_allocated_orderid(::std::string* orderid);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCOrderStateBack)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* orderid_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_PayMessage_2eproto();
  friend void protobuf_AssignDesc_PayMessage_2eproto();
  friend void protobuf_ShutdownFile_PayMessage_2eproto();

  void InitAsDefaultInstance();
  static GCOrderStateBack* default_instance_;
};
// -------------------------------------------------------------------

class CGVerifyIOSPay : public ::google::protobuf::Message {
 public:
  CGVerifyIOSPay();
  virtual ~CGVerifyIOSPay();

  CGVerifyIOSPay(const CGVerifyIOSPay& from);

  inline CGVerifyIOSPay& operator=(const CGVerifyIOSPay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGVerifyIOSPay& default_instance();

  void Swap(CGVerifyIOSPay* other);

  // implements Message ----------------------------------------------

  CGVerifyIOSPay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGVerifyIOSPay& from);
  void MergeFrom(const CGVerifyIOSPay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string orderID = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  inline const ::std::string& orderid() const;
  inline void set_orderid(const ::std::string& value);
  inline void set_orderid(const char* value);
  inline void set_orderid(const char* value, size_t size);
  inline ::std::string* mutable_orderid();
  inline ::std::string* release_orderid();
  inline void set_allocated_orderid(::std::string* orderid);

  // optional string receipt = 2;
  inline bool has_receipt() const;
  inline void clear_receipt();
  static const int kReceiptFieldNumber = 2;
  inline const ::std::string& receipt() const;
  inline void set_receipt(const ::std::string& value);
  inline void set_receipt(const char* value);
  inline void set_receipt(const char* value, size_t size);
  inline ::std::string* mutable_receipt();
  inline ::std::string* release_receipt();
  inline void set_allocated_receipt(::std::string* receipt);

  // @@protoc_insertion_point(class_scope:CGVerifyIOSPay)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_receipt();
  inline void clear_has_receipt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* orderid_;
  ::std::string* receipt_;
  friend void  protobuf_AddDesc_PayMessage_2eproto();
  friend void protobuf_AssignDesc_PayMessage_2eproto();
  friend void protobuf_ShutdownFile_PayMessage_2eproto();

  void InitAsDefaultInstance();
  static CGVerifyIOSPay* default_instance_;
};
// -------------------------------------------------------------------

class GCVerifyIOSPayBack : public ::google::protobuf::Message {
 public:
  GCVerifyIOSPayBack();
  virtual ~GCVerifyIOSPayBack();

  GCVerifyIOSPayBack(const GCVerifyIOSPayBack& from);

  inline GCVerifyIOSPayBack& operator=(const GCVerifyIOSPayBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCVerifyIOSPayBack& default_instance();

  void Swap(GCVerifyIOSPayBack* other);

  // implements Message ----------------------------------------------

  GCVerifyIOSPayBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCVerifyIOSPayBack& from);
  void MergeFrom(const GCVerifyIOSPayBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string orderID = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  inline const ::std::string& orderid() const;
  inline void set_orderid(const ::std::string& value);
  inline void set_orderid(const char* value);
  inline void set_orderid(const char* value, size_t size);
  inline ::std::string* mutable_orderid();
  inline ::std::string* release_orderid();
  inline void set_allocated_orderid(::std::string* orderid);

  // optional string transaction_id = 2;
  inline bool has_transaction_id() const;
  inline void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 2;
  inline const ::std::string& transaction_id() const;
  inline void set_transaction_id(const ::std::string& value);
  inline void set_transaction_id(const char* value);
  inline void set_transaction_id(const char* value, size_t size);
  inline ::std::string* mutable_transaction_id();
  inline ::std::string* release_transaction_id();
  inline void set_allocated_transaction_id(::std::string* transaction_id);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCVerifyIOSPayBack)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* orderid_;
  ::std::string* transaction_id_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_PayMessage_2eproto();
  friend void protobuf_AssignDesc_PayMessage_2eproto();
  friend void protobuf_ShutdownFile_PayMessage_2eproto();

  void InitAsDefaultInstance();
  static GCVerifyIOSPayBack* default_instance_;
};
// -------------------------------------------------------------------

class RechargeItem : public ::google::protobuf::Message {
 public:
  RechargeItem();
  virtual ~RechargeItem();

  RechargeItem(const RechargeItem& from);

  inline RechargeItem& operator=(const RechargeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeItem& default_instance();

  void Swap(RechargeItem* other);

  // implements Message ----------------------------------------------

  RechargeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargeItem& from);
  void MergeFrom(const RechargeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sid = 1;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 1;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int32 curTimes = 2;
  inline bool has_curtimes() const;
  inline void clear_curtimes();
  static const int kCurTimesFieldNumber = 2;
  inline ::google::protobuf::int32 curtimes() const;
  inline void set_curtimes(::google::protobuf::int32 value);

  // optional int32 maxTimes = 3;
  inline bool has_maxtimes() const;
  inline void clear_maxtimes();
  static const int kMaxTimesFieldNumber = 3;
  inline ::google::protobuf::int32 maxtimes() const;
  inline void set_maxtimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RechargeItem)
 private:
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_curtimes();
  inline void clear_has_curtimes();
  inline void set_has_maxtimes();
  inline void clear_has_maxtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 curtimes_;
  ::google::protobuf::int32 maxtimes_;
  friend void  protobuf_AddDesc_PayMessage_2eproto();
  friend void protobuf_AssignDesc_PayMessage_2eproto();
  friend void protobuf_ShutdownFile_PayMessage_2eproto();

  void InitAsDefaultInstance();
  static RechargeItem* default_instance_;
};
// -------------------------------------------------------------------

class GCRechargeItemInfo : public ::google::protobuf::Message {
 public:
  GCRechargeItemInfo();
  virtual ~GCRechargeItemInfo();

  GCRechargeItemInfo(const GCRechargeItemInfo& from);

  inline GCRechargeItemInfo& operator=(const GCRechargeItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRechargeItemInfo& default_instance();

  void Swap(GCRechargeItemInfo* other);

  // implements Message ----------------------------------------------

  GCRechargeItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRechargeItemInfo& from);
  void MergeFrom(const GCRechargeItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RechargeItem rechargeItemList = 1;
  inline int rechargeitemlist_size() const;
  inline void clear_rechargeitemlist();
  static const int kRechargeItemListFieldNumber = 1;
  inline const ::RechargeItem& rechargeitemlist(int index) const;
  inline ::RechargeItem* mutable_rechargeitemlist(int index);
  inline ::RechargeItem* add_rechargeitemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::RechargeItem >&
      rechargeitemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::RechargeItem >*
      mutable_rechargeitemlist();

  // @@protoc_insertion_point(class_scope:GCRechargeItemInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RechargeItem > rechargeitemlist_;
  friend void  protobuf_AddDesc_PayMessage_2eproto();
  friend void protobuf_AssignDesc_PayMessage_2eproto();
  friend void protobuf_ShutdownFile_PayMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRechargeItemInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// OrderInfo

// optional string orderID = 1;
inline bool OrderInfo::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderInfo::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderInfo::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderInfo::clear_orderid() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_->clear();
  }
  clear_has_orderid();
}
inline const ::std::string& OrderInfo::orderid() const {
  // @@protoc_insertion_point(field_get:OrderInfo.orderID)
  return *orderid_;
}
inline void OrderInfo::set_orderid(const ::std::string& value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set:OrderInfo.orderID)
}
inline void OrderInfo::set_orderid(const char* value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set_char:OrderInfo.orderID)
}
inline void OrderInfo::set_orderid(const char* value, size_t size) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OrderInfo.orderID)
}
inline ::std::string* OrderInfo::mutable_orderid() {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:OrderInfo.orderID)
  return orderid_;
}
inline ::std::string* OrderInfo::release_orderid() {
  clear_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = orderid_;
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OrderInfo::set_allocated_orderid(::std::string* orderid) {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (orderid) {
    set_has_orderid();
    orderid_ = orderid;
  } else {
    clear_has_orderid();
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:OrderInfo.orderID)
}

// optional int64 playerID = 2;
inline bool OrderInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderInfo::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 OrderInfo::playerid() const {
  // @@protoc_insertion_point(field_get:OrderInfo.playerID)
  return playerid_;
}
inline void OrderInfo::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:OrderInfo.playerID)
}

// optional int32 type = 3;
inline bool OrderInfo::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderInfo::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 OrderInfo::type() const {
  // @@protoc_insertion_point(field_get:OrderInfo.type)
  return type_;
}
inline void OrderInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:OrderInfo.type)
}

// optional int32 state = 4;
inline bool OrderInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 OrderInfo::state() const {
  // @@protoc_insertion_point(field_get:OrderInfo.state)
  return state_;
}
inline void OrderInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:OrderInfo.state)
}

// optional string createTime = 5;
inline bool OrderInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OrderInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OrderInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OrderInfo::clear_createtime() {
  if (createtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_->clear();
  }
  clear_has_createtime();
}
inline const ::std::string& OrderInfo::createtime() const {
  // @@protoc_insertion_point(field_get:OrderInfo.createTime)
  return *createtime_;
}
inline void OrderInfo::set_createtime(const ::std::string& value) {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  createtime_->assign(value);
  // @@protoc_insertion_point(field_set:OrderInfo.createTime)
}
inline void OrderInfo::set_createtime(const char* value) {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  createtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:OrderInfo.createTime)
}
inline void OrderInfo::set_createtime(const char* value, size_t size) {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  createtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OrderInfo.createTime)
}
inline ::std::string* OrderInfo::mutable_createtime() {
  set_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    createtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:OrderInfo.createTime)
  return createtime_;
}
inline ::std::string* OrderInfo::release_createtime() {
  clear_has_createtime();
  if (createtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = createtime_;
    createtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OrderInfo::set_allocated_createtime(::std::string* createtime) {
  if (createtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createtime_;
  }
  if (createtime) {
    set_has_createtime();
    createtime_ = createtime;
  } else {
    clear_has_createtime();
    createtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:OrderInfo.createTime)
}

// optional int32 money = 6;
inline bool OrderInfo::has_money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OrderInfo::set_has_money() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OrderInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OrderInfo::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 OrderInfo::money() const {
  // @@protoc_insertion_point(field_get:OrderInfo.money)
  return money_;
}
inline void OrderInfo::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:OrderInfo.money)
}

// optional string platForm = 7;
inline bool OrderInfo::has_platform() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OrderInfo::set_has_platform() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OrderInfo::clear_has_platform() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OrderInfo::clear_platform() {
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& OrderInfo::platform() const {
  // @@protoc_insertion_point(field_get:OrderInfo.platForm)
  return *platform_;
}
inline void OrderInfo::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
  // @@protoc_insertion_point(field_set:OrderInfo.platForm)
}
inline void OrderInfo::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
  // @@protoc_insertion_point(field_set_char:OrderInfo.platForm)
}
inline void OrderInfo::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OrderInfo.platForm)
}
inline ::std::string* OrderInfo::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:OrderInfo.platForm)
  return platform_;
}
inline ::std::string* OrderInfo::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OrderInfo::set_allocated_platform(::std::string* platform) {
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platform_;
  }
  if (platform) {
    set_has_platform();
    platform_ = platform;
  } else {
    clear_has_platform();
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:OrderInfo.platForm)
}

// optional string apppOrderID = 8;
inline bool OrderInfo::has_appporderid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OrderInfo::set_has_appporderid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OrderInfo::clear_has_appporderid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OrderInfo::clear_appporderid() {
  if (appporderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appporderid_->clear();
  }
  clear_has_appporderid();
}
inline const ::std::string& OrderInfo::appporderid() const {
  // @@protoc_insertion_point(field_get:OrderInfo.apppOrderID)
  return *appporderid_;
}
inline void OrderInfo::set_appporderid(const ::std::string& value) {
  set_has_appporderid();
  if (appporderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appporderid_ = new ::std::string;
  }
  appporderid_->assign(value);
  // @@protoc_insertion_point(field_set:OrderInfo.apppOrderID)
}
inline void OrderInfo::set_appporderid(const char* value) {
  set_has_appporderid();
  if (appporderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appporderid_ = new ::std::string;
  }
  appporderid_->assign(value);
  // @@protoc_insertion_point(field_set_char:OrderInfo.apppOrderID)
}
inline void OrderInfo::set_appporderid(const char* value, size_t size) {
  set_has_appporderid();
  if (appporderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appporderid_ = new ::std::string;
  }
  appporderid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OrderInfo.apppOrderID)
}
inline ::std::string* OrderInfo::mutable_appporderid() {
  set_has_appporderid();
  if (appporderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appporderid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:OrderInfo.apppOrderID)
  return appporderid_;
}
inline ::std::string* OrderInfo::release_appporderid() {
  clear_has_appporderid();
  if (appporderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = appporderid_;
    appporderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OrderInfo::set_allocated_appporderid(::std::string* appporderid) {
  if (appporderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete appporderid_;
  }
  if (appporderid) {
    set_has_appporderid();
    appporderid_ = appporderid;
  } else {
    clear_has_appporderid();
    appporderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:OrderInfo.apppOrderID)
}

// optional int32 serverID = 9;
inline bool OrderInfo::has_serverid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OrderInfo::set_has_serverid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OrderInfo::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OrderInfo::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 OrderInfo::serverid() const {
  // @@protoc_insertion_point(field_get:OrderInfo.serverID)
  return serverid_;
}
inline void OrderInfo::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:OrderInfo.serverID)
}

// optional int32 sid = 10;
inline bool OrderInfo::has_sid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OrderInfo::set_has_sid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OrderInfo::clear_has_sid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OrderInfo::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 OrderInfo::sid() const {
  // @@protoc_insertion_point(field_get:OrderInfo.sid)
  return sid_;
}
inline void OrderInfo::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:OrderInfo.sid)
}

// optional int64 accountID = 11;
inline bool OrderInfo::has_accountid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OrderInfo::set_has_accountid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OrderInfo::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OrderInfo::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
  clear_has_accountid();
}
inline ::google::protobuf::int64 OrderInfo::accountid() const {
  // @@protoc_insertion_point(field_get:OrderInfo.accountID)
  return accountid_;
}
inline void OrderInfo::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:OrderInfo.accountID)
}

// -------------------------------------------------------------------

// CGCreateOrder

// optional int32 sid = 1;
inline bool CGCreateOrder::has_sid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCreateOrder::set_has_sid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCreateOrder::clear_has_sid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCreateOrder::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 CGCreateOrder::sid() const {
  // @@protoc_insertion_point(field_get:CGCreateOrder.sid)
  return sid_;
}
inline void CGCreateOrder::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:CGCreateOrder.sid)
}

// optional string apppOrderID = 2;
inline bool CGCreateOrder::has_appporderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCreateOrder::set_has_appporderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCreateOrder::clear_has_appporderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCreateOrder::clear_appporderid() {
  if (appporderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appporderid_->clear();
  }
  clear_has_appporderid();
}
inline const ::std::string& CGCreateOrder::appporderid() const {
  // @@protoc_insertion_point(field_get:CGCreateOrder.apppOrderID)
  return *appporderid_;
}
inline void CGCreateOrder::set_appporderid(const ::std::string& value) {
  set_has_appporderid();
  if (appporderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appporderid_ = new ::std::string;
  }
  appporderid_->assign(value);
  // @@protoc_insertion_point(field_set:CGCreateOrder.apppOrderID)
}
inline void CGCreateOrder::set_appporderid(const char* value) {
  set_has_appporderid();
  if (appporderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appporderid_ = new ::std::string;
  }
  appporderid_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCreateOrder.apppOrderID)
}
inline void CGCreateOrder::set_appporderid(const char* value, size_t size) {
  set_has_appporderid();
  if (appporderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appporderid_ = new ::std::string;
  }
  appporderid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCreateOrder.apppOrderID)
}
inline ::std::string* CGCreateOrder::mutable_appporderid() {
  set_has_appporderid();
  if (appporderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appporderid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCreateOrder.apppOrderID)
  return appporderid_;
}
inline ::std::string* CGCreateOrder::release_appporderid() {
  clear_has_appporderid();
  if (appporderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = appporderid_;
    appporderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCreateOrder::set_allocated_appporderid(::std::string* appporderid) {
  if (appporderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete appporderid_;
  }
  if (appporderid) {
    set_has_appporderid();
    appporderid_ = appporderid;
  } else {
    clear_has_appporderid();
    appporderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCreateOrder.apppOrderID)
}

// optional string platForm = 3;
inline bool CGCreateOrder::has_platform() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCreateOrder::set_has_platform() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCreateOrder::clear_has_platform() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCreateOrder::clear_platform() {
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& CGCreateOrder::platform() const {
  // @@protoc_insertion_point(field_get:CGCreateOrder.platForm)
  return *platform_;
}
inline void CGCreateOrder::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
  // @@protoc_insertion_point(field_set:CGCreateOrder.platForm)
}
inline void CGCreateOrder::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCreateOrder.platForm)
}
inline void CGCreateOrder::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCreateOrder.platForm)
}
inline ::std::string* CGCreateOrder::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCreateOrder.platForm)
  return platform_;
}
inline ::std::string* CGCreateOrder::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCreateOrder::set_allocated_platform(::std::string* platform) {
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platform_;
  }
  if (platform) {
    set_has_platform();
    platform_ = platform;
  } else {
    clear_has_platform();
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCreateOrder.platForm)
}

// optional string parse = 4;
inline bool CGCreateOrder::has_parse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCreateOrder::set_has_parse() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCreateOrder::clear_has_parse() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCreateOrder::clear_parse() {
  if (parse_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parse_->clear();
  }
  clear_has_parse();
}
inline const ::std::string& CGCreateOrder::parse() const {
  // @@protoc_insertion_point(field_get:CGCreateOrder.parse)
  return *parse_;
}
inline void CGCreateOrder::set_parse(const ::std::string& value) {
  set_has_parse();
  if (parse_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parse_ = new ::std::string;
  }
  parse_->assign(value);
  // @@protoc_insertion_point(field_set:CGCreateOrder.parse)
}
inline void CGCreateOrder::set_parse(const char* value) {
  set_has_parse();
  if (parse_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parse_ = new ::std::string;
  }
  parse_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCreateOrder.parse)
}
inline void CGCreateOrder::set_parse(const char* value, size_t size) {
  set_has_parse();
  if (parse_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parse_ = new ::std::string;
  }
  parse_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCreateOrder.parse)
}
inline ::std::string* CGCreateOrder::mutable_parse() {
  set_has_parse();
  if (parse_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parse_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCreateOrder.parse)
  return parse_;
}
inline ::std::string* CGCreateOrder::release_parse() {
  clear_has_parse();
  if (parse_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = parse_;
    parse_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCreateOrder::set_allocated_parse(::std::string* parse) {
  if (parse_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete parse_;
  }
  if (parse) {
    set_has_parse();
    parse_ = parse;
  } else {
    clear_has_parse();
    parse_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCreateOrder.parse)
}

// -------------------------------------------------------------------

// GCCreateOrderBack

// optional .OrderInfo orderInfo = 1;
inline bool GCCreateOrderBack::has_orderinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCCreateOrderBack::set_has_orderinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCCreateOrderBack::clear_has_orderinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCCreateOrderBack::clear_orderinfo() {
  if (orderinfo_ != NULL) orderinfo_->::OrderInfo::Clear();
  clear_has_orderinfo();
}
inline const ::OrderInfo& GCCreateOrderBack::orderinfo() const {
  // @@protoc_insertion_point(field_get:GCCreateOrderBack.orderInfo)
  return orderinfo_ != NULL ? *orderinfo_ : *default_instance_->orderinfo_;
}
inline ::OrderInfo* GCCreateOrderBack::mutable_orderinfo() {
  set_has_orderinfo();
  if (orderinfo_ == NULL) orderinfo_ = new ::OrderInfo;
  // @@protoc_insertion_point(field_mutable:GCCreateOrderBack.orderInfo)
  return orderinfo_;
}
inline ::OrderInfo* GCCreateOrderBack::release_orderinfo() {
  clear_has_orderinfo();
  ::OrderInfo* temp = orderinfo_;
  orderinfo_ = NULL;
  return temp;
}
inline void GCCreateOrderBack::set_allocated_orderinfo(::OrderInfo* orderinfo) {
  delete orderinfo_;
  orderinfo_ = orderinfo;
  if (orderinfo) {
    set_has_orderinfo();
  } else {
    clear_has_orderinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCCreateOrderBack.orderInfo)
}

// -------------------------------------------------------------------

// CGGetOrderState

// optional string orderID = 1;
inline bool CGGetOrderState::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetOrderState::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetOrderState::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetOrderState::clear_orderid() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_->clear();
  }
  clear_has_orderid();
}
inline const ::std::string& CGGetOrderState::orderid() const {
  // @@protoc_insertion_point(field_get:CGGetOrderState.orderID)
  return *orderid_;
}
inline void CGGetOrderState::set_orderid(const ::std::string& value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set:CGGetOrderState.orderID)
}
inline void CGGetOrderState::set_orderid(const char* value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGGetOrderState.orderID)
}
inline void CGGetOrderState::set_orderid(const char* value, size_t size) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGGetOrderState.orderID)
}
inline ::std::string* CGGetOrderState::mutable_orderid() {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGGetOrderState.orderID)
  return orderid_;
}
inline ::std::string* CGGetOrderState::release_orderid() {
  clear_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = orderid_;
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGGetOrderState::set_allocated_orderid(::std::string* orderid) {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (orderid) {
    set_has_orderid();
    orderid_ = orderid;
  } else {
    clear_has_orderid();
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGGetOrderState.orderID)
}

// -------------------------------------------------------------------

// GCOrderStateBack

// optional string orderID = 1;
inline bool GCOrderStateBack::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCOrderStateBack::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCOrderStateBack::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCOrderStateBack::clear_orderid() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_->clear();
  }
  clear_has_orderid();
}
inline const ::std::string& GCOrderStateBack::orderid() const {
  // @@protoc_insertion_point(field_get:GCOrderStateBack.orderID)
  return *orderid_;
}
inline void GCOrderStateBack::set_orderid(const ::std::string& value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set:GCOrderStateBack.orderID)
}
inline void GCOrderStateBack::set_orderid(const char* value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCOrderStateBack.orderID)
}
inline void GCOrderStateBack::set_orderid(const char* value, size_t size) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCOrderStateBack.orderID)
}
inline ::std::string* GCOrderStateBack::mutable_orderid() {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCOrderStateBack.orderID)
  return orderid_;
}
inline ::std::string* GCOrderStateBack::release_orderid() {
  clear_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = orderid_;
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCOrderStateBack::set_allocated_orderid(::std::string* orderid) {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (orderid) {
    set_has_orderid();
    orderid_ = orderid;
  } else {
    clear_has_orderid();
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCOrderStateBack.orderID)
}

// optional int32 state = 2;
inline bool GCOrderStateBack::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCOrderStateBack::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCOrderStateBack::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCOrderStateBack::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GCOrderStateBack::state() const {
  // @@protoc_insertion_point(field_get:GCOrderStateBack.state)
  return state_;
}
inline void GCOrderStateBack::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GCOrderStateBack.state)
}

// -------------------------------------------------------------------

// CGVerifyIOSPay

// optional string orderID = 1;
inline bool CGVerifyIOSPay::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGVerifyIOSPay::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGVerifyIOSPay::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGVerifyIOSPay::clear_orderid() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_->clear();
  }
  clear_has_orderid();
}
inline const ::std::string& CGVerifyIOSPay::orderid() const {
  // @@protoc_insertion_point(field_get:CGVerifyIOSPay.orderID)
  return *orderid_;
}
inline void CGVerifyIOSPay::set_orderid(const ::std::string& value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set:CGVerifyIOSPay.orderID)
}
inline void CGVerifyIOSPay::set_orderid(const char* value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGVerifyIOSPay.orderID)
}
inline void CGVerifyIOSPay::set_orderid(const char* value, size_t size) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGVerifyIOSPay.orderID)
}
inline ::std::string* CGVerifyIOSPay::mutable_orderid() {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGVerifyIOSPay.orderID)
  return orderid_;
}
inline ::std::string* CGVerifyIOSPay::release_orderid() {
  clear_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = orderid_;
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGVerifyIOSPay::set_allocated_orderid(::std::string* orderid) {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (orderid) {
    set_has_orderid();
    orderid_ = orderid;
  } else {
    clear_has_orderid();
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGVerifyIOSPay.orderID)
}

// optional string receipt = 2;
inline bool CGVerifyIOSPay::has_receipt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGVerifyIOSPay::set_has_receipt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGVerifyIOSPay::clear_has_receipt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGVerifyIOSPay::clear_receipt() {
  if (receipt_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receipt_->clear();
  }
  clear_has_receipt();
}
inline const ::std::string& CGVerifyIOSPay::receipt() const {
  // @@protoc_insertion_point(field_get:CGVerifyIOSPay.receipt)
  return *receipt_;
}
inline void CGVerifyIOSPay::set_receipt(const ::std::string& value) {
  set_has_receipt();
  if (receipt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receipt_ = new ::std::string;
  }
  receipt_->assign(value);
  // @@protoc_insertion_point(field_set:CGVerifyIOSPay.receipt)
}
inline void CGVerifyIOSPay::set_receipt(const char* value) {
  set_has_receipt();
  if (receipt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receipt_ = new ::std::string;
  }
  receipt_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGVerifyIOSPay.receipt)
}
inline void CGVerifyIOSPay::set_receipt(const char* value, size_t size) {
  set_has_receipt();
  if (receipt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receipt_ = new ::std::string;
  }
  receipt_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGVerifyIOSPay.receipt)
}
inline ::std::string* CGVerifyIOSPay::mutable_receipt() {
  set_has_receipt();
  if (receipt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receipt_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGVerifyIOSPay.receipt)
  return receipt_;
}
inline ::std::string* CGVerifyIOSPay::release_receipt() {
  clear_has_receipt();
  if (receipt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = receipt_;
    receipt_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGVerifyIOSPay::set_allocated_receipt(::std::string* receipt) {
  if (receipt_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete receipt_;
  }
  if (receipt) {
    set_has_receipt();
    receipt_ = receipt;
  } else {
    clear_has_receipt();
    receipt_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGVerifyIOSPay.receipt)
}

// -------------------------------------------------------------------

// GCVerifyIOSPayBack

// optional string orderID = 1;
inline bool GCVerifyIOSPayBack::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCVerifyIOSPayBack::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCVerifyIOSPayBack::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCVerifyIOSPayBack::clear_orderid() {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_->clear();
  }
  clear_has_orderid();
}
inline const ::std::string& GCVerifyIOSPayBack::orderid() const {
  // @@protoc_insertion_point(field_get:GCVerifyIOSPayBack.orderID)
  return *orderid_;
}
inline void GCVerifyIOSPayBack::set_orderid(const ::std::string& value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set:GCVerifyIOSPayBack.orderID)
}
inline void GCVerifyIOSPayBack::set_orderid(const char* value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCVerifyIOSPayBack.orderID)
}
inline void GCVerifyIOSPayBack::set_orderid(const char* value, size_t size) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCVerifyIOSPayBack.orderID)
}
inline ::std::string* GCVerifyIOSPayBack::mutable_orderid() {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orderid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCVerifyIOSPayBack.orderID)
  return orderid_;
}
inline ::std::string* GCVerifyIOSPayBack::release_orderid() {
  clear_has_orderid();
  if (orderid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = orderid_;
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCVerifyIOSPayBack::set_allocated_orderid(::std::string* orderid) {
  if (orderid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orderid_;
  }
  if (orderid) {
    set_has_orderid();
    orderid_ = orderid;
  } else {
    clear_has_orderid();
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCVerifyIOSPayBack.orderID)
}

// optional string transaction_id = 2;
inline bool GCVerifyIOSPayBack::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCVerifyIOSPayBack::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCVerifyIOSPayBack::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCVerifyIOSPayBack::clear_transaction_id() {
  if (transaction_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    transaction_id_->clear();
  }
  clear_has_transaction_id();
}
inline const ::std::string& GCVerifyIOSPayBack::transaction_id() const {
  // @@protoc_insertion_point(field_get:GCVerifyIOSPayBack.transaction_id)
  return *transaction_id_;
}
inline void GCVerifyIOSPayBack::set_transaction_id(const ::std::string& value) {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    transaction_id_ = new ::std::string;
  }
  transaction_id_->assign(value);
  // @@protoc_insertion_point(field_set:GCVerifyIOSPayBack.transaction_id)
}
inline void GCVerifyIOSPayBack::set_transaction_id(const char* value) {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    transaction_id_ = new ::std::string;
  }
  transaction_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCVerifyIOSPayBack.transaction_id)
}
inline void GCVerifyIOSPayBack::set_transaction_id(const char* value, size_t size) {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    transaction_id_ = new ::std::string;
  }
  transaction_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCVerifyIOSPayBack.transaction_id)
}
inline ::std::string* GCVerifyIOSPayBack::mutable_transaction_id() {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    transaction_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCVerifyIOSPayBack.transaction_id)
  return transaction_id_;
}
inline ::std::string* GCVerifyIOSPayBack::release_transaction_id() {
  clear_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = transaction_id_;
    transaction_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCVerifyIOSPayBack::set_allocated_transaction_id(::std::string* transaction_id) {
  if (transaction_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transaction_id_;
  }
  if (transaction_id) {
    set_has_transaction_id();
    transaction_id_ = transaction_id;
  } else {
    clear_has_transaction_id();
    transaction_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCVerifyIOSPayBack.transaction_id)
}

// optional int32 state = 3;
inline bool GCVerifyIOSPayBack::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCVerifyIOSPayBack::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCVerifyIOSPayBack::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCVerifyIOSPayBack::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GCVerifyIOSPayBack::state() const {
  // @@protoc_insertion_point(field_get:GCVerifyIOSPayBack.state)
  return state_;
}
inline void GCVerifyIOSPayBack::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GCVerifyIOSPayBack.state)
}

// -------------------------------------------------------------------

// RechargeItem

// optional int32 sid = 1;
inline bool RechargeItem::has_sid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RechargeItem::set_has_sid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RechargeItem::clear_has_sid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RechargeItem::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 RechargeItem::sid() const {
  // @@protoc_insertion_point(field_get:RechargeItem.sid)
  return sid_;
}
inline void RechargeItem::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:RechargeItem.sid)
}

// optional int32 curTimes = 2;
inline bool RechargeItem::has_curtimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RechargeItem::set_has_curtimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RechargeItem::clear_has_curtimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RechargeItem::clear_curtimes() {
  curtimes_ = 0;
  clear_has_curtimes();
}
inline ::google::protobuf::int32 RechargeItem::curtimes() const {
  // @@protoc_insertion_point(field_get:RechargeItem.curTimes)
  return curtimes_;
}
inline void RechargeItem::set_curtimes(::google::protobuf::int32 value) {
  set_has_curtimes();
  curtimes_ = value;
  // @@protoc_insertion_point(field_set:RechargeItem.curTimes)
}

// optional int32 maxTimes = 3;
inline bool RechargeItem::has_maxtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RechargeItem::set_has_maxtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RechargeItem::clear_has_maxtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RechargeItem::clear_maxtimes() {
  maxtimes_ = 0;
  clear_has_maxtimes();
}
inline ::google::protobuf::int32 RechargeItem::maxtimes() const {
  // @@protoc_insertion_point(field_get:RechargeItem.maxTimes)
  return maxtimes_;
}
inline void RechargeItem::set_maxtimes(::google::protobuf::int32 value) {
  set_has_maxtimes();
  maxtimes_ = value;
  // @@protoc_insertion_point(field_set:RechargeItem.maxTimes)
}

// -------------------------------------------------------------------

// GCRechargeItemInfo

// repeated .RechargeItem rechargeItemList = 1;
inline int GCRechargeItemInfo::rechargeitemlist_size() const {
  return rechargeitemlist_.size();
}
inline void GCRechargeItemInfo::clear_rechargeitemlist() {
  rechargeitemlist_.Clear();
}
inline const ::RechargeItem& GCRechargeItemInfo::rechargeitemlist(int index) const {
  // @@protoc_insertion_point(field_get:GCRechargeItemInfo.rechargeItemList)
  return rechargeitemlist_.Get(index);
}
inline ::RechargeItem* GCRechargeItemInfo::mutable_rechargeitemlist(int index) {
  // @@protoc_insertion_point(field_mutable:GCRechargeItemInfo.rechargeItemList)
  return rechargeitemlist_.Mutable(index);
}
inline ::RechargeItem* GCRechargeItemInfo::add_rechargeitemlist() {
  // @@protoc_insertion_point(field_add:GCRechargeItemInfo.rechargeItemList)
  return rechargeitemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RechargeItem >&
GCRechargeItemInfo::rechargeitemlist() const {
  // @@protoc_insertion_point(field_list:GCRechargeItemInfo.rechargeItemList)
  return rechargeitemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::RechargeItem >*
GCRechargeItemInfo::mutable_rechargeitemlist() {
  // @@protoc_insertion_point(field_mutable_list:GCRechargeItemInfo.rechargeItemList)
  return &rechargeitemlist_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PayMessage_2eproto__INCLUDED
