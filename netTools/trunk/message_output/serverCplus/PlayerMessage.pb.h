// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerMessage.proto

#ifndef PROTOBUF_PlayerMessage_2eproto__INCLUDED
#define PROTOBUF_PlayerMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "InnerMessage.pb.h"
#include "EquipMessage.pb.h"
#include "SpiritBeastMessage.pb.h"
#include "TalismanMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PlayerMessage_2eproto();
void protobuf_AssignDesc_PlayerMessage_2eproto();
void protobuf_ShutdownFile_PlayerMessage_2eproto();

class GCCharacterFaceTo;
class GCPlayerDie;
class CGReqPlayerReborn;
class GCPlayerReborn;
class CGUpdatePlayerName;
class GCUpdatePlayerNameOK;
class GCSendHeadIconList;
class CGUpdatePlayerHeadIcon;
class GCUpdateHeadIconOK;
class CGReLoginGameServer;
class GCReLoginGameServer;
class GCSendSkillList;
class CGPlayerHangup;
class GCPlayerHangup;
class CGSendRotate;
class GCSendRotate;
class CGGetPlaerInfoById;
class GCSendPlayerInfoById;
class GCLevelUpGetNewSkill;
class CGGetPlayerAndPetInfo;
class GCSendPlayerAndPetInfo;
class CGChangePlayer;
class GCChangePlayerResult;
class GCStressTestBegin;
class CGPlayerViewSetting;
class GCPlayerViewSetting;
class CGQuitLogin;
class GCQuitLoginBack;
class GCMuteTime;
class GameForceLoginout;
class GCExpPlus;
class GCNonageSts;
class CGNeedNonage;
class GCOnLineTime;
class CGAmbitLevelUp;
class GCAmbitLevelUp;
class GCPrivatePlayerAttr;
class CGUnLock;
class CGLookPlayerInfo;
class GCLookPlayerInfo;

// ===================================================================

class GCCharacterFaceTo : public ::google::protobuf::Message {
 public:
  GCCharacterFaceTo();
  virtual ~GCCharacterFaceTo();

  GCCharacterFaceTo(const GCCharacterFaceTo& from);

  inline GCCharacterFaceTo& operator=(const GCCharacterFaceTo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCharacterFaceTo& default_instance();

  void Swap(GCCharacterFaceTo* other);

  // implements Message ----------------------------------------------

  GCCharacterFaceTo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCharacterFaceTo& from);
  void MergeFrom(const GCCharacterFaceTo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objectId = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::int64 objectid() const;
  inline void set_objectid(::google::protobuf::int64 value);

  // optional int64 faceToObjectId = 2;
  inline bool has_facetoobjectid() const;
  inline void clear_facetoobjectid();
  static const int kFaceToObjectIdFieldNumber = 2;
  inline ::google::protobuf::int64 facetoobjectid() const;
  inline void set_facetoobjectid(::google::protobuf::int64 value);

  // optional .Vector3Info faceToPos = 3;
  inline bool has_facetopos() const;
  inline void clear_facetopos();
  static const int kFaceToPosFieldNumber = 3;
  inline const ::Vector3Info& facetopos() const;
  inline ::Vector3Info* mutable_facetopos();
  inline ::Vector3Info* release_facetopos();
  inline void set_allocated_facetopos(::Vector3Info* facetopos);

  // @@protoc_insertion_point(class_scope:GCCharacterFaceTo)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_facetoobjectid();
  inline void clear_has_facetoobjectid();
  inline void set_has_facetopos();
  inline void clear_has_facetopos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objectid_;
  ::google::protobuf::int64 facetoobjectid_;
  ::Vector3Info* facetopos_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCharacterFaceTo* default_instance_;
};
// -------------------------------------------------------------------

class GCPlayerDie : public ::google::protobuf::Message {
 public:
  GCPlayerDie();
  virtual ~GCPlayerDie();

  GCPlayerDie(const GCPlayerDie& from);

  inline GCPlayerDie& operator=(const GCPlayerDie& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPlayerDie& default_instance();

  void Swap(GCPlayerDie* other);

  // implements Message ----------------------------------------------

  GCPlayerDie* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPlayerDie& from);
  void MergeFrom(const GCPlayerDie& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 dietime = 1;
  inline bool has_dietime() const;
  inline void clear_dietime();
  static const int kDietimeFieldNumber = 1;
  inline ::google::protobuf::int64 dietime() const;
  inline void set_dietime(::google::protobuf::int64 value);

  // optional int64 reborntiem = 2;
  inline bool has_reborntiem() const;
  inline void clear_reborntiem();
  static const int kReborntiemFieldNumber = 2;
  inline ::google::protobuf::int64 reborntiem() const;
  inline void set_reborntiem(::google::protobuf::int64 value);

  // optional int64 killer = 3;
  inline bool has_killer() const;
  inline void clear_killer();
  static const int kKillerFieldNumber = 3;
  inline ::google::protobuf::int64 killer() const;
  inline void set_killer(::google::protobuf::int64 value);

  // optional int32 kimbdNum = 4;
  inline bool has_kimbdnum() const;
  inline void clear_kimbdnum();
  static const int kKimbdNumFieldNumber = 4;
  inline ::google::protobuf::int32 kimbdnum() const;
  inline void set_kimbdnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCPlayerDie)
 private:
  inline void set_has_dietime();
  inline void clear_has_dietime();
  inline void set_has_reborntiem();
  inline void clear_has_reborntiem();
  inline void set_has_killer();
  inline void clear_has_killer();
  inline void set_has_kimbdnum();
  inline void clear_has_kimbdnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dietime_;
  ::google::protobuf::int64 reborntiem_;
  ::google::protobuf::int64 killer_;
  ::google::protobuf::int32 kimbdnum_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPlayerDie* default_instance_;
};
// -------------------------------------------------------------------

class CGReqPlayerReborn : public ::google::protobuf::Message {
 public:
  CGReqPlayerReborn();
  virtual ~CGReqPlayerReborn();

  CGReqPlayerReborn(const CGReqPlayerReborn& from);

  inline CGReqPlayerReborn& operator=(const CGReqPlayerReborn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGReqPlayerReborn& default_instance();

  void Swap(CGReqPlayerReborn* other);

  // implements Message ----------------------------------------------

  CGReqPlayerReborn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGReqPlayerReborn& from);
  void MergeFrom(const CGReqPlayerReborn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGReqPlayerReborn)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGReqPlayerReborn* default_instance_;
};
// -------------------------------------------------------------------

class GCPlayerReborn : public ::google::protobuf::Message {
 public:
  GCPlayerReborn();
  virtual ~GCPlayerReborn();

  GCPlayerReborn(const GCPlayerReborn& from);

  inline GCPlayerReborn& operator=(const GCPlayerReborn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPlayerReborn& default_instance();

  void Swap(GCPlayerReborn* other);

  // implements Message ----------------------------------------------

  GCPlayerReborn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPlayerReborn& from);
  void MergeFrom(const GCPlayerReborn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 objectId = 2;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectIdFieldNumber = 2;
  inline ::google::protobuf::int64 objectid() const;
  inline void set_objectid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCPlayerReborn)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_objectid();
  inline void clear_has_objectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objectid_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPlayerReborn* default_instance_;
};
// -------------------------------------------------------------------

class CGUpdatePlayerName : public ::google::protobuf::Message {
 public:
  CGUpdatePlayerName();
  virtual ~CGUpdatePlayerName();

  CGUpdatePlayerName(const CGUpdatePlayerName& from);

  inline CGUpdatePlayerName& operator=(const CGUpdatePlayerName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGUpdatePlayerName& default_instance();

  void Swap(CGUpdatePlayerName* other);

  // implements Message ----------------------------------------------

  CGUpdatePlayerName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGUpdatePlayerName& from);
  void MergeFrom(const CGUpdatePlayerName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CGUpdatePlayerName)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGUpdatePlayerName* default_instance_;
};
// -------------------------------------------------------------------

class GCUpdatePlayerNameOK : public ::google::protobuf::Message {
 public:
  GCUpdatePlayerNameOK();
  virtual ~GCUpdatePlayerNameOK();

  GCUpdatePlayerNameOK(const GCUpdatePlayerNameOK& from);

  inline GCUpdatePlayerNameOK& operator=(const GCUpdatePlayerNameOK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCUpdatePlayerNameOK& default_instance();

  void Swap(GCUpdatePlayerNameOK* other);

  // implements Message ----------------------------------------------

  GCUpdatePlayerNameOK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCUpdatePlayerNameOK& from);
  void MergeFrom(const GCUpdatePlayerNameOK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional string newname = 2;
  inline bool has_newname() const;
  inline void clear_newname();
  static const int kNewnameFieldNumber = 2;
  inline const ::std::string& newname() const;
  inline void set_newname(const ::std::string& value);
  inline void set_newname(const char* value);
  inline void set_newname(const char* value, size_t size);
  inline ::std::string* mutable_newname();
  inline ::std::string* release_newname();
  inline void set_allocated_newname(::std::string* newname);

  // @@protoc_insertion_point(class_scope:GCUpdatePlayerNameOK)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_newname();
  inline void clear_has_newname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* newname_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCUpdatePlayerNameOK* default_instance_;
};
// -------------------------------------------------------------------

class GCSendHeadIconList : public ::google::protobuf::Message {
 public:
  GCSendHeadIconList();
  virtual ~GCSendHeadIconList();

  GCSendHeadIconList(const GCSendHeadIconList& from);

  inline GCSendHeadIconList& operator=(const GCSendHeadIconList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendHeadIconList& default_instance();

  void Swap(GCSendHeadIconList* other);

  // implements Message ----------------------------------------------

  GCSendHeadIconList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendHeadIconList& from);
  void MergeFrom(const GCSendHeadIconList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 iconlist = 1;
  inline int iconlist_size() const;
  inline void clear_iconlist();
  static const int kIconlistFieldNumber = 1;
  inline ::google::protobuf::int32 iconlist(int index) const;
  inline void set_iconlist(int index, ::google::protobuf::int32 value);
  inline void add_iconlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      iconlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_iconlist();

  // @@protoc_insertion_point(class_scope:GCSendHeadIconList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > iconlist_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendHeadIconList* default_instance_;
};
// -------------------------------------------------------------------

class CGUpdatePlayerHeadIcon : public ::google::protobuf::Message {
 public:
  CGUpdatePlayerHeadIcon();
  virtual ~CGUpdatePlayerHeadIcon();

  CGUpdatePlayerHeadIcon(const CGUpdatePlayerHeadIcon& from);

  inline CGUpdatePlayerHeadIcon& operator=(const CGUpdatePlayerHeadIcon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGUpdatePlayerHeadIcon& default_instance();

  void Swap(CGUpdatePlayerHeadIcon* other);

  // implements Message ----------------------------------------------

  CGUpdatePlayerHeadIcon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGUpdatePlayerHeadIcon& from);
  void MergeFrom(const CGUpdatePlayerHeadIcon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iconid = 1;
  inline bool has_iconid() const;
  inline void clear_iconid();
  static const int kIconidFieldNumber = 1;
  inline ::google::protobuf::int32 iconid() const;
  inline void set_iconid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGUpdatePlayerHeadIcon)
 private:
  inline void set_has_iconid();
  inline void clear_has_iconid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 iconid_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGUpdatePlayerHeadIcon* default_instance_;
};
// -------------------------------------------------------------------

class GCUpdateHeadIconOK : public ::google::protobuf::Message {
 public:
  GCUpdateHeadIconOK();
  virtual ~GCUpdateHeadIconOK();

  GCUpdateHeadIconOK(const GCUpdateHeadIconOK& from);

  inline GCUpdateHeadIconOK& operator=(const GCUpdateHeadIconOK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCUpdateHeadIconOK& default_instance();

  void Swap(GCUpdateHeadIconOK* other);

  // implements Message ----------------------------------------------

  GCUpdateHeadIconOK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCUpdateHeadIconOK& from);
  void MergeFrom(const GCUpdateHeadIconOK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional int32 headIcon = 2;
  inline bool has_headicon() const;
  inline void clear_headicon();
  static const int kHeadIconFieldNumber = 2;
  inline ::google::protobuf::int32 headicon() const;
  inline void set_headicon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCUpdateHeadIconOK)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_headicon();
  inline void clear_has_headicon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 headicon_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCUpdateHeadIconOK* default_instance_;
};
// -------------------------------------------------------------------

class CGReLoginGameServer : public ::google::protobuf::Message {
 public:
  CGReLoginGameServer();
  virtual ~CGReLoginGameServer();

  CGReLoginGameServer(const CGReLoginGameServer& from);

  inline CGReLoginGameServer& operator=(const CGReLoginGameServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGReLoginGameServer& default_instance();

  void Swap(CGReLoginGameServer* other);

  // implements Message ----------------------------------------------

  CGReLoginGameServer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGReLoginGameServer& from);
  void MergeFrom(const CGReLoginGameServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // optional string uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline const ::std::string& uid() const;
  inline void set_uid(const ::std::string& value);
  inline void set_uid(const char* value);
  inline void set_uid(const char* value, size_t size);
  inline ::std::string* mutable_uid();
  inline ::std::string* release_uid();
  inline void set_allocated_uid(::std::string* uid);

  // optional string platForm = 3;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatFormFieldNumber = 3;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  inline void set_allocated_platform(::std::string* platform);

  // optional int64 accountID = 4;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 4;
  inline ::google::protobuf::int64 accountid() const;
  inline void set_accountid(::google::protobuf::int64 value);

  // optional int32 currSceneId = 5;
  inline bool has_currsceneid() const;
  inline void clear_currsceneid();
  static const int kCurrSceneIdFieldNumber = 5;
  inline ::google::protobuf::int32 currsceneid() const;
  inline void set_currsceneid(::google::protobuf::int32 value);

  // optional string authKey = 6;
  inline bool has_authkey() const;
  inline void clear_authkey();
  static const int kAuthKeyFieldNumber = 6;
  inline const ::std::string& authkey() const;
  inline void set_authkey(const ::std::string& value);
  inline void set_authkey(const char* value);
  inline void set_authkey(const char* value, size_t size);
  inline ::std::string* mutable_authkey();
  inline ::std::string* release_authkey();
  inline void set_allocated_authkey(::std::string* authkey);

  // optional int32 sceneLoading = 7;
  inline bool has_sceneloading() const;
  inline void clear_sceneloading();
  static const int kSceneLoadingFieldNumber = 7;
  inline ::google::protobuf::int32 sceneloading() const;
  inline void set_sceneloading(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGReLoginGameServer)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_currsceneid();
  inline void clear_has_currsceneid();
  inline void set_has_authkey();
  inline void clear_has_authkey();
  inline void set_has_sceneloading();
  inline void clear_has_sceneloading();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  ::std::string* uid_;
  ::std::string* platform_;
  ::google::protobuf::int64 accountid_;
  ::std::string* authkey_;
  ::google::protobuf::int32 currsceneid_;
  ::google::protobuf::int32 sceneloading_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGReLoginGameServer* default_instance_;
};
// -------------------------------------------------------------------

class GCReLoginGameServer : public ::google::protobuf::Message {
 public:
  GCReLoginGameServer();
  virtual ~GCReLoginGameServer();

  GCReLoginGameServer(const GCReLoginGameServer& from);

  inline GCReLoginGameServer& operator=(const GCReLoginGameServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCReLoginGameServer& default_instance();

  void Swap(GCReLoginGameServer* other);

  // implements Message ----------------------------------------------

  GCReLoginGameServer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCReLoginGameServer& from);
  void MergeFrom(const GCReLoginGameServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 eniqueID = 2;
  inline bool has_eniqueid() const;
  inline void clear_eniqueid();
  static const int kEniqueIDFieldNumber = 2;
  inline ::google::protobuf::int64 eniqueid() const;
  inline void set_eniqueid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCReLoginGameServer)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_eniqueid();
  inline void clear_has_eniqueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 eniqueid_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCReLoginGameServer* default_instance_;
};
// -------------------------------------------------------------------

class GCSendSkillList : public ::google::protobuf::Message {
 public:
  GCSendSkillList();
  virtual ~GCSendSkillList();

  GCSendSkillList(const GCSendSkillList& from);

  inline GCSendSkillList& operator=(const GCSendSkillList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendSkillList& default_instance();

  void Swap(GCSendSkillList* other);

  // implements Message ----------------------------------------------

  GCSendSkillList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendSkillList& from);
  void MergeFrom(const GCSendSkillList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // repeated .SkillItemData skilldata = 2;
  inline int skilldata_size() const;
  inline void clear_skilldata();
  static const int kSkilldataFieldNumber = 2;
  inline const ::SkillItemData& skilldata(int index) const;
  inline ::SkillItemData* mutable_skilldata(int index);
  inline ::SkillItemData* add_skilldata();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillItemData >&
      skilldata() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillItemData >*
      mutable_skilldata();

  // optional int32 isfirstlogin = 3;
  inline bool has_isfirstlogin() const;
  inline void clear_isfirstlogin();
  static const int kIsfirstloginFieldNumber = 3;
  inline ::google::protobuf::int32 isfirstlogin() const;
  inline void set_isfirstlogin(::google::protobuf::int32 value);

  // optional .SkillItemData shenQiSkilldata = 4;
  inline bool has_shenqiskilldata() const;
  inline void clear_shenqiskilldata();
  static const int kShenQiSkilldataFieldNumber = 4;
  inline const ::SkillItemData& shenqiskilldata() const;
  inline ::SkillItemData* mutable_shenqiskilldata();
  inline ::SkillItemData* release_shenqiskilldata();
  inline void set_allocated_shenqiskilldata(::SkillItemData* shenqiskilldata);

  // optional int32 skillFlag = 5;
  inline bool has_skillflag() const;
  inline void clear_skillflag();
  static const int kSkillFlagFieldNumber = 5;
  inline ::google::protobuf::int32 skillflag() const;
  inline void set_skillflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCSendSkillList)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_isfirstlogin();
  inline void clear_has_isfirstlogin();
  inline void set_has_shenqiskilldata();
  inline void clear_has_shenqiskilldata();
  inline void set_has_skillflag();
  inline void clear_has_skillflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  ::google::protobuf::RepeatedPtrField< ::SkillItemData > skilldata_;
  ::SkillItemData* shenqiskilldata_;
  ::google::protobuf::int32 isfirstlogin_;
  ::google::protobuf::int32 skillflag_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendSkillList* default_instance_;
};
// -------------------------------------------------------------------

class CGPlayerHangup : public ::google::protobuf::Message {
 public:
  CGPlayerHangup();
  virtual ~CGPlayerHangup();

  CGPlayerHangup(const CGPlayerHangup& from);

  inline CGPlayerHangup& operator=(const CGPlayerHangup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGPlayerHangup& default_instance();

  void Swap(CGPlayerHangup* other);

  // implements Message ----------------------------------------------

  CGPlayerHangup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGPlayerHangup& from);
  void MergeFrom(const CGPlayerHangup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 open = 1;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 1;
  inline ::google::protobuf::int32 open() const;
  inline void set_open(::google::protobuf::int32 value);

  // optional int32 scope = 2;
  inline bool has_scope() const;
  inline void clear_scope();
  static const int kScopeFieldNumber = 2;
  inline ::google::protobuf::int32 scope() const;
  inline void set_scope(::google::protobuf::int32 value);

  // optional int32 autoRenorn = 3;
  inline bool has_autorenorn() const;
  inline void clear_autorenorn();
  static const int kAutoRenornFieldNumber = 3;
  inline ::google::protobuf::int32 autorenorn() const;
  inline void set_autorenorn(::google::protobuf::int32 value);

  // optional int32 avoiBoss = 4;
  inline bool has_avoiboss() const;
  inline void clear_avoiboss();
  static const int kAvoiBossFieldNumber = 4;
  inline ::google::protobuf::int32 avoiboss() const;
  inline void set_avoiboss(::google::protobuf::int32 value);

  // optional int32 attackBack = 5;
  inline bool has_attackback() const;
  inline void clear_attackback();
  static const int kAttackBackFieldNumber = 5;
  inline ::google::protobuf::int32 attackback() const;
  inline void set_attackback(::google::protobuf::int32 value);

  // repeated int32 pickTypeIndexs = 6;
  inline int picktypeindexs_size() const;
  inline void clear_picktypeindexs();
  static const int kPickTypeIndexsFieldNumber = 6;
  inline ::google::protobuf::int32 picktypeindexs(int index) const;
  inline void set_picktypeindexs(int index, ::google::protobuf::int32 value);
  inline void add_picktypeindexs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      picktypeindexs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_picktypeindexs();

  // repeated int32 pickQuality = 7;
  inline int pickquality_size() const;
  inline void clear_pickquality();
  static const int kPickQualityFieldNumber = 7;
  inline ::google::protobuf::int32 pickquality(int index) const;
  inline void set_pickquality(int index, ::google::protobuf::int32 value);
  inline void add_pickquality(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pickquality() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pickquality();

  // repeated int32 autoSkills = 8;
  inline int autoskills_size() const;
  inline void clear_autoskills();
  static const int kAutoSkillsFieldNumber = 8;
  inline ::google::protobuf::int32 autoskills(int index) const;
  inline void set_autoskills(int index, ::google::protobuf::int32 value);
  inline void add_autoskills(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      autoskills() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_autoskills();

  // @@protoc_insertion_point(class_scope:CGPlayerHangup)
 private:
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_scope();
  inline void clear_has_scope();
  inline void set_has_autorenorn();
  inline void clear_has_autorenorn();
  inline void set_has_avoiboss();
  inline void clear_has_avoiboss();
  inline void set_has_attackback();
  inline void clear_has_attackback();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 open_;
  ::google::protobuf::int32 scope_;
  ::google::protobuf::int32 autorenorn_;
  ::google::protobuf::int32 avoiboss_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > picktypeindexs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pickquality_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > autoskills_;
  ::google::protobuf::int32 attackback_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGPlayerHangup* default_instance_;
};
// -------------------------------------------------------------------

class GCPlayerHangup : public ::google::protobuf::Message {
 public:
  GCPlayerHangup();
  virtual ~GCPlayerHangup();

  GCPlayerHangup(const GCPlayerHangup& from);

  inline GCPlayerHangup& operator=(const GCPlayerHangup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPlayerHangup& default_instance();

  void Swap(GCPlayerHangup* other);

  // implements Message ----------------------------------------------

  GCPlayerHangup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPlayerHangup& from);
  void MergeFrom(const GCPlayerHangup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 open = 2;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 2;
  inline ::google::protobuf::int32 open() const;
  inline void set_open(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCPlayerHangup)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 open_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPlayerHangup* default_instance_;
};
// -------------------------------------------------------------------

class CGSendRotate : public ::google::protobuf::Message {
 public:
  CGSendRotate();
  virtual ~CGSendRotate();

  CGSendRotate(const CGSendRotate& from);

  inline CGSendRotate& operator=(const CGSendRotate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSendRotate& default_instance();

  void Swap(CGSendRotate* other);

  // implements Message ----------------------------------------------

  CGSendRotate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSendRotate& from);
  void MergeFrom(const CGSendRotate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objectId = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::int64 objectid() const;
  inline void set_objectid(::google::protobuf::int64 value);

  // optional .Vector3Info rotate = 2;
  inline bool has_rotate() const;
  inline void clear_rotate();
  static const int kRotateFieldNumber = 2;
  inline const ::Vector3Info& rotate() const;
  inline ::Vector3Info* mutable_rotate();
  inline ::Vector3Info* release_rotate();
  inline void set_allocated_rotate(::Vector3Info* rotate);

  // @@protoc_insertion_point(class_scope:CGSendRotate)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_rotate();
  inline void clear_has_rotate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objectid_;
  ::Vector3Info* rotate_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSendRotate* default_instance_;
};
// -------------------------------------------------------------------

class GCSendRotate : public ::google::protobuf::Message {
 public:
  GCSendRotate();
  virtual ~GCSendRotate();

  GCSendRotate(const GCSendRotate& from);

  inline GCSendRotate& operator=(const GCSendRotate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendRotate& default_instance();

  void Swap(GCSendRotate* other);

  // implements Message ----------------------------------------------

  GCSendRotate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendRotate& from);
  void MergeFrom(const GCSendRotate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objectId = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::int64 objectid() const;
  inline void set_objectid(::google::protobuf::int64 value);

  // optional .Vector3Info rotate = 2;
  inline bool has_rotate() const;
  inline void clear_rotate();
  static const int kRotateFieldNumber = 2;
  inline const ::Vector3Info& rotate() const;
  inline ::Vector3Info* mutable_rotate();
  inline ::Vector3Info* release_rotate();
  inline void set_allocated_rotate(::Vector3Info* rotate);

  // @@protoc_insertion_point(class_scope:GCSendRotate)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_rotate();
  inline void clear_has_rotate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objectid_;
  ::Vector3Info* rotate_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendRotate* default_instance_;
};
// -------------------------------------------------------------------

class CGGetPlaerInfoById : public ::google::protobuf::Message {
 public:
  CGGetPlaerInfoById();
  virtual ~CGGetPlaerInfoById();

  CGGetPlaerInfoById(const CGGetPlaerInfoById& from);

  inline CGGetPlaerInfoById& operator=(const CGGetPlaerInfoById& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetPlaerInfoById& default_instance();

  void Swap(CGGetPlaerInfoById* other);

  // implements Message ----------------------------------------------

  CGGetPlaerInfoById* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetPlaerInfoById& from);
  void MergeFrom(const CGGetPlaerInfoById& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetPlaerInfoById)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetPlaerInfoById* default_instance_;
};
// -------------------------------------------------------------------

class GCSendPlayerInfoById : public ::google::protobuf::Message {
 public:
  GCSendPlayerInfoById();
  virtual ~GCSendPlayerInfoById();

  GCSendPlayerInfoById(const GCSendPlayerInfoById& from);

  inline GCSendPlayerInfoById& operator=(const GCSendPlayerInfoById& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendPlayerInfoById& default_instance();

  void Swap(GCSendPlayerInfoById* other);

  // implements Message ----------------------------------------------

  GCSendPlayerInfoById* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendPlayerInfoById& from);
  void MergeFrom(const GCSendPlayerInfoById& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CharacterInfo characterInfo = 1;
  inline bool has_characterinfo() const;
  inline void clear_characterinfo();
  static const int kCharacterInfoFieldNumber = 1;
  inline const ::CharacterInfo& characterinfo() const;
  inline ::CharacterInfo* mutable_characterinfo();
  inline ::CharacterInfo* release_characterinfo();
  inline void set_allocated_characterinfo(::CharacterInfo* characterinfo);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCSendPlayerInfoById)
 private:
  inline void set_has_characterinfo();
  inline void clear_has_characterinfo();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CharacterInfo* characterinfo_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendPlayerInfoById* default_instance_;
};
// -------------------------------------------------------------------

class GCLevelUpGetNewSkill : public ::google::protobuf::Message {
 public:
  GCLevelUpGetNewSkill();
  virtual ~GCLevelUpGetNewSkill();

  GCLevelUpGetNewSkill(const GCLevelUpGetNewSkill& from);

  inline GCLevelUpGetNewSkill& operator=(const GCLevelUpGetNewSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCLevelUpGetNewSkill& default_instance();

  void Swap(GCLevelUpGetNewSkill* other);

  // implements Message ----------------------------------------------

  GCLevelUpGetNewSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCLevelUpGetNewSkill& from);
  void MergeFrom(const GCLevelUpGetNewSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SkillItemData skilldata = 1;
  inline int skilldata_size() const;
  inline void clear_skilldata();
  static const int kSkilldataFieldNumber = 1;
  inline const ::SkillItemData& skilldata(int index) const;
  inline ::SkillItemData* mutable_skilldata(int index);
  inline ::SkillItemData* add_skilldata();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillItemData >&
      skilldata() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillItemData >*
      mutable_skilldata();

  // @@protoc_insertion_point(class_scope:GCLevelUpGetNewSkill)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SkillItemData > skilldata_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCLevelUpGetNewSkill* default_instance_;
};
// -------------------------------------------------------------------

class CGGetPlayerAndPetInfo : public ::google::protobuf::Message {
 public:
  CGGetPlayerAndPetInfo();
  virtual ~CGGetPlayerAndPetInfo();

  CGGetPlayerAndPetInfo(const CGGetPlayerAndPetInfo& from);

  inline CGGetPlayerAndPetInfo& operator=(const CGGetPlayerAndPetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetPlayerAndPetInfo& default_instance();

  void Swap(CGGetPlayerAndPetInfo* other);

  // implements Message ----------------------------------------------

  CGGetPlayerAndPetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetPlayerAndPetInfo& from);
  void MergeFrom(const CGGetPlayerAndPetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGGetPlayerAndPetInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetPlayerAndPetInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCSendPlayerAndPetInfo : public ::google::protobuf::Message {
 public:
  GCSendPlayerAndPetInfo();
  virtual ~GCSendPlayerAndPetInfo();

  GCSendPlayerAndPetInfo(const GCSendPlayerAndPetInfo& from);

  inline GCSendPlayerAndPetInfo& operator=(const GCSendPlayerAndPetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendPlayerAndPetInfo& default_instance();

  void Swap(GCSendPlayerAndPetInfo* other);

  // implements Message ----------------------------------------------

  GCSendPlayerAndPetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendPlayerAndPetInfo& from);
  void MergeFrom(const GCSendPlayerAndPetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CharacterInfo characterInfo = 1;
  inline bool has_characterinfo() const;
  inline void clear_characterinfo();
  static const int kCharacterInfoFieldNumber = 1;
  inline const ::CharacterInfo& characterinfo() const;
  inline ::CharacterInfo* mutable_characterinfo();
  inline ::CharacterInfo* release_characterinfo();
  inline void set_allocated_characterinfo(::CharacterInfo* characterinfo);

  // optional .PetInfo petInfo = 2;
  inline bool has_petinfo() const;
  inline void clear_petinfo();
  static const int kPetInfoFieldNumber = 2;
  inline const ::PetInfo& petinfo() const;
  inline ::PetInfo* mutable_petinfo();
  inline ::PetInfo* release_petinfo();
  inline void set_allocated_petinfo(::PetInfo* petinfo);

  // @@protoc_insertion_point(class_scope:GCSendPlayerAndPetInfo)
 private:
  inline void set_has_characterinfo();
  inline void clear_has_characterinfo();
  inline void set_has_petinfo();
  inline void clear_has_petinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CharacterInfo* characterinfo_;
  ::PetInfo* petinfo_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendPlayerAndPetInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGChangePlayer : public ::google::protobuf::Message {
 public:
  CGChangePlayer();
  virtual ~CGChangePlayer();

  CGChangePlayer(const CGChangePlayer& from);

  inline CGChangePlayer& operator=(const CGChangePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGChangePlayer& default_instance();

  void Swap(CGChangePlayer* other);

  // implements Message ----------------------------------------------

  CGChangePlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGChangePlayer& from);
  void MergeFrom(const CGChangePlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGChangePlayer)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGChangePlayer* default_instance_;
};
// -------------------------------------------------------------------

class GCChangePlayerResult : public ::google::protobuf::Message {
 public:
  GCChangePlayerResult();
  virtual ~GCChangePlayerResult();

  GCChangePlayerResult(const GCChangePlayerResult& from);

  inline GCChangePlayerResult& operator=(const GCChangePlayerResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCChangePlayerResult& default_instance();

  void Swap(GCChangePlayerResult* other);

  // implements Message ----------------------------------------------

  GCChangePlayerResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCChangePlayerResult& from);
  void MergeFrom(const GCChangePlayerResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCChangePlayerResult)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCChangePlayerResult* default_instance_;
};
// -------------------------------------------------------------------

class GCStressTestBegin : public ::google::protobuf::Message {
 public:
  GCStressTestBegin();
  virtual ~GCStressTestBegin();

  GCStressTestBegin(const GCStressTestBegin& from);

  inline GCStressTestBegin& operator=(const GCStressTestBegin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCStressTestBegin& default_instance();

  void Swap(GCStressTestBegin* other);

  // implements Message ----------------------------------------------

  GCStressTestBegin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCStressTestBegin& from);
  void MergeFrom(const GCStressTestBegin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCStressTestBegin)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCStressTestBegin* default_instance_;
};
// -------------------------------------------------------------------

class CGPlayerViewSetting : public ::google::protobuf::Message {
 public:
  CGPlayerViewSetting();
  virtual ~CGPlayerViewSetting();

  CGPlayerViewSetting(const CGPlayerViewSetting& from);

  inline CGPlayerViewSetting& operator=(const CGPlayerViewSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGPlayerViewSetting& default_instance();

  void Swap(CGPlayerViewSetting* other);

  // implements Message ----------------------------------------------

  CGPlayerViewSetting* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGPlayerViewSetting& from);
  void MergeFrom(const CGPlayerViewSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 maxNum = 1;
  inline bool has_maxnum() const;
  inline void clear_maxnum();
  static const int kMaxNumFieldNumber = 1;
  inline ::google::protobuf::int32 maxnum() const;
  inline void set_maxnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGPlayerViewSetting)
 private:
  inline void set_has_maxnum();
  inline void clear_has_maxnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 maxnum_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGPlayerViewSetting* default_instance_;
};
// -------------------------------------------------------------------

class GCPlayerViewSetting : public ::google::protobuf::Message {
 public:
  GCPlayerViewSetting();
  virtual ~GCPlayerViewSetting();

  GCPlayerViewSetting(const GCPlayerViewSetting& from);

  inline GCPlayerViewSetting& operator=(const GCPlayerViewSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPlayerViewSetting& default_instance();

  void Swap(GCPlayerViewSetting* other);

  // implements Message ----------------------------------------------

  GCPlayerViewSetting* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPlayerViewSetting& from);
  void MergeFrom(const GCPlayerViewSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 maxNum = 2;
  inline bool has_maxnum() const;
  inline void clear_maxnum();
  static const int kMaxNumFieldNumber = 2;
  inline ::google::protobuf::int32 maxnum() const;
  inline void set_maxnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCPlayerViewSetting)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_maxnum();
  inline void clear_has_maxnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 maxnum_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPlayerViewSetting* default_instance_;
};
// -------------------------------------------------------------------

class CGQuitLogin : public ::google::protobuf::Message {
 public:
  CGQuitLogin();
  virtual ~CGQuitLogin();

  CGQuitLogin(const CGQuitLogin& from);

  inline CGQuitLogin& operator=(const CGQuitLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGQuitLogin& default_instance();

  void Swap(CGQuitLogin* other);

  // implements Message ----------------------------------------------

  CGQuitLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGQuitLogin& from);
  void MergeFrom(const CGQuitLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGQuitLogin)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGQuitLogin* default_instance_;
};
// -------------------------------------------------------------------

class GCQuitLoginBack : public ::google::protobuf::Message {
 public:
  GCQuitLoginBack();
  virtual ~GCQuitLoginBack();

  GCQuitLoginBack(const GCQuitLoginBack& from);

  inline GCQuitLoginBack& operator=(const GCQuitLoginBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCQuitLoginBack& default_instance();

  void Swap(GCQuitLoginBack* other);

  // implements Message ----------------------------------------------

  GCQuitLoginBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCQuitLoginBack& from);
  void MergeFrom(const GCQuitLoginBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCQuitLoginBack)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCQuitLoginBack* default_instance_;
};
// -------------------------------------------------------------------

class GCMuteTime : public ::google::protobuf::Message {
 public:
  GCMuteTime();
  virtual ~GCMuteTime();

  GCMuteTime(const GCMuteTime& from);

  inline GCMuteTime& operator=(const GCMuteTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCMuteTime& default_instance();

  void Swap(GCMuteTime* other);

  // implements Message ----------------------------------------------

  GCMuteTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCMuteTime& from);
  void MergeFrom(const GCMuteTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional int32 muteTime = 2;
  inline bool has_mutetime() const;
  inline void clear_mutetime();
  static const int kMuteTimeFieldNumber = 2;
  inline ::google::protobuf::int32 mutetime() const;
  inline void set_mutetime(::google::protobuf::int32 value);

  // optional int64 muteEndTime = 3;
  inline bool has_muteendtime() const;
  inline void clear_muteendtime();
  static const int kMuteEndTimeFieldNumber = 3;
  inline ::google::protobuf::int64 muteendtime() const;
  inline void set_muteendtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCMuteTime)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_mutetime();
  inline void clear_has_mutetime();
  inline void set_has_muteendtime();
  inline void clear_has_muteendtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 mutetime_;
  ::google::protobuf::int64 muteendtime_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCMuteTime* default_instance_;
};
// -------------------------------------------------------------------

class GameForceLoginout : public ::google::protobuf::Message {
 public:
  GameForceLoginout();
  virtual ~GameForceLoginout();

  GameForceLoginout(const GameForceLoginout& from);

  inline GameForceLoginout& operator=(const GameForceLoginout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameForceLoginout& default_instance();

  void Swap(GameForceLoginout* other);

  // implements Message ----------------------------------------------

  GameForceLoginout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameForceLoginout& from);
  void MergeFrom(const GameForceLoginout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // optional int32 noticeLoginSvr = 2;
  inline bool has_noticeloginsvr() const;
  inline void clear_noticeloginsvr();
  static const int kNoticeLoginSvrFieldNumber = 2;
  inline ::google::protobuf::int32 noticeloginsvr() const;
  inline void set_noticeloginsvr(::google::protobuf::int32 value);

  // optional int32 noticeGateSvr = 3;
  inline bool has_noticegatesvr() const;
  inline void clear_noticegatesvr();
  static const int kNoticeGateSvrFieldNumber = 3;
  inline ::google::protobuf::int32 noticegatesvr() const;
  inline void set_noticegatesvr(::google::protobuf::int32 value);

  // optional int32 reason = 4;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 4;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameForceLoginout)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_noticeloginsvr();
  inline void clear_has_noticeloginsvr();
  inline void set_has_noticegatesvr();
  inline void clear_has_noticegatesvr();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  ::google::protobuf::int32 noticeloginsvr_;
  ::google::protobuf::int32 noticegatesvr_;
  ::google::protobuf::int32 reason_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GameForceLoginout* default_instance_;
};
// -------------------------------------------------------------------

class GCExpPlus : public ::google::protobuf::Message {
 public:
  GCExpPlus();
  virtual ~GCExpPlus();

  GCExpPlus(const GCExpPlus& from);

  inline GCExpPlus& operator=(const GCExpPlus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCExpPlus& default_instance();

  void Swap(GCExpPlus* other);

  // implements Message ----------------------------------------------

  GCExpPlus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCExpPlus& from);
  void MergeFrom(const GCExpPlus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline ::google::protobuf::int32 display() const;
  inline void set_display(::google::protobuf::int32 value);

  // optional int32 worldLevel = 2;
  inline bool has_worldlevel() const;
  inline void clear_worldlevel();
  static const int kWorldLevelFieldNumber = 2;
  inline ::google::protobuf::int32 worldlevel() const;
  inline void set_worldlevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCExpPlus)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_worldlevel();
  inline void clear_has_worldlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 display_;
  ::google::protobuf::int32 worldlevel_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCExpPlus* default_instance_;
};
// -------------------------------------------------------------------

class GCNonageSts : public ::google::protobuf::Message {
 public:
  GCNonageSts();
  virtual ~GCNonageSts();

  GCNonageSts(const GCNonageSts& from);

  inline GCNonageSts& operator=(const GCNonageSts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCNonageSts& default_instance();

  void Swap(GCNonageSts* other);

  // implements Message ----------------------------------------------

  GCNonageSts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCNonageSts& from);
  void MergeFrom(const GCNonageSts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sts = 1;
  inline bool has_sts() const;
  inline void clear_sts();
  static const int kStsFieldNumber = 1;
  inline ::google::protobuf::int32 sts() const;
  inline void set_sts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCNonageSts)
 private:
  inline void set_has_sts();
  inline void clear_has_sts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sts_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCNonageSts* default_instance_;
};
// -------------------------------------------------------------------

class CGNeedNonage : public ::google::protobuf::Message {
 public:
  CGNeedNonage();
  virtual ~CGNeedNonage();

  CGNeedNonage(const CGNeedNonage& from);

  inline CGNeedNonage& operator=(const CGNeedNonage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGNeedNonage& default_instance();

  void Swap(CGNeedNonage* other);

  // implements Message ----------------------------------------------

  CGNeedNonage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGNeedNonage& from);
  void MergeFrom(const CGNeedNonage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sts = 1;
  inline bool has_sts() const;
  inline void clear_sts();
  static const int kStsFieldNumber = 1;
  inline ::google::protobuf::int32 sts() const;
  inline void set_sts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGNeedNonage)
 private:
  inline void set_has_sts();
  inline void clear_has_sts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sts_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGNeedNonage* default_instance_;
};
// -------------------------------------------------------------------

class GCOnLineTime : public ::google::protobuf::Message {
 public:
  GCOnLineTime();
  virtual ~GCOnLineTime();

  GCOnLineTime(const GCOnLineTime& from);

  inline GCOnLineTime& operator=(const GCOnLineTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCOnLineTime& default_instance();

  void Swap(GCOnLineTime* other);

  // implements Message ----------------------------------------------

  GCOnLineTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCOnLineTime& from);
  void MergeFrom(const GCOnLineTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 senconds = 1;
  inline bool has_senconds() const;
  inline void clear_senconds();
  static const int kSencondsFieldNumber = 1;
  inline ::google::protobuf::int32 senconds() const;
  inline void set_senconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCOnLineTime)
 private:
  inline void set_has_senconds();
  inline void clear_has_senconds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 senconds_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCOnLineTime* default_instance_;
};
// -------------------------------------------------------------------

class CGAmbitLevelUp : public ::google::protobuf::Message {
 public:
  CGAmbitLevelUp();
  virtual ~CGAmbitLevelUp();

  CGAmbitLevelUp(const CGAmbitLevelUp& from);

  inline CGAmbitLevelUp& operator=(const CGAmbitLevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGAmbitLevelUp& default_instance();

  void Swap(CGAmbitLevelUp* other);

  // implements Message ----------------------------------------------

  CGAmbitLevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGAmbitLevelUp& from);
  void MergeFrom(const CGAmbitLevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGAmbitLevelUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGAmbitLevelUp* default_instance_;
};
// -------------------------------------------------------------------

class GCAmbitLevelUp : public ::google::protobuf::Message {
 public:
  GCAmbitLevelUp();
  virtual ~GCAmbitLevelUp();

  GCAmbitLevelUp(const GCAmbitLevelUp& from);

  inline GCAmbitLevelUp& operator=(const GCAmbitLevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCAmbitLevelUp& default_instance();

  void Swap(GCAmbitLevelUp* other);

  // implements Message ----------------------------------------------

  GCAmbitLevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCAmbitLevelUp& from);
  void MergeFrom(const GCAmbitLevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ambitLevel = 1;
  inline bool has_ambitlevel() const;
  inline void clear_ambitlevel();
  static const int kAmbitLevelFieldNumber = 1;
  inline ::google::protobuf::int32 ambitlevel() const;
  inline void set_ambitlevel(::google::protobuf::int32 value);

  // optional int32 ambitStatus = 2;
  inline bool has_ambitstatus() const;
  inline void clear_ambitstatus();
  static const int kAmbitStatusFieldNumber = 2;
  inline ::google::protobuf::int32 ambitstatus() const;
  inline void set_ambitstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCAmbitLevelUp)
 private:
  inline void set_has_ambitlevel();
  inline void clear_has_ambitlevel();
  inline void set_has_ambitstatus();
  inline void clear_has_ambitstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ambitlevel_;
  ::google::protobuf::int32 ambitstatus_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCAmbitLevelUp* default_instance_;
};
// -------------------------------------------------------------------

class GCPrivatePlayerAttr : public ::google::protobuf::Message {
 public:
  GCPrivatePlayerAttr();
  virtual ~GCPrivatePlayerAttr();

  GCPrivatePlayerAttr(const GCPrivatePlayerAttr& from);

  inline GCPrivatePlayerAttr& operator=(const GCPrivatePlayerAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPrivatePlayerAttr& default_instance();

  void Swap(GCPrivatePlayerAttr* other);

  // implements Message ----------------------------------------------

  GCPrivatePlayerAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPrivatePlayerAttr& from);
  void MergeFrom(const GCPrivatePlayerAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CharacterAttr charAttr = 1;
  inline int charattr_size() const;
  inline void clear_charattr();
  static const int kCharAttrFieldNumber = 1;
  inline const ::CharacterAttr& charattr(int index) const;
  inline ::CharacterAttr* mutable_charattr(int index);
  inline ::CharacterAttr* add_charattr();
  inline const ::google::protobuf::RepeatedPtrField< ::CharacterAttr >&
      charattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CharacterAttr >*
      mutable_charattr();

  // @@protoc_insertion_point(class_scope:GCPrivatePlayerAttr)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CharacterAttr > charattr_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPrivatePlayerAttr* default_instance_;
};
// -------------------------------------------------------------------

class CGUnLock : public ::google::protobuf::Message {
 public:
  CGUnLock();
  virtual ~CGUnLock();

  CGUnLock(const CGUnLock& from);

  inline CGUnLock& operator=(const CGUnLock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGUnLock& default_instance();

  void Swap(CGUnLock* other);

  // implements Message ----------------------------------------------

  CGUnLock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGUnLock& from);
  void MergeFrom(const CGUnLock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGUnLock)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGUnLock* default_instance_;
};
// -------------------------------------------------------------------

class CGLookPlayerInfo : public ::google::protobuf::Message {
 public:
  CGLookPlayerInfo();
  virtual ~CGLookPlayerInfo();

  CGLookPlayerInfo(const CGLookPlayerInfo& from);

  inline CGLookPlayerInfo& operator=(const CGLookPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGLookPlayerInfo& default_instance();

  void Swap(CGLookPlayerInfo* other);

  // implements Message ----------------------------------------------

  CGLookPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGLookPlayerInfo& from);
  void MergeFrom(const CGLookPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGLookPlayerInfo)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static CGLookPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCLookPlayerInfo : public ::google::protobuf::Message {
 public:
  GCLookPlayerInfo();
  virtual ~GCLookPlayerInfo();

  GCLookPlayerInfo(const GCLookPlayerInfo& from);

  inline GCLookPlayerInfo& operator=(const GCLookPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCLookPlayerInfo& default_instance();

  void Swap(GCLookPlayerInfo* other);

  // implements Message ----------------------------------------------

  GCLookPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCLookPlayerInfo& from);
  void MergeFrom(const GCLookPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CharacterInfo playerInfo = 1;
  inline bool has_playerinfo() const;
  inline void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 1;
  inline const ::CharacterInfo& playerinfo() const;
  inline ::CharacterInfo* mutable_playerinfo();
  inline ::CharacterInfo* release_playerinfo();
  inline void set_allocated_playerinfo(::CharacterInfo* playerinfo);

  // repeated .EquipSlots equipSlots = 2;
  inline int equipslots_size() const;
  inline void clear_equipslots();
  static const int kEquipSlotsFieldNumber = 2;
  inline const ::EquipSlots& equipslots(int index) const;
  inline ::EquipSlots* mutable_equipslots(int index);
  inline ::EquipSlots* add_equipslots();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipSlots >&
      equipslots() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipSlots >*
      mutable_equipslots();

  // repeated .SpiritBeastInfo sbInfo = 3;
  inline int sbinfo_size() const;
  inline void clear_sbinfo();
  static const int kSbInfoFieldNumber = 3;
  inline const ::SpiritBeastInfo& sbinfo(int index) const;
  inline ::SpiritBeastInfo* mutable_sbinfo(int index);
  inline ::SpiritBeastInfo* add_sbinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo >&
      sbinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo >*
      mutable_sbinfo();

  // repeated .TalismanSlotsLook talisSlots = 4;
  inline int talisslots_size() const;
  inline void clear_talisslots();
  static const int kTalisSlotsFieldNumber = 4;
  inline const ::TalismanSlotsLook& talisslots(int index) const;
  inline ::TalismanSlotsLook* mutable_talisslots(int index);
  inline ::TalismanSlotsLook* add_talisslots();
  inline const ::google::protobuf::RepeatedPtrField< ::TalismanSlotsLook >&
      talisslots() const;
  inline ::google::protobuf::RepeatedPtrField< ::TalismanSlotsLook >*
      mutable_talisslots();

  // @@protoc_insertion_point(class_scope:GCLookPlayerInfo)
 private:
  inline void set_has_playerinfo();
  inline void clear_has_playerinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CharacterInfo* playerinfo_;
  ::google::protobuf::RepeatedPtrField< ::EquipSlots > equipslots_;
  ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo > sbinfo_;
  ::google::protobuf::RepeatedPtrField< ::TalismanSlotsLook > talisslots_;
  friend void  protobuf_AddDesc_PlayerMessage_2eproto();
  friend void protobuf_AssignDesc_PlayerMessage_2eproto();
  friend void protobuf_ShutdownFile_PlayerMessage_2eproto();

  void InitAsDefaultInstance();
  static GCLookPlayerInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// GCCharacterFaceTo

// optional int64 objectId = 1;
inline bool GCCharacterFaceTo::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCCharacterFaceTo::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCCharacterFaceTo::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCCharacterFaceTo::clear_objectid() {
  objectid_ = GOOGLE_LONGLONG(0);
  clear_has_objectid();
}
inline ::google::protobuf::int64 GCCharacterFaceTo::objectid() const {
  // @@protoc_insertion_point(field_get:GCCharacterFaceTo.objectId)
  return objectid_;
}
inline void GCCharacterFaceTo::set_objectid(::google::protobuf::int64 value) {
  set_has_objectid();
  objectid_ = value;
  // @@protoc_insertion_point(field_set:GCCharacterFaceTo.objectId)
}

// optional int64 faceToObjectId = 2;
inline bool GCCharacterFaceTo::has_facetoobjectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCCharacterFaceTo::set_has_facetoobjectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCCharacterFaceTo::clear_has_facetoobjectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCCharacterFaceTo::clear_facetoobjectid() {
  facetoobjectid_ = GOOGLE_LONGLONG(0);
  clear_has_facetoobjectid();
}
inline ::google::protobuf::int64 GCCharacterFaceTo::facetoobjectid() const {
  // @@protoc_insertion_point(field_get:GCCharacterFaceTo.faceToObjectId)
  return facetoobjectid_;
}
inline void GCCharacterFaceTo::set_facetoobjectid(::google::protobuf::int64 value) {
  set_has_facetoobjectid();
  facetoobjectid_ = value;
  // @@protoc_insertion_point(field_set:GCCharacterFaceTo.faceToObjectId)
}

// optional .Vector3Info faceToPos = 3;
inline bool GCCharacterFaceTo::has_facetopos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCCharacterFaceTo::set_has_facetopos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCCharacterFaceTo::clear_has_facetopos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCCharacterFaceTo::clear_facetopos() {
  if (facetopos_ != NULL) facetopos_->::Vector3Info::Clear();
  clear_has_facetopos();
}
inline const ::Vector3Info& GCCharacterFaceTo::facetopos() const {
  // @@protoc_insertion_point(field_get:GCCharacterFaceTo.faceToPos)
  return facetopos_ != NULL ? *facetopos_ : *default_instance_->facetopos_;
}
inline ::Vector3Info* GCCharacterFaceTo::mutable_facetopos() {
  set_has_facetopos();
  if (facetopos_ == NULL) facetopos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCCharacterFaceTo.faceToPos)
  return facetopos_;
}
inline ::Vector3Info* GCCharacterFaceTo::release_facetopos() {
  clear_has_facetopos();
  ::Vector3Info* temp = facetopos_;
  facetopos_ = NULL;
  return temp;
}
inline void GCCharacterFaceTo::set_allocated_facetopos(::Vector3Info* facetopos) {
  delete facetopos_;
  facetopos_ = facetopos;
  if (facetopos) {
    set_has_facetopos();
  } else {
    clear_has_facetopos();
  }
  // @@protoc_insertion_point(field_set_allocated:GCCharacterFaceTo.faceToPos)
}

// -------------------------------------------------------------------

// GCPlayerDie

// optional int64 dietime = 1;
inline bool GCPlayerDie::has_dietime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPlayerDie::set_has_dietime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPlayerDie::clear_has_dietime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPlayerDie::clear_dietime() {
  dietime_ = GOOGLE_LONGLONG(0);
  clear_has_dietime();
}
inline ::google::protobuf::int64 GCPlayerDie::dietime() const {
  // @@protoc_insertion_point(field_get:GCPlayerDie.dietime)
  return dietime_;
}
inline void GCPlayerDie::set_dietime(::google::protobuf::int64 value) {
  set_has_dietime();
  dietime_ = value;
  // @@protoc_insertion_point(field_set:GCPlayerDie.dietime)
}

// optional int64 reborntiem = 2;
inline bool GCPlayerDie::has_reborntiem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCPlayerDie::set_has_reborntiem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCPlayerDie::clear_has_reborntiem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCPlayerDie::clear_reborntiem() {
  reborntiem_ = GOOGLE_LONGLONG(0);
  clear_has_reborntiem();
}
inline ::google::protobuf::int64 GCPlayerDie::reborntiem() const {
  // @@protoc_insertion_point(field_get:GCPlayerDie.reborntiem)
  return reborntiem_;
}
inline void GCPlayerDie::set_reborntiem(::google::protobuf::int64 value) {
  set_has_reborntiem();
  reborntiem_ = value;
  // @@protoc_insertion_point(field_set:GCPlayerDie.reborntiem)
}

// optional int64 killer = 3;
inline bool GCPlayerDie::has_killer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCPlayerDie::set_has_killer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCPlayerDie::clear_has_killer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCPlayerDie::clear_killer() {
  killer_ = GOOGLE_LONGLONG(0);
  clear_has_killer();
}
inline ::google::protobuf::int64 GCPlayerDie::killer() const {
  // @@protoc_insertion_point(field_get:GCPlayerDie.killer)
  return killer_;
}
inline void GCPlayerDie::set_killer(::google::protobuf::int64 value) {
  set_has_killer();
  killer_ = value;
  // @@protoc_insertion_point(field_set:GCPlayerDie.killer)
}

// optional int32 kimbdNum = 4;
inline bool GCPlayerDie::has_kimbdnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCPlayerDie::set_has_kimbdnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCPlayerDie::clear_has_kimbdnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCPlayerDie::clear_kimbdnum() {
  kimbdnum_ = 0;
  clear_has_kimbdnum();
}
inline ::google::protobuf::int32 GCPlayerDie::kimbdnum() const {
  // @@protoc_insertion_point(field_get:GCPlayerDie.kimbdNum)
  return kimbdnum_;
}
inline void GCPlayerDie::set_kimbdnum(::google::protobuf::int32 value) {
  set_has_kimbdnum();
  kimbdnum_ = value;
  // @@protoc_insertion_point(field_set:GCPlayerDie.kimbdNum)
}

// -------------------------------------------------------------------

// CGReqPlayerReborn

// optional int32 type = 1;
inline bool CGReqPlayerReborn::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGReqPlayerReborn::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGReqPlayerReborn::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGReqPlayerReborn::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGReqPlayerReborn::type() const {
  // @@protoc_insertion_point(field_get:CGReqPlayerReborn.type)
  return type_;
}
inline void CGReqPlayerReborn::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGReqPlayerReborn.type)
}

// -------------------------------------------------------------------

// GCPlayerReborn

// optional int32 result = 1;
inline bool GCPlayerReborn::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPlayerReborn::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPlayerReborn::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPlayerReborn::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCPlayerReborn::result() const {
  // @@protoc_insertion_point(field_get:GCPlayerReborn.result)
  return result_;
}
inline void GCPlayerReborn::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCPlayerReborn.result)
}

// optional int64 objectId = 2;
inline bool GCPlayerReborn::has_objectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCPlayerReborn::set_has_objectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCPlayerReborn::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCPlayerReborn::clear_objectid() {
  objectid_ = GOOGLE_LONGLONG(0);
  clear_has_objectid();
}
inline ::google::protobuf::int64 GCPlayerReborn::objectid() const {
  // @@protoc_insertion_point(field_get:GCPlayerReborn.objectId)
  return objectid_;
}
inline void GCPlayerReborn::set_objectid(::google::protobuf::int64 value) {
  set_has_objectid();
  objectid_ = value;
  // @@protoc_insertion_point(field_set:GCPlayerReborn.objectId)
}

// -------------------------------------------------------------------

// CGUpdatePlayerName

// optional string name = 1;
inline bool CGUpdatePlayerName::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGUpdatePlayerName::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGUpdatePlayerName::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGUpdatePlayerName::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CGUpdatePlayerName::name() const {
  // @@protoc_insertion_point(field_get:CGUpdatePlayerName.name)
  return *name_;
}
inline void CGUpdatePlayerName::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CGUpdatePlayerName.name)
}
inline void CGUpdatePlayerName::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGUpdatePlayerName.name)
}
inline void CGUpdatePlayerName::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGUpdatePlayerName.name)
}
inline ::std::string* CGUpdatePlayerName::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGUpdatePlayerName.name)
  return name_;
}
inline ::std::string* CGUpdatePlayerName::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGUpdatePlayerName::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGUpdatePlayerName.name)
}

// -------------------------------------------------------------------

// GCUpdatePlayerNameOK

// optional int32 flag = 1;
inline bool GCUpdatePlayerNameOK::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCUpdatePlayerNameOK::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCUpdatePlayerNameOK::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCUpdatePlayerNameOK::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCUpdatePlayerNameOK::flag() const {
  // @@protoc_insertion_point(field_get:GCUpdatePlayerNameOK.flag)
  return flag_;
}
inline void GCUpdatePlayerNameOK::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCUpdatePlayerNameOK.flag)
}

// optional string newname = 2;
inline bool GCUpdatePlayerNameOK::has_newname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCUpdatePlayerNameOK::set_has_newname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCUpdatePlayerNameOK::clear_has_newname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCUpdatePlayerNameOK::clear_newname() {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_->clear();
  }
  clear_has_newname();
}
inline const ::std::string& GCUpdatePlayerNameOK::newname() const {
  // @@protoc_insertion_point(field_get:GCUpdatePlayerNameOK.newname)
  return *newname_;
}
inline void GCUpdatePlayerNameOK::set_newname(const ::std::string& value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set:GCUpdatePlayerNameOK.newname)
}
inline void GCUpdatePlayerNameOK::set_newname(const char* value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCUpdatePlayerNameOK.newname)
}
inline void GCUpdatePlayerNameOK::set_newname(const char* value, size_t size) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCUpdatePlayerNameOK.newname)
}
inline ::std::string* GCUpdatePlayerNameOK::mutable_newname() {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCUpdatePlayerNameOK.newname)
  return newname_;
}
inline ::std::string* GCUpdatePlayerNameOK::release_newname() {
  clear_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = newname_;
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCUpdatePlayerNameOK::set_allocated_newname(::std::string* newname) {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete newname_;
  }
  if (newname) {
    set_has_newname();
    newname_ = newname;
  } else {
    clear_has_newname();
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCUpdatePlayerNameOK.newname)
}

// -------------------------------------------------------------------

// GCSendHeadIconList

// repeated int32 iconlist = 1;
inline int GCSendHeadIconList::iconlist_size() const {
  return iconlist_.size();
}
inline void GCSendHeadIconList::clear_iconlist() {
  iconlist_.Clear();
}
inline ::google::protobuf::int32 GCSendHeadIconList::iconlist(int index) const {
  // @@protoc_insertion_point(field_get:GCSendHeadIconList.iconlist)
  return iconlist_.Get(index);
}
inline void GCSendHeadIconList::set_iconlist(int index, ::google::protobuf::int32 value) {
  iconlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCSendHeadIconList.iconlist)
}
inline void GCSendHeadIconList::add_iconlist(::google::protobuf::int32 value) {
  iconlist_.Add(value);
  // @@protoc_insertion_point(field_add:GCSendHeadIconList.iconlist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCSendHeadIconList::iconlist() const {
  // @@protoc_insertion_point(field_list:GCSendHeadIconList.iconlist)
  return iconlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCSendHeadIconList::mutable_iconlist() {
  // @@protoc_insertion_point(field_mutable_list:GCSendHeadIconList.iconlist)
  return &iconlist_;
}

// -------------------------------------------------------------------

// CGUpdatePlayerHeadIcon

// optional int32 iconid = 1;
inline bool CGUpdatePlayerHeadIcon::has_iconid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGUpdatePlayerHeadIcon::set_has_iconid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGUpdatePlayerHeadIcon::clear_has_iconid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGUpdatePlayerHeadIcon::clear_iconid() {
  iconid_ = 0;
  clear_has_iconid();
}
inline ::google::protobuf::int32 CGUpdatePlayerHeadIcon::iconid() const {
  // @@protoc_insertion_point(field_get:CGUpdatePlayerHeadIcon.iconid)
  return iconid_;
}
inline void CGUpdatePlayerHeadIcon::set_iconid(::google::protobuf::int32 value) {
  set_has_iconid();
  iconid_ = value;
  // @@protoc_insertion_point(field_set:CGUpdatePlayerHeadIcon.iconid)
}

// -------------------------------------------------------------------

// GCUpdateHeadIconOK

// optional int32 flag = 1;
inline bool GCUpdateHeadIconOK::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCUpdateHeadIconOK::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCUpdateHeadIconOK::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCUpdateHeadIconOK::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCUpdateHeadIconOK::flag() const {
  // @@protoc_insertion_point(field_get:GCUpdateHeadIconOK.flag)
  return flag_;
}
inline void GCUpdateHeadIconOK::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCUpdateHeadIconOK.flag)
}

// optional int32 headIcon = 2;
inline bool GCUpdateHeadIconOK::has_headicon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCUpdateHeadIconOK::set_has_headicon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCUpdateHeadIconOK::clear_has_headicon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCUpdateHeadIconOK::clear_headicon() {
  headicon_ = 0;
  clear_has_headicon();
}
inline ::google::protobuf::int32 GCUpdateHeadIconOK::headicon() const {
  // @@protoc_insertion_point(field_get:GCUpdateHeadIconOK.headIcon)
  return headicon_;
}
inline void GCUpdateHeadIconOK::set_headicon(::google::protobuf::int32 value) {
  set_has_headicon();
  headicon_ = value;
  // @@protoc_insertion_point(field_set:GCUpdateHeadIconOK.headIcon)
}

// -------------------------------------------------------------------

// CGReLoginGameServer

// optional int64 playerId = 1;
inline bool CGReLoginGameServer::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGReLoginGameServer::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGReLoginGameServer::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGReLoginGameServer::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CGReLoginGameServer::playerid() const {
  // @@protoc_insertion_point(field_get:CGReLoginGameServer.playerId)
  return playerid_;
}
inline void CGReLoginGameServer::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CGReLoginGameServer.playerId)
}

// optional string uid = 2;
inline bool CGReLoginGameServer::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGReLoginGameServer::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGReLoginGameServer::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGReLoginGameServer::clear_uid() {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_->clear();
  }
  clear_has_uid();
}
inline const ::std::string& CGReLoginGameServer::uid() const {
  // @@protoc_insertion_point(field_get:CGReLoginGameServer.uid)
  return *uid_;
}
inline void CGReLoginGameServer::set_uid(const ::std::string& value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set:CGReLoginGameServer.uid)
}
inline void CGReLoginGameServer::set_uid(const char* value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGReLoginGameServer.uid)
}
inline void CGReLoginGameServer::set_uid(const char* value, size_t size) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGReLoginGameServer.uid)
}
inline ::std::string* CGReLoginGameServer::mutable_uid() {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGReLoginGameServer.uid)
  return uid_;
}
inline ::std::string* CGReLoginGameServer::release_uid() {
  clear_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = uid_;
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGReLoginGameServer::set_allocated_uid(::std::string* uid) {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uid_;
  }
  if (uid) {
    set_has_uid();
    uid_ = uid;
  } else {
    clear_has_uid();
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGReLoginGameServer.uid)
}

// optional string platForm = 3;
inline bool CGReLoginGameServer::has_platform() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGReLoginGameServer::set_has_platform() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGReLoginGameServer::clear_has_platform() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGReLoginGameServer::clear_platform() {
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& CGReLoginGameServer::platform() const {
  // @@protoc_insertion_point(field_get:CGReLoginGameServer.platForm)
  return *platform_;
}
inline void CGReLoginGameServer::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
  // @@protoc_insertion_point(field_set:CGReLoginGameServer.platForm)
}
inline void CGReLoginGameServer::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGReLoginGameServer.platForm)
}
inline void CGReLoginGameServer::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGReLoginGameServer.platForm)
}
inline ::std::string* CGReLoginGameServer::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGReLoginGameServer.platForm)
  return platform_;
}
inline ::std::string* CGReLoginGameServer::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGReLoginGameServer::set_allocated_platform(::std::string* platform) {
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platform_;
  }
  if (platform) {
    set_has_platform();
    platform_ = platform;
  } else {
    clear_has_platform();
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGReLoginGameServer.platForm)
}

// optional int64 accountID = 4;
inline bool CGReLoginGameServer::has_accountid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGReLoginGameServer::set_has_accountid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGReLoginGameServer::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGReLoginGameServer::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
  clear_has_accountid();
}
inline ::google::protobuf::int64 CGReLoginGameServer::accountid() const {
  // @@protoc_insertion_point(field_get:CGReLoginGameServer.accountID)
  return accountid_;
}
inline void CGReLoginGameServer::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:CGReLoginGameServer.accountID)
}

// optional int32 currSceneId = 5;
inline bool CGReLoginGameServer::has_currsceneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGReLoginGameServer::set_has_currsceneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGReLoginGameServer::clear_has_currsceneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGReLoginGameServer::clear_currsceneid() {
  currsceneid_ = 0;
  clear_has_currsceneid();
}
inline ::google::protobuf::int32 CGReLoginGameServer::currsceneid() const {
  // @@protoc_insertion_point(field_get:CGReLoginGameServer.currSceneId)
  return currsceneid_;
}
inline void CGReLoginGameServer::set_currsceneid(::google::protobuf::int32 value) {
  set_has_currsceneid();
  currsceneid_ = value;
  // @@protoc_insertion_point(field_set:CGReLoginGameServer.currSceneId)
}

// optional string authKey = 6;
inline bool CGReLoginGameServer::has_authkey() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGReLoginGameServer::set_has_authkey() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CGReLoginGameServer::clear_has_authkey() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CGReLoginGameServer::clear_authkey() {
  if (authkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    authkey_->clear();
  }
  clear_has_authkey();
}
inline const ::std::string& CGReLoginGameServer::authkey() const {
  // @@protoc_insertion_point(field_get:CGReLoginGameServer.authKey)
  return *authkey_;
}
inline void CGReLoginGameServer::set_authkey(const ::std::string& value) {
  set_has_authkey();
  if (authkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    authkey_ = new ::std::string;
  }
  authkey_->assign(value);
  // @@protoc_insertion_point(field_set:CGReLoginGameServer.authKey)
}
inline void CGReLoginGameServer::set_authkey(const char* value) {
  set_has_authkey();
  if (authkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    authkey_ = new ::std::string;
  }
  authkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGReLoginGameServer.authKey)
}
inline void CGReLoginGameServer::set_authkey(const char* value, size_t size) {
  set_has_authkey();
  if (authkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    authkey_ = new ::std::string;
  }
  authkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGReLoginGameServer.authKey)
}
inline ::std::string* CGReLoginGameServer::mutable_authkey() {
  set_has_authkey();
  if (authkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    authkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGReLoginGameServer.authKey)
  return authkey_;
}
inline ::std::string* CGReLoginGameServer::release_authkey() {
  clear_has_authkey();
  if (authkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = authkey_;
    authkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGReLoginGameServer::set_allocated_authkey(::std::string* authkey) {
  if (authkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete authkey_;
  }
  if (authkey) {
    set_has_authkey();
    authkey_ = authkey;
  } else {
    clear_has_authkey();
    authkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGReLoginGameServer.authKey)
}

// optional int32 sceneLoading = 7;
inline bool CGReLoginGameServer::has_sceneloading() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGReLoginGameServer::set_has_sceneloading() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CGReLoginGameServer::clear_has_sceneloading() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CGReLoginGameServer::clear_sceneloading() {
  sceneloading_ = 0;
  clear_has_sceneloading();
}
inline ::google::protobuf::int32 CGReLoginGameServer::sceneloading() const {
  // @@protoc_insertion_point(field_get:CGReLoginGameServer.sceneLoading)
  return sceneloading_;
}
inline void CGReLoginGameServer::set_sceneloading(::google::protobuf::int32 value) {
  set_has_sceneloading();
  sceneloading_ = value;
  // @@protoc_insertion_point(field_set:CGReLoginGameServer.sceneLoading)
}

// -------------------------------------------------------------------

// GCReLoginGameServer

// optional int32 result = 1;
inline bool GCReLoginGameServer::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCReLoginGameServer::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCReLoginGameServer::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCReLoginGameServer::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCReLoginGameServer::result() const {
  // @@protoc_insertion_point(field_get:GCReLoginGameServer.result)
  return result_;
}
inline void GCReLoginGameServer::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCReLoginGameServer.result)
}

// optional int64 eniqueID = 2;
inline bool GCReLoginGameServer::has_eniqueid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCReLoginGameServer::set_has_eniqueid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCReLoginGameServer::clear_has_eniqueid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCReLoginGameServer::clear_eniqueid() {
  eniqueid_ = GOOGLE_LONGLONG(0);
  clear_has_eniqueid();
}
inline ::google::protobuf::int64 GCReLoginGameServer::eniqueid() const {
  // @@protoc_insertion_point(field_get:GCReLoginGameServer.eniqueID)
  return eniqueid_;
}
inline void GCReLoginGameServer::set_eniqueid(::google::protobuf::int64 value) {
  set_has_eniqueid();
  eniqueid_ = value;
  // @@protoc_insertion_point(field_set:GCReLoginGameServer.eniqueID)
}

// -------------------------------------------------------------------

// GCSendSkillList

// optional int64 playerId = 1;
inline bool GCSendSkillList::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSendSkillList::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSendSkillList::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSendSkillList::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 GCSendSkillList::playerid() const {
  // @@protoc_insertion_point(field_get:GCSendSkillList.playerId)
  return playerid_;
}
inline void GCSendSkillList::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:GCSendSkillList.playerId)
}

// repeated .SkillItemData skilldata = 2;
inline int GCSendSkillList::skilldata_size() const {
  return skilldata_.size();
}
inline void GCSendSkillList::clear_skilldata() {
  skilldata_.Clear();
}
inline const ::SkillItemData& GCSendSkillList::skilldata(int index) const {
  // @@protoc_insertion_point(field_get:GCSendSkillList.skilldata)
  return skilldata_.Get(index);
}
inline ::SkillItemData* GCSendSkillList::mutable_skilldata(int index) {
  // @@protoc_insertion_point(field_mutable:GCSendSkillList.skilldata)
  return skilldata_.Mutable(index);
}
inline ::SkillItemData* GCSendSkillList::add_skilldata() {
  // @@protoc_insertion_point(field_add:GCSendSkillList.skilldata)
  return skilldata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillItemData >&
GCSendSkillList::skilldata() const {
  // @@protoc_insertion_point(field_list:GCSendSkillList.skilldata)
  return skilldata_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillItemData >*
GCSendSkillList::mutable_skilldata() {
  // @@protoc_insertion_point(field_mutable_list:GCSendSkillList.skilldata)
  return &skilldata_;
}

// optional int32 isfirstlogin = 3;
inline bool GCSendSkillList::has_isfirstlogin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSendSkillList::set_has_isfirstlogin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSendSkillList::clear_has_isfirstlogin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSendSkillList::clear_isfirstlogin() {
  isfirstlogin_ = 0;
  clear_has_isfirstlogin();
}
inline ::google::protobuf::int32 GCSendSkillList::isfirstlogin() const {
  // @@protoc_insertion_point(field_get:GCSendSkillList.isfirstlogin)
  return isfirstlogin_;
}
inline void GCSendSkillList::set_isfirstlogin(::google::protobuf::int32 value) {
  set_has_isfirstlogin();
  isfirstlogin_ = value;
  // @@protoc_insertion_point(field_set:GCSendSkillList.isfirstlogin)
}

// optional .SkillItemData shenQiSkilldata = 4;
inline bool GCSendSkillList::has_shenqiskilldata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCSendSkillList::set_has_shenqiskilldata() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCSendSkillList::clear_has_shenqiskilldata() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCSendSkillList::clear_shenqiskilldata() {
  if (shenqiskilldata_ != NULL) shenqiskilldata_->::SkillItemData::Clear();
  clear_has_shenqiskilldata();
}
inline const ::SkillItemData& GCSendSkillList::shenqiskilldata() const {
  // @@protoc_insertion_point(field_get:GCSendSkillList.shenQiSkilldata)
  return shenqiskilldata_ != NULL ? *shenqiskilldata_ : *default_instance_->shenqiskilldata_;
}
inline ::SkillItemData* GCSendSkillList::mutable_shenqiskilldata() {
  set_has_shenqiskilldata();
  if (shenqiskilldata_ == NULL) shenqiskilldata_ = new ::SkillItemData;
  // @@protoc_insertion_point(field_mutable:GCSendSkillList.shenQiSkilldata)
  return shenqiskilldata_;
}
inline ::SkillItemData* GCSendSkillList::release_shenqiskilldata() {
  clear_has_shenqiskilldata();
  ::SkillItemData* temp = shenqiskilldata_;
  shenqiskilldata_ = NULL;
  return temp;
}
inline void GCSendSkillList::set_allocated_shenqiskilldata(::SkillItemData* shenqiskilldata) {
  delete shenqiskilldata_;
  shenqiskilldata_ = shenqiskilldata;
  if (shenqiskilldata) {
    set_has_shenqiskilldata();
  } else {
    clear_has_shenqiskilldata();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSendSkillList.shenQiSkilldata)
}

// optional int32 skillFlag = 5;
inline bool GCSendSkillList::has_skillflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCSendSkillList::set_has_skillflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCSendSkillList::clear_has_skillflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCSendSkillList::clear_skillflag() {
  skillflag_ = 0;
  clear_has_skillflag();
}
inline ::google::protobuf::int32 GCSendSkillList::skillflag() const {
  // @@protoc_insertion_point(field_get:GCSendSkillList.skillFlag)
  return skillflag_;
}
inline void GCSendSkillList::set_skillflag(::google::protobuf::int32 value) {
  set_has_skillflag();
  skillflag_ = value;
  // @@protoc_insertion_point(field_set:GCSendSkillList.skillFlag)
}

// -------------------------------------------------------------------

// CGPlayerHangup

// optional int32 open = 1;
inline bool CGPlayerHangup::has_open() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGPlayerHangup::set_has_open() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGPlayerHangup::clear_has_open() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGPlayerHangup::clear_open() {
  open_ = 0;
  clear_has_open();
}
inline ::google::protobuf::int32 CGPlayerHangup::open() const {
  // @@protoc_insertion_point(field_get:CGPlayerHangup.open)
  return open_;
}
inline void CGPlayerHangup::set_open(::google::protobuf::int32 value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:CGPlayerHangup.open)
}

// optional int32 scope = 2;
inline bool CGPlayerHangup::has_scope() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGPlayerHangup::set_has_scope() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGPlayerHangup::clear_has_scope() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGPlayerHangup::clear_scope() {
  scope_ = 0;
  clear_has_scope();
}
inline ::google::protobuf::int32 CGPlayerHangup::scope() const {
  // @@protoc_insertion_point(field_get:CGPlayerHangup.scope)
  return scope_;
}
inline void CGPlayerHangup::set_scope(::google::protobuf::int32 value) {
  set_has_scope();
  scope_ = value;
  // @@protoc_insertion_point(field_set:CGPlayerHangup.scope)
}

// optional int32 autoRenorn = 3;
inline bool CGPlayerHangup::has_autorenorn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGPlayerHangup::set_has_autorenorn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGPlayerHangup::clear_has_autorenorn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGPlayerHangup::clear_autorenorn() {
  autorenorn_ = 0;
  clear_has_autorenorn();
}
inline ::google::protobuf::int32 CGPlayerHangup::autorenorn() const {
  // @@protoc_insertion_point(field_get:CGPlayerHangup.autoRenorn)
  return autorenorn_;
}
inline void CGPlayerHangup::set_autorenorn(::google::protobuf::int32 value) {
  set_has_autorenorn();
  autorenorn_ = value;
  // @@protoc_insertion_point(field_set:CGPlayerHangup.autoRenorn)
}

// optional int32 avoiBoss = 4;
inline bool CGPlayerHangup::has_avoiboss() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGPlayerHangup::set_has_avoiboss() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGPlayerHangup::clear_has_avoiboss() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGPlayerHangup::clear_avoiboss() {
  avoiboss_ = 0;
  clear_has_avoiboss();
}
inline ::google::protobuf::int32 CGPlayerHangup::avoiboss() const {
  // @@protoc_insertion_point(field_get:CGPlayerHangup.avoiBoss)
  return avoiboss_;
}
inline void CGPlayerHangup::set_avoiboss(::google::protobuf::int32 value) {
  set_has_avoiboss();
  avoiboss_ = value;
  // @@protoc_insertion_point(field_set:CGPlayerHangup.avoiBoss)
}

// optional int32 attackBack = 5;
inline bool CGPlayerHangup::has_attackback() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGPlayerHangup::set_has_attackback() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGPlayerHangup::clear_has_attackback() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGPlayerHangup::clear_attackback() {
  attackback_ = 0;
  clear_has_attackback();
}
inline ::google::protobuf::int32 CGPlayerHangup::attackback() const {
  // @@protoc_insertion_point(field_get:CGPlayerHangup.attackBack)
  return attackback_;
}
inline void CGPlayerHangup::set_attackback(::google::protobuf::int32 value) {
  set_has_attackback();
  attackback_ = value;
  // @@protoc_insertion_point(field_set:CGPlayerHangup.attackBack)
}

// repeated int32 pickTypeIndexs = 6;
inline int CGPlayerHangup::picktypeindexs_size() const {
  return picktypeindexs_.size();
}
inline void CGPlayerHangup::clear_picktypeindexs() {
  picktypeindexs_.Clear();
}
inline ::google::protobuf::int32 CGPlayerHangup::picktypeindexs(int index) const {
  // @@protoc_insertion_point(field_get:CGPlayerHangup.pickTypeIndexs)
  return picktypeindexs_.Get(index);
}
inline void CGPlayerHangup::set_picktypeindexs(int index, ::google::protobuf::int32 value) {
  picktypeindexs_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGPlayerHangup.pickTypeIndexs)
}
inline void CGPlayerHangup::add_picktypeindexs(::google::protobuf::int32 value) {
  picktypeindexs_.Add(value);
  // @@protoc_insertion_point(field_add:CGPlayerHangup.pickTypeIndexs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CGPlayerHangup::picktypeindexs() const {
  // @@protoc_insertion_point(field_list:CGPlayerHangup.pickTypeIndexs)
  return picktypeindexs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CGPlayerHangup::mutable_picktypeindexs() {
  // @@protoc_insertion_point(field_mutable_list:CGPlayerHangup.pickTypeIndexs)
  return &picktypeindexs_;
}

// repeated int32 pickQuality = 7;
inline int CGPlayerHangup::pickquality_size() const {
  return pickquality_.size();
}
inline void CGPlayerHangup::clear_pickquality() {
  pickquality_.Clear();
}
inline ::google::protobuf::int32 CGPlayerHangup::pickquality(int index) const {
  // @@protoc_insertion_point(field_get:CGPlayerHangup.pickQuality)
  return pickquality_.Get(index);
}
inline void CGPlayerHangup::set_pickquality(int index, ::google::protobuf::int32 value) {
  pickquality_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGPlayerHangup.pickQuality)
}
inline void CGPlayerHangup::add_pickquality(::google::protobuf::int32 value) {
  pickquality_.Add(value);
  // @@protoc_insertion_point(field_add:CGPlayerHangup.pickQuality)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CGPlayerHangup::pickquality() const {
  // @@protoc_insertion_point(field_list:CGPlayerHangup.pickQuality)
  return pickquality_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CGPlayerHangup::mutable_pickquality() {
  // @@protoc_insertion_point(field_mutable_list:CGPlayerHangup.pickQuality)
  return &pickquality_;
}

// repeated int32 autoSkills = 8;
inline int CGPlayerHangup::autoskills_size() const {
  return autoskills_.size();
}
inline void CGPlayerHangup::clear_autoskills() {
  autoskills_.Clear();
}
inline ::google::protobuf::int32 CGPlayerHangup::autoskills(int index) const {
  // @@protoc_insertion_point(field_get:CGPlayerHangup.autoSkills)
  return autoskills_.Get(index);
}
inline void CGPlayerHangup::set_autoskills(int index, ::google::protobuf::int32 value) {
  autoskills_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGPlayerHangup.autoSkills)
}
inline void CGPlayerHangup::add_autoskills(::google::protobuf::int32 value) {
  autoskills_.Add(value);
  // @@protoc_insertion_point(field_add:CGPlayerHangup.autoSkills)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CGPlayerHangup::autoskills() const {
  // @@protoc_insertion_point(field_list:CGPlayerHangup.autoSkills)
  return autoskills_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CGPlayerHangup::mutable_autoskills() {
  // @@protoc_insertion_point(field_mutable_list:CGPlayerHangup.autoSkills)
  return &autoskills_;
}

// -------------------------------------------------------------------

// GCPlayerHangup

// optional int32 result = 1;
inline bool GCPlayerHangup::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPlayerHangup::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPlayerHangup::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPlayerHangup::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCPlayerHangup::result() const {
  // @@protoc_insertion_point(field_get:GCPlayerHangup.result)
  return result_;
}
inline void GCPlayerHangup::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCPlayerHangup.result)
}

// optional int32 open = 2;
inline bool GCPlayerHangup::has_open() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCPlayerHangup::set_has_open() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCPlayerHangup::clear_has_open() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCPlayerHangup::clear_open() {
  open_ = 0;
  clear_has_open();
}
inline ::google::protobuf::int32 GCPlayerHangup::open() const {
  // @@protoc_insertion_point(field_get:GCPlayerHangup.open)
  return open_;
}
inline void GCPlayerHangup::set_open(::google::protobuf::int32 value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:GCPlayerHangup.open)
}

// -------------------------------------------------------------------

// CGSendRotate

// optional int64 objectId = 1;
inline bool CGSendRotate::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSendRotate::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSendRotate::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSendRotate::clear_objectid() {
  objectid_ = GOOGLE_LONGLONG(0);
  clear_has_objectid();
}
inline ::google::protobuf::int64 CGSendRotate::objectid() const {
  // @@protoc_insertion_point(field_get:CGSendRotate.objectId)
  return objectid_;
}
inline void CGSendRotate::set_objectid(::google::protobuf::int64 value) {
  set_has_objectid();
  objectid_ = value;
  // @@protoc_insertion_point(field_set:CGSendRotate.objectId)
}

// optional .Vector3Info rotate = 2;
inline bool CGSendRotate::has_rotate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSendRotate::set_has_rotate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSendRotate::clear_has_rotate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSendRotate::clear_rotate() {
  if (rotate_ != NULL) rotate_->::Vector3Info::Clear();
  clear_has_rotate();
}
inline const ::Vector3Info& CGSendRotate::rotate() const {
  // @@protoc_insertion_point(field_get:CGSendRotate.rotate)
  return rotate_ != NULL ? *rotate_ : *default_instance_->rotate_;
}
inline ::Vector3Info* CGSendRotate::mutable_rotate() {
  set_has_rotate();
  if (rotate_ == NULL) rotate_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGSendRotate.rotate)
  return rotate_;
}
inline ::Vector3Info* CGSendRotate::release_rotate() {
  clear_has_rotate();
  ::Vector3Info* temp = rotate_;
  rotate_ = NULL;
  return temp;
}
inline void CGSendRotate::set_allocated_rotate(::Vector3Info* rotate) {
  delete rotate_;
  rotate_ = rotate;
  if (rotate) {
    set_has_rotate();
  } else {
    clear_has_rotate();
  }
  // @@protoc_insertion_point(field_set_allocated:CGSendRotate.rotate)
}

// -------------------------------------------------------------------

// GCSendRotate

// optional int64 objectId = 1;
inline bool GCSendRotate::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSendRotate::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSendRotate::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSendRotate::clear_objectid() {
  objectid_ = GOOGLE_LONGLONG(0);
  clear_has_objectid();
}
inline ::google::protobuf::int64 GCSendRotate::objectid() const {
  // @@protoc_insertion_point(field_get:GCSendRotate.objectId)
  return objectid_;
}
inline void GCSendRotate::set_objectid(::google::protobuf::int64 value) {
  set_has_objectid();
  objectid_ = value;
  // @@protoc_insertion_point(field_set:GCSendRotate.objectId)
}

// optional .Vector3Info rotate = 2;
inline bool GCSendRotate::has_rotate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSendRotate::set_has_rotate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSendRotate::clear_has_rotate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSendRotate::clear_rotate() {
  if (rotate_ != NULL) rotate_->::Vector3Info::Clear();
  clear_has_rotate();
}
inline const ::Vector3Info& GCSendRotate::rotate() const {
  // @@protoc_insertion_point(field_get:GCSendRotate.rotate)
  return rotate_ != NULL ? *rotate_ : *default_instance_->rotate_;
}
inline ::Vector3Info* GCSendRotate::mutable_rotate() {
  set_has_rotate();
  if (rotate_ == NULL) rotate_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCSendRotate.rotate)
  return rotate_;
}
inline ::Vector3Info* GCSendRotate::release_rotate() {
  clear_has_rotate();
  ::Vector3Info* temp = rotate_;
  rotate_ = NULL;
  return temp;
}
inline void GCSendRotate::set_allocated_rotate(::Vector3Info* rotate) {
  delete rotate_;
  rotate_ = rotate;
  if (rotate) {
    set_has_rotate();
  } else {
    clear_has_rotate();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSendRotate.rotate)
}

// -------------------------------------------------------------------

// CGGetPlaerInfoById

// optional int64 playerID = 1;
inline bool CGGetPlaerInfoById::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetPlaerInfoById::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetPlaerInfoById::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetPlaerInfoById::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CGGetPlaerInfoById::playerid() const {
  // @@protoc_insertion_point(field_get:CGGetPlaerInfoById.playerID)
  return playerid_;
}
inline void CGGetPlaerInfoById::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CGGetPlaerInfoById.playerID)
}

// optional int32 type = 2;
inline bool CGGetPlaerInfoById::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGGetPlaerInfoById::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGGetPlaerInfoById::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGGetPlaerInfoById::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGGetPlaerInfoById::type() const {
  // @@protoc_insertion_point(field_get:CGGetPlaerInfoById.type)
  return type_;
}
inline void CGGetPlaerInfoById::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGGetPlaerInfoById.type)
}

// -------------------------------------------------------------------

// GCSendPlayerInfoById

// optional .CharacterInfo characterInfo = 1;
inline bool GCSendPlayerInfoById::has_characterinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSendPlayerInfoById::set_has_characterinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSendPlayerInfoById::clear_has_characterinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSendPlayerInfoById::clear_characterinfo() {
  if (characterinfo_ != NULL) characterinfo_->::CharacterInfo::Clear();
  clear_has_characterinfo();
}
inline const ::CharacterInfo& GCSendPlayerInfoById::characterinfo() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerInfoById.characterInfo)
  return characterinfo_ != NULL ? *characterinfo_ : *default_instance_->characterinfo_;
}
inline ::CharacterInfo* GCSendPlayerInfoById::mutable_characterinfo() {
  set_has_characterinfo();
  if (characterinfo_ == NULL) characterinfo_ = new ::CharacterInfo;
  // @@protoc_insertion_point(field_mutable:GCSendPlayerInfoById.characterInfo)
  return characterinfo_;
}
inline ::CharacterInfo* GCSendPlayerInfoById::release_characterinfo() {
  clear_has_characterinfo();
  ::CharacterInfo* temp = characterinfo_;
  characterinfo_ = NULL;
  return temp;
}
inline void GCSendPlayerInfoById::set_allocated_characterinfo(::CharacterInfo* characterinfo) {
  delete characterinfo_;
  characterinfo_ = characterinfo;
  if (characterinfo) {
    set_has_characterinfo();
  } else {
    clear_has_characterinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSendPlayerInfoById.characterInfo)
}

// optional int32 type = 2;
inline bool GCSendPlayerInfoById::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSendPlayerInfoById::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSendPlayerInfoById::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSendPlayerInfoById::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCSendPlayerInfoById::type() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerInfoById.type)
  return type_;
}
inline void GCSendPlayerInfoById::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCSendPlayerInfoById.type)
}

// -------------------------------------------------------------------

// GCLevelUpGetNewSkill

// repeated .SkillItemData skilldata = 1;
inline int GCLevelUpGetNewSkill::skilldata_size() const {
  return skilldata_.size();
}
inline void GCLevelUpGetNewSkill::clear_skilldata() {
  skilldata_.Clear();
}
inline const ::SkillItemData& GCLevelUpGetNewSkill::skilldata(int index) const {
  // @@protoc_insertion_point(field_get:GCLevelUpGetNewSkill.skilldata)
  return skilldata_.Get(index);
}
inline ::SkillItemData* GCLevelUpGetNewSkill::mutable_skilldata(int index) {
  // @@protoc_insertion_point(field_mutable:GCLevelUpGetNewSkill.skilldata)
  return skilldata_.Mutable(index);
}
inline ::SkillItemData* GCLevelUpGetNewSkill::add_skilldata() {
  // @@protoc_insertion_point(field_add:GCLevelUpGetNewSkill.skilldata)
  return skilldata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillItemData >&
GCLevelUpGetNewSkill::skilldata() const {
  // @@protoc_insertion_point(field_list:GCLevelUpGetNewSkill.skilldata)
  return skilldata_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillItemData >*
GCLevelUpGetNewSkill::mutable_skilldata() {
  // @@protoc_insertion_point(field_mutable_list:GCLevelUpGetNewSkill.skilldata)
  return &skilldata_;
}

// -------------------------------------------------------------------

// CGGetPlayerAndPetInfo

// optional int64 playerID = 1;
inline bool CGGetPlayerAndPetInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetPlayerAndPetInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetPlayerAndPetInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetPlayerAndPetInfo::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 CGGetPlayerAndPetInfo::playerid() const {
  // @@protoc_insertion_point(field_get:CGGetPlayerAndPetInfo.playerID)
  return playerid_;
}
inline void CGGetPlayerAndPetInfo::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CGGetPlayerAndPetInfo.playerID)
}

// -------------------------------------------------------------------

// GCSendPlayerAndPetInfo

// optional .CharacterInfo characterInfo = 1;
inline bool GCSendPlayerAndPetInfo::has_characterinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSendPlayerAndPetInfo::set_has_characterinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSendPlayerAndPetInfo::clear_has_characterinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSendPlayerAndPetInfo::clear_characterinfo() {
  if (characterinfo_ != NULL) characterinfo_->::CharacterInfo::Clear();
  clear_has_characterinfo();
}
inline const ::CharacterInfo& GCSendPlayerAndPetInfo::characterinfo() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerAndPetInfo.characterInfo)
  return characterinfo_ != NULL ? *characterinfo_ : *default_instance_->characterinfo_;
}
inline ::CharacterInfo* GCSendPlayerAndPetInfo::mutable_characterinfo() {
  set_has_characterinfo();
  if (characterinfo_ == NULL) characterinfo_ = new ::CharacterInfo;
  // @@protoc_insertion_point(field_mutable:GCSendPlayerAndPetInfo.characterInfo)
  return characterinfo_;
}
inline ::CharacterInfo* GCSendPlayerAndPetInfo::release_characterinfo() {
  clear_has_characterinfo();
  ::CharacterInfo* temp = characterinfo_;
  characterinfo_ = NULL;
  return temp;
}
inline void GCSendPlayerAndPetInfo::set_allocated_characterinfo(::CharacterInfo* characterinfo) {
  delete characterinfo_;
  characterinfo_ = characterinfo;
  if (characterinfo) {
    set_has_characterinfo();
  } else {
    clear_has_characterinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSendPlayerAndPetInfo.characterInfo)
}

// optional .PetInfo petInfo = 2;
inline bool GCSendPlayerAndPetInfo::has_petinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSendPlayerAndPetInfo::set_has_petinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSendPlayerAndPetInfo::clear_has_petinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSendPlayerAndPetInfo::clear_petinfo() {
  if (petinfo_ != NULL) petinfo_->::PetInfo::Clear();
  clear_has_petinfo();
}
inline const ::PetInfo& GCSendPlayerAndPetInfo::petinfo() const {
  // @@protoc_insertion_point(field_get:GCSendPlayerAndPetInfo.petInfo)
  return petinfo_ != NULL ? *petinfo_ : *default_instance_->petinfo_;
}
inline ::PetInfo* GCSendPlayerAndPetInfo::mutable_petinfo() {
  set_has_petinfo();
  if (petinfo_ == NULL) petinfo_ = new ::PetInfo;
  // @@protoc_insertion_point(field_mutable:GCSendPlayerAndPetInfo.petInfo)
  return petinfo_;
}
inline ::PetInfo* GCSendPlayerAndPetInfo::release_petinfo() {
  clear_has_petinfo();
  ::PetInfo* temp = petinfo_;
  petinfo_ = NULL;
  return temp;
}
inline void GCSendPlayerAndPetInfo::set_allocated_petinfo(::PetInfo* petinfo) {
  delete petinfo_;
  petinfo_ = petinfo;
  if (petinfo) {
    set_has_petinfo();
  } else {
    clear_has_petinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSendPlayerAndPetInfo.petInfo)
}

// -------------------------------------------------------------------

// CGChangePlayer

// -------------------------------------------------------------------

// GCChangePlayerResult

// optional int32 result = 1;
inline bool GCChangePlayerResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCChangePlayerResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCChangePlayerResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCChangePlayerResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCChangePlayerResult::result() const {
  // @@protoc_insertion_point(field_get:GCChangePlayerResult.result)
  return result_;
}
inline void GCChangePlayerResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCChangePlayerResult.result)
}

// -------------------------------------------------------------------

// GCStressTestBegin

// optional int64 playerId = 1;
inline bool GCStressTestBegin::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCStressTestBegin::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCStressTestBegin::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCStressTestBegin::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 GCStressTestBegin::playerid() const {
  // @@protoc_insertion_point(field_get:GCStressTestBegin.playerId)
  return playerid_;
}
inline void GCStressTestBegin::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:GCStressTestBegin.playerId)
}

// -------------------------------------------------------------------

// CGPlayerViewSetting

// optional int32 maxNum = 1;
inline bool CGPlayerViewSetting::has_maxnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGPlayerViewSetting::set_has_maxnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGPlayerViewSetting::clear_has_maxnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGPlayerViewSetting::clear_maxnum() {
  maxnum_ = 0;
  clear_has_maxnum();
}
inline ::google::protobuf::int32 CGPlayerViewSetting::maxnum() const {
  // @@protoc_insertion_point(field_get:CGPlayerViewSetting.maxNum)
  return maxnum_;
}
inline void CGPlayerViewSetting::set_maxnum(::google::protobuf::int32 value) {
  set_has_maxnum();
  maxnum_ = value;
  // @@protoc_insertion_point(field_set:CGPlayerViewSetting.maxNum)
}

// -------------------------------------------------------------------

// GCPlayerViewSetting

// optional int32 result = 1;
inline bool GCPlayerViewSetting::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPlayerViewSetting::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPlayerViewSetting::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPlayerViewSetting::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCPlayerViewSetting::result() const {
  // @@protoc_insertion_point(field_get:GCPlayerViewSetting.result)
  return result_;
}
inline void GCPlayerViewSetting::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCPlayerViewSetting.result)
}

// optional int32 maxNum = 2;
inline bool GCPlayerViewSetting::has_maxnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCPlayerViewSetting::set_has_maxnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCPlayerViewSetting::clear_has_maxnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCPlayerViewSetting::clear_maxnum() {
  maxnum_ = 0;
  clear_has_maxnum();
}
inline ::google::protobuf::int32 GCPlayerViewSetting::maxnum() const {
  // @@protoc_insertion_point(field_get:GCPlayerViewSetting.maxNum)
  return maxnum_;
}
inline void GCPlayerViewSetting::set_maxnum(::google::protobuf::int32 value) {
  set_has_maxnum();
  maxnum_ = value;
  // @@protoc_insertion_point(field_set:GCPlayerViewSetting.maxNum)
}

// -------------------------------------------------------------------

// CGQuitLogin

// -------------------------------------------------------------------

// GCQuitLoginBack

// optional int32 result = 1;
inline bool GCQuitLoginBack::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCQuitLoginBack::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCQuitLoginBack::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCQuitLoginBack::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCQuitLoginBack::result() const {
  // @@protoc_insertion_point(field_get:GCQuitLoginBack.result)
  return result_;
}
inline void GCQuitLoginBack::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCQuitLoginBack.result)
}

// -------------------------------------------------------------------

// GCMuteTime

// optional int32 flag = 1;
inline bool GCMuteTime::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCMuteTime::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCMuteTime::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCMuteTime::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCMuteTime::flag() const {
  // @@protoc_insertion_point(field_get:GCMuteTime.flag)
  return flag_;
}
inline void GCMuteTime::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCMuteTime.flag)
}

// optional int32 muteTime = 2;
inline bool GCMuteTime::has_mutetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCMuteTime::set_has_mutetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCMuteTime::clear_has_mutetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCMuteTime::clear_mutetime() {
  mutetime_ = 0;
  clear_has_mutetime();
}
inline ::google::protobuf::int32 GCMuteTime::mutetime() const {
  // @@protoc_insertion_point(field_get:GCMuteTime.muteTime)
  return mutetime_;
}
inline void GCMuteTime::set_mutetime(::google::protobuf::int32 value) {
  set_has_mutetime();
  mutetime_ = value;
  // @@protoc_insertion_point(field_set:GCMuteTime.muteTime)
}

// optional int64 muteEndTime = 3;
inline bool GCMuteTime::has_muteendtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCMuteTime::set_has_muteendtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCMuteTime::clear_has_muteendtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCMuteTime::clear_muteendtime() {
  muteendtime_ = GOOGLE_LONGLONG(0);
  clear_has_muteendtime();
}
inline ::google::protobuf::int64 GCMuteTime::muteendtime() const {
  // @@protoc_insertion_point(field_get:GCMuteTime.muteEndTime)
  return muteendtime_;
}
inline void GCMuteTime::set_muteendtime(::google::protobuf::int64 value) {
  set_has_muteendtime();
  muteendtime_ = value;
  // @@protoc_insertion_point(field_set:GCMuteTime.muteEndTime)
}

// -------------------------------------------------------------------

// GameForceLoginout

// optional int64 playerId = 1;
inline bool GameForceLoginout::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameForceLoginout::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameForceLoginout::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameForceLoginout::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 GameForceLoginout::playerid() const {
  // @@protoc_insertion_point(field_get:GameForceLoginout.playerId)
  return playerid_;
}
inline void GameForceLoginout::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:GameForceLoginout.playerId)
}

// optional int32 noticeLoginSvr = 2;
inline bool GameForceLoginout::has_noticeloginsvr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameForceLoginout::set_has_noticeloginsvr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameForceLoginout::clear_has_noticeloginsvr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameForceLoginout::clear_noticeloginsvr() {
  noticeloginsvr_ = 0;
  clear_has_noticeloginsvr();
}
inline ::google::protobuf::int32 GameForceLoginout::noticeloginsvr() const {
  // @@protoc_insertion_point(field_get:GameForceLoginout.noticeLoginSvr)
  return noticeloginsvr_;
}
inline void GameForceLoginout::set_noticeloginsvr(::google::protobuf::int32 value) {
  set_has_noticeloginsvr();
  noticeloginsvr_ = value;
  // @@protoc_insertion_point(field_set:GameForceLoginout.noticeLoginSvr)
}

// optional int32 noticeGateSvr = 3;
inline bool GameForceLoginout::has_noticegatesvr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameForceLoginout::set_has_noticegatesvr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameForceLoginout::clear_has_noticegatesvr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameForceLoginout::clear_noticegatesvr() {
  noticegatesvr_ = 0;
  clear_has_noticegatesvr();
}
inline ::google::protobuf::int32 GameForceLoginout::noticegatesvr() const {
  // @@protoc_insertion_point(field_get:GameForceLoginout.noticeGateSvr)
  return noticegatesvr_;
}
inline void GameForceLoginout::set_noticegatesvr(::google::protobuf::int32 value) {
  set_has_noticegatesvr();
  noticegatesvr_ = value;
  // @@protoc_insertion_point(field_set:GameForceLoginout.noticeGateSvr)
}

// optional int32 reason = 4;
inline bool GameForceLoginout::has_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameForceLoginout::set_has_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameForceLoginout::clear_has_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameForceLoginout::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 GameForceLoginout::reason() const {
  // @@protoc_insertion_point(field_get:GameForceLoginout.reason)
  return reason_;
}
inline void GameForceLoginout::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:GameForceLoginout.reason)
}

// -------------------------------------------------------------------

// GCExpPlus

// optional int32 display = 1;
inline bool GCExpPlus::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCExpPlus::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCExpPlus::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCExpPlus::clear_display() {
  display_ = 0;
  clear_has_display();
}
inline ::google::protobuf::int32 GCExpPlus::display() const {
  // @@protoc_insertion_point(field_get:GCExpPlus.display)
  return display_;
}
inline void GCExpPlus::set_display(::google::protobuf::int32 value) {
  set_has_display();
  display_ = value;
  // @@protoc_insertion_point(field_set:GCExpPlus.display)
}

// optional int32 worldLevel = 2;
inline bool GCExpPlus::has_worldlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCExpPlus::set_has_worldlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCExpPlus::clear_has_worldlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCExpPlus::clear_worldlevel() {
  worldlevel_ = 0;
  clear_has_worldlevel();
}
inline ::google::protobuf::int32 GCExpPlus::worldlevel() const {
  // @@protoc_insertion_point(field_get:GCExpPlus.worldLevel)
  return worldlevel_;
}
inline void GCExpPlus::set_worldlevel(::google::protobuf::int32 value) {
  set_has_worldlevel();
  worldlevel_ = value;
  // @@protoc_insertion_point(field_set:GCExpPlus.worldLevel)
}

// -------------------------------------------------------------------

// GCNonageSts

// optional int32 sts = 1;
inline bool GCNonageSts::has_sts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCNonageSts::set_has_sts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCNonageSts::clear_has_sts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCNonageSts::clear_sts() {
  sts_ = 0;
  clear_has_sts();
}
inline ::google::protobuf::int32 GCNonageSts::sts() const {
  // @@protoc_insertion_point(field_get:GCNonageSts.sts)
  return sts_;
}
inline void GCNonageSts::set_sts(::google::protobuf::int32 value) {
  set_has_sts();
  sts_ = value;
  // @@protoc_insertion_point(field_set:GCNonageSts.sts)
}

// -------------------------------------------------------------------

// CGNeedNonage

// optional int32 sts = 1;
inline bool CGNeedNonage::has_sts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGNeedNonage::set_has_sts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGNeedNonage::clear_has_sts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGNeedNonage::clear_sts() {
  sts_ = 0;
  clear_has_sts();
}
inline ::google::protobuf::int32 CGNeedNonage::sts() const {
  // @@protoc_insertion_point(field_get:CGNeedNonage.sts)
  return sts_;
}
inline void CGNeedNonage::set_sts(::google::protobuf::int32 value) {
  set_has_sts();
  sts_ = value;
  // @@protoc_insertion_point(field_set:CGNeedNonage.sts)
}

// -------------------------------------------------------------------

// GCOnLineTime

// optional int32 senconds = 1;
inline bool GCOnLineTime::has_senconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCOnLineTime::set_has_senconds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCOnLineTime::clear_has_senconds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCOnLineTime::clear_senconds() {
  senconds_ = 0;
  clear_has_senconds();
}
inline ::google::protobuf::int32 GCOnLineTime::senconds() const {
  // @@protoc_insertion_point(field_get:GCOnLineTime.senconds)
  return senconds_;
}
inline void GCOnLineTime::set_senconds(::google::protobuf::int32 value) {
  set_has_senconds();
  senconds_ = value;
  // @@protoc_insertion_point(field_set:GCOnLineTime.senconds)
}

// -------------------------------------------------------------------

// CGAmbitLevelUp

// -------------------------------------------------------------------

// GCAmbitLevelUp

// optional int32 ambitLevel = 1;
inline bool GCAmbitLevelUp::has_ambitlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCAmbitLevelUp::set_has_ambitlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCAmbitLevelUp::clear_has_ambitlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCAmbitLevelUp::clear_ambitlevel() {
  ambitlevel_ = 0;
  clear_has_ambitlevel();
}
inline ::google::protobuf::int32 GCAmbitLevelUp::ambitlevel() const {
  // @@protoc_insertion_point(field_get:GCAmbitLevelUp.ambitLevel)
  return ambitlevel_;
}
inline void GCAmbitLevelUp::set_ambitlevel(::google::protobuf::int32 value) {
  set_has_ambitlevel();
  ambitlevel_ = value;
  // @@protoc_insertion_point(field_set:GCAmbitLevelUp.ambitLevel)
}

// optional int32 ambitStatus = 2;
inline bool GCAmbitLevelUp::has_ambitstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCAmbitLevelUp::set_has_ambitstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCAmbitLevelUp::clear_has_ambitstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCAmbitLevelUp::clear_ambitstatus() {
  ambitstatus_ = 0;
  clear_has_ambitstatus();
}
inline ::google::protobuf::int32 GCAmbitLevelUp::ambitstatus() const {
  // @@protoc_insertion_point(field_get:GCAmbitLevelUp.ambitStatus)
  return ambitstatus_;
}
inline void GCAmbitLevelUp::set_ambitstatus(::google::protobuf::int32 value) {
  set_has_ambitstatus();
  ambitstatus_ = value;
  // @@protoc_insertion_point(field_set:GCAmbitLevelUp.ambitStatus)
}

// -------------------------------------------------------------------

// GCPrivatePlayerAttr

// repeated .CharacterAttr charAttr = 1;
inline int GCPrivatePlayerAttr::charattr_size() const {
  return charattr_.size();
}
inline void GCPrivatePlayerAttr::clear_charattr() {
  charattr_.Clear();
}
inline const ::CharacterAttr& GCPrivatePlayerAttr::charattr(int index) const {
  // @@protoc_insertion_point(field_get:GCPrivatePlayerAttr.charAttr)
  return charattr_.Get(index);
}
inline ::CharacterAttr* GCPrivatePlayerAttr::mutable_charattr(int index) {
  // @@protoc_insertion_point(field_mutable:GCPrivatePlayerAttr.charAttr)
  return charattr_.Mutable(index);
}
inline ::CharacterAttr* GCPrivatePlayerAttr::add_charattr() {
  // @@protoc_insertion_point(field_add:GCPrivatePlayerAttr.charAttr)
  return charattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CharacterAttr >&
GCPrivatePlayerAttr::charattr() const {
  // @@protoc_insertion_point(field_list:GCPrivatePlayerAttr.charAttr)
  return charattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CharacterAttr >*
GCPrivatePlayerAttr::mutable_charattr() {
  // @@protoc_insertion_point(field_mutable_list:GCPrivatePlayerAttr.charAttr)
  return &charattr_;
}

// -------------------------------------------------------------------

// CGUnLock

// -------------------------------------------------------------------

// CGLookPlayerInfo

// optional int64 pid = 1;
inline bool CGLookPlayerInfo::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGLookPlayerInfo::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGLookPlayerInfo::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGLookPlayerInfo::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGLookPlayerInfo::pid() const {
  // @@protoc_insertion_point(field_get:CGLookPlayerInfo.pid)
  return pid_;
}
inline void CGLookPlayerInfo::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGLookPlayerInfo.pid)
}

// -------------------------------------------------------------------

// GCLookPlayerInfo

// optional .CharacterInfo playerInfo = 1;
inline bool GCLookPlayerInfo::has_playerinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCLookPlayerInfo::set_has_playerinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCLookPlayerInfo::clear_has_playerinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCLookPlayerInfo::clear_playerinfo() {
  if (playerinfo_ != NULL) playerinfo_->::CharacterInfo::Clear();
  clear_has_playerinfo();
}
inline const ::CharacterInfo& GCLookPlayerInfo::playerinfo() const {
  // @@protoc_insertion_point(field_get:GCLookPlayerInfo.playerInfo)
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance_->playerinfo_;
}
inline ::CharacterInfo* GCLookPlayerInfo::mutable_playerinfo() {
  set_has_playerinfo();
  if (playerinfo_ == NULL) playerinfo_ = new ::CharacterInfo;
  // @@protoc_insertion_point(field_mutable:GCLookPlayerInfo.playerInfo)
  return playerinfo_;
}
inline ::CharacterInfo* GCLookPlayerInfo::release_playerinfo() {
  clear_has_playerinfo();
  ::CharacterInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
inline void GCLookPlayerInfo::set_allocated_playerinfo(::CharacterInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    set_has_playerinfo();
  } else {
    clear_has_playerinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCLookPlayerInfo.playerInfo)
}

// repeated .EquipSlots equipSlots = 2;
inline int GCLookPlayerInfo::equipslots_size() const {
  return equipslots_.size();
}
inline void GCLookPlayerInfo::clear_equipslots() {
  equipslots_.Clear();
}
inline const ::EquipSlots& GCLookPlayerInfo::equipslots(int index) const {
  // @@protoc_insertion_point(field_get:GCLookPlayerInfo.equipSlots)
  return equipslots_.Get(index);
}
inline ::EquipSlots* GCLookPlayerInfo::mutable_equipslots(int index) {
  // @@protoc_insertion_point(field_mutable:GCLookPlayerInfo.equipSlots)
  return equipslots_.Mutable(index);
}
inline ::EquipSlots* GCLookPlayerInfo::add_equipslots() {
  // @@protoc_insertion_point(field_add:GCLookPlayerInfo.equipSlots)
  return equipslots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipSlots >&
GCLookPlayerInfo::equipslots() const {
  // @@protoc_insertion_point(field_list:GCLookPlayerInfo.equipSlots)
  return equipslots_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipSlots >*
GCLookPlayerInfo::mutable_equipslots() {
  // @@protoc_insertion_point(field_mutable_list:GCLookPlayerInfo.equipSlots)
  return &equipslots_;
}

// repeated .SpiritBeastInfo sbInfo = 3;
inline int GCLookPlayerInfo::sbinfo_size() const {
  return sbinfo_.size();
}
inline void GCLookPlayerInfo::clear_sbinfo() {
  sbinfo_.Clear();
}
inline const ::SpiritBeastInfo& GCLookPlayerInfo::sbinfo(int index) const {
  // @@protoc_insertion_point(field_get:GCLookPlayerInfo.sbInfo)
  return sbinfo_.Get(index);
}
inline ::SpiritBeastInfo* GCLookPlayerInfo::mutable_sbinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GCLookPlayerInfo.sbInfo)
  return sbinfo_.Mutable(index);
}
inline ::SpiritBeastInfo* GCLookPlayerInfo::add_sbinfo() {
  // @@protoc_insertion_point(field_add:GCLookPlayerInfo.sbInfo)
  return sbinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo >&
GCLookPlayerInfo::sbinfo() const {
  // @@protoc_insertion_point(field_list:GCLookPlayerInfo.sbInfo)
  return sbinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo >*
GCLookPlayerInfo::mutable_sbinfo() {
  // @@protoc_insertion_point(field_mutable_list:GCLookPlayerInfo.sbInfo)
  return &sbinfo_;
}

// repeated .TalismanSlotsLook talisSlots = 4;
inline int GCLookPlayerInfo::talisslots_size() const {
  return talisslots_.size();
}
inline void GCLookPlayerInfo::clear_talisslots() {
  talisslots_.Clear();
}
inline const ::TalismanSlotsLook& GCLookPlayerInfo::talisslots(int index) const {
  // @@protoc_insertion_point(field_get:GCLookPlayerInfo.talisSlots)
  return talisslots_.Get(index);
}
inline ::TalismanSlotsLook* GCLookPlayerInfo::mutable_talisslots(int index) {
  // @@protoc_insertion_point(field_mutable:GCLookPlayerInfo.talisSlots)
  return talisslots_.Mutable(index);
}
inline ::TalismanSlotsLook* GCLookPlayerInfo::add_talisslots() {
  // @@protoc_insertion_point(field_add:GCLookPlayerInfo.talisSlots)
  return talisslots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TalismanSlotsLook >&
GCLookPlayerInfo::talisslots() const {
  // @@protoc_insertion_point(field_list:GCLookPlayerInfo.talisSlots)
  return talisslots_;
}
inline ::google::protobuf::RepeatedPtrField< ::TalismanSlotsLook >*
GCLookPlayerInfo::mutable_talisslots() {
  // @@protoc_insertion_point(field_mutable_list:GCLookPlayerInfo.talisSlots)
  return &talisslots_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PlayerMessage_2eproto__INCLUDED
