// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SceneMessage.proto

#ifndef PROTOBUF_SceneMessage_2eproto__INCLUDED
#define PROTOBUF_SceneMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "InnerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SceneMessage_2eproto();
void protobuf_AssignDesc_SceneMessage_2eproto();
void protobuf_ShutdownFile_SceneMessage_2eproto();

class CGEnterScene;
class GCEnterScene;
class CGEnterSceneOk;
class GCEnterSceneOk;
class GCCharacterObjsInView;
class GCDelObjInSceneBack;
class GCCharObjDieBack;
class CGSendMove;
class GCSendMove;
class CGStopMove;
class GCStopMove;
class GCRefreshPlayerAttr;
class CGFly;
class CGSynPlayerPos;
class CGChangeAttackState;
class GCPutDeviceInfo;
class GCRefreshDeviceInfo;
class CGGetherDevice;
class GCPickDevice;
class GCShowHideObjInSceneBack;
class GCRefreshTrapData;
class GCTrapItemStartMove;
class CharacterHurtInfo;
class GCRefreshCharacterHurtInfo;
class GCDelCharacterHurtInfo;
class CGTeleport;
class GCTeleport;
class CGMoveInJog;
class GGEnterExistScene;
class GGLeaveScene;
class GCCharacterChangeMotion;
class GCSyncCharacterPos;
class GCCharacterRelation;
class GCSyncCharacterRelation;
class CGCommonGetherDevice;

// ===================================================================

class CGEnterScene : public ::google::protobuf::Message {
 public:
  CGEnterScene();
  virtual ~CGEnterScene();

  CGEnterScene(const CGEnterScene& from);

  inline CGEnterScene& operator=(const CGEnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGEnterScene& default_instance();

  void Swap(CGEnterScene* other);

  // implements Message ----------------------------------------------

  CGEnterScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGEnterScene& from);
  void MergeFrom(const CGEnterScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // optional .Vector3Info pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::Vector3Info& pos() const;
  inline ::Vector3Info* mutable_pos();
  inline ::Vector3Info* release_pos();
  inline void set_allocated_pos(::Vector3Info* pos);

  // optional .Vector3Info direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline const ::Vector3Info& direction() const;
  inline ::Vector3Info* mutable_direction();
  inline ::Vector3Info* release_direction();
  inline void set_allocated_direction(::Vector3Info* direction);

  // optional int32 notBackGCEnterScene = 4;
  inline bool has_notbackgcenterscene() const;
  inline void clear_notbackgcenterscene();
  static const int kNotBackGCEnterSceneFieldNumber = 4;
  inline ::google::protobuf::int32 notbackgcenterscene() const;
  inline void set_notbackgcenterscene(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGEnterScene)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_notbackgcenterscene();
  inline void clear_has_notbackgcenterscene();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Vector3Info* pos_;
  ::google::protobuf::int32 sceneid_;
  ::google::protobuf::int32 notbackgcenterscene_;
  ::Vector3Info* direction_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static CGEnterScene* default_instance_;
};
// -------------------------------------------------------------------

class GCEnterScene : public ::google::protobuf::Message {
 public:
  GCEnterScene();
  virtual ~GCEnterScene();

  GCEnterScene(const GCEnterScene& from);

  inline GCEnterScene& operator=(const GCEnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCEnterScene& default_instance();

  void Swap(GCEnterScene* other);

  // implements Message ----------------------------------------------

  GCEnterScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCEnterScene& from);
  void MergeFrom(const GCEnterScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // optional int32 reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCEnterScene)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sceneid_;
  ::google::protobuf::int32 reason_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCEnterScene* default_instance_;
};
// -------------------------------------------------------------------

class CGEnterSceneOk : public ::google::protobuf::Message {
 public:
  CGEnterSceneOk();
  virtual ~CGEnterSceneOk();

  CGEnterSceneOk(const CGEnterSceneOk& from);

  inline CGEnterSceneOk& operator=(const CGEnterSceneOk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGEnterSceneOk& default_instance();

  void Swap(CGEnterSceneOk* other);

  // implements Message ----------------------------------------------

  CGEnterSceneOk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGEnterSceneOk& from);
  void MergeFrom(const CGEnterSceneOk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGEnterSceneOk)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static CGEnterSceneOk* default_instance_;
};
// -------------------------------------------------------------------

class GCEnterSceneOk : public ::google::protobuf::Message {
 public:
  GCEnterSceneOk();
  virtual ~GCEnterSceneOk();

  GCEnterSceneOk(const GCEnterSceneOk& from);

  inline GCEnterSceneOk& operator=(const GCEnterSceneOk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCEnterSceneOk& default_instance();

  void Swap(GCEnterSceneOk* other);

  // implements Message ----------------------------------------------

  GCEnterSceneOk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCEnterSceneOk& from);
  void MergeFrom(const GCEnterSceneOk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCEnterSceneOk)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCEnterSceneOk* default_instance_;
};
// -------------------------------------------------------------------

class GCCharacterObjsInView : public ::google::protobuf::Message {
 public:
  GCCharacterObjsInView();
  virtual ~GCCharacterObjsInView();

  GCCharacterObjsInView(const GCCharacterObjsInView& from);

  inline GCCharacterObjsInView& operator=(const GCCharacterObjsInView& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCharacterObjsInView& default_instance();

  void Swap(GCCharacterObjsInView* other);

  // implements Message ----------------------------------------------

  GCCharacterObjsInView* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCharacterObjsInView& from);
  void MergeFrom(const GCCharacterObjsInView& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CharacterInfo characterObjs = 1;
  inline int characterobjs_size() const;
  inline void clear_characterobjs();
  static const int kCharacterObjsFieldNumber = 1;
  inline const ::CharacterInfo& characterobjs(int index) const;
  inline ::CharacterInfo* mutable_characterobjs(int index);
  inline ::CharacterInfo* add_characterobjs();
  inline const ::google::protobuf::RepeatedPtrField< ::CharacterInfo >&
      characterobjs() const;
  inline ::google::protobuf::RepeatedPtrField< ::CharacterInfo >*
      mutable_characterobjs();

  // @@protoc_insertion_point(class_scope:GCCharacterObjsInView)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CharacterInfo > characterobjs_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCharacterObjsInView* default_instance_;
};
// -------------------------------------------------------------------

class GCDelObjInSceneBack : public ::google::protobuf::Message {
 public:
  GCDelObjInSceneBack();
  virtual ~GCDelObjInSceneBack();

  GCDelObjInSceneBack(const GCDelObjInSceneBack& from);

  inline GCDelObjInSceneBack& operator=(const GCDelObjInSceneBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDelObjInSceneBack& default_instance();

  void Swap(GCDelObjInSceneBack* other);

  // implements Message ----------------------------------------------

  GCDelObjInSceneBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDelObjInSceneBack& from);
  void MergeFrom(const GCDelObjInSceneBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 objIds = 1;
  inline int objids_size() const;
  inline void clear_objids();
  static const int kObjIdsFieldNumber = 1;
  inline ::google::protobuf::int64 objids(int index) const;
  inline void set_objids(int index, ::google::protobuf::int64 value);
  inline void add_objids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      objids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_objids();

  // @@protoc_insertion_point(class_scope:GCDelObjInSceneBack)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > objids_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDelObjInSceneBack* default_instance_;
};
// -------------------------------------------------------------------

class GCCharObjDieBack : public ::google::protobuf::Message {
 public:
  GCCharObjDieBack();
  virtual ~GCCharObjDieBack();

  GCCharObjDieBack(const GCCharObjDieBack& from);

  inline GCCharObjDieBack& operator=(const GCCharObjDieBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCharObjDieBack& default_instance();

  void Swap(GCCharObjDieBack* other);

  // implements Message ----------------------------------------------

  GCCharObjDieBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCharObjDieBack& from);
  void MergeFrom(const GCCharObjDieBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 objIds = 1;
  inline int objids_size() const;
  inline void clear_objids();
  static const int kObjIdsFieldNumber = 1;
  inline ::google::protobuf::int64 objids(int index) const;
  inline void set_objids(int index, ::google::protobuf::int64 value);
  inline void add_objids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      objids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_objids();

  // @@protoc_insertion_point(class_scope:GCCharObjDieBack)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > objids_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCharObjDieBack* default_instance_;
};
// -------------------------------------------------------------------

class CGSendMove : public ::google::protobuf::Message {
 public:
  CGSendMove();
  virtual ~CGSendMove();

  CGSendMove(const CGSendMove& from);

  inline CGSendMove& operator=(const CGSendMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSendMove& default_instance();

  void Swap(CGSendMove* other);

  // implements Message ----------------------------------------------

  CGSendMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSendMove& from);
  void MergeFrom(const CGSendMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Vector3Info startPos = 1;
  inline bool has_startpos() const;
  inline void clear_startpos();
  static const int kStartPosFieldNumber = 1;
  inline const ::Vector3Info& startpos() const;
  inline ::Vector3Info* mutable_startpos();
  inline ::Vector3Info* release_startpos();
  inline void set_allocated_startpos(::Vector3Info* startpos);

  // repeated .Vector3Info targetPos = 2;
  inline int targetpos_size() const;
  inline void clear_targetpos();
  static const int kTargetPosFieldNumber = 2;
  inline const ::Vector3Info& targetpos(int index) const;
  inline ::Vector3Info* mutable_targetpos(int index);
  inline ::Vector3Info* add_targetpos();
  inline const ::google::protobuf::RepeatedPtrField< ::Vector3Info >&
      targetpos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Vector3Info >*
      mutable_targetpos();

  // optional int64 clientTime = 3;
  inline bool has_clienttime() const;
  inline void clear_clienttime();
  static const int kClientTimeFieldNumber = 3;
  inline ::google::protobuf::int64 clienttime() const;
  inline void set_clienttime(::google::protobuf::int64 value);

  // optional int32 flyHeight = 4;
  inline bool has_flyheight() const;
  inline void clear_flyheight();
  static const int kFlyHeightFieldNumber = 4;
  inline ::google::protobuf::int32 flyheight() const;
  inline void set_flyheight(::google::protobuf::int32 value);

  // optional int32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 speed = 6;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 6;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // optional int32 flow = 7;
  inline bool has_flow() const;
  inline void clear_flow();
  static const int kFlowFieldNumber = 7;
  inline ::google::protobuf::int32 flow() const;
  inline void set_flow(::google::protobuf::int32 value);

  // optional int64 objectId = 8;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectIdFieldNumber = 8;
  inline ::google::protobuf::int64 objectid() const;
  inline void set_objectid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGSendMove)
 private:
  inline void set_has_startpos();
  inline void clear_has_startpos();
  inline void set_has_clienttime();
  inline void clear_has_clienttime();
  inline void set_has_flyheight();
  inline void clear_has_flyheight();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_flow();
  inline void clear_has_flow();
  inline void set_has_objectid();
  inline void clear_has_objectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Vector3Info* startpos_;
  ::google::protobuf::RepeatedPtrField< ::Vector3Info > targetpos_;
  ::google::protobuf::int64 clienttime_;
  ::google::protobuf::int32 flyheight_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 flow_;
  ::google::protobuf::int64 objectid_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSendMove* default_instance_;
};
// -------------------------------------------------------------------

class GCSendMove : public ::google::protobuf::Message {
 public:
  GCSendMove();
  virtual ~GCSendMove();

  GCSendMove(const GCSendMove& from);

  inline GCSendMove& operator=(const GCSendMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendMove& default_instance();

  void Swap(GCSendMove* other);

  // implements Message ----------------------------------------------

  GCSendMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendMove& from);
  void MergeFrom(const GCSendMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Vector3Info startPos = 1;
  inline bool has_startpos() const;
  inline void clear_startpos();
  static const int kStartPosFieldNumber = 1;
  inline const ::Vector3Info& startpos() const;
  inline ::Vector3Info* mutable_startpos();
  inline ::Vector3Info* release_startpos();
  inline void set_allocated_startpos(::Vector3Info* startpos);

  // repeated .Vector3Info targetPos = 2;
  inline int targetpos_size() const;
  inline void clear_targetpos();
  static const int kTargetPosFieldNumber = 2;
  inline const ::Vector3Info& targetpos(int index) const;
  inline ::Vector3Info* mutable_targetpos(int index);
  inline ::Vector3Info* add_targetpos();
  inline const ::google::protobuf::RepeatedPtrField< ::Vector3Info >&
      targetpos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Vector3Info >*
      mutable_targetpos();

  // optional int64 objectId = 3;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectIdFieldNumber = 3;
  inline ::google::protobuf::int64 objectid() const;
  inline void set_objectid(::google::protobuf::int64 value);

  // optional int64 startMoveTime = 4;
  inline bool has_startmovetime() const;
  inline void clear_startmovetime();
  static const int kStartMoveTimeFieldNumber = 4;
  inline ::google::protobuf::int64 startmovetime() const;
  inline void set_startmovetime(::google::protobuf::int64 value);

  // optional int32 flyHeight = 5;
  inline bool has_flyheight() const;
  inline void clear_flyheight();
  static const int kFlyHeightFieldNumber = 5;
  inline ::google::protobuf::int32 flyheight() const;
  inline void set_flyheight(::google::protobuf::int32 value);

  // optional int32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 speed = 7;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 7;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // optional int32 flow = 8;
  inline bool has_flow() const;
  inline void clear_flow();
  static const int kFlowFieldNumber = 8;
  inline ::google::protobuf::int32 flow() const;
  inline void set_flow(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCSendMove)
 private:
  inline void set_has_startpos();
  inline void clear_has_startpos();
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_startmovetime();
  inline void clear_has_startmovetime();
  inline void set_has_flyheight();
  inline void clear_has_flyheight();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_flow();
  inline void clear_has_flow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Vector3Info* startpos_;
  ::google::protobuf::RepeatedPtrField< ::Vector3Info > targetpos_;
  ::google::protobuf::int64 objectid_;
  ::google::protobuf::int64 startmovetime_;
  ::google::protobuf::int32 flyheight_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 flow_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendMove* default_instance_;
};
// -------------------------------------------------------------------

class CGStopMove : public ::google::protobuf::Message {
 public:
  CGStopMove();
  virtual ~CGStopMove();

  CGStopMove(const CGStopMove& from);

  inline CGStopMove& operator=(const CGStopMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGStopMove& default_instance();

  void Swap(CGStopMove* other);

  // implements Message ----------------------------------------------

  CGStopMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGStopMove& from);
  void MergeFrom(const CGStopMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Vector3Info stopPosition = 1;
  inline bool has_stopposition() const;
  inline void clear_stopposition();
  static const int kStopPositionFieldNumber = 1;
  inline const ::Vector3Info& stopposition() const;
  inline ::Vector3Info* mutable_stopposition();
  inline ::Vector3Info* release_stopposition();
  inline void set_allocated_stopposition(::Vector3Info* stopposition);

  // optional .Vector3Info dirPosition = 2;
  inline bool has_dirposition() const;
  inline void clear_dirposition();
  static const int kDirPositionFieldNumber = 2;
  inline const ::Vector3Info& dirposition() const;
  inline ::Vector3Info* mutable_dirposition();
  inline ::Vector3Info* release_dirposition();
  inline void set_allocated_dirposition(::Vector3Info* dirposition);

  // optional int32 flyHeight = 3;
  inline bool has_flyheight() const;
  inline void clear_flyheight();
  static const int kFlyHeightFieldNumber = 3;
  inline ::google::protobuf::int32 flyheight() const;
  inline void set_flyheight(::google::protobuf::int32 value);

  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 objectId = 5;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectIdFieldNumber = 5;
  inline ::google::protobuf::int64 objectid() const;
  inline void set_objectid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGStopMove)
 private:
  inline void set_has_stopposition();
  inline void clear_has_stopposition();
  inline void set_has_dirposition();
  inline void clear_has_dirposition();
  inline void set_has_flyheight();
  inline void clear_has_flyheight();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_objectid();
  inline void clear_has_objectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Vector3Info* stopposition_;
  ::Vector3Info* dirposition_;
  ::google::protobuf::int32 flyheight_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 objectid_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static CGStopMove* default_instance_;
};
// -------------------------------------------------------------------

class GCStopMove : public ::google::protobuf::Message {
 public:
  GCStopMove();
  virtual ~GCStopMove();

  GCStopMove(const GCStopMove& from);

  inline GCStopMove& operator=(const GCStopMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCStopMove& default_instance();

  void Swap(GCStopMove* other);

  // implements Message ----------------------------------------------

  GCStopMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCStopMove& from);
  void MergeFrom(const GCStopMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objectId = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::int64 objectid() const;
  inline void set_objectid(::google::protobuf::int64 value);

  // optional .Vector3Info stopPosition = 2;
  inline bool has_stopposition() const;
  inline void clear_stopposition();
  static const int kStopPositionFieldNumber = 2;
  inline const ::Vector3Info& stopposition() const;
  inline ::Vector3Info* mutable_stopposition();
  inline ::Vector3Info* release_stopposition();
  inline void set_allocated_stopposition(::Vector3Info* stopposition);

  // optional .Vector3Info dirPosition = 3;
  inline bool has_dirposition() const;
  inline void clear_dirposition();
  static const int kDirPositionFieldNumber = 3;
  inline const ::Vector3Info& dirposition() const;
  inline ::Vector3Info* mutable_dirposition();
  inline ::Vector3Info* release_dirposition();
  inline void set_allocated_dirposition(::Vector3Info* dirposition);

  // optional int32 flyHeight = 4;
  inline bool has_flyheight() const;
  inline void clear_flyheight();
  static const int kFlyHeightFieldNumber = 4;
  inline ::google::protobuf::int32 flyheight() const;
  inline void set_flyheight(::google::protobuf::int32 value);

  // optional int32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCStopMove)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_stopposition();
  inline void clear_has_stopposition();
  inline void set_has_dirposition();
  inline void clear_has_dirposition();
  inline void set_has_flyheight();
  inline void clear_has_flyheight();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objectid_;
  ::Vector3Info* stopposition_;
  ::Vector3Info* dirposition_;
  ::google::protobuf::int32 flyheight_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCStopMove* default_instance_;
};
// -------------------------------------------------------------------

class GCRefreshPlayerAttr : public ::google::protobuf::Message {
 public:
  GCRefreshPlayerAttr();
  virtual ~GCRefreshPlayerAttr();

  GCRefreshPlayerAttr(const GCRefreshPlayerAttr& from);

  inline GCRefreshPlayerAttr& operator=(const GCRefreshPlayerAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRefreshPlayerAttr& default_instance();

  void Swap(GCRefreshPlayerAttr* other);

  // implements Message ----------------------------------------------

  GCRefreshPlayerAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRefreshPlayerAttr& from);
  void MergeFrom(const GCRefreshPlayerAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CharacterInfo mySelf = 1;
  inline bool has_myself() const;
  inline void clear_myself();
  static const int kMySelfFieldNumber = 1;
  inline const ::CharacterInfo& myself() const;
  inline ::CharacterInfo* mutable_myself();
  inline ::CharacterInfo* release_myself();
  inline void set_allocated_myself(::CharacterInfo* myself);

  // @@protoc_insertion_point(class_scope:GCRefreshPlayerAttr)
 private:
  inline void set_has_myself();
  inline void clear_has_myself();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CharacterInfo* myself_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRefreshPlayerAttr* default_instance_;
};
// -------------------------------------------------------------------

class CGFly : public ::google::protobuf::Message {
 public:
  CGFly();
  virtual ~CGFly();

  CGFly(const CGFly& from);

  inline CGFly& operator=(const CGFly& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGFly& default_instance();

  void Swap(CGFly* other);

  // implements Message ----------------------------------------------

  CGFly* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGFly& from);
  void MergeFrom(const CGFly& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGFly)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static CGFly* default_instance_;
};
// -------------------------------------------------------------------

class CGSynPlayerPos : public ::google::protobuf::Message {
 public:
  CGSynPlayerPos();
  virtual ~CGSynPlayerPos();

  CGSynPlayerPos(const CGSynPlayerPos& from);

  inline CGSynPlayerPos& operator=(const CGSynPlayerPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSynPlayerPos& default_instance();

  void Swap(CGSynPlayerPos* other);

  // implements Message ----------------------------------------------

  CGSynPlayerPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSynPlayerPos& from);
  void MergeFrom(const CGSynPlayerPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Vector3Info position = 1;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 1;
  inline const ::Vector3Info& position() const;
  inline ::Vector3Info* mutable_position();
  inline ::Vector3Info* release_position();
  inline void set_allocated_position(::Vector3Info* position);

  // optional .Vector3Info dirPosition = 2;
  inline bool has_dirposition() const;
  inline void clear_dirposition();
  static const int kDirPositionFieldNumber = 2;
  inline const ::Vector3Info& dirposition() const;
  inline ::Vector3Info* mutable_dirposition();
  inline ::Vector3Info* release_dirposition();
  inline void set_allocated_dirposition(::Vector3Info* dirposition);

  // @@protoc_insertion_point(class_scope:CGSynPlayerPos)
 private:
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_dirposition();
  inline void clear_has_dirposition();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Vector3Info* position_;
  ::Vector3Info* dirposition_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSynPlayerPos* default_instance_;
};
// -------------------------------------------------------------------

class CGChangeAttackState : public ::google::protobuf::Message {
 public:
  CGChangeAttackState();
  virtual ~CGChangeAttackState();

  CGChangeAttackState(const CGChangeAttackState& from);

  inline CGChangeAttackState& operator=(const CGChangeAttackState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGChangeAttackState& default_instance();

  void Swap(CGChangeAttackState* other);

  // implements Message ----------------------------------------------

  CGChangeAttackState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGChangeAttackState& from);
  void MergeFrom(const CGChangeAttackState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGChangeAttackState)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static CGChangeAttackState* default_instance_;
};
// -------------------------------------------------------------------

class GCPutDeviceInfo : public ::google::protobuf::Message {
 public:
  GCPutDeviceInfo();
  virtual ~GCPutDeviceInfo();

  GCPutDeviceInfo(const GCPutDeviceInfo& from);

  inline GCPutDeviceInfo& operator=(const GCPutDeviceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPutDeviceInfo& default_instance();

  void Swap(GCPutDeviceInfo* other);

  // implements Message ----------------------------------------------

  GCPutDeviceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPutDeviceInfo& from);
  void MergeFrom(const GCPutDeviceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DeviceInfo deviceInfo = 1;
  inline int deviceinfo_size() const;
  inline void clear_deviceinfo();
  static const int kDeviceInfoFieldNumber = 1;
  inline const ::DeviceInfo& deviceinfo(int index) const;
  inline ::DeviceInfo* mutable_deviceinfo(int index);
  inline ::DeviceInfo* add_deviceinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::DeviceInfo >&
      deviceinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::DeviceInfo >*
      mutable_deviceinfo();

  // @@protoc_insertion_point(class_scope:GCPutDeviceInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DeviceInfo > deviceinfo_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPutDeviceInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCRefreshDeviceInfo : public ::google::protobuf::Message {
 public:
  GCRefreshDeviceInfo();
  virtual ~GCRefreshDeviceInfo();

  GCRefreshDeviceInfo(const GCRefreshDeviceInfo& from);

  inline GCRefreshDeviceInfo& operator=(const GCRefreshDeviceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRefreshDeviceInfo& default_instance();

  void Swap(GCRefreshDeviceInfo* other);

  // implements Message ----------------------------------------------

  GCRefreshDeviceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRefreshDeviceInfo& from);
  void MergeFrom(const GCRefreshDeviceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DeviceInfo deviceInfo = 1;
  inline bool has_deviceinfo() const;
  inline void clear_deviceinfo();
  static const int kDeviceInfoFieldNumber = 1;
  inline const ::DeviceInfo& deviceinfo() const;
  inline ::DeviceInfo* mutable_deviceinfo();
  inline ::DeviceInfo* release_deviceinfo();
  inline void set_allocated_deviceinfo(::DeviceInfo* deviceinfo);

  // @@protoc_insertion_point(class_scope:GCRefreshDeviceInfo)
 private:
  inline void set_has_deviceinfo();
  inline void clear_has_deviceinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DeviceInfo* deviceinfo_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRefreshDeviceInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGGetherDevice : public ::google::protobuf::Message {
 public:
  CGGetherDevice();
  virtual ~CGGetherDevice();

  CGGetherDevice(const CGGetherDevice& from);

  inline CGGetherDevice& operator=(const CGGetherDevice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetherDevice& default_instance();

  void Swap(CGGetherDevice* other);

  // implements Message ----------------------------------------------

  CGGetherDevice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetherDevice& from);
  void MergeFrom(const CGGetherDevice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGGetherDevice)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetherDevice* default_instance_;
};
// -------------------------------------------------------------------

class GCPickDevice : public ::google::protobuf::Message {
 public:
  GCPickDevice();
  virtual ~GCPickDevice();

  GCPickDevice(const GCPickDevice& from);

  inline GCPickDevice& operator=(const GCPickDevice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPickDevice& default_instance();

  void Swap(GCPickDevice* other);

  // implements Message ----------------------------------------------

  GCPickDevice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPickDevice& from);
  void MergeFrom(const GCPickDevice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 objIds = 1;
  inline int objids_size() const;
  inline void clear_objids();
  static const int kObjIdsFieldNumber = 1;
  inline ::google::protobuf::int64 objids(int index) const;
  inline void set_objids(int index, ::google::protobuf::int64 value);
  inline void add_objids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      objids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_objids();

  // @@protoc_insertion_point(class_scope:GCPickDevice)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > objids_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPickDevice* default_instance_;
};
// -------------------------------------------------------------------

class GCShowHideObjInSceneBack : public ::google::protobuf::Message {
 public:
  GCShowHideObjInSceneBack();
  virtual ~GCShowHideObjInSceneBack();

  GCShowHideObjInSceneBack(const GCShowHideObjInSceneBack& from);

  inline GCShowHideObjInSceneBack& operator=(const GCShowHideObjInSceneBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCShowHideObjInSceneBack& default_instance();

  void Swap(GCShowHideObjInSceneBack* other);

  // implements Message ----------------------------------------------

  GCShowHideObjInSceneBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCShowHideObjInSceneBack& from);
  void MergeFrom(const GCShowHideObjInSceneBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated int64 objIds = 2;
  inline int objids_size() const;
  inline void clear_objids();
  static const int kObjIdsFieldNumber = 2;
  inline ::google::protobuf::int64 objids(int index) const;
  inline void set_objids(int index, ::google::protobuf::int64 value);
  inline void add_objids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      objids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_objids();

  // @@protoc_insertion_point(class_scope:GCShowHideObjInSceneBack)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > objids_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCShowHideObjInSceneBack* default_instance_;
};
// -------------------------------------------------------------------

class GCRefreshTrapData : public ::google::protobuf::Message {
 public:
  GCRefreshTrapData();
  virtual ~GCRefreshTrapData();

  GCRefreshTrapData(const GCRefreshTrapData& from);

  inline GCRefreshTrapData& operator=(const GCRefreshTrapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRefreshTrapData& default_instance();

  void Swap(GCRefreshTrapData* other);

  // implements Message ----------------------------------------------

  GCRefreshTrapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRefreshTrapData& from);
  void MergeFrom(const GCRefreshTrapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TrapData trapData = 1;
  inline int trapdata_size() const;
  inline void clear_trapdata();
  static const int kTrapDataFieldNumber = 1;
  inline const ::TrapData& trapdata(int index) const;
  inline ::TrapData* mutable_trapdata(int index);
  inline ::TrapData* add_trapdata();
  inline const ::google::protobuf::RepeatedPtrField< ::TrapData >&
      trapdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::TrapData >*
      mutable_trapdata();

  // @@protoc_insertion_point(class_scope:GCRefreshTrapData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TrapData > trapdata_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRefreshTrapData* default_instance_;
};
// -------------------------------------------------------------------

class GCTrapItemStartMove : public ::google::protobuf::Message {
 public:
  GCTrapItemStartMove();
  virtual ~GCTrapItemStartMove();

  GCTrapItemStartMove(const GCTrapItemStartMove& from);

  inline GCTrapItemStartMove& operator=(const GCTrapItemStartMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCTrapItemStartMove& default_instance();

  void Swap(GCTrapItemStartMove* other);

  // implements Message ----------------------------------------------

  GCTrapItemStartMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCTrapItemStartMove& from);
  void MergeFrom(const GCTrapItemStartMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // repeated int32 itemIndex = 2;
  inline int itemindex_size() const;
  inline void clear_itemindex();
  static const int kItemIndexFieldNumber = 2;
  inline ::google::protobuf::int32 itemindex(int index) const;
  inline void set_itemindex(int index, ::google::protobuf::int32 value);
  inline void add_itemindex(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemindex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemindex();

  // @@protoc_insertion_point(class_scope:GCTrapItemStartMove)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemindex_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCTrapItemStartMove* default_instance_;
};
// -------------------------------------------------------------------

class CharacterHurtInfo : public ::google::protobuf::Message {
 public:
  CharacterHurtInfo();
  virtual ~CharacterHurtInfo();

  CharacterHurtInfo(const CharacterHurtInfo& from);

  inline CharacterHurtInfo& operator=(const CharacterHurtInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterHurtInfo& default_instance();

  void Swap(CharacterHurtInfo* other);

  // implements Message ----------------------------------------------

  CharacterHurtInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterHurtInfo& from);
  void MergeFrom(const CharacterHurtInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // optional int32 totalHurt = 2;
  inline bool has_totalhurt() const;
  inline void clear_totalhurt();
  static const int kTotalHurtFieldNumber = 2;
  inline ::google::protobuf::int32 totalhurt() const;
  inline void set_totalhurt(::google::protobuf::int32 value);

  // optional string charName = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharacterHurtInfo)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_totalhurt();
  inline void clear_has_totalhurt();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::std::string* charname_;
  ::google::protobuf::int32 totalhurt_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static CharacterHurtInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCRefreshCharacterHurtInfo : public ::google::protobuf::Message {
 public:
  GCRefreshCharacterHurtInfo();
  virtual ~GCRefreshCharacterHurtInfo();

  GCRefreshCharacterHurtInfo(const GCRefreshCharacterHurtInfo& from);

  inline GCRefreshCharacterHurtInfo& operator=(const GCRefreshCharacterHurtInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRefreshCharacterHurtInfo& default_instance();

  void Swap(GCRefreshCharacterHurtInfo* other);

  // implements Message ----------------------------------------------

  GCRefreshCharacterHurtInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRefreshCharacterHurtInfo& from);
  void MergeFrom(const GCRefreshCharacterHurtInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CharacterHurtInfo hurtInfoArr = 1;
  inline int hurtinfoarr_size() const;
  inline void clear_hurtinfoarr();
  static const int kHurtInfoArrFieldNumber = 1;
  inline const ::CharacterHurtInfo& hurtinfoarr(int index) const;
  inline ::CharacterHurtInfo* mutable_hurtinfoarr(int index);
  inline ::CharacterHurtInfo* add_hurtinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::CharacterHurtInfo >&
      hurtinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::CharacterHurtInfo >*
      mutable_hurtinfoarr();

  // optional .CharacterHurtInfo selfHurtInfo = 2;
  inline bool has_selfhurtinfo() const;
  inline void clear_selfhurtinfo();
  static const int kSelfHurtInfoFieldNumber = 2;
  inline const ::CharacterHurtInfo& selfhurtinfo() const;
  inline ::CharacterHurtInfo* mutable_selfhurtinfo();
  inline ::CharacterHurtInfo* release_selfhurtinfo();
  inline void set_allocated_selfhurtinfo(::CharacterHurtInfo* selfhurtinfo);

  // optional int64 damageObjId = 3;
  inline bool has_damageobjid() const;
  inline void clear_damageobjid();
  static const int kDamageObjIdFieldNumber = 3;
  inline ::google::protobuf::int64 damageobjid() const;
  inline void set_damageobjid(::google::protobuf::int64 value);

  // optional int32 refreshType = 4;
  inline bool has_refreshtype() const;
  inline void clear_refreshtype();
  static const int kRefreshTypeFieldNumber = 4;
  inline ::google::protobuf::int32 refreshtype() const;
  inline void set_refreshtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCRefreshCharacterHurtInfo)
 private:
  inline void set_has_selfhurtinfo();
  inline void clear_has_selfhurtinfo();
  inline void set_has_damageobjid();
  inline void clear_has_damageobjid();
  inline void set_has_refreshtype();
  inline void clear_has_refreshtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CharacterHurtInfo > hurtinfoarr_;
  ::CharacterHurtInfo* selfhurtinfo_;
  ::google::protobuf::int64 damageobjid_;
  ::google::protobuf::int32 refreshtype_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRefreshCharacterHurtInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCDelCharacterHurtInfo : public ::google::protobuf::Message {
 public:
  GCDelCharacterHurtInfo();
  virtual ~GCDelCharacterHurtInfo();

  GCDelCharacterHurtInfo(const GCDelCharacterHurtInfo& from);

  inline GCDelCharacterHurtInfo& operator=(const GCDelCharacterHurtInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDelCharacterHurtInfo& default_instance();

  void Swap(GCDelCharacterHurtInfo* other);

  // implements Message ----------------------------------------------

  GCDelCharacterHurtInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDelCharacterHurtInfo& from);
  void MergeFrom(const GCDelCharacterHurtInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 objId = 1;
  inline int objid_size() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid(int index) const;
  inline void set_objid(int index, ::google::protobuf::int64 value);
  inline void add_objid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      objid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_objid();

  // optional int32 refreshType = 2;
  inline bool has_refreshtype() const;
  inline void clear_refreshtype();
  static const int kRefreshTypeFieldNumber = 2;
  inline ::google::protobuf::int32 refreshtype() const;
  inline void set_refreshtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCDelCharacterHurtInfo)
 private:
  inline void set_has_refreshtype();
  inline void clear_has_refreshtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > objid_;
  ::google::protobuf::int32 refreshtype_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDelCharacterHurtInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGTeleport : public ::google::protobuf::Message {
 public:
  CGTeleport();
  virtual ~CGTeleport();

  CGTeleport(const CGTeleport& from);

  inline CGTeleport& operator=(const CGTeleport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGTeleport& default_instance();

  void Swap(CGTeleport* other);

  // implements Message ----------------------------------------------

  CGTeleport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGTeleport& from);
  void MergeFrom(const CGTeleport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional .Vector3Info pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::Vector3Info& pos() const;
  inline ::Vector3Info* mutable_pos();
  inline ::Vector3Info* release_pos();
  inline void set_allocated_pos(::Vector3Info* pos);

  // optional .Vector3Info direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline const ::Vector3Info& direction() const;
  inline ::Vector3Info* mutable_direction();
  inline ::Vector3Info* release_direction();
  inline void set_allocated_direction(::Vector3Info* direction);

  // optional int32 navMeshId = 4;
  inline bool has_navmeshid() const;
  inline void clear_navmeshid();
  static const int kNavMeshIdFieldNumber = 4;
  inline ::google::protobuf::int32 navmeshid() const;
  inline void set_navmeshid(::google::protobuf::int32 value);

  // optional int64 objId = 5;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 5;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGTeleport)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_navmeshid();
  inline void clear_has_navmeshid();
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Vector3Info* pos_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 navmeshid_;
  ::Vector3Info* direction_;
  ::google::protobuf::int64 objid_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static CGTeleport* default_instance_;
};
// -------------------------------------------------------------------

class GCTeleport : public ::google::protobuf::Message {
 public:
  GCTeleport();
  virtual ~GCTeleport();

  GCTeleport(const GCTeleport& from);

  inline GCTeleport& operator=(const GCTeleport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCTeleport& default_instance();

  void Swap(GCTeleport* other);

  // implements Message ----------------------------------------------

  GCTeleport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCTeleport& from);
  void MergeFrom(const GCTeleport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional .Vector3Info pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::Vector3Info& pos() const;
  inline ::Vector3Info* mutable_pos();
  inline ::Vector3Info* release_pos();
  inline void set_allocated_pos(::Vector3Info* pos);

  // optional .Vector3Info direction = 4;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 4;
  inline const ::Vector3Info& direction() const;
  inline ::Vector3Info* mutable_direction();
  inline ::Vector3Info* release_direction();
  inline void set_allocated_direction(::Vector3Info* direction);

  // optional int32 navMeshId = 5;
  inline bool has_navmeshid() const;
  inline void clear_navmeshid();
  static const int kNavMeshIdFieldNumber = 5;
  inline ::google::protobuf::int32 navmeshid() const;
  inline void set_navmeshid(::google::protobuf::int32 value);

  // optional int64 objId = 6;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 6;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCTeleport)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_navmeshid();
  inline void clear_has_navmeshid();
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 type_;
  ::Vector3Info* pos_;
  ::Vector3Info* direction_;
  ::google::protobuf::int64 objid_;
  ::google::protobuf::int32 navmeshid_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCTeleport* default_instance_;
};
// -------------------------------------------------------------------

class CGMoveInJog : public ::google::protobuf::Message {
 public:
  CGMoveInJog();
  virtual ~CGMoveInJog();

  CGMoveInJog(const CGMoveInJog& from);

  inline CGMoveInJog& operator=(const CGMoveInJog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMoveInJog& default_instance();

  void Swap(CGMoveInJog* other);

  // implements Message ----------------------------------------------

  CGMoveInJog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMoveInJog& from);
  void MergeFrom(const CGMoveInJog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGMoveInJog)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static CGMoveInJog* default_instance_;
};
// -------------------------------------------------------------------

class GGEnterExistScene : public ::google::protobuf::Message {
 public:
  GGEnterExistScene();
  virtual ~GGEnterExistScene();

  GGEnterExistScene(const GGEnterExistScene& from);

  inline GGEnterExistScene& operator=(const GGEnterExistScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GGEnterExistScene& default_instance();

  void Swap(GGEnterExistScene* other);

  // implements Message ----------------------------------------------

  GGEnterExistScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GGEnterExistScene& from);
  void MergeFrom(const GGEnterExistScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sceneInstanceId = 1;
  inline bool has_sceneinstanceid() const;
  inline void clear_sceneinstanceid();
  static const int kSceneInstanceIdFieldNumber = 1;
  inline ::google::protobuf::int32 sceneinstanceid() const;
  inline void set_sceneinstanceid(::google::protobuf::int32 value);

  // optional .Vector3Info pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::Vector3Info& pos() const;
  inline ::Vector3Info* mutable_pos();
  inline ::Vector3Info* release_pos();
  inline void set_allocated_pos(::Vector3Info* pos);

  // optional .Vector3Info direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline const ::Vector3Info& direction() const;
  inline ::Vector3Info* mutable_direction();
  inline ::Vector3Info* release_direction();
  inline void set_allocated_direction(::Vector3Info* direction);

  // repeated int64 objId = 4;
  inline int objid_size() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 4;
  inline ::google::protobuf::int64 objid(int index) const;
  inline void set_objid(int index, ::google::protobuf::int64 value);
  inline void add_objid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      objid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_objid();

  // optional int32 notBackGCEnterScene = 5;
  inline bool has_notbackgcenterscene() const;
  inline void clear_notbackgcenterscene();
  static const int kNotBackGCEnterSceneFieldNumber = 5;
  inline ::google::protobuf::int32 notbackgcenterscene() const;
  inline void set_notbackgcenterscene(::google::protobuf::int32 value);

  // optional int32 reason = 6;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 6;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);

  // repeated string reasonParams = 7;
  inline int reasonparams_size() const;
  inline void clear_reasonparams();
  static const int kReasonParamsFieldNumber = 7;
  inline const ::std::string& reasonparams(int index) const;
  inline ::std::string* mutable_reasonparams(int index);
  inline void set_reasonparams(int index, const ::std::string& value);
  inline void set_reasonparams(int index, const char* value);
  inline void set_reasonparams(int index, const char* value, size_t size);
  inline ::std::string* add_reasonparams();
  inline void add_reasonparams(const ::std::string& value);
  inline void add_reasonparams(const char* value);
  inline void add_reasonparams(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& reasonparams() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_reasonparams();

  // optional int32 sameMuiltLineScene = 8;
  inline bool has_samemuiltlinescene() const;
  inline void clear_samemuiltlinescene();
  static const int kSameMuiltLineSceneFieldNumber = 8;
  inline ::google::protobuf::int32 samemuiltlinescene() const;
  inline void set_samemuiltlinescene(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GGEnterExistScene)
 private:
  inline void set_has_sceneinstanceid();
  inline void clear_has_sceneinstanceid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_notbackgcenterscene();
  inline void clear_has_notbackgcenterscene();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_samemuiltlinescene();
  inline void clear_has_samemuiltlinescene();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Vector3Info* pos_;
  ::Vector3Info* direction_;
  ::google::protobuf::int32 sceneinstanceid_;
  ::google::protobuf::int32 notbackgcenterscene_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > objid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> reasonparams_;
  ::google::protobuf::int32 reason_;
  ::google::protobuf::int32 samemuiltlinescene_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GGEnterExistScene* default_instance_;
};
// -------------------------------------------------------------------

class GGLeaveScene : public ::google::protobuf::Message {
 public:
  GGLeaveScene();
  virtual ~GGLeaveScene();

  GGLeaveScene(const GGLeaveScene& from);

  inline GGLeaveScene& operator=(const GGLeaveScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GGLeaveScene& default_instance();

  void Swap(GGLeaveScene* other);

  // implements Message ----------------------------------------------

  GGLeaveScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GGLeaveScene& from);
  void MergeFrom(const GGLeaveScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sceneInstanceId = 1;
  inline bool has_sceneinstanceid() const;
  inline void clear_sceneinstanceid();
  static const int kSceneInstanceIdFieldNumber = 1;
  inline ::google::protobuf::int32 sceneinstanceid() const;
  inline void set_sceneinstanceid(::google::protobuf::int32 value);

  // repeated int64 objId = 2;
  inline int objid_size() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 2;
  inline ::google::protobuf::int64 objid(int index) const;
  inline void set_objid(int index, ::google::protobuf::int64 value);
  inline void add_objid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      objid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_objid();

  // optional int32 reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);

  // repeated string reasonParams = 4;
  inline int reasonparams_size() const;
  inline void clear_reasonparams();
  static const int kReasonParamsFieldNumber = 4;
  inline const ::std::string& reasonparams(int index) const;
  inline ::std::string* mutable_reasonparams(int index);
  inline void set_reasonparams(int index, const ::std::string& value);
  inline void set_reasonparams(int index, const char* value);
  inline void set_reasonparams(int index, const char* value, size_t size);
  inline ::std::string* add_reasonparams();
  inline void add_reasonparams(const ::std::string& value);
  inline void add_reasonparams(const char* value);
  inline void add_reasonparams(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& reasonparams() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_reasonparams();

  // @@protoc_insertion_point(class_scope:GGLeaveScene)
 private:
  inline void set_has_sceneinstanceid();
  inline void clear_has_sceneinstanceid();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > objid_;
  ::google::protobuf::int32 sceneinstanceid_;
  ::google::protobuf::int32 reason_;
  ::google::protobuf::RepeatedPtrField< ::std::string> reasonparams_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GGLeaveScene* default_instance_;
};
// -------------------------------------------------------------------

class GCCharacterChangeMotion : public ::google::protobuf::Message {
 public:
  GCCharacterChangeMotion();
  virtual ~GCCharacterChangeMotion();

  GCCharacterChangeMotion(const GCCharacterChangeMotion& from);

  inline GCCharacterChangeMotion& operator=(const GCCharacterChangeMotion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCharacterChangeMotion& default_instance();

  void Swap(GCCharacterChangeMotion* other);

  // implements Message ----------------------------------------------

  GCCharacterChangeMotion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCharacterChangeMotion& from);
  void MergeFrom(const GCCharacterChangeMotion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 motionId = 1;
  inline bool has_motionid() const;
  inline void clear_motionid();
  static const int kMotionIdFieldNumber = 1;
  inline ::google::protobuf::int32 motionid() const;
  inline void set_motionid(::google::protobuf::int32 value);

  // repeated int64 objId = 2;
  inline int objid_size() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 2;
  inline ::google::protobuf::int64 objid(int index) const;
  inline void set_objid(int index, ::google::protobuf::int64 value);
  inline void add_objid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      objid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_objid();

  // optional int64 targetObjId = 3;
  inline bool has_targetobjid() const;
  inline void clear_targetobjid();
  static const int kTargetObjIdFieldNumber = 3;
  inline ::google::protobuf::int64 targetobjid() const;
  inline void set_targetobjid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCCharacterChangeMotion)
 private:
  inline void set_has_motionid();
  inline void clear_has_motionid();
  inline void set_has_targetobjid();
  inline void clear_has_targetobjid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > objid_;
  ::google::protobuf::int64 targetobjid_;
  ::google::protobuf::int32 motionid_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCharacterChangeMotion* default_instance_;
};
// -------------------------------------------------------------------

class GCSyncCharacterPos : public ::google::protobuf::Message {
 public:
  GCSyncCharacterPos();
  virtual ~GCSyncCharacterPos();

  GCSyncCharacterPos(const GCSyncCharacterPos& from);

  inline GCSyncCharacterPos& operator=(const GCSyncCharacterPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSyncCharacterPos& default_instance();

  void Swap(GCSyncCharacterPos* other);

  // implements Message ----------------------------------------------

  GCSyncCharacterPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSyncCharacterPos& from);
  void MergeFrom(const GCSyncCharacterPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objectId = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::int64 objectid() const;
  inline void set_objectid(::google::protobuf::int64 value);

  // optional .Vector3Info position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline const ::Vector3Info& position() const;
  inline ::Vector3Info* mutable_position();
  inline ::Vector3Info* release_position();
  inline void set_allocated_position(::Vector3Info* position);

  // optional .Vector3Info dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline const ::Vector3Info& dir() const;
  inline ::Vector3Info* mutable_dir();
  inline ::Vector3Info* release_dir();
  inline void set_allocated_dir(::Vector3Info* dir);

  // @@protoc_insertion_point(class_scope:GCSyncCharacterPos)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objectid_;
  ::Vector3Info* position_;
  ::Vector3Info* dir_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSyncCharacterPos* default_instance_;
};
// -------------------------------------------------------------------

class GCCharacterRelation : public ::google::protobuf::Message {
 public:
  GCCharacterRelation();
  virtual ~GCCharacterRelation();

  GCCharacterRelation(const GCCharacterRelation& from);

  inline GCCharacterRelation& operator=(const GCCharacterRelation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCharacterRelation& default_instance();

  void Swap(GCCharacterRelation* other);

  // implements Message ----------------------------------------------

  GCCharacterRelation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCharacterRelation& from);
  void MergeFrom(const GCCharacterRelation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objectId = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::int64 objectid() const;
  inline void set_objectid(::google::protobuf::int64 value);

  // optional int32 attackSts = 2;
  inline bool has_attacksts() const;
  inline void clear_attacksts();
  static const int kAttackStsFieldNumber = 2;
  inline ::google::protobuf::int32 attacksts() const;
  inline void set_attacksts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCCharacterRelation)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_attacksts();
  inline void clear_has_attacksts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objectid_;
  ::google::protobuf::int32 attacksts_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCharacterRelation* default_instance_;
};
// -------------------------------------------------------------------

class GCSyncCharacterRelation : public ::google::protobuf::Message {
 public:
  GCSyncCharacterRelation();
  virtual ~GCSyncCharacterRelation();

  GCSyncCharacterRelation(const GCSyncCharacterRelation& from);

  inline GCSyncCharacterRelation& operator=(const GCSyncCharacterRelation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSyncCharacterRelation& default_instance();

  void Swap(GCSyncCharacterRelation* other);

  // implements Message ----------------------------------------------

  GCSyncCharacterRelation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSyncCharacterRelation& from);
  void MergeFrom(const GCSyncCharacterRelation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GCCharacterRelation relations = 1;
  inline int relations_size() const;
  inline void clear_relations();
  static const int kRelationsFieldNumber = 1;
  inline const ::GCCharacterRelation& relations(int index) const;
  inline ::GCCharacterRelation* mutable_relations(int index);
  inline ::GCCharacterRelation* add_relations();
  inline const ::google::protobuf::RepeatedPtrField< ::GCCharacterRelation >&
      relations() const;
  inline ::google::protobuf::RepeatedPtrField< ::GCCharacterRelation >*
      mutable_relations();

  // @@protoc_insertion_point(class_scope:GCSyncCharacterRelation)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GCCharacterRelation > relations_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSyncCharacterRelation* default_instance_;
};
// -------------------------------------------------------------------

class CGCommonGetherDevice : public ::google::protobuf::Message {
 public:
  CGCommonGetherDevice();
  virtual ~CGCommonGetherDevice();

  CGCommonGetherDevice(const CGCommonGetherDevice& from);

  inline CGCommonGetherDevice& operator=(const CGCommonGetherDevice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCommonGetherDevice& default_instance();

  void Swap(CGCommonGetherDevice* other);

  // implements Message ----------------------------------------------

  CGCommonGetherDevice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCommonGetherDevice& from);
  void MergeFrom(const CGCommonGetherDevice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGCommonGetherDevice)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  friend void  protobuf_AddDesc_SceneMessage_2eproto();
  friend void protobuf_AssignDesc_SceneMessage_2eproto();
  friend void protobuf_ShutdownFile_SceneMessage_2eproto();

  void InitAsDefaultInstance();
  static CGCommonGetherDevice* default_instance_;
};
// ===================================================================


// ===================================================================

// CGEnterScene

// optional int32 sceneId = 1;
inline bool CGEnterScene::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGEnterScene::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGEnterScene::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGEnterScene::clear_sceneid() {
  sceneid_ = 0;
  clear_has_sceneid();
}
inline ::google::protobuf::int32 CGEnterScene::sceneid() const {
  // @@protoc_insertion_point(field_get:CGEnterScene.sceneId)
  return sceneid_;
}
inline void CGEnterScene::set_sceneid(::google::protobuf::int32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:CGEnterScene.sceneId)
}

// optional .Vector3Info pos = 2;
inline bool CGEnterScene::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGEnterScene::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGEnterScene::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGEnterScene::clear_pos() {
  if (pos_ != NULL) pos_->::Vector3Info::Clear();
  clear_has_pos();
}
inline const ::Vector3Info& CGEnterScene::pos() const {
  // @@protoc_insertion_point(field_get:CGEnterScene.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Vector3Info* CGEnterScene::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGEnterScene.pos)
  return pos_;
}
inline ::Vector3Info* CGEnterScene::release_pos() {
  clear_has_pos();
  ::Vector3Info* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void CGEnterScene::set_allocated_pos(::Vector3Info* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:CGEnterScene.pos)
}

// optional .Vector3Info direction = 3;
inline bool CGEnterScene::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGEnterScene::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGEnterScene::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGEnterScene::clear_direction() {
  if (direction_ != NULL) direction_->::Vector3Info::Clear();
  clear_has_direction();
}
inline const ::Vector3Info& CGEnterScene::direction() const {
  // @@protoc_insertion_point(field_get:CGEnterScene.direction)
  return direction_ != NULL ? *direction_ : *default_instance_->direction_;
}
inline ::Vector3Info* CGEnterScene::mutable_direction() {
  set_has_direction();
  if (direction_ == NULL) direction_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGEnterScene.direction)
  return direction_;
}
inline ::Vector3Info* CGEnterScene::release_direction() {
  clear_has_direction();
  ::Vector3Info* temp = direction_;
  direction_ = NULL;
  return temp;
}
inline void CGEnterScene::set_allocated_direction(::Vector3Info* direction) {
  delete direction_;
  direction_ = direction;
  if (direction) {
    set_has_direction();
  } else {
    clear_has_direction();
  }
  // @@protoc_insertion_point(field_set_allocated:CGEnterScene.direction)
}

// optional int32 notBackGCEnterScene = 4;
inline bool CGEnterScene::has_notbackgcenterscene() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGEnterScene::set_has_notbackgcenterscene() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGEnterScene::clear_has_notbackgcenterscene() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGEnterScene::clear_notbackgcenterscene() {
  notbackgcenterscene_ = 0;
  clear_has_notbackgcenterscene();
}
inline ::google::protobuf::int32 CGEnterScene::notbackgcenterscene() const {
  // @@protoc_insertion_point(field_get:CGEnterScene.notBackGCEnterScene)
  return notbackgcenterscene_;
}
inline void CGEnterScene::set_notbackgcenterscene(::google::protobuf::int32 value) {
  set_has_notbackgcenterscene();
  notbackgcenterscene_ = value;
  // @@protoc_insertion_point(field_set:CGEnterScene.notBackGCEnterScene)
}

// -------------------------------------------------------------------

// GCEnterScene

// optional int32 sceneId = 1;
inline bool GCEnterScene::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCEnterScene::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCEnterScene::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCEnterScene::clear_sceneid() {
  sceneid_ = 0;
  clear_has_sceneid();
}
inline ::google::protobuf::int32 GCEnterScene::sceneid() const {
  // @@protoc_insertion_point(field_get:GCEnterScene.sceneId)
  return sceneid_;
}
inline void GCEnterScene::set_sceneid(::google::protobuf::int32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:GCEnterScene.sceneId)
}

// optional int32 reason = 2;
inline bool GCEnterScene::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCEnterScene::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCEnterScene::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCEnterScene::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 GCEnterScene::reason() const {
  // @@protoc_insertion_point(field_get:GCEnterScene.reason)
  return reason_;
}
inline void GCEnterScene::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:GCEnterScene.reason)
}

// -------------------------------------------------------------------

// CGEnterSceneOk

// optional int32 flag = 1;
inline bool CGEnterSceneOk::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGEnterSceneOk::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGEnterSceneOk::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGEnterSceneOk::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 CGEnterSceneOk::flag() const {
  // @@protoc_insertion_point(field_get:CGEnterSceneOk.flag)
  return flag_;
}
inline void CGEnterSceneOk::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:CGEnterSceneOk.flag)
}

// -------------------------------------------------------------------

// GCEnterSceneOk

// optional int32 flag = 1;
inline bool GCEnterSceneOk::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCEnterSceneOk::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCEnterSceneOk::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCEnterSceneOk::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCEnterSceneOk::flag() const {
  // @@protoc_insertion_point(field_get:GCEnterSceneOk.flag)
  return flag_;
}
inline void GCEnterSceneOk::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCEnterSceneOk.flag)
}

// -------------------------------------------------------------------

// GCCharacterObjsInView

// repeated .CharacterInfo characterObjs = 1;
inline int GCCharacterObjsInView::characterobjs_size() const {
  return characterobjs_.size();
}
inline void GCCharacterObjsInView::clear_characterobjs() {
  characterobjs_.Clear();
}
inline const ::CharacterInfo& GCCharacterObjsInView::characterobjs(int index) const {
  // @@protoc_insertion_point(field_get:GCCharacterObjsInView.characterObjs)
  return characterobjs_.Get(index);
}
inline ::CharacterInfo* GCCharacterObjsInView::mutable_characterobjs(int index) {
  // @@protoc_insertion_point(field_mutable:GCCharacterObjsInView.characterObjs)
  return characterobjs_.Mutable(index);
}
inline ::CharacterInfo* GCCharacterObjsInView::add_characterobjs() {
  // @@protoc_insertion_point(field_add:GCCharacterObjsInView.characterObjs)
  return characterobjs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CharacterInfo >&
GCCharacterObjsInView::characterobjs() const {
  // @@protoc_insertion_point(field_list:GCCharacterObjsInView.characterObjs)
  return characterobjs_;
}
inline ::google::protobuf::RepeatedPtrField< ::CharacterInfo >*
GCCharacterObjsInView::mutable_characterobjs() {
  // @@protoc_insertion_point(field_mutable_list:GCCharacterObjsInView.characterObjs)
  return &characterobjs_;
}

// -------------------------------------------------------------------

// GCDelObjInSceneBack

// repeated int64 objIds = 1;
inline int GCDelObjInSceneBack::objids_size() const {
  return objids_.size();
}
inline void GCDelObjInSceneBack::clear_objids() {
  objids_.Clear();
}
inline ::google::protobuf::int64 GCDelObjInSceneBack::objids(int index) const {
  // @@protoc_insertion_point(field_get:GCDelObjInSceneBack.objIds)
  return objids_.Get(index);
}
inline void GCDelObjInSceneBack::set_objids(int index, ::google::protobuf::int64 value) {
  objids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCDelObjInSceneBack.objIds)
}
inline void GCDelObjInSceneBack::add_objids(::google::protobuf::int64 value) {
  objids_.Add(value);
  // @@protoc_insertion_point(field_add:GCDelObjInSceneBack.objIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GCDelObjInSceneBack::objids() const {
  // @@protoc_insertion_point(field_list:GCDelObjInSceneBack.objIds)
  return objids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GCDelObjInSceneBack::mutable_objids() {
  // @@protoc_insertion_point(field_mutable_list:GCDelObjInSceneBack.objIds)
  return &objids_;
}

// -------------------------------------------------------------------

// GCCharObjDieBack

// repeated int64 objIds = 1;
inline int GCCharObjDieBack::objids_size() const {
  return objids_.size();
}
inline void GCCharObjDieBack::clear_objids() {
  objids_.Clear();
}
inline ::google::protobuf::int64 GCCharObjDieBack::objids(int index) const {
  // @@protoc_insertion_point(field_get:GCCharObjDieBack.objIds)
  return objids_.Get(index);
}
inline void GCCharObjDieBack::set_objids(int index, ::google::protobuf::int64 value) {
  objids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCCharObjDieBack.objIds)
}
inline void GCCharObjDieBack::add_objids(::google::protobuf::int64 value) {
  objids_.Add(value);
  // @@protoc_insertion_point(field_add:GCCharObjDieBack.objIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GCCharObjDieBack::objids() const {
  // @@protoc_insertion_point(field_list:GCCharObjDieBack.objIds)
  return objids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GCCharObjDieBack::mutable_objids() {
  // @@protoc_insertion_point(field_mutable_list:GCCharObjDieBack.objIds)
  return &objids_;
}

// -------------------------------------------------------------------

// CGSendMove

// optional .Vector3Info startPos = 1;
inline bool CGSendMove::has_startpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSendMove::set_has_startpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSendMove::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSendMove::clear_startpos() {
  if (startpos_ != NULL) startpos_->::Vector3Info::Clear();
  clear_has_startpos();
}
inline const ::Vector3Info& CGSendMove::startpos() const {
  // @@protoc_insertion_point(field_get:CGSendMove.startPos)
  return startpos_ != NULL ? *startpos_ : *default_instance_->startpos_;
}
inline ::Vector3Info* CGSendMove::mutable_startpos() {
  set_has_startpos();
  if (startpos_ == NULL) startpos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGSendMove.startPos)
  return startpos_;
}
inline ::Vector3Info* CGSendMove::release_startpos() {
  clear_has_startpos();
  ::Vector3Info* temp = startpos_;
  startpos_ = NULL;
  return temp;
}
inline void CGSendMove::set_allocated_startpos(::Vector3Info* startpos) {
  delete startpos_;
  startpos_ = startpos;
  if (startpos) {
    set_has_startpos();
  } else {
    clear_has_startpos();
  }
  // @@protoc_insertion_point(field_set_allocated:CGSendMove.startPos)
}

// repeated .Vector3Info targetPos = 2;
inline int CGSendMove::targetpos_size() const {
  return targetpos_.size();
}
inline void CGSendMove::clear_targetpos() {
  targetpos_.Clear();
}
inline const ::Vector3Info& CGSendMove::targetpos(int index) const {
  // @@protoc_insertion_point(field_get:CGSendMove.targetPos)
  return targetpos_.Get(index);
}
inline ::Vector3Info* CGSendMove::mutable_targetpos(int index) {
  // @@protoc_insertion_point(field_mutable:CGSendMove.targetPos)
  return targetpos_.Mutable(index);
}
inline ::Vector3Info* CGSendMove::add_targetpos() {
  // @@protoc_insertion_point(field_add:CGSendMove.targetPos)
  return targetpos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Vector3Info >&
CGSendMove::targetpos() const {
  // @@protoc_insertion_point(field_list:CGSendMove.targetPos)
  return targetpos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Vector3Info >*
CGSendMove::mutable_targetpos() {
  // @@protoc_insertion_point(field_mutable_list:CGSendMove.targetPos)
  return &targetpos_;
}

// optional int64 clientTime = 3;
inline bool CGSendMove::has_clienttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGSendMove::set_has_clienttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGSendMove::clear_has_clienttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGSendMove::clear_clienttime() {
  clienttime_ = GOOGLE_LONGLONG(0);
  clear_has_clienttime();
}
inline ::google::protobuf::int64 CGSendMove::clienttime() const {
  // @@protoc_insertion_point(field_get:CGSendMove.clientTime)
  return clienttime_;
}
inline void CGSendMove::set_clienttime(::google::protobuf::int64 value) {
  set_has_clienttime();
  clienttime_ = value;
  // @@protoc_insertion_point(field_set:CGSendMove.clientTime)
}

// optional int32 flyHeight = 4;
inline bool CGSendMove::has_flyheight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGSendMove::set_has_flyheight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGSendMove::clear_has_flyheight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGSendMove::clear_flyheight() {
  flyheight_ = 0;
  clear_has_flyheight();
}
inline ::google::protobuf::int32 CGSendMove::flyheight() const {
  // @@protoc_insertion_point(field_get:CGSendMove.flyHeight)
  return flyheight_;
}
inline void CGSendMove::set_flyheight(::google::protobuf::int32 value) {
  set_has_flyheight();
  flyheight_ = value;
  // @@protoc_insertion_point(field_set:CGSendMove.flyHeight)
}

// optional int32 type = 5;
inline bool CGSendMove::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGSendMove::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGSendMove::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGSendMove::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGSendMove::type() const {
  // @@protoc_insertion_point(field_get:CGSendMove.type)
  return type_;
}
inline void CGSendMove::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGSendMove.type)
}

// optional int32 speed = 6;
inline bool CGSendMove::has_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGSendMove::set_has_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CGSendMove::clear_has_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CGSendMove::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 CGSendMove::speed() const {
  // @@protoc_insertion_point(field_get:CGSendMove.speed)
  return speed_;
}
inline void CGSendMove::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:CGSendMove.speed)
}

// optional int32 flow = 7;
inline bool CGSendMove::has_flow() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGSendMove::set_has_flow() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CGSendMove::clear_has_flow() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CGSendMove::clear_flow() {
  flow_ = 0;
  clear_has_flow();
}
inline ::google::protobuf::int32 CGSendMove::flow() const {
  // @@protoc_insertion_point(field_get:CGSendMove.flow)
  return flow_;
}
inline void CGSendMove::set_flow(::google::protobuf::int32 value) {
  set_has_flow();
  flow_ = value;
  // @@protoc_insertion_point(field_set:CGSendMove.flow)
}

// optional int64 objectId = 8;
inline bool CGSendMove::has_objectid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGSendMove::set_has_objectid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CGSendMove::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CGSendMove::clear_objectid() {
  objectid_ = GOOGLE_LONGLONG(0);
  clear_has_objectid();
}
inline ::google::protobuf::int64 CGSendMove::objectid() const {
  // @@protoc_insertion_point(field_get:CGSendMove.objectId)
  return objectid_;
}
inline void CGSendMove::set_objectid(::google::protobuf::int64 value) {
  set_has_objectid();
  objectid_ = value;
  // @@protoc_insertion_point(field_set:CGSendMove.objectId)
}

// -------------------------------------------------------------------

// GCSendMove

// optional .Vector3Info startPos = 1;
inline bool GCSendMove::has_startpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSendMove::set_has_startpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSendMove::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSendMove::clear_startpos() {
  if (startpos_ != NULL) startpos_->::Vector3Info::Clear();
  clear_has_startpos();
}
inline const ::Vector3Info& GCSendMove::startpos() const {
  // @@protoc_insertion_point(field_get:GCSendMove.startPos)
  return startpos_ != NULL ? *startpos_ : *default_instance_->startpos_;
}
inline ::Vector3Info* GCSendMove::mutable_startpos() {
  set_has_startpos();
  if (startpos_ == NULL) startpos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCSendMove.startPos)
  return startpos_;
}
inline ::Vector3Info* GCSendMove::release_startpos() {
  clear_has_startpos();
  ::Vector3Info* temp = startpos_;
  startpos_ = NULL;
  return temp;
}
inline void GCSendMove::set_allocated_startpos(::Vector3Info* startpos) {
  delete startpos_;
  startpos_ = startpos;
  if (startpos) {
    set_has_startpos();
  } else {
    clear_has_startpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSendMove.startPos)
}

// repeated .Vector3Info targetPos = 2;
inline int GCSendMove::targetpos_size() const {
  return targetpos_.size();
}
inline void GCSendMove::clear_targetpos() {
  targetpos_.Clear();
}
inline const ::Vector3Info& GCSendMove::targetpos(int index) const {
  // @@protoc_insertion_point(field_get:GCSendMove.targetPos)
  return targetpos_.Get(index);
}
inline ::Vector3Info* GCSendMove::mutable_targetpos(int index) {
  // @@protoc_insertion_point(field_mutable:GCSendMove.targetPos)
  return targetpos_.Mutable(index);
}
inline ::Vector3Info* GCSendMove::add_targetpos() {
  // @@protoc_insertion_point(field_add:GCSendMove.targetPos)
  return targetpos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Vector3Info >&
GCSendMove::targetpos() const {
  // @@protoc_insertion_point(field_list:GCSendMove.targetPos)
  return targetpos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Vector3Info >*
GCSendMove::mutable_targetpos() {
  // @@protoc_insertion_point(field_mutable_list:GCSendMove.targetPos)
  return &targetpos_;
}

// optional int64 objectId = 3;
inline bool GCSendMove::has_objectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSendMove::set_has_objectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSendMove::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSendMove::clear_objectid() {
  objectid_ = GOOGLE_LONGLONG(0);
  clear_has_objectid();
}
inline ::google::protobuf::int64 GCSendMove::objectid() const {
  // @@protoc_insertion_point(field_get:GCSendMove.objectId)
  return objectid_;
}
inline void GCSendMove::set_objectid(::google::protobuf::int64 value) {
  set_has_objectid();
  objectid_ = value;
  // @@protoc_insertion_point(field_set:GCSendMove.objectId)
}

// optional int64 startMoveTime = 4;
inline bool GCSendMove::has_startmovetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCSendMove::set_has_startmovetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCSendMove::clear_has_startmovetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCSendMove::clear_startmovetime() {
  startmovetime_ = GOOGLE_LONGLONG(0);
  clear_has_startmovetime();
}
inline ::google::protobuf::int64 GCSendMove::startmovetime() const {
  // @@protoc_insertion_point(field_get:GCSendMove.startMoveTime)
  return startmovetime_;
}
inline void GCSendMove::set_startmovetime(::google::protobuf::int64 value) {
  set_has_startmovetime();
  startmovetime_ = value;
  // @@protoc_insertion_point(field_set:GCSendMove.startMoveTime)
}

// optional int32 flyHeight = 5;
inline bool GCSendMove::has_flyheight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCSendMove::set_has_flyheight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCSendMove::clear_has_flyheight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCSendMove::clear_flyheight() {
  flyheight_ = 0;
  clear_has_flyheight();
}
inline ::google::protobuf::int32 GCSendMove::flyheight() const {
  // @@protoc_insertion_point(field_get:GCSendMove.flyHeight)
  return flyheight_;
}
inline void GCSendMove::set_flyheight(::google::protobuf::int32 value) {
  set_has_flyheight();
  flyheight_ = value;
  // @@protoc_insertion_point(field_set:GCSendMove.flyHeight)
}

// optional int32 type = 6;
inline bool GCSendMove::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCSendMove::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCSendMove::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCSendMove::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCSendMove::type() const {
  // @@protoc_insertion_point(field_get:GCSendMove.type)
  return type_;
}
inline void GCSendMove::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCSendMove.type)
}

// optional int32 speed = 7;
inline bool GCSendMove::has_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GCSendMove::set_has_speed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GCSendMove::clear_has_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GCSendMove::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 GCSendMove::speed() const {
  // @@protoc_insertion_point(field_get:GCSendMove.speed)
  return speed_;
}
inline void GCSendMove::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:GCSendMove.speed)
}

// optional int32 flow = 8;
inline bool GCSendMove::has_flow() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GCSendMove::set_has_flow() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GCSendMove::clear_has_flow() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GCSendMove::clear_flow() {
  flow_ = 0;
  clear_has_flow();
}
inline ::google::protobuf::int32 GCSendMove::flow() const {
  // @@protoc_insertion_point(field_get:GCSendMove.flow)
  return flow_;
}
inline void GCSendMove::set_flow(::google::protobuf::int32 value) {
  set_has_flow();
  flow_ = value;
  // @@protoc_insertion_point(field_set:GCSendMove.flow)
}

// -------------------------------------------------------------------

// CGStopMove

// optional .Vector3Info stopPosition = 1;
inline bool CGStopMove::has_stopposition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGStopMove::set_has_stopposition() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGStopMove::clear_has_stopposition() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGStopMove::clear_stopposition() {
  if (stopposition_ != NULL) stopposition_->::Vector3Info::Clear();
  clear_has_stopposition();
}
inline const ::Vector3Info& CGStopMove::stopposition() const {
  // @@protoc_insertion_point(field_get:CGStopMove.stopPosition)
  return stopposition_ != NULL ? *stopposition_ : *default_instance_->stopposition_;
}
inline ::Vector3Info* CGStopMove::mutable_stopposition() {
  set_has_stopposition();
  if (stopposition_ == NULL) stopposition_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGStopMove.stopPosition)
  return stopposition_;
}
inline ::Vector3Info* CGStopMove::release_stopposition() {
  clear_has_stopposition();
  ::Vector3Info* temp = stopposition_;
  stopposition_ = NULL;
  return temp;
}
inline void CGStopMove::set_allocated_stopposition(::Vector3Info* stopposition) {
  delete stopposition_;
  stopposition_ = stopposition;
  if (stopposition) {
    set_has_stopposition();
  } else {
    clear_has_stopposition();
  }
  // @@protoc_insertion_point(field_set_allocated:CGStopMove.stopPosition)
}

// optional .Vector3Info dirPosition = 2;
inline bool CGStopMove::has_dirposition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGStopMove::set_has_dirposition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGStopMove::clear_has_dirposition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGStopMove::clear_dirposition() {
  if (dirposition_ != NULL) dirposition_->::Vector3Info::Clear();
  clear_has_dirposition();
}
inline const ::Vector3Info& CGStopMove::dirposition() const {
  // @@protoc_insertion_point(field_get:CGStopMove.dirPosition)
  return dirposition_ != NULL ? *dirposition_ : *default_instance_->dirposition_;
}
inline ::Vector3Info* CGStopMove::mutable_dirposition() {
  set_has_dirposition();
  if (dirposition_ == NULL) dirposition_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGStopMove.dirPosition)
  return dirposition_;
}
inline ::Vector3Info* CGStopMove::release_dirposition() {
  clear_has_dirposition();
  ::Vector3Info* temp = dirposition_;
  dirposition_ = NULL;
  return temp;
}
inline void CGStopMove::set_allocated_dirposition(::Vector3Info* dirposition) {
  delete dirposition_;
  dirposition_ = dirposition;
  if (dirposition) {
    set_has_dirposition();
  } else {
    clear_has_dirposition();
  }
  // @@protoc_insertion_point(field_set_allocated:CGStopMove.dirPosition)
}

// optional int32 flyHeight = 3;
inline bool CGStopMove::has_flyheight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGStopMove::set_has_flyheight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGStopMove::clear_has_flyheight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGStopMove::clear_flyheight() {
  flyheight_ = 0;
  clear_has_flyheight();
}
inline ::google::protobuf::int32 CGStopMove::flyheight() const {
  // @@protoc_insertion_point(field_get:CGStopMove.flyHeight)
  return flyheight_;
}
inline void CGStopMove::set_flyheight(::google::protobuf::int32 value) {
  set_has_flyheight();
  flyheight_ = value;
  // @@protoc_insertion_point(field_set:CGStopMove.flyHeight)
}

// optional int32 type = 4;
inline bool CGStopMove::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGStopMove::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGStopMove::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGStopMove::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGStopMove::type() const {
  // @@protoc_insertion_point(field_get:CGStopMove.type)
  return type_;
}
inline void CGStopMove::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGStopMove.type)
}

// optional int64 objectId = 5;
inline bool CGStopMove::has_objectid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGStopMove::set_has_objectid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGStopMove::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGStopMove::clear_objectid() {
  objectid_ = GOOGLE_LONGLONG(0);
  clear_has_objectid();
}
inline ::google::protobuf::int64 CGStopMove::objectid() const {
  // @@protoc_insertion_point(field_get:CGStopMove.objectId)
  return objectid_;
}
inline void CGStopMove::set_objectid(::google::protobuf::int64 value) {
  set_has_objectid();
  objectid_ = value;
  // @@protoc_insertion_point(field_set:CGStopMove.objectId)
}

// -------------------------------------------------------------------

// GCStopMove

// optional int64 objectId = 1;
inline bool GCStopMove::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCStopMove::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCStopMove::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCStopMove::clear_objectid() {
  objectid_ = GOOGLE_LONGLONG(0);
  clear_has_objectid();
}
inline ::google::protobuf::int64 GCStopMove::objectid() const {
  // @@protoc_insertion_point(field_get:GCStopMove.objectId)
  return objectid_;
}
inline void GCStopMove::set_objectid(::google::protobuf::int64 value) {
  set_has_objectid();
  objectid_ = value;
  // @@protoc_insertion_point(field_set:GCStopMove.objectId)
}

// optional .Vector3Info stopPosition = 2;
inline bool GCStopMove::has_stopposition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCStopMove::set_has_stopposition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCStopMove::clear_has_stopposition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCStopMove::clear_stopposition() {
  if (stopposition_ != NULL) stopposition_->::Vector3Info::Clear();
  clear_has_stopposition();
}
inline const ::Vector3Info& GCStopMove::stopposition() const {
  // @@protoc_insertion_point(field_get:GCStopMove.stopPosition)
  return stopposition_ != NULL ? *stopposition_ : *default_instance_->stopposition_;
}
inline ::Vector3Info* GCStopMove::mutable_stopposition() {
  set_has_stopposition();
  if (stopposition_ == NULL) stopposition_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCStopMove.stopPosition)
  return stopposition_;
}
inline ::Vector3Info* GCStopMove::release_stopposition() {
  clear_has_stopposition();
  ::Vector3Info* temp = stopposition_;
  stopposition_ = NULL;
  return temp;
}
inline void GCStopMove::set_allocated_stopposition(::Vector3Info* stopposition) {
  delete stopposition_;
  stopposition_ = stopposition;
  if (stopposition) {
    set_has_stopposition();
  } else {
    clear_has_stopposition();
  }
  // @@protoc_insertion_point(field_set_allocated:GCStopMove.stopPosition)
}

// optional .Vector3Info dirPosition = 3;
inline bool GCStopMove::has_dirposition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCStopMove::set_has_dirposition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCStopMove::clear_has_dirposition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCStopMove::clear_dirposition() {
  if (dirposition_ != NULL) dirposition_->::Vector3Info::Clear();
  clear_has_dirposition();
}
inline const ::Vector3Info& GCStopMove::dirposition() const {
  // @@protoc_insertion_point(field_get:GCStopMove.dirPosition)
  return dirposition_ != NULL ? *dirposition_ : *default_instance_->dirposition_;
}
inline ::Vector3Info* GCStopMove::mutable_dirposition() {
  set_has_dirposition();
  if (dirposition_ == NULL) dirposition_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCStopMove.dirPosition)
  return dirposition_;
}
inline ::Vector3Info* GCStopMove::release_dirposition() {
  clear_has_dirposition();
  ::Vector3Info* temp = dirposition_;
  dirposition_ = NULL;
  return temp;
}
inline void GCStopMove::set_allocated_dirposition(::Vector3Info* dirposition) {
  delete dirposition_;
  dirposition_ = dirposition;
  if (dirposition) {
    set_has_dirposition();
  } else {
    clear_has_dirposition();
  }
  // @@protoc_insertion_point(field_set_allocated:GCStopMove.dirPosition)
}

// optional int32 flyHeight = 4;
inline bool GCStopMove::has_flyheight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCStopMove::set_has_flyheight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCStopMove::clear_has_flyheight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCStopMove::clear_flyheight() {
  flyheight_ = 0;
  clear_has_flyheight();
}
inline ::google::protobuf::int32 GCStopMove::flyheight() const {
  // @@protoc_insertion_point(field_get:GCStopMove.flyHeight)
  return flyheight_;
}
inline void GCStopMove::set_flyheight(::google::protobuf::int32 value) {
  set_has_flyheight();
  flyheight_ = value;
  // @@protoc_insertion_point(field_set:GCStopMove.flyHeight)
}

// optional int32 type = 5;
inline bool GCStopMove::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCStopMove::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCStopMove::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCStopMove::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCStopMove::type() const {
  // @@protoc_insertion_point(field_get:GCStopMove.type)
  return type_;
}
inline void GCStopMove::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCStopMove.type)
}

// -------------------------------------------------------------------

// GCRefreshPlayerAttr

// optional .CharacterInfo mySelf = 1;
inline bool GCRefreshPlayerAttr::has_myself() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCRefreshPlayerAttr::set_has_myself() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCRefreshPlayerAttr::clear_has_myself() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCRefreshPlayerAttr::clear_myself() {
  if (myself_ != NULL) myself_->::CharacterInfo::Clear();
  clear_has_myself();
}
inline const ::CharacterInfo& GCRefreshPlayerAttr::myself() const {
  // @@protoc_insertion_point(field_get:GCRefreshPlayerAttr.mySelf)
  return myself_ != NULL ? *myself_ : *default_instance_->myself_;
}
inline ::CharacterInfo* GCRefreshPlayerAttr::mutable_myself() {
  set_has_myself();
  if (myself_ == NULL) myself_ = new ::CharacterInfo;
  // @@protoc_insertion_point(field_mutable:GCRefreshPlayerAttr.mySelf)
  return myself_;
}
inline ::CharacterInfo* GCRefreshPlayerAttr::release_myself() {
  clear_has_myself();
  ::CharacterInfo* temp = myself_;
  myself_ = NULL;
  return temp;
}
inline void GCRefreshPlayerAttr::set_allocated_myself(::CharacterInfo* myself) {
  delete myself_;
  myself_ = myself;
  if (myself) {
    set_has_myself();
  } else {
    clear_has_myself();
  }
  // @@protoc_insertion_point(field_set_allocated:GCRefreshPlayerAttr.mySelf)
}

// -------------------------------------------------------------------

// CGFly

// -------------------------------------------------------------------

// CGSynPlayerPos

// optional .Vector3Info position = 1;
inline bool CGSynPlayerPos::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSynPlayerPos::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSynPlayerPos::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSynPlayerPos::clear_position() {
  if (position_ != NULL) position_->::Vector3Info::Clear();
  clear_has_position();
}
inline const ::Vector3Info& CGSynPlayerPos::position() const {
  // @@protoc_insertion_point(field_get:CGSynPlayerPos.position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::Vector3Info* CGSynPlayerPos::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGSynPlayerPos.position)
  return position_;
}
inline ::Vector3Info* CGSynPlayerPos::release_position() {
  clear_has_position();
  ::Vector3Info* temp = position_;
  position_ = NULL;
  return temp;
}
inline void CGSynPlayerPos::set_allocated_position(::Vector3Info* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:CGSynPlayerPos.position)
}

// optional .Vector3Info dirPosition = 2;
inline bool CGSynPlayerPos::has_dirposition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSynPlayerPos::set_has_dirposition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSynPlayerPos::clear_has_dirposition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSynPlayerPos::clear_dirposition() {
  if (dirposition_ != NULL) dirposition_->::Vector3Info::Clear();
  clear_has_dirposition();
}
inline const ::Vector3Info& CGSynPlayerPos::dirposition() const {
  // @@protoc_insertion_point(field_get:CGSynPlayerPos.dirPosition)
  return dirposition_ != NULL ? *dirposition_ : *default_instance_->dirposition_;
}
inline ::Vector3Info* CGSynPlayerPos::mutable_dirposition() {
  set_has_dirposition();
  if (dirposition_ == NULL) dirposition_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGSynPlayerPos.dirPosition)
  return dirposition_;
}
inline ::Vector3Info* CGSynPlayerPos::release_dirposition() {
  clear_has_dirposition();
  ::Vector3Info* temp = dirposition_;
  dirposition_ = NULL;
  return temp;
}
inline void CGSynPlayerPos::set_allocated_dirposition(::Vector3Info* dirposition) {
  delete dirposition_;
  dirposition_ = dirposition;
  if (dirposition) {
    set_has_dirposition();
  } else {
    clear_has_dirposition();
  }
  // @@protoc_insertion_point(field_set_allocated:CGSynPlayerPos.dirPosition)
}

// -------------------------------------------------------------------

// CGChangeAttackState

// optional int32 state = 1;
inline bool CGChangeAttackState::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGChangeAttackState::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGChangeAttackState::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGChangeAttackState::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 CGChangeAttackState::state() const {
  // @@protoc_insertion_point(field_get:CGChangeAttackState.state)
  return state_;
}
inline void CGChangeAttackState::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CGChangeAttackState.state)
}

// -------------------------------------------------------------------

// GCPutDeviceInfo

// repeated .DeviceInfo deviceInfo = 1;
inline int GCPutDeviceInfo::deviceinfo_size() const {
  return deviceinfo_.size();
}
inline void GCPutDeviceInfo::clear_deviceinfo() {
  deviceinfo_.Clear();
}
inline const ::DeviceInfo& GCPutDeviceInfo::deviceinfo(int index) const {
  // @@protoc_insertion_point(field_get:GCPutDeviceInfo.deviceInfo)
  return deviceinfo_.Get(index);
}
inline ::DeviceInfo* GCPutDeviceInfo::mutable_deviceinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GCPutDeviceInfo.deviceInfo)
  return deviceinfo_.Mutable(index);
}
inline ::DeviceInfo* GCPutDeviceInfo::add_deviceinfo() {
  // @@protoc_insertion_point(field_add:GCPutDeviceInfo.deviceInfo)
  return deviceinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DeviceInfo >&
GCPutDeviceInfo::deviceinfo() const {
  // @@protoc_insertion_point(field_list:GCPutDeviceInfo.deviceInfo)
  return deviceinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::DeviceInfo >*
GCPutDeviceInfo::mutable_deviceinfo() {
  // @@protoc_insertion_point(field_mutable_list:GCPutDeviceInfo.deviceInfo)
  return &deviceinfo_;
}

// -------------------------------------------------------------------

// GCRefreshDeviceInfo

// optional .DeviceInfo deviceInfo = 1;
inline bool GCRefreshDeviceInfo::has_deviceinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCRefreshDeviceInfo::set_has_deviceinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCRefreshDeviceInfo::clear_has_deviceinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCRefreshDeviceInfo::clear_deviceinfo() {
  if (deviceinfo_ != NULL) deviceinfo_->::DeviceInfo::Clear();
  clear_has_deviceinfo();
}
inline const ::DeviceInfo& GCRefreshDeviceInfo::deviceinfo() const {
  // @@protoc_insertion_point(field_get:GCRefreshDeviceInfo.deviceInfo)
  return deviceinfo_ != NULL ? *deviceinfo_ : *default_instance_->deviceinfo_;
}
inline ::DeviceInfo* GCRefreshDeviceInfo::mutable_deviceinfo() {
  set_has_deviceinfo();
  if (deviceinfo_ == NULL) deviceinfo_ = new ::DeviceInfo;
  // @@protoc_insertion_point(field_mutable:GCRefreshDeviceInfo.deviceInfo)
  return deviceinfo_;
}
inline ::DeviceInfo* GCRefreshDeviceInfo::release_deviceinfo() {
  clear_has_deviceinfo();
  ::DeviceInfo* temp = deviceinfo_;
  deviceinfo_ = NULL;
  return temp;
}
inline void GCRefreshDeviceInfo::set_allocated_deviceinfo(::DeviceInfo* deviceinfo) {
  delete deviceinfo_;
  deviceinfo_ = deviceinfo;
  if (deviceinfo) {
    set_has_deviceinfo();
  } else {
    clear_has_deviceinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCRefreshDeviceInfo.deviceInfo)
}

// -------------------------------------------------------------------

// CGGetherDevice

// optional int64 objId = 1;
inline bool CGGetherDevice::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetherDevice::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetherDevice::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetherDevice::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 CGGetherDevice::objid() const {
  // @@protoc_insertion_point(field_get:CGGetherDevice.objId)
  return objid_;
}
inline void CGGetherDevice::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:CGGetherDevice.objId)
}

// -------------------------------------------------------------------

// GCPickDevice

// repeated int64 objIds = 1;
inline int GCPickDevice::objids_size() const {
  return objids_.size();
}
inline void GCPickDevice::clear_objids() {
  objids_.Clear();
}
inline ::google::protobuf::int64 GCPickDevice::objids(int index) const {
  // @@protoc_insertion_point(field_get:GCPickDevice.objIds)
  return objids_.Get(index);
}
inline void GCPickDevice::set_objids(int index, ::google::protobuf::int64 value) {
  objids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCPickDevice.objIds)
}
inline void GCPickDevice::add_objids(::google::protobuf::int64 value) {
  objids_.Add(value);
  // @@protoc_insertion_point(field_add:GCPickDevice.objIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GCPickDevice::objids() const {
  // @@protoc_insertion_point(field_list:GCPickDevice.objIds)
  return objids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GCPickDevice::mutable_objids() {
  // @@protoc_insertion_point(field_mutable_list:GCPickDevice.objIds)
  return &objids_;
}

// -------------------------------------------------------------------

// GCShowHideObjInSceneBack

// optional int32 type = 1;
inline bool GCShowHideObjInSceneBack::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCShowHideObjInSceneBack::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCShowHideObjInSceneBack::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCShowHideObjInSceneBack::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCShowHideObjInSceneBack::type() const {
  // @@protoc_insertion_point(field_get:GCShowHideObjInSceneBack.type)
  return type_;
}
inline void GCShowHideObjInSceneBack::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCShowHideObjInSceneBack.type)
}

// repeated int64 objIds = 2;
inline int GCShowHideObjInSceneBack::objids_size() const {
  return objids_.size();
}
inline void GCShowHideObjInSceneBack::clear_objids() {
  objids_.Clear();
}
inline ::google::protobuf::int64 GCShowHideObjInSceneBack::objids(int index) const {
  // @@protoc_insertion_point(field_get:GCShowHideObjInSceneBack.objIds)
  return objids_.Get(index);
}
inline void GCShowHideObjInSceneBack::set_objids(int index, ::google::protobuf::int64 value) {
  objids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCShowHideObjInSceneBack.objIds)
}
inline void GCShowHideObjInSceneBack::add_objids(::google::protobuf::int64 value) {
  objids_.Add(value);
  // @@protoc_insertion_point(field_add:GCShowHideObjInSceneBack.objIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GCShowHideObjInSceneBack::objids() const {
  // @@protoc_insertion_point(field_list:GCShowHideObjInSceneBack.objIds)
  return objids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GCShowHideObjInSceneBack::mutable_objids() {
  // @@protoc_insertion_point(field_mutable_list:GCShowHideObjInSceneBack.objIds)
  return &objids_;
}

// -------------------------------------------------------------------

// GCRefreshTrapData

// repeated .TrapData trapData = 1;
inline int GCRefreshTrapData::trapdata_size() const {
  return trapdata_.size();
}
inline void GCRefreshTrapData::clear_trapdata() {
  trapdata_.Clear();
}
inline const ::TrapData& GCRefreshTrapData::trapdata(int index) const {
  // @@protoc_insertion_point(field_get:GCRefreshTrapData.trapData)
  return trapdata_.Get(index);
}
inline ::TrapData* GCRefreshTrapData::mutable_trapdata(int index) {
  // @@protoc_insertion_point(field_mutable:GCRefreshTrapData.trapData)
  return trapdata_.Mutable(index);
}
inline ::TrapData* GCRefreshTrapData::add_trapdata() {
  // @@protoc_insertion_point(field_add:GCRefreshTrapData.trapData)
  return trapdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TrapData >&
GCRefreshTrapData::trapdata() const {
  // @@protoc_insertion_point(field_list:GCRefreshTrapData.trapData)
  return trapdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::TrapData >*
GCRefreshTrapData::mutable_trapdata() {
  // @@protoc_insertion_point(field_mutable_list:GCRefreshTrapData.trapData)
  return &trapdata_;
}

// -------------------------------------------------------------------

// GCTrapItemStartMove

// optional int64 objId = 1;
inline bool GCTrapItemStartMove::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCTrapItemStartMove::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCTrapItemStartMove::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCTrapItemStartMove::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 GCTrapItemStartMove::objid() const {
  // @@protoc_insertion_point(field_get:GCTrapItemStartMove.objId)
  return objid_;
}
inline void GCTrapItemStartMove::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:GCTrapItemStartMove.objId)
}

// repeated int32 itemIndex = 2;
inline int GCTrapItemStartMove::itemindex_size() const {
  return itemindex_.size();
}
inline void GCTrapItemStartMove::clear_itemindex() {
  itemindex_.Clear();
}
inline ::google::protobuf::int32 GCTrapItemStartMove::itemindex(int index) const {
  // @@protoc_insertion_point(field_get:GCTrapItemStartMove.itemIndex)
  return itemindex_.Get(index);
}
inline void GCTrapItemStartMove::set_itemindex(int index, ::google::protobuf::int32 value) {
  itemindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCTrapItemStartMove.itemIndex)
}
inline void GCTrapItemStartMove::add_itemindex(::google::protobuf::int32 value) {
  itemindex_.Add(value);
  // @@protoc_insertion_point(field_add:GCTrapItemStartMove.itemIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCTrapItemStartMove::itemindex() const {
  // @@protoc_insertion_point(field_list:GCTrapItemStartMove.itemIndex)
  return itemindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCTrapItemStartMove::mutable_itemindex() {
  // @@protoc_insertion_point(field_mutable_list:GCTrapItemStartMove.itemIndex)
  return &itemindex_;
}

// -------------------------------------------------------------------

// CharacterHurtInfo

// optional int64 objId = 1;
inline bool CharacterHurtInfo::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterHurtInfo::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterHurtInfo::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterHurtInfo::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 CharacterHurtInfo::objid() const {
  // @@protoc_insertion_point(field_get:CharacterHurtInfo.objId)
  return objid_;
}
inline void CharacterHurtInfo::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:CharacterHurtInfo.objId)
}

// optional int32 totalHurt = 2;
inline bool CharacterHurtInfo::has_totalhurt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterHurtInfo::set_has_totalhurt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterHurtInfo::clear_has_totalhurt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterHurtInfo::clear_totalhurt() {
  totalhurt_ = 0;
  clear_has_totalhurt();
}
inline ::google::protobuf::int32 CharacterHurtInfo::totalhurt() const {
  // @@protoc_insertion_point(field_get:CharacterHurtInfo.totalHurt)
  return totalhurt_;
}
inline void CharacterHurtInfo::set_totalhurt(::google::protobuf::int32 value) {
  set_has_totalhurt();
  totalhurt_ = value;
  // @@protoc_insertion_point(field_set:CharacterHurtInfo.totalHurt)
}

// optional string charName = 3;
inline bool CharacterHurtInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterHurtInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterHurtInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterHurtInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& CharacterHurtInfo::charname() const {
  // @@protoc_insertion_point(field_get:CharacterHurtInfo.charName)
  return *charname_;
}
inline void CharacterHurtInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:CharacterHurtInfo.charName)
}
inline void CharacterHurtInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:CharacterHurtInfo.charName)
}
inline void CharacterHurtInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CharacterHurtInfo.charName)
}
inline ::std::string* CharacterHurtInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CharacterHurtInfo.charName)
  return charname_;
}
inline ::std::string* CharacterHurtInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CharacterHurtInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CharacterHurtInfo.charName)
}

// optional int32 type = 4;
inline bool CharacterHurtInfo::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterHurtInfo::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterHurtInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterHurtInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CharacterHurtInfo::type() const {
  // @@protoc_insertion_point(field_get:CharacterHurtInfo.type)
  return type_;
}
inline void CharacterHurtInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CharacterHurtInfo.type)
}

// -------------------------------------------------------------------

// GCRefreshCharacterHurtInfo

// repeated .CharacterHurtInfo hurtInfoArr = 1;
inline int GCRefreshCharacterHurtInfo::hurtinfoarr_size() const {
  return hurtinfoarr_.size();
}
inline void GCRefreshCharacterHurtInfo::clear_hurtinfoarr() {
  hurtinfoarr_.Clear();
}
inline const ::CharacterHurtInfo& GCRefreshCharacterHurtInfo::hurtinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:GCRefreshCharacterHurtInfo.hurtInfoArr)
  return hurtinfoarr_.Get(index);
}
inline ::CharacterHurtInfo* GCRefreshCharacterHurtInfo::mutable_hurtinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:GCRefreshCharacterHurtInfo.hurtInfoArr)
  return hurtinfoarr_.Mutable(index);
}
inline ::CharacterHurtInfo* GCRefreshCharacterHurtInfo::add_hurtinfoarr() {
  // @@protoc_insertion_point(field_add:GCRefreshCharacterHurtInfo.hurtInfoArr)
  return hurtinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CharacterHurtInfo >&
GCRefreshCharacterHurtInfo::hurtinfoarr() const {
  // @@protoc_insertion_point(field_list:GCRefreshCharacterHurtInfo.hurtInfoArr)
  return hurtinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::CharacterHurtInfo >*
GCRefreshCharacterHurtInfo::mutable_hurtinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:GCRefreshCharacterHurtInfo.hurtInfoArr)
  return &hurtinfoarr_;
}

// optional .CharacterHurtInfo selfHurtInfo = 2;
inline bool GCRefreshCharacterHurtInfo::has_selfhurtinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCRefreshCharacterHurtInfo::set_has_selfhurtinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCRefreshCharacterHurtInfo::clear_has_selfhurtinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCRefreshCharacterHurtInfo::clear_selfhurtinfo() {
  if (selfhurtinfo_ != NULL) selfhurtinfo_->::CharacterHurtInfo::Clear();
  clear_has_selfhurtinfo();
}
inline const ::CharacterHurtInfo& GCRefreshCharacterHurtInfo::selfhurtinfo() const {
  // @@protoc_insertion_point(field_get:GCRefreshCharacterHurtInfo.selfHurtInfo)
  return selfhurtinfo_ != NULL ? *selfhurtinfo_ : *default_instance_->selfhurtinfo_;
}
inline ::CharacterHurtInfo* GCRefreshCharacterHurtInfo::mutable_selfhurtinfo() {
  set_has_selfhurtinfo();
  if (selfhurtinfo_ == NULL) selfhurtinfo_ = new ::CharacterHurtInfo;
  // @@protoc_insertion_point(field_mutable:GCRefreshCharacterHurtInfo.selfHurtInfo)
  return selfhurtinfo_;
}
inline ::CharacterHurtInfo* GCRefreshCharacterHurtInfo::release_selfhurtinfo() {
  clear_has_selfhurtinfo();
  ::CharacterHurtInfo* temp = selfhurtinfo_;
  selfhurtinfo_ = NULL;
  return temp;
}
inline void GCRefreshCharacterHurtInfo::set_allocated_selfhurtinfo(::CharacterHurtInfo* selfhurtinfo) {
  delete selfhurtinfo_;
  selfhurtinfo_ = selfhurtinfo;
  if (selfhurtinfo) {
    set_has_selfhurtinfo();
  } else {
    clear_has_selfhurtinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCRefreshCharacterHurtInfo.selfHurtInfo)
}

// optional int64 damageObjId = 3;
inline bool GCRefreshCharacterHurtInfo::has_damageobjid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCRefreshCharacterHurtInfo::set_has_damageobjid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCRefreshCharacterHurtInfo::clear_has_damageobjid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCRefreshCharacterHurtInfo::clear_damageobjid() {
  damageobjid_ = GOOGLE_LONGLONG(0);
  clear_has_damageobjid();
}
inline ::google::protobuf::int64 GCRefreshCharacterHurtInfo::damageobjid() const {
  // @@protoc_insertion_point(field_get:GCRefreshCharacterHurtInfo.damageObjId)
  return damageobjid_;
}
inline void GCRefreshCharacterHurtInfo::set_damageobjid(::google::protobuf::int64 value) {
  set_has_damageobjid();
  damageobjid_ = value;
  // @@protoc_insertion_point(field_set:GCRefreshCharacterHurtInfo.damageObjId)
}

// optional int32 refreshType = 4;
inline bool GCRefreshCharacterHurtInfo::has_refreshtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCRefreshCharacterHurtInfo::set_has_refreshtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCRefreshCharacterHurtInfo::clear_has_refreshtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCRefreshCharacterHurtInfo::clear_refreshtype() {
  refreshtype_ = 0;
  clear_has_refreshtype();
}
inline ::google::protobuf::int32 GCRefreshCharacterHurtInfo::refreshtype() const {
  // @@protoc_insertion_point(field_get:GCRefreshCharacterHurtInfo.refreshType)
  return refreshtype_;
}
inline void GCRefreshCharacterHurtInfo::set_refreshtype(::google::protobuf::int32 value) {
  set_has_refreshtype();
  refreshtype_ = value;
  // @@protoc_insertion_point(field_set:GCRefreshCharacterHurtInfo.refreshType)
}

// -------------------------------------------------------------------

// GCDelCharacterHurtInfo

// repeated int64 objId = 1;
inline int GCDelCharacterHurtInfo::objid_size() const {
  return objid_.size();
}
inline void GCDelCharacterHurtInfo::clear_objid() {
  objid_.Clear();
}
inline ::google::protobuf::int64 GCDelCharacterHurtInfo::objid(int index) const {
  // @@protoc_insertion_point(field_get:GCDelCharacterHurtInfo.objId)
  return objid_.Get(index);
}
inline void GCDelCharacterHurtInfo::set_objid(int index, ::google::protobuf::int64 value) {
  objid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCDelCharacterHurtInfo.objId)
}
inline void GCDelCharacterHurtInfo::add_objid(::google::protobuf::int64 value) {
  objid_.Add(value);
  // @@protoc_insertion_point(field_add:GCDelCharacterHurtInfo.objId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GCDelCharacterHurtInfo::objid() const {
  // @@protoc_insertion_point(field_list:GCDelCharacterHurtInfo.objId)
  return objid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GCDelCharacterHurtInfo::mutable_objid() {
  // @@protoc_insertion_point(field_mutable_list:GCDelCharacterHurtInfo.objId)
  return &objid_;
}

// optional int32 refreshType = 2;
inline bool GCDelCharacterHurtInfo::has_refreshtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCDelCharacterHurtInfo::set_has_refreshtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCDelCharacterHurtInfo::clear_has_refreshtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCDelCharacterHurtInfo::clear_refreshtype() {
  refreshtype_ = 0;
  clear_has_refreshtype();
}
inline ::google::protobuf::int32 GCDelCharacterHurtInfo::refreshtype() const {
  // @@protoc_insertion_point(field_get:GCDelCharacterHurtInfo.refreshType)
  return refreshtype_;
}
inline void GCDelCharacterHurtInfo::set_refreshtype(::google::protobuf::int32 value) {
  set_has_refreshtype();
  refreshtype_ = value;
  // @@protoc_insertion_point(field_set:GCDelCharacterHurtInfo.refreshType)
}

// -------------------------------------------------------------------

// CGTeleport

// optional int32 type = 1;
inline bool CGTeleport::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGTeleport::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGTeleport::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGTeleport::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGTeleport::type() const {
  // @@protoc_insertion_point(field_get:CGTeleport.type)
  return type_;
}
inline void CGTeleport::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGTeleport.type)
}

// optional .Vector3Info pos = 2;
inline bool CGTeleport::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGTeleport::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGTeleport::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGTeleport::clear_pos() {
  if (pos_ != NULL) pos_->::Vector3Info::Clear();
  clear_has_pos();
}
inline const ::Vector3Info& CGTeleport::pos() const {
  // @@protoc_insertion_point(field_get:CGTeleport.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Vector3Info* CGTeleport::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGTeleport.pos)
  return pos_;
}
inline ::Vector3Info* CGTeleport::release_pos() {
  clear_has_pos();
  ::Vector3Info* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void CGTeleport::set_allocated_pos(::Vector3Info* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:CGTeleport.pos)
}

// optional .Vector3Info direction = 3;
inline bool CGTeleport::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGTeleport::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGTeleport::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGTeleport::clear_direction() {
  if (direction_ != NULL) direction_->::Vector3Info::Clear();
  clear_has_direction();
}
inline const ::Vector3Info& CGTeleport::direction() const {
  // @@protoc_insertion_point(field_get:CGTeleport.direction)
  return direction_ != NULL ? *direction_ : *default_instance_->direction_;
}
inline ::Vector3Info* CGTeleport::mutable_direction() {
  set_has_direction();
  if (direction_ == NULL) direction_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGTeleport.direction)
  return direction_;
}
inline ::Vector3Info* CGTeleport::release_direction() {
  clear_has_direction();
  ::Vector3Info* temp = direction_;
  direction_ = NULL;
  return temp;
}
inline void CGTeleport::set_allocated_direction(::Vector3Info* direction) {
  delete direction_;
  direction_ = direction;
  if (direction) {
    set_has_direction();
  } else {
    clear_has_direction();
  }
  // @@protoc_insertion_point(field_set_allocated:CGTeleport.direction)
}

// optional int32 navMeshId = 4;
inline bool CGTeleport::has_navmeshid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGTeleport::set_has_navmeshid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGTeleport::clear_has_navmeshid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGTeleport::clear_navmeshid() {
  navmeshid_ = 0;
  clear_has_navmeshid();
}
inline ::google::protobuf::int32 CGTeleport::navmeshid() const {
  // @@protoc_insertion_point(field_get:CGTeleport.navMeshId)
  return navmeshid_;
}
inline void CGTeleport::set_navmeshid(::google::protobuf::int32 value) {
  set_has_navmeshid();
  navmeshid_ = value;
  // @@protoc_insertion_point(field_set:CGTeleport.navMeshId)
}

// optional int64 objId = 5;
inline bool CGTeleport::has_objid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGTeleport::set_has_objid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGTeleport::clear_has_objid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGTeleport::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 CGTeleport::objid() const {
  // @@protoc_insertion_point(field_get:CGTeleport.objId)
  return objid_;
}
inline void CGTeleport::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:CGTeleport.objId)
}

// -------------------------------------------------------------------

// GCTeleport

// optional int32 flag = 1;
inline bool GCTeleport::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCTeleport::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCTeleport::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCTeleport::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCTeleport::flag() const {
  // @@protoc_insertion_point(field_get:GCTeleport.flag)
  return flag_;
}
inline void GCTeleport::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCTeleport.flag)
}

// optional int32 type = 2;
inline bool GCTeleport::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCTeleport::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCTeleport::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCTeleport::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCTeleport::type() const {
  // @@protoc_insertion_point(field_get:GCTeleport.type)
  return type_;
}
inline void GCTeleport::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCTeleport.type)
}

// optional .Vector3Info pos = 3;
inline bool GCTeleport::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCTeleport::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCTeleport::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCTeleport::clear_pos() {
  if (pos_ != NULL) pos_->::Vector3Info::Clear();
  clear_has_pos();
}
inline const ::Vector3Info& GCTeleport::pos() const {
  // @@protoc_insertion_point(field_get:GCTeleport.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Vector3Info* GCTeleport::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCTeleport.pos)
  return pos_;
}
inline ::Vector3Info* GCTeleport::release_pos() {
  clear_has_pos();
  ::Vector3Info* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void GCTeleport::set_allocated_pos(::Vector3Info* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GCTeleport.pos)
}

// optional .Vector3Info direction = 4;
inline bool GCTeleport::has_direction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCTeleport::set_has_direction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCTeleport::clear_has_direction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCTeleport::clear_direction() {
  if (direction_ != NULL) direction_->::Vector3Info::Clear();
  clear_has_direction();
}
inline const ::Vector3Info& GCTeleport::direction() const {
  // @@protoc_insertion_point(field_get:GCTeleport.direction)
  return direction_ != NULL ? *direction_ : *default_instance_->direction_;
}
inline ::Vector3Info* GCTeleport::mutable_direction() {
  set_has_direction();
  if (direction_ == NULL) direction_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCTeleport.direction)
  return direction_;
}
inline ::Vector3Info* GCTeleport::release_direction() {
  clear_has_direction();
  ::Vector3Info* temp = direction_;
  direction_ = NULL;
  return temp;
}
inline void GCTeleport::set_allocated_direction(::Vector3Info* direction) {
  delete direction_;
  direction_ = direction;
  if (direction) {
    set_has_direction();
  } else {
    clear_has_direction();
  }
  // @@protoc_insertion_point(field_set_allocated:GCTeleport.direction)
}

// optional int32 navMeshId = 5;
inline bool GCTeleport::has_navmeshid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCTeleport::set_has_navmeshid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCTeleport::clear_has_navmeshid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCTeleport::clear_navmeshid() {
  navmeshid_ = 0;
  clear_has_navmeshid();
}
inline ::google::protobuf::int32 GCTeleport::navmeshid() const {
  // @@protoc_insertion_point(field_get:GCTeleport.navMeshId)
  return navmeshid_;
}
inline void GCTeleport::set_navmeshid(::google::protobuf::int32 value) {
  set_has_navmeshid();
  navmeshid_ = value;
  // @@protoc_insertion_point(field_set:GCTeleport.navMeshId)
}

// optional int64 objId = 6;
inline bool GCTeleport::has_objid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCTeleport::set_has_objid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCTeleport::clear_has_objid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCTeleport::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 GCTeleport::objid() const {
  // @@protoc_insertion_point(field_get:GCTeleport.objId)
  return objid_;
}
inline void GCTeleport::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:GCTeleport.objId)
}

// -------------------------------------------------------------------

// CGMoveInJog

// optional int32 type = 1;
inline bool CGMoveInJog::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGMoveInJog::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGMoveInJog::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGMoveInJog::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGMoveInJog::type() const {
  // @@protoc_insertion_point(field_get:CGMoveInJog.type)
  return type_;
}
inline void CGMoveInJog::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGMoveInJog.type)
}

// -------------------------------------------------------------------

// GGEnterExistScene

// optional int32 sceneInstanceId = 1;
inline bool GGEnterExistScene::has_sceneinstanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GGEnterExistScene::set_has_sceneinstanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GGEnterExistScene::clear_has_sceneinstanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GGEnterExistScene::clear_sceneinstanceid() {
  sceneinstanceid_ = 0;
  clear_has_sceneinstanceid();
}
inline ::google::protobuf::int32 GGEnterExistScene::sceneinstanceid() const {
  // @@protoc_insertion_point(field_get:GGEnterExistScene.sceneInstanceId)
  return sceneinstanceid_;
}
inline void GGEnterExistScene::set_sceneinstanceid(::google::protobuf::int32 value) {
  set_has_sceneinstanceid();
  sceneinstanceid_ = value;
  // @@protoc_insertion_point(field_set:GGEnterExistScene.sceneInstanceId)
}

// optional .Vector3Info pos = 2;
inline bool GGEnterExistScene::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GGEnterExistScene::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GGEnterExistScene::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GGEnterExistScene::clear_pos() {
  if (pos_ != NULL) pos_->::Vector3Info::Clear();
  clear_has_pos();
}
inline const ::Vector3Info& GGEnterExistScene::pos() const {
  // @@protoc_insertion_point(field_get:GGEnterExistScene.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Vector3Info* GGEnterExistScene::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GGEnterExistScene.pos)
  return pos_;
}
inline ::Vector3Info* GGEnterExistScene::release_pos() {
  clear_has_pos();
  ::Vector3Info* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void GGEnterExistScene::set_allocated_pos(::Vector3Info* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:GGEnterExistScene.pos)
}

// optional .Vector3Info direction = 3;
inline bool GGEnterExistScene::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GGEnterExistScene::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GGEnterExistScene::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GGEnterExistScene::clear_direction() {
  if (direction_ != NULL) direction_->::Vector3Info::Clear();
  clear_has_direction();
}
inline const ::Vector3Info& GGEnterExistScene::direction() const {
  // @@protoc_insertion_point(field_get:GGEnterExistScene.direction)
  return direction_ != NULL ? *direction_ : *default_instance_->direction_;
}
inline ::Vector3Info* GGEnterExistScene::mutable_direction() {
  set_has_direction();
  if (direction_ == NULL) direction_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GGEnterExistScene.direction)
  return direction_;
}
inline ::Vector3Info* GGEnterExistScene::release_direction() {
  clear_has_direction();
  ::Vector3Info* temp = direction_;
  direction_ = NULL;
  return temp;
}
inline void GGEnterExistScene::set_allocated_direction(::Vector3Info* direction) {
  delete direction_;
  direction_ = direction;
  if (direction) {
    set_has_direction();
  } else {
    clear_has_direction();
  }
  // @@protoc_insertion_point(field_set_allocated:GGEnterExistScene.direction)
}

// repeated int64 objId = 4;
inline int GGEnterExistScene::objid_size() const {
  return objid_.size();
}
inline void GGEnterExistScene::clear_objid() {
  objid_.Clear();
}
inline ::google::protobuf::int64 GGEnterExistScene::objid(int index) const {
  // @@protoc_insertion_point(field_get:GGEnterExistScene.objId)
  return objid_.Get(index);
}
inline void GGEnterExistScene::set_objid(int index, ::google::protobuf::int64 value) {
  objid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GGEnterExistScene.objId)
}
inline void GGEnterExistScene::add_objid(::google::protobuf::int64 value) {
  objid_.Add(value);
  // @@protoc_insertion_point(field_add:GGEnterExistScene.objId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GGEnterExistScene::objid() const {
  // @@protoc_insertion_point(field_list:GGEnterExistScene.objId)
  return objid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GGEnterExistScene::mutable_objid() {
  // @@protoc_insertion_point(field_mutable_list:GGEnterExistScene.objId)
  return &objid_;
}

// optional int32 notBackGCEnterScene = 5;
inline bool GGEnterExistScene::has_notbackgcenterscene() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GGEnterExistScene::set_has_notbackgcenterscene() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GGEnterExistScene::clear_has_notbackgcenterscene() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GGEnterExistScene::clear_notbackgcenterscene() {
  notbackgcenterscene_ = 0;
  clear_has_notbackgcenterscene();
}
inline ::google::protobuf::int32 GGEnterExistScene::notbackgcenterscene() const {
  // @@protoc_insertion_point(field_get:GGEnterExistScene.notBackGCEnterScene)
  return notbackgcenterscene_;
}
inline void GGEnterExistScene::set_notbackgcenterscene(::google::protobuf::int32 value) {
  set_has_notbackgcenterscene();
  notbackgcenterscene_ = value;
  // @@protoc_insertion_point(field_set:GGEnterExistScene.notBackGCEnterScene)
}

// optional int32 reason = 6;
inline bool GGEnterExistScene::has_reason() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GGEnterExistScene::set_has_reason() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GGEnterExistScene::clear_has_reason() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GGEnterExistScene::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 GGEnterExistScene::reason() const {
  // @@protoc_insertion_point(field_get:GGEnterExistScene.reason)
  return reason_;
}
inline void GGEnterExistScene::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:GGEnterExistScene.reason)
}

// repeated string reasonParams = 7;
inline int GGEnterExistScene::reasonparams_size() const {
  return reasonparams_.size();
}
inline void GGEnterExistScene::clear_reasonparams() {
  reasonparams_.Clear();
}
inline const ::std::string& GGEnterExistScene::reasonparams(int index) const {
  // @@protoc_insertion_point(field_get:GGEnterExistScene.reasonParams)
  return reasonparams_.Get(index);
}
inline ::std::string* GGEnterExistScene::mutable_reasonparams(int index) {
  // @@protoc_insertion_point(field_mutable:GGEnterExistScene.reasonParams)
  return reasonparams_.Mutable(index);
}
inline void GGEnterExistScene::set_reasonparams(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:GGEnterExistScene.reasonParams)
  reasonparams_.Mutable(index)->assign(value);
}
inline void GGEnterExistScene::set_reasonparams(int index, const char* value) {
  reasonparams_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:GGEnterExistScene.reasonParams)
}
inline void GGEnterExistScene::set_reasonparams(int index, const char* value, size_t size) {
  reasonparams_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GGEnterExistScene.reasonParams)
}
inline ::std::string* GGEnterExistScene::add_reasonparams() {
  return reasonparams_.Add();
}
inline void GGEnterExistScene::add_reasonparams(const ::std::string& value) {
  reasonparams_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:GGEnterExistScene.reasonParams)
}
inline void GGEnterExistScene::add_reasonparams(const char* value) {
  reasonparams_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:GGEnterExistScene.reasonParams)
}
inline void GGEnterExistScene::add_reasonparams(const char* value, size_t size) {
  reasonparams_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:GGEnterExistScene.reasonParams)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GGEnterExistScene::reasonparams() const {
  // @@protoc_insertion_point(field_list:GGEnterExistScene.reasonParams)
  return reasonparams_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GGEnterExistScene::mutable_reasonparams() {
  // @@protoc_insertion_point(field_mutable_list:GGEnterExistScene.reasonParams)
  return &reasonparams_;
}

// optional int32 sameMuiltLineScene = 8;
inline bool GGEnterExistScene::has_samemuiltlinescene() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GGEnterExistScene::set_has_samemuiltlinescene() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GGEnterExistScene::clear_has_samemuiltlinescene() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GGEnterExistScene::clear_samemuiltlinescene() {
  samemuiltlinescene_ = 0;
  clear_has_samemuiltlinescene();
}
inline ::google::protobuf::int32 GGEnterExistScene::samemuiltlinescene() const {
  // @@protoc_insertion_point(field_get:GGEnterExistScene.sameMuiltLineScene)
  return samemuiltlinescene_;
}
inline void GGEnterExistScene::set_samemuiltlinescene(::google::protobuf::int32 value) {
  set_has_samemuiltlinescene();
  samemuiltlinescene_ = value;
  // @@protoc_insertion_point(field_set:GGEnterExistScene.sameMuiltLineScene)
}

// -------------------------------------------------------------------

// GGLeaveScene

// optional int32 sceneInstanceId = 1;
inline bool GGLeaveScene::has_sceneinstanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GGLeaveScene::set_has_sceneinstanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GGLeaveScene::clear_has_sceneinstanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GGLeaveScene::clear_sceneinstanceid() {
  sceneinstanceid_ = 0;
  clear_has_sceneinstanceid();
}
inline ::google::protobuf::int32 GGLeaveScene::sceneinstanceid() const {
  // @@protoc_insertion_point(field_get:GGLeaveScene.sceneInstanceId)
  return sceneinstanceid_;
}
inline void GGLeaveScene::set_sceneinstanceid(::google::protobuf::int32 value) {
  set_has_sceneinstanceid();
  sceneinstanceid_ = value;
  // @@protoc_insertion_point(field_set:GGLeaveScene.sceneInstanceId)
}

// repeated int64 objId = 2;
inline int GGLeaveScene::objid_size() const {
  return objid_.size();
}
inline void GGLeaveScene::clear_objid() {
  objid_.Clear();
}
inline ::google::protobuf::int64 GGLeaveScene::objid(int index) const {
  // @@protoc_insertion_point(field_get:GGLeaveScene.objId)
  return objid_.Get(index);
}
inline void GGLeaveScene::set_objid(int index, ::google::protobuf::int64 value) {
  objid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GGLeaveScene.objId)
}
inline void GGLeaveScene::add_objid(::google::protobuf::int64 value) {
  objid_.Add(value);
  // @@protoc_insertion_point(field_add:GGLeaveScene.objId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GGLeaveScene::objid() const {
  // @@protoc_insertion_point(field_list:GGLeaveScene.objId)
  return objid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GGLeaveScene::mutable_objid() {
  // @@protoc_insertion_point(field_mutable_list:GGLeaveScene.objId)
  return &objid_;
}

// optional int32 reason = 3;
inline bool GGLeaveScene::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GGLeaveScene::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GGLeaveScene::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GGLeaveScene::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 GGLeaveScene::reason() const {
  // @@protoc_insertion_point(field_get:GGLeaveScene.reason)
  return reason_;
}
inline void GGLeaveScene::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:GGLeaveScene.reason)
}

// repeated string reasonParams = 4;
inline int GGLeaveScene::reasonparams_size() const {
  return reasonparams_.size();
}
inline void GGLeaveScene::clear_reasonparams() {
  reasonparams_.Clear();
}
inline const ::std::string& GGLeaveScene::reasonparams(int index) const {
  // @@protoc_insertion_point(field_get:GGLeaveScene.reasonParams)
  return reasonparams_.Get(index);
}
inline ::std::string* GGLeaveScene::mutable_reasonparams(int index) {
  // @@protoc_insertion_point(field_mutable:GGLeaveScene.reasonParams)
  return reasonparams_.Mutable(index);
}
inline void GGLeaveScene::set_reasonparams(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:GGLeaveScene.reasonParams)
  reasonparams_.Mutable(index)->assign(value);
}
inline void GGLeaveScene::set_reasonparams(int index, const char* value) {
  reasonparams_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:GGLeaveScene.reasonParams)
}
inline void GGLeaveScene::set_reasonparams(int index, const char* value, size_t size) {
  reasonparams_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GGLeaveScene.reasonParams)
}
inline ::std::string* GGLeaveScene::add_reasonparams() {
  return reasonparams_.Add();
}
inline void GGLeaveScene::add_reasonparams(const ::std::string& value) {
  reasonparams_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:GGLeaveScene.reasonParams)
}
inline void GGLeaveScene::add_reasonparams(const char* value) {
  reasonparams_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:GGLeaveScene.reasonParams)
}
inline void GGLeaveScene::add_reasonparams(const char* value, size_t size) {
  reasonparams_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:GGLeaveScene.reasonParams)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GGLeaveScene::reasonparams() const {
  // @@protoc_insertion_point(field_list:GGLeaveScene.reasonParams)
  return reasonparams_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GGLeaveScene::mutable_reasonparams() {
  // @@protoc_insertion_point(field_mutable_list:GGLeaveScene.reasonParams)
  return &reasonparams_;
}

// -------------------------------------------------------------------

// GCCharacterChangeMotion

// optional int32 motionId = 1;
inline bool GCCharacterChangeMotion::has_motionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCCharacterChangeMotion::set_has_motionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCCharacterChangeMotion::clear_has_motionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCCharacterChangeMotion::clear_motionid() {
  motionid_ = 0;
  clear_has_motionid();
}
inline ::google::protobuf::int32 GCCharacterChangeMotion::motionid() const {
  // @@protoc_insertion_point(field_get:GCCharacterChangeMotion.motionId)
  return motionid_;
}
inline void GCCharacterChangeMotion::set_motionid(::google::protobuf::int32 value) {
  set_has_motionid();
  motionid_ = value;
  // @@protoc_insertion_point(field_set:GCCharacterChangeMotion.motionId)
}

// repeated int64 objId = 2;
inline int GCCharacterChangeMotion::objid_size() const {
  return objid_.size();
}
inline void GCCharacterChangeMotion::clear_objid() {
  objid_.Clear();
}
inline ::google::protobuf::int64 GCCharacterChangeMotion::objid(int index) const {
  // @@protoc_insertion_point(field_get:GCCharacterChangeMotion.objId)
  return objid_.Get(index);
}
inline void GCCharacterChangeMotion::set_objid(int index, ::google::protobuf::int64 value) {
  objid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCCharacterChangeMotion.objId)
}
inline void GCCharacterChangeMotion::add_objid(::google::protobuf::int64 value) {
  objid_.Add(value);
  // @@protoc_insertion_point(field_add:GCCharacterChangeMotion.objId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GCCharacterChangeMotion::objid() const {
  // @@protoc_insertion_point(field_list:GCCharacterChangeMotion.objId)
  return objid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GCCharacterChangeMotion::mutable_objid() {
  // @@protoc_insertion_point(field_mutable_list:GCCharacterChangeMotion.objId)
  return &objid_;
}

// optional int64 targetObjId = 3;
inline bool GCCharacterChangeMotion::has_targetobjid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCCharacterChangeMotion::set_has_targetobjid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCCharacterChangeMotion::clear_has_targetobjid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCCharacterChangeMotion::clear_targetobjid() {
  targetobjid_ = GOOGLE_LONGLONG(0);
  clear_has_targetobjid();
}
inline ::google::protobuf::int64 GCCharacterChangeMotion::targetobjid() const {
  // @@protoc_insertion_point(field_get:GCCharacterChangeMotion.targetObjId)
  return targetobjid_;
}
inline void GCCharacterChangeMotion::set_targetobjid(::google::protobuf::int64 value) {
  set_has_targetobjid();
  targetobjid_ = value;
  // @@protoc_insertion_point(field_set:GCCharacterChangeMotion.targetObjId)
}

// -------------------------------------------------------------------

// GCSyncCharacterPos

// optional int64 objectId = 1;
inline bool GCSyncCharacterPos::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSyncCharacterPos::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSyncCharacterPos::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSyncCharacterPos::clear_objectid() {
  objectid_ = GOOGLE_LONGLONG(0);
  clear_has_objectid();
}
inline ::google::protobuf::int64 GCSyncCharacterPos::objectid() const {
  // @@protoc_insertion_point(field_get:GCSyncCharacterPos.objectId)
  return objectid_;
}
inline void GCSyncCharacterPos::set_objectid(::google::protobuf::int64 value) {
  set_has_objectid();
  objectid_ = value;
  // @@protoc_insertion_point(field_set:GCSyncCharacterPos.objectId)
}

// optional .Vector3Info position = 2;
inline bool GCSyncCharacterPos::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSyncCharacterPos::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSyncCharacterPos::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSyncCharacterPos::clear_position() {
  if (position_ != NULL) position_->::Vector3Info::Clear();
  clear_has_position();
}
inline const ::Vector3Info& GCSyncCharacterPos::position() const {
  // @@protoc_insertion_point(field_get:GCSyncCharacterPos.position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::Vector3Info* GCSyncCharacterPos::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCSyncCharacterPos.position)
  return position_;
}
inline ::Vector3Info* GCSyncCharacterPos::release_position() {
  clear_has_position();
  ::Vector3Info* temp = position_;
  position_ = NULL;
  return temp;
}
inline void GCSyncCharacterPos::set_allocated_position(::Vector3Info* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSyncCharacterPos.position)
}

// optional .Vector3Info dir = 3;
inline bool GCSyncCharacterPos::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSyncCharacterPos::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSyncCharacterPos::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSyncCharacterPos::clear_dir() {
  if (dir_ != NULL) dir_->::Vector3Info::Clear();
  clear_has_dir();
}
inline const ::Vector3Info& GCSyncCharacterPos::dir() const {
  // @@protoc_insertion_point(field_get:GCSyncCharacterPos.dir)
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::Vector3Info* GCSyncCharacterPos::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCSyncCharacterPos.dir)
  return dir_;
}
inline ::Vector3Info* GCSyncCharacterPos::release_dir() {
  clear_has_dir();
  ::Vector3Info* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void GCSyncCharacterPos::set_allocated_dir(::Vector3Info* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSyncCharacterPos.dir)
}

// -------------------------------------------------------------------

// GCCharacterRelation

// optional int64 objectId = 1;
inline bool GCCharacterRelation::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCCharacterRelation::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCCharacterRelation::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCCharacterRelation::clear_objectid() {
  objectid_ = GOOGLE_LONGLONG(0);
  clear_has_objectid();
}
inline ::google::protobuf::int64 GCCharacterRelation::objectid() const {
  // @@protoc_insertion_point(field_get:GCCharacterRelation.objectId)
  return objectid_;
}
inline void GCCharacterRelation::set_objectid(::google::protobuf::int64 value) {
  set_has_objectid();
  objectid_ = value;
  // @@protoc_insertion_point(field_set:GCCharacterRelation.objectId)
}

// optional int32 attackSts = 2;
inline bool GCCharacterRelation::has_attacksts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCCharacterRelation::set_has_attacksts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCCharacterRelation::clear_has_attacksts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCCharacterRelation::clear_attacksts() {
  attacksts_ = 0;
  clear_has_attacksts();
}
inline ::google::protobuf::int32 GCCharacterRelation::attacksts() const {
  // @@protoc_insertion_point(field_get:GCCharacterRelation.attackSts)
  return attacksts_;
}
inline void GCCharacterRelation::set_attacksts(::google::protobuf::int32 value) {
  set_has_attacksts();
  attacksts_ = value;
  // @@protoc_insertion_point(field_set:GCCharacterRelation.attackSts)
}

// -------------------------------------------------------------------

// GCSyncCharacterRelation

// repeated .GCCharacterRelation relations = 1;
inline int GCSyncCharacterRelation::relations_size() const {
  return relations_.size();
}
inline void GCSyncCharacterRelation::clear_relations() {
  relations_.Clear();
}
inline const ::GCCharacterRelation& GCSyncCharacterRelation::relations(int index) const {
  // @@protoc_insertion_point(field_get:GCSyncCharacterRelation.relations)
  return relations_.Get(index);
}
inline ::GCCharacterRelation* GCSyncCharacterRelation::mutable_relations(int index) {
  // @@protoc_insertion_point(field_mutable:GCSyncCharacterRelation.relations)
  return relations_.Mutable(index);
}
inline ::GCCharacterRelation* GCSyncCharacterRelation::add_relations() {
  // @@protoc_insertion_point(field_add:GCSyncCharacterRelation.relations)
  return relations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GCCharacterRelation >&
GCSyncCharacterRelation::relations() const {
  // @@protoc_insertion_point(field_list:GCSyncCharacterRelation.relations)
  return relations_;
}
inline ::google::protobuf::RepeatedPtrField< ::GCCharacterRelation >*
GCSyncCharacterRelation::mutable_relations() {
  // @@protoc_insertion_point(field_mutable_list:GCSyncCharacterRelation.relations)
  return &relations_;
}

// -------------------------------------------------------------------

// CGCommonGetherDevice

// optional int64 objId = 1;
inline bool CGCommonGetherDevice::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCommonGetherDevice::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCommonGetherDevice::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCommonGetherDevice::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 CGCommonGetherDevice::objid() const {
  // @@protoc_insertion_point(field_get:CGCommonGetherDevice.objId)
  return objid_;
}
inline void CGCommonGetherDevice::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:CGCommonGetherDevice.objId)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SceneMessage_2eproto__INCLUDED
