// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ShenQiMessage.proto

#ifndef PROTOBUF_ShenQiMessage_2eproto__INCLUDED
#define PROTOBUF_ShenQiMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "InnerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ShenQiMessage_2eproto();
void protobuf_AssignDesc_ShenQiMessage_2eproto();
void protobuf_ShutdownFile_ShenQiMessage_2eproto();

class ShenQiInfo;
class CGShenQiLevelUp;
class GCShenQiLevel;
class CGShenQiWear;
class GCRefreshShenQiSkill;

// ===================================================================

class ShenQiInfo : public ::google::protobuf::Message {
 public:
  ShenQiInfo();
  virtual ~ShenQiInfo();

  ShenQiInfo(const ShenQiInfo& from);

  inline ShenQiInfo& operator=(const ShenQiInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShenQiInfo& default_instance();

  void Swap(ShenQiInfo* other);

  // implements Message ----------------------------------------------

  ShenQiInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShenQiInfo& from);
  void MergeFrom(const ShenQiInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sid = 1;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 1;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int32 can = 2;
  inline bool has_can() const;
  inline void clear_can();
  static const int kCanFieldNumber = 2;
  inline ::google::protobuf::int32 can() const;
  inline void set_can(::google::protobuf::int32 value);

  // optional int32 isWear = 3;
  inline bool has_iswear() const;
  inline void clear_iswear();
  static const int kIsWearFieldNumber = 3;
  inline ::google::protobuf::int32 iswear() const;
  inline void set_iswear(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ShenQiInfo)
 private:
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_can();
  inline void clear_has_can();
  inline void set_has_iswear();
  inline void clear_has_iswear();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 can_;
  ::google::protobuf::int32 iswear_;
  friend void  protobuf_AddDesc_ShenQiMessage_2eproto();
  friend void protobuf_AssignDesc_ShenQiMessage_2eproto();
  friend void protobuf_ShutdownFile_ShenQiMessage_2eproto();

  void InitAsDefaultInstance();
  static ShenQiInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGShenQiLevelUp : public ::google::protobuf::Message {
 public:
  CGShenQiLevelUp();
  virtual ~CGShenQiLevelUp();

  CGShenQiLevelUp(const CGShenQiLevelUp& from);

  inline CGShenQiLevelUp& operator=(const CGShenQiLevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGShenQiLevelUp& default_instance();

  void Swap(CGShenQiLevelUp* other);

  // implements Message ----------------------------------------------

  CGShenQiLevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGShenQiLevelUp& from);
  void MergeFrom(const CGShenQiLevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bid = 1;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 1;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGShenQiLevelUp)
 private:
  inline void set_has_bid();
  inline void clear_has_bid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 bid_;
  friend void  protobuf_AddDesc_ShenQiMessage_2eproto();
  friend void protobuf_AssignDesc_ShenQiMessage_2eproto();
  friend void protobuf_ShutdownFile_ShenQiMessage_2eproto();

  void InitAsDefaultInstance();
  static CGShenQiLevelUp* default_instance_;
};
// -------------------------------------------------------------------

class GCShenQiLevel : public ::google::protobuf::Message {
 public:
  GCShenQiLevel();
  virtual ~GCShenQiLevel();

  GCShenQiLevel(const GCShenQiLevel& from);

  inline GCShenQiLevel& operator=(const GCShenQiLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCShenQiLevel& default_instance();

  void Swap(GCShenQiLevel* other);

  // implements Message ----------------------------------------------

  GCShenQiLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCShenQiLevel& from);
  void MergeFrom(const GCShenQiLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .ShenQiInfo infos = 3;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 3;
  inline const ::ShenQiInfo& infos(int index) const;
  inline ::ShenQiInfo* mutable_infos(int index);
  inline ::ShenQiInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::ShenQiInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::ShenQiInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:GCShenQiLevel)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::RepeatedPtrField< ::ShenQiInfo > infos_;
  friend void  protobuf_AddDesc_ShenQiMessage_2eproto();
  friend void protobuf_AssignDesc_ShenQiMessage_2eproto();
  friend void protobuf_ShutdownFile_ShenQiMessage_2eproto();

  void InitAsDefaultInstance();
  static GCShenQiLevel* default_instance_;
};
// -------------------------------------------------------------------

class CGShenQiWear : public ::google::protobuf::Message {
 public:
  CGShenQiWear();
  virtual ~CGShenQiWear();

  CGShenQiWear(const CGShenQiWear& from);

  inline CGShenQiWear& operator=(const CGShenQiWear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGShenQiWear& default_instance();

  void Swap(CGShenQiWear* other);

  // implements Message ----------------------------------------------

  CGShenQiWear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGShenQiWear& from);
  void MergeFrom(const CGShenQiWear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bid = 1;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 1;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // optional int32 isWear = 2;
  inline bool has_iswear() const;
  inline void clear_iswear();
  static const int kIsWearFieldNumber = 2;
  inline ::google::protobuf::int32 iswear() const;
  inline void set_iswear(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGShenQiWear)
 private:
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_iswear();
  inline void clear_has_iswear();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 bid_;
  ::google::protobuf::int32 iswear_;
  friend void  protobuf_AddDesc_ShenQiMessage_2eproto();
  friend void protobuf_AssignDesc_ShenQiMessage_2eproto();
  friend void protobuf_ShutdownFile_ShenQiMessage_2eproto();

  void InitAsDefaultInstance();
  static CGShenQiWear* default_instance_;
};
// -------------------------------------------------------------------

class GCRefreshShenQiSkill : public ::google::protobuf::Message {
 public:
  GCRefreshShenQiSkill();
  virtual ~GCRefreshShenQiSkill();

  GCRefreshShenQiSkill(const GCRefreshShenQiSkill& from);

  inline GCRefreshShenQiSkill& operator=(const GCRefreshShenQiSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRefreshShenQiSkill& default_instance();

  void Swap(GCRefreshShenQiSkill* other);

  // implements Message ----------------------------------------------

  GCRefreshShenQiSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRefreshShenQiSkill& from);
  void MergeFrom(const GCRefreshShenQiSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SkillItemData shenQiSkilldata = 1;
  inline bool has_shenqiskilldata() const;
  inline void clear_shenqiskilldata();
  static const int kShenQiSkilldataFieldNumber = 1;
  inline const ::SkillItemData& shenqiskilldata() const;
  inline ::SkillItemData* mutable_shenqiskilldata();
  inline ::SkillItemData* release_shenqiskilldata();
  inline void set_allocated_shenqiskilldata(::SkillItemData* shenqiskilldata);

  // @@protoc_insertion_point(class_scope:GCRefreshShenQiSkill)
 private:
  inline void set_has_shenqiskilldata();
  inline void clear_has_shenqiskilldata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SkillItemData* shenqiskilldata_;
  friend void  protobuf_AddDesc_ShenQiMessage_2eproto();
  friend void protobuf_AssignDesc_ShenQiMessage_2eproto();
  friend void protobuf_ShutdownFile_ShenQiMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRefreshShenQiSkill* default_instance_;
};
// ===================================================================


// ===================================================================

// ShenQiInfo

// optional int32 sid = 1;
inline bool ShenQiInfo::has_sid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShenQiInfo::set_has_sid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShenQiInfo::clear_has_sid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShenQiInfo::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 ShenQiInfo::sid() const {
  // @@protoc_insertion_point(field_get:ShenQiInfo.sid)
  return sid_;
}
inline void ShenQiInfo::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:ShenQiInfo.sid)
}

// optional int32 can = 2;
inline bool ShenQiInfo::has_can() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShenQiInfo::set_has_can() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShenQiInfo::clear_has_can() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShenQiInfo::clear_can() {
  can_ = 0;
  clear_has_can();
}
inline ::google::protobuf::int32 ShenQiInfo::can() const {
  // @@protoc_insertion_point(field_get:ShenQiInfo.can)
  return can_;
}
inline void ShenQiInfo::set_can(::google::protobuf::int32 value) {
  set_has_can();
  can_ = value;
  // @@protoc_insertion_point(field_set:ShenQiInfo.can)
}

// optional int32 isWear = 3;
inline bool ShenQiInfo::has_iswear() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShenQiInfo::set_has_iswear() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShenQiInfo::clear_has_iswear() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShenQiInfo::clear_iswear() {
  iswear_ = 0;
  clear_has_iswear();
}
inline ::google::protobuf::int32 ShenQiInfo::iswear() const {
  // @@protoc_insertion_point(field_get:ShenQiInfo.isWear)
  return iswear_;
}
inline void ShenQiInfo::set_iswear(::google::protobuf::int32 value) {
  set_has_iswear();
  iswear_ = value;
  // @@protoc_insertion_point(field_set:ShenQiInfo.isWear)
}

// -------------------------------------------------------------------

// CGShenQiLevelUp

// optional int32 bid = 1;
inline bool CGShenQiLevelUp::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGShenQiLevelUp::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGShenQiLevelUp::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGShenQiLevelUp::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 CGShenQiLevelUp::bid() const {
  // @@protoc_insertion_point(field_get:CGShenQiLevelUp.bid)
  return bid_;
}
inline void CGShenQiLevelUp::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
  // @@protoc_insertion_point(field_set:CGShenQiLevelUp.bid)
}

// -------------------------------------------------------------------

// GCShenQiLevel

// optional int32 type = 1;
inline bool GCShenQiLevel::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCShenQiLevel::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCShenQiLevel::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCShenQiLevel::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCShenQiLevel::type() const {
  // @@protoc_insertion_point(field_get:GCShenQiLevel.type)
  return type_;
}
inline void GCShenQiLevel::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCShenQiLevel.type)
}

// optional int32 result = 2;
inline bool GCShenQiLevel::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCShenQiLevel::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCShenQiLevel::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCShenQiLevel::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCShenQiLevel::result() const {
  // @@protoc_insertion_point(field_get:GCShenQiLevel.result)
  return result_;
}
inline void GCShenQiLevel::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCShenQiLevel.result)
}

// repeated .ShenQiInfo infos = 3;
inline int GCShenQiLevel::infos_size() const {
  return infos_.size();
}
inline void GCShenQiLevel::clear_infos() {
  infos_.Clear();
}
inline const ::ShenQiInfo& GCShenQiLevel::infos(int index) const {
  // @@protoc_insertion_point(field_get:GCShenQiLevel.infos)
  return infos_.Get(index);
}
inline ::ShenQiInfo* GCShenQiLevel::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:GCShenQiLevel.infos)
  return infos_.Mutable(index);
}
inline ::ShenQiInfo* GCShenQiLevel::add_infos() {
  // @@protoc_insertion_point(field_add:GCShenQiLevel.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ShenQiInfo >&
GCShenQiLevel::infos() const {
  // @@protoc_insertion_point(field_list:GCShenQiLevel.infos)
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::ShenQiInfo >*
GCShenQiLevel::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:GCShenQiLevel.infos)
  return &infos_;
}

// -------------------------------------------------------------------

// CGShenQiWear

// optional int32 bid = 1;
inline bool CGShenQiWear::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGShenQiWear::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGShenQiWear::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGShenQiWear::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 CGShenQiWear::bid() const {
  // @@protoc_insertion_point(field_get:CGShenQiWear.bid)
  return bid_;
}
inline void CGShenQiWear::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
  // @@protoc_insertion_point(field_set:CGShenQiWear.bid)
}

// optional int32 isWear = 2;
inline bool CGShenQiWear::has_iswear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGShenQiWear::set_has_iswear() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGShenQiWear::clear_has_iswear() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGShenQiWear::clear_iswear() {
  iswear_ = 0;
  clear_has_iswear();
}
inline ::google::protobuf::int32 CGShenQiWear::iswear() const {
  // @@protoc_insertion_point(field_get:CGShenQiWear.isWear)
  return iswear_;
}
inline void CGShenQiWear::set_iswear(::google::protobuf::int32 value) {
  set_has_iswear();
  iswear_ = value;
  // @@protoc_insertion_point(field_set:CGShenQiWear.isWear)
}

// -------------------------------------------------------------------

// GCRefreshShenQiSkill

// optional .SkillItemData shenQiSkilldata = 1;
inline bool GCRefreshShenQiSkill::has_shenqiskilldata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCRefreshShenQiSkill::set_has_shenqiskilldata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCRefreshShenQiSkill::clear_has_shenqiskilldata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCRefreshShenQiSkill::clear_shenqiskilldata() {
  if (shenqiskilldata_ != NULL) shenqiskilldata_->::SkillItemData::Clear();
  clear_has_shenqiskilldata();
}
inline const ::SkillItemData& GCRefreshShenQiSkill::shenqiskilldata() const {
  // @@protoc_insertion_point(field_get:GCRefreshShenQiSkill.shenQiSkilldata)
  return shenqiskilldata_ != NULL ? *shenqiskilldata_ : *default_instance_->shenqiskilldata_;
}
inline ::SkillItemData* GCRefreshShenQiSkill::mutable_shenqiskilldata() {
  set_has_shenqiskilldata();
  if (shenqiskilldata_ == NULL) shenqiskilldata_ = new ::SkillItemData;
  // @@protoc_insertion_point(field_mutable:GCRefreshShenQiSkill.shenQiSkilldata)
  return shenqiskilldata_;
}
inline ::SkillItemData* GCRefreshShenQiSkill::release_shenqiskilldata() {
  clear_has_shenqiskilldata();
  ::SkillItemData* temp = shenqiskilldata_;
  shenqiskilldata_ = NULL;
  return temp;
}
inline void GCRefreshShenQiSkill::set_allocated_shenqiskilldata(::SkillItemData* shenqiskilldata) {
  delete shenqiskilldata_;
  shenqiskilldata_ = shenqiskilldata;
  if (shenqiskilldata) {
    set_has_shenqiskilldata();
  } else {
    clear_has_shenqiskilldata();
  }
  // @@protoc_insertion_point(field_set_allocated:GCRefreshShenQiSkill.shenQiSkilldata)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ShenQiMessage_2eproto__INCLUDED
