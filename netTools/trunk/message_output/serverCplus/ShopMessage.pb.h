// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ShopMessage.proto

#ifndef PROTOBUF_ShopMessage_2eproto__INCLUDED
#define PROTOBUF_ShopMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ShopMessage_2eproto();
void protobuf_AssignDesc_ShopMessage_2eproto();
void protobuf_ShutdownFile_ShopMessage_2eproto();

class CGShop;
class GCShop;
class ItemInfo;
class ShopItemInfo;
class ShopSingInfo;
class ShopCardInfo;
class GCPushShopData;
class GCAddShopItemData;
class DelItemData;
class GCDelShopItemData;
class CGShopLuckDraw;
class GCPushShop;

// ===================================================================

class CGShop : public ::google::protobuf::Message {
 public:
  CGShop();
  virtual ~CGShop();

  CGShop(const CGShop& from);

  inline CGShop& operator=(const CGShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGShop& default_instance();

  void Swap(CGShop* other);

  // implements Message ----------------------------------------------

  CGShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGShop& from);
  void MergeFrom(const CGShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGShop)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 num_;
  friend void  protobuf_AddDesc_ShopMessage_2eproto();
  friend void protobuf_AssignDesc_ShopMessage_2eproto();
  friend void protobuf_ShutdownFile_ShopMessage_2eproto();

  void InitAsDefaultInstance();
  static CGShop* default_instance_;
};
// -------------------------------------------------------------------

class GCShop : public ::google::protobuf::Message {
 public:
  GCShop();
  virtual ~GCShop();

  GCShop(const GCShop& from);

  inline GCShop& operator=(const GCShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCShop& default_instance();

  void Swap(GCShop* other);

  // implements Message ----------------------------------------------

  GCShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCShop& from);
  void MergeFrom(const GCShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional .ItemInfo itemInfo = 2;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 2;
  inline const ::ItemInfo& iteminfo() const;
  inline ::ItemInfo* mutable_iteminfo();
  inline ::ItemInfo* release_iteminfo();
  inline void set_allocated_iteminfo(::ItemInfo* iteminfo);

  // optional int32 errorCode = 3;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 3;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCShop)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ItemInfo* iteminfo_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_ShopMessage_2eproto();
  friend void protobuf_AssignDesc_ShopMessage_2eproto();
  friend void protobuf_ShutdownFile_ShopMessage_2eproto();

  void InitAsDefaultInstance();
  static GCShop* default_instance_;
};
// -------------------------------------------------------------------

class ItemInfo : public ::google::protobuf::Message {
 public:
  ItemInfo();
  virtual ~ItemInfo();

  ItemInfo(const ItemInfo& from);

  inline ItemInfo& operator=(const ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemInfo& default_instance();

  void Swap(ItemInfo* other);

  // implements Message ----------------------------------------------

  ItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemInfo& from);
  void MergeFrom(const ItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 temID = 1;
  inline bool has_temid() const;
  inline void clear_temid();
  static const int kTemIDFieldNumber = 1;
  inline ::google::protobuf::int64 temid() const;
  inline void set_temid(::google::protobuf::int64 value);

  // optional int32 currNum = 2;
  inline bool has_currnum() const;
  inline void clear_currnum();
  static const int kCurrNumFieldNumber = 2;
  inline ::google::protobuf::int32 currnum() const;
  inline void set_currnum(::google::protobuf::int32 value);

  // optional int32 bid = 3;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 3;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // optional int32 sid = 4;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 4;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int32 num = 5;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 5;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 bind = 6;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 6;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ItemInfo)
 private:
  inline void set_has_temid();
  inline void clear_has_temid();
  inline void set_has_currnum();
  inline void clear_has_currnum();
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_bind();
  inline void clear_has_bind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 temid_;
  ::google::protobuf::int32 currnum_;
  ::google::protobuf::int32 bid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 bind_;
  friend void  protobuf_AddDesc_ShopMessage_2eproto();
  friend void protobuf_AssignDesc_ShopMessage_2eproto();
  friend void protobuf_ShutdownFile_ShopMessage_2eproto();

  void InitAsDefaultInstance();
  static ItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class ShopItemInfo : public ::google::protobuf::Message {
 public:
  ShopItemInfo();
  virtual ~ShopItemInfo();

  ShopItemInfo(const ShopItemInfo& from);

  inline ShopItemInfo& operator=(const ShopItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopItemInfo& default_instance();

  void Swap(ShopItemInfo* other);

  // implements Message ----------------------------------------------

  ShopItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopItemInfo& from);
  void MergeFrom(const ShopItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 temID = 1;
  inline bool has_temid() const;
  inline void clear_temid();
  static const int kTemIDFieldNumber = 1;
  inline ::google::protobuf::int64 temid() const;
  inline void set_temid(::google::protobuf::int64 value);

  // optional int32 shopType = 2;
  inline bool has_shoptype() const;
  inline void clear_shoptype();
  static const int kShopTypeFieldNumber = 2;
  inline ::google::protobuf::int32 shoptype() const;
  inline void set_shoptype(::google::protobuf::int32 value);

  // optional int32 itemId = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 limitNumber = 4;
  inline bool has_limitnumber() const;
  inline void clear_limitnumber();
  static const int kLimitNumberFieldNumber = 4;
  inline ::google::protobuf::int32 limitnumber() const;
  inline void set_limitnumber(::google::protobuf::int32 value);

  // optional int32 oneBuyMax = 5;
  inline bool has_onebuymax() const;
  inline void clear_onebuymax();
  static const int kOneBuyMaxFieldNumber = 5;
  inline ::google::protobuf::int32 onebuymax() const;
  inline void set_onebuymax(::google::protobuf::int32 value);

  // optional int32 needMoney = 6;
  inline bool has_needmoney() const;
  inline void clear_needmoney();
  static const int kNeedMoneyFieldNumber = 6;
  inline ::google::protobuf::int32 needmoney() const;
  inline void set_needmoney(::google::protobuf::int32 value);

  // optional int32 price = 7;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 7;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional int32 discount = 8;
  inline bool has_discount() const;
  inline void clear_discount();
  static const int kDiscountFieldNumber = 8;
  inline ::google::protobuf::int32 discount() const;
  inline void set_discount(::google::protobuf::int32 value);

  // optional string limitparam = 9;
  inline bool has_limitparam() const;
  inline void clear_limitparam();
  static const int kLimitparamFieldNumber = 9;
  inline const ::std::string& limitparam() const;
  inline void set_limitparam(const ::std::string& value);
  inline void set_limitparam(const char* value);
  inline void set_limitparam(const char* value, size_t size);
  inline ::std::string* mutable_limitparam();
  inline ::std::string* release_limitparam();
  inline void set_allocated_limitparam(::std::string* limitparam);

  // optional int32 limitType = 10;
  inline bool has_limittype() const;
  inline void clear_limittype();
  static const int kLimitTypeFieldNumber = 10;
  inline ::google::protobuf::int32 limittype() const;
  inline void set_limittype(::google::protobuf::int32 value);

  // optional int32 cardId = 11;
  inline bool has_cardid() const;
  inline void clear_cardid();
  static const int kCardIdFieldNumber = 11;
  inline ::google::protobuf::int32 cardid() const;
  inline void set_cardid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ShopItemInfo)
 private:
  inline void set_has_temid();
  inline void clear_has_temid();
  inline void set_has_shoptype();
  inline void clear_has_shoptype();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_limitnumber();
  inline void clear_has_limitnumber();
  inline void set_has_onebuymax();
  inline void clear_has_onebuymax();
  inline void set_has_needmoney();
  inline void clear_has_needmoney();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_discount();
  inline void clear_has_discount();
  inline void set_has_limitparam();
  inline void clear_has_limitparam();
  inline void set_has_limittype();
  inline void clear_has_limittype();
  inline void set_has_cardid();
  inline void clear_has_cardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 temid_;
  ::google::protobuf::int32 shoptype_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 limitnumber_;
  ::google::protobuf::int32 onebuymax_;
  ::google::protobuf::int32 needmoney_;
  ::google::protobuf::int32 price_;
  ::std::string* limitparam_;
  ::google::protobuf::int32 discount_;
  ::google::protobuf::int32 limittype_;
  ::google::protobuf::int32 cardid_;
  friend void  protobuf_AddDesc_ShopMessage_2eproto();
  friend void protobuf_AssignDesc_ShopMessage_2eproto();
  friend void protobuf_ShutdownFile_ShopMessage_2eproto();

  void InitAsDefaultInstance();
  static ShopItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class ShopSingInfo : public ::google::protobuf::Message {
 public:
  ShopSingInfo();
  virtual ~ShopSingInfo();

  ShopSingInfo(const ShopSingInfo& from);

  inline ShopSingInfo& operator=(const ShopSingInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopSingInfo& default_instance();

  void Swap(ShopSingInfo* other);

  // implements Message ----------------------------------------------

  ShopSingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopSingInfo& from);
  void MergeFrom(const ShopSingInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline ::google::protobuf::int32 name() const;
  inline void set_name(::google::protobuf::int32 value);

  // optional int32 canSee = 3;
  inline bool has_cansee() const;
  inline void clear_cansee();
  static const int kCanSeeFieldNumber = 3;
  inline ::google::protobuf::int32 cansee() const;
  inline void set_cansee(::google::protobuf::int32 value);

  // optional int32 order = 4;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 4;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);

  // optional int32 card = 5;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 5;
  inline ::google::protobuf::int32 card() const;
  inline void set_card(::google::protobuf::int32 value);

  // optional string result = 6;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 6;
  inline const ::std::string& result() const;
  inline void set_result(const ::std::string& value);
  inline void set_result(const char* value);
  inline void set_result(const char* value, size_t size);
  inline ::std::string* mutable_result();
  inline ::std::string* release_result();
  inline void set_allocated_result(::std::string* result);

  // repeated .ShopCardInfo ShopCardInfo = 7;
  inline int shopcardinfo_size() const;
  inline void clear_shopcardinfo();
  static const int kShopCardInfoFieldNumber = 7;
  inline const ::ShopCardInfo& shopcardinfo(int index) const;
  inline ::ShopCardInfo* mutable_shopcardinfo(int index);
  inline ::ShopCardInfo* add_shopcardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ShopCardInfo >&
      shopcardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ShopCardInfo >*
      mutable_shopcardinfo();

  // optional int32 storeType = 8;
  inline bool has_storetype() const;
  inline void clear_storetype();
  static const int kStoreTypeFieldNumber = 8;
  inline ::google::protobuf::int32 storetype() const;
  inline void set_storetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ShopSingInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_cansee();
  inline void clear_has_cansee();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_storetype();
  inline void clear_has_storetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 name_;
  ::google::protobuf::int32 cansee_;
  ::google::protobuf::int32 order_;
  ::std::string* result_;
  ::google::protobuf::int32 card_;
  ::google::protobuf::int32 storetype_;
  ::google::protobuf::RepeatedPtrField< ::ShopCardInfo > shopcardinfo_;
  friend void  protobuf_AddDesc_ShopMessage_2eproto();
  friend void protobuf_AssignDesc_ShopMessage_2eproto();
  friend void protobuf_ShutdownFile_ShopMessage_2eproto();

  void InitAsDefaultInstance();
  static ShopSingInfo* default_instance_;
};
// -------------------------------------------------------------------

class ShopCardInfo : public ::google::protobuf::Message {
 public:
  ShopCardInfo();
  virtual ~ShopCardInfo();

  ShopCardInfo(const ShopCardInfo& from);

  inline ShopCardInfo& operator=(const ShopCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopCardInfo& default_instance();

  void Swap(ShopCardInfo* other);

  // implements Message ----------------------------------------------

  ShopCardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopCardInfo& from);
  void MergeFrom(const ShopCardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cardId = 1;
  inline bool has_cardid() const;
  inline void clear_cardid();
  static const int kCardIdFieldNumber = 1;
  inline ::google::protobuf::int32 cardid() const;
  inline void set_cardid(::google::protobuf::int32 value);

  // optional string CardName = 2;
  inline bool has_cardname() const;
  inline void clear_cardname();
  static const int kCardNameFieldNumber = 2;
  inline const ::std::string& cardname() const;
  inline void set_cardname(const ::std::string& value);
  inline void set_cardname(const char* value);
  inline void set_cardname(const char* value, size_t size);
  inline ::std::string* mutable_cardname();
  inline ::std::string* release_cardname();
  inline void set_allocated_cardname(::std::string* cardname);

  // @@protoc_insertion_point(class_scope:ShopCardInfo)
 private:
  inline void set_has_cardid();
  inline void clear_has_cardid();
  inline void set_has_cardname();
  inline void clear_has_cardname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* cardname_;
  ::google::protobuf::int32 cardid_;
  friend void  protobuf_AddDesc_ShopMessage_2eproto();
  friend void protobuf_AssignDesc_ShopMessage_2eproto();
  friend void protobuf_ShutdownFile_ShopMessage_2eproto();

  void InitAsDefaultInstance();
  static ShopCardInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCPushShopData : public ::google::protobuf::Message {
 public:
  GCPushShopData();
  virtual ~GCPushShopData();

  GCPushShopData(const GCPushShopData& from);

  inline GCPushShopData& operator=(const GCPushShopData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPushShopData& default_instance();

  void Swap(GCPushShopData* other);

  // implements Message ----------------------------------------------

  GCPushShopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPushShopData& from);
  void MergeFrom(const GCPushShopData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ShopItemInfo shopData = 1;
  inline int shopdata_size() const;
  inline void clear_shopdata();
  static const int kShopDataFieldNumber = 1;
  inline const ::ShopItemInfo& shopdata(int index) const;
  inline ::ShopItemInfo* mutable_shopdata(int index);
  inline ::ShopItemInfo* add_shopdata();
  inline const ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >&
      shopdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >*
      mutable_shopdata();

  // repeated .ShopSingInfo shopSing = 2;
  inline int shopsing_size() const;
  inline void clear_shopsing();
  static const int kShopSingFieldNumber = 2;
  inline const ::ShopSingInfo& shopsing(int index) const;
  inline ::ShopSingInfo* mutable_shopsing(int index);
  inline ::ShopSingInfo* add_shopsing();
  inline const ::google::protobuf::RepeatedPtrField< ::ShopSingInfo >&
      shopsing() const;
  inline ::google::protobuf::RepeatedPtrField< ::ShopSingInfo >*
      mutable_shopsing();

  // @@protoc_insertion_point(class_scope:GCPushShopData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ShopItemInfo > shopdata_;
  ::google::protobuf::RepeatedPtrField< ::ShopSingInfo > shopsing_;
  friend void  protobuf_AddDesc_ShopMessage_2eproto();
  friend void protobuf_AssignDesc_ShopMessage_2eproto();
  friend void protobuf_ShutdownFile_ShopMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPushShopData* default_instance_;
};
// -------------------------------------------------------------------

class GCAddShopItemData : public ::google::protobuf::Message {
 public:
  GCAddShopItemData();
  virtual ~GCAddShopItemData();

  GCAddShopItemData(const GCAddShopItemData& from);

  inline GCAddShopItemData& operator=(const GCAddShopItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCAddShopItemData& default_instance();

  void Swap(GCAddShopItemData* other);

  // implements Message ----------------------------------------------

  GCAddShopItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCAddShopItemData& from);
  void MergeFrom(const GCAddShopItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ShopItemInfo shopData = 1;
  inline int shopdata_size() const;
  inline void clear_shopdata();
  static const int kShopDataFieldNumber = 1;
  inline const ::ShopItemInfo& shopdata(int index) const;
  inline ::ShopItemInfo* mutable_shopdata(int index);
  inline ::ShopItemInfo* add_shopdata();
  inline const ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >&
      shopdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >*
      mutable_shopdata();

  // @@protoc_insertion_point(class_scope:GCAddShopItemData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ShopItemInfo > shopdata_;
  friend void  protobuf_AddDesc_ShopMessage_2eproto();
  friend void protobuf_AssignDesc_ShopMessage_2eproto();
  friend void protobuf_ShutdownFile_ShopMessage_2eproto();

  void InitAsDefaultInstance();
  static GCAddShopItemData* default_instance_;
};
// -------------------------------------------------------------------

class DelItemData : public ::google::protobuf::Message {
 public:
  DelItemData();
  virtual ~DelItemData();

  DelItemData(const DelItemData& from);

  inline DelItemData& operator=(const DelItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelItemData& default_instance();

  void Swap(DelItemData* other);

  // implements Message ----------------------------------------------

  DelItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelItemData& from);
  void MergeFrom(const DelItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:DelItemData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_ShopMessage_2eproto();
  friend void protobuf_AssignDesc_ShopMessage_2eproto();
  friend void protobuf_ShutdownFile_ShopMessage_2eproto();

  void InitAsDefaultInstance();
  static DelItemData* default_instance_;
};
// -------------------------------------------------------------------

class GCDelShopItemData : public ::google::protobuf::Message {
 public:
  GCDelShopItemData();
  virtual ~GCDelShopItemData();

  GCDelShopItemData(const GCDelShopItemData& from);

  inline GCDelShopItemData& operator=(const GCDelShopItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDelShopItemData& default_instance();

  void Swap(GCDelShopItemData* other);

  // implements Message ----------------------------------------------

  GCDelShopItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDelShopItemData& from);
  void MergeFrom(const GCDelShopItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DelItemData shopData = 1;
  inline int shopdata_size() const;
  inline void clear_shopdata();
  static const int kShopDataFieldNumber = 1;
  inline const ::DelItemData& shopdata(int index) const;
  inline ::DelItemData* mutable_shopdata(int index);
  inline ::DelItemData* add_shopdata();
  inline const ::google::protobuf::RepeatedPtrField< ::DelItemData >&
      shopdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::DelItemData >*
      mutable_shopdata();

  // @@protoc_insertion_point(class_scope:GCDelShopItemData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DelItemData > shopdata_;
  friend void  protobuf_AddDesc_ShopMessage_2eproto();
  friend void protobuf_AssignDesc_ShopMessage_2eproto();
  friend void protobuf_ShutdownFile_ShopMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDelShopItemData* default_instance_;
};
// -------------------------------------------------------------------

class CGShopLuckDraw : public ::google::protobuf::Message {
 public:
  CGShopLuckDraw();
  virtual ~CGShopLuckDraw();

  CGShopLuckDraw(const CGShopLuckDraw& from);

  inline CGShopLuckDraw& operator=(const CGShopLuckDraw& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGShopLuckDraw& default_instance();

  void Swap(CGShopLuckDraw* other);

  // implements Message ----------------------------------------------

  CGShopLuckDraw* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGShopLuckDraw& from);
  void MergeFrom(const CGShopLuckDraw& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGShopLuckDraw)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_ShopMessage_2eproto();
  friend void protobuf_AssignDesc_ShopMessage_2eproto();
  friend void protobuf_ShutdownFile_ShopMessage_2eproto();

  void InitAsDefaultInstance();
  static CGShopLuckDraw* default_instance_;
};
// -------------------------------------------------------------------

class GCPushShop : public ::google::protobuf::Message {
 public:
  GCPushShop();
  virtual ~GCPushShop();

  GCPushShop(const GCPushShop& from);

  inline GCPushShop& operator=(const GCPushShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPushShop& default_instance();

  void Swap(GCPushShop* other);

  // implements Message ----------------------------------------------

  GCPushShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPushShop& from);
  void MergeFrom(const GCPushShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .ItemInfo itemInfo = 2;
  inline int iteminfo_size() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 2;
  inline const ::ItemInfo& iteminfo(int index) const;
  inline ::ItemInfo* mutable_iteminfo(int index);
  inline ::ItemInfo* add_iteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
      iteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
      mutable_iteminfo();

  // optional int32 errorCode = 3;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 3;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCPushShop)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ItemInfo > iteminfo_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_ShopMessage_2eproto();
  friend void protobuf_AssignDesc_ShopMessage_2eproto();
  friend void protobuf_ShutdownFile_ShopMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPushShop* default_instance_;
};
// ===================================================================


// ===================================================================

// CGShop

// optional int32 type = 1;
inline bool CGShop::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGShop::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGShop::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGShop::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGShop::type() const {
  // @@protoc_insertion_point(field_get:CGShop.type)
  return type_;
}
inline void CGShop::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGShop.type)
}

// optional int64 id = 2;
inline bool CGShop::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGShop::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGShop::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGShop::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 CGShop::id() const {
  // @@protoc_insertion_point(field_get:CGShop.id)
  return id_;
}
inline void CGShop::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGShop.id)
}

// optional int32 num = 3;
inline bool CGShop::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGShop::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGShop::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGShop::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 CGShop::num() const {
  // @@protoc_insertion_point(field_get:CGShop.num)
  return num_;
}
inline void CGShop::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:CGShop.num)
}

// -------------------------------------------------------------------

// GCShop

// optional int32 type = 1;
inline bool GCShop::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCShop::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCShop::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCShop::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCShop::type() const {
  // @@protoc_insertion_point(field_get:GCShop.type)
  return type_;
}
inline void GCShop::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCShop.type)
}

// optional .ItemInfo itemInfo = 2;
inline bool GCShop::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCShop::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCShop::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCShop::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::ItemInfo::Clear();
  clear_has_iteminfo();
}
inline const ::ItemInfo& GCShop::iteminfo() const {
  // @@protoc_insertion_point(field_get:GCShop.itemInfo)
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::ItemInfo* GCShop::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::ItemInfo;
  // @@protoc_insertion_point(field_mutable:GCShop.itemInfo)
  return iteminfo_;
}
inline ::ItemInfo* GCShop::release_iteminfo() {
  clear_has_iteminfo();
  ::ItemInfo* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline void GCShop::set_allocated_iteminfo(::ItemInfo* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCShop.itemInfo)
}

// optional int32 errorCode = 3;
inline bool GCShop::has_errorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCShop::set_has_errorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCShop::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCShop::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 GCShop::errorcode() const {
  // @@protoc_insertion_point(field_get:GCShop.errorCode)
  return errorcode_;
}
inline void GCShop::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:GCShop.errorCode)
}

// -------------------------------------------------------------------

// ItemInfo

// optional int64 temID = 1;
inline bool ItemInfo::has_temid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemInfo::set_has_temid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemInfo::clear_has_temid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemInfo::clear_temid() {
  temid_ = GOOGLE_LONGLONG(0);
  clear_has_temid();
}
inline ::google::protobuf::int64 ItemInfo::temid() const {
  // @@protoc_insertion_point(field_get:ItemInfo.temID)
  return temid_;
}
inline void ItemInfo::set_temid(::google::protobuf::int64 value) {
  set_has_temid();
  temid_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.temID)
}

// optional int32 currNum = 2;
inline bool ItemInfo::has_currnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemInfo::set_has_currnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemInfo::clear_has_currnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemInfo::clear_currnum() {
  currnum_ = 0;
  clear_has_currnum();
}
inline ::google::protobuf::int32 ItemInfo::currnum() const {
  // @@protoc_insertion_point(field_get:ItemInfo.currNum)
  return currnum_;
}
inline void ItemInfo::set_currnum(::google::protobuf::int32 value) {
  set_has_currnum();
  currnum_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.currNum)
}

// optional int32 bid = 3;
inline bool ItemInfo::has_bid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemInfo::set_has_bid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemInfo::clear_has_bid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemInfo::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 ItemInfo::bid() const {
  // @@protoc_insertion_point(field_get:ItemInfo.bid)
  return bid_;
}
inline void ItemInfo::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.bid)
}

// optional int32 sid = 4;
inline bool ItemInfo::has_sid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemInfo::set_has_sid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemInfo::clear_has_sid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemInfo::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 ItemInfo::sid() const {
  // @@protoc_insertion_point(field_get:ItemInfo.sid)
  return sid_;
}
inline void ItemInfo::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.sid)
}

// optional int32 num = 5;
inline bool ItemInfo::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemInfo::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ItemInfo::num() const {
  // @@protoc_insertion_point(field_get:ItemInfo.num)
  return num_;
}
inline void ItemInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.num)
}

// optional int32 bind = 6;
inline bool ItemInfo::has_bind() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemInfo::set_has_bind() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemInfo::clear_has_bind() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemInfo::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 ItemInfo::bind() const {
  // @@protoc_insertion_point(field_get:ItemInfo.bind)
  return bind_;
}
inline void ItemInfo::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.bind)
}

// -------------------------------------------------------------------

// ShopItemInfo

// optional int64 temID = 1;
inline bool ShopItemInfo::has_temid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopItemInfo::set_has_temid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopItemInfo::clear_has_temid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopItemInfo::clear_temid() {
  temid_ = GOOGLE_LONGLONG(0);
  clear_has_temid();
}
inline ::google::protobuf::int64 ShopItemInfo::temid() const {
  // @@protoc_insertion_point(field_get:ShopItemInfo.temID)
  return temid_;
}
inline void ShopItemInfo::set_temid(::google::protobuf::int64 value) {
  set_has_temid();
  temid_ = value;
  // @@protoc_insertion_point(field_set:ShopItemInfo.temID)
}

// optional int32 shopType = 2;
inline bool ShopItemInfo::has_shoptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopItemInfo::set_has_shoptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopItemInfo::clear_has_shoptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopItemInfo::clear_shoptype() {
  shoptype_ = 0;
  clear_has_shoptype();
}
inline ::google::protobuf::int32 ShopItemInfo::shoptype() const {
  // @@protoc_insertion_point(field_get:ShopItemInfo.shopType)
  return shoptype_;
}
inline void ShopItemInfo::set_shoptype(::google::protobuf::int32 value) {
  set_has_shoptype();
  shoptype_ = value;
  // @@protoc_insertion_point(field_set:ShopItemInfo.shopType)
}

// optional int32 itemId = 3;
inline bool ShopItemInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopItemInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopItemInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopItemInfo::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 ShopItemInfo::itemid() const {
  // @@protoc_insertion_point(field_get:ShopItemInfo.itemId)
  return itemid_;
}
inline void ShopItemInfo::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:ShopItemInfo.itemId)
}

// optional int32 limitNumber = 4;
inline bool ShopItemInfo::has_limitnumber() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShopItemInfo::set_has_limitnumber() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShopItemInfo::clear_has_limitnumber() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShopItemInfo::clear_limitnumber() {
  limitnumber_ = 0;
  clear_has_limitnumber();
}
inline ::google::protobuf::int32 ShopItemInfo::limitnumber() const {
  // @@protoc_insertion_point(field_get:ShopItemInfo.limitNumber)
  return limitnumber_;
}
inline void ShopItemInfo::set_limitnumber(::google::protobuf::int32 value) {
  set_has_limitnumber();
  limitnumber_ = value;
  // @@protoc_insertion_point(field_set:ShopItemInfo.limitNumber)
}

// optional int32 oneBuyMax = 5;
inline bool ShopItemInfo::has_onebuymax() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShopItemInfo::set_has_onebuymax() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShopItemInfo::clear_has_onebuymax() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShopItemInfo::clear_onebuymax() {
  onebuymax_ = 0;
  clear_has_onebuymax();
}
inline ::google::protobuf::int32 ShopItemInfo::onebuymax() const {
  // @@protoc_insertion_point(field_get:ShopItemInfo.oneBuyMax)
  return onebuymax_;
}
inline void ShopItemInfo::set_onebuymax(::google::protobuf::int32 value) {
  set_has_onebuymax();
  onebuymax_ = value;
  // @@protoc_insertion_point(field_set:ShopItemInfo.oneBuyMax)
}

// optional int32 needMoney = 6;
inline bool ShopItemInfo::has_needmoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShopItemInfo::set_has_needmoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShopItemInfo::clear_has_needmoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShopItemInfo::clear_needmoney() {
  needmoney_ = 0;
  clear_has_needmoney();
}
inline ::google::protobuf::int32 ShopItemInfo::needmoney() const {
  // @@protoc_insertion_point(field_get:ShopItemInfo.needMoney)
  return needmoney_;
}
inline void ShopItemInfo::set_needmoney(::google::protobuf::int32 value) {
  set_has_needmoney();
  needmoney_ = value;
  // @@protoc_insertion_point(field_set:ShopItemInfo.needMoney)
}

// optional int32 price = 7;
inline bool ShopItemInfo::has_price() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShopItemInfo::set_has_price() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShopItemInfo::clear_has_price() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShopItemInfo::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 ShopItemInfo::price() const {
  // @@protoc_insertion_point(field_get:ShopItemInfo.price)
  return price_;
}
inline void ShopItemInfo::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:ShopItemInfo.price)
}

// optional int32 discount = 8;
inline bool ShopItemInfo::has_discount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShopItemInfo::set_has_discount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShopItemInfo::clear_has_discount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShopItemInfo::clear_discount() {
  discount_ = 0;
  clear_has_discount();
}
inline ::google::protobuf::int32 ShopItemInfo::discount() const {
  // @@protoc_insertion_point(field_get:ShopItemInfo.discount)
  return discount_;
}
inline void ShopItemInfo::set_discount(::google::protobuf::int32 value) {
  set_has_discount();
  discount_ = value;
  // @@protoc_insertion_point(field_set:ShopItemInfo.discount)
}

// optional string limitparam = 9;
inline bool ShopItemInfo::has_limitparam() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ShopItemInfo::set_has_limitparam() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ShopItemInfo::clear_has_limitparam() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ShopItemInfo::clear_limitparam() {
  if (limitparam_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitparam_->clear();
  }
  clear_has_limitparam();
}
inline const ::std::string& ShopItemInfo::limitparam() const {
  // @@protoc_insertion_point(field_get:ShopItemInfo.limitparam)
  return *limitparam_;
}
inline void ShopItemInfo::set_limitparam(const ::std::string& value) {
  set_has_limitparam();
  if (limitparam_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitparam_ = new ::std::string;
  }
  limitparam_->assign(value);
  // @@protoc_insertion_point(field_set:ShopItemInfo.limitparam)
}
inline void ShopItemInfo::set_limitparam(const char* value) {
  set_has_limitparam();
  if (limitparam_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitparam_ = new ::std::string;
  }
  limitparam_->assign(value);
  // @@protoc_insertion_point(field_set_char:ShopItemInfo.limitparam)
}
inline void ShopItemInfo::set_limitparam(const char* value, size_t size) {
  set_has_limitparam();
  if (limitparam_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitparam_ = new ::std::string;
  }
  limitparam_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ShopItemInfo.limitparam)
}
inline ::std::string* ShopItemInfo::mutable_limitparam() {
  set_has_limitparam();
  if (limitparam_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitparam_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ShopItemInfo.limitparam)
  return limitparam_;
}
inline ::std::string* ShopItemInfo::release_limitparam() {
  clear_has_limitparam();
  if (limitparam_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = limitparam_;
    limitparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShopItemInfo::set_allocated_limitparam(::std::string* limitparam) {
  if (limitparam_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete limitparam_;
  }
  if (limitparam) {
    set_has_limitparam();
    limitparam_ = limitparam;
  } else {
    clear_has_limitparam();
    limitparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ShopItemInfo.limitparam)
}

// optional int32 limitType = 10;
inline bool ShopItemInfo::has_limittype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ShopItemInfo::set_has_limittype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ShopItemInfo::clear_has_limittype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ShopItemInfo::clear_limittype() {
  limittype_ = 0;
  clear_has_limittype();
}
inline ::google::protobuf::int32 ShopItemInfo::limittype() const {
  // @@protoc_insertion_point(field_get:ShopItemInfo.limitType)
  return limittype_;
}
inline void ShopItemInfo::set_limittype(::google::protobuf::int32 value) {
  set_has_limittype();
  limittype_ = value;
  // @@protoc_insertion_point(field_set:ShopItemInfo.limitType)
}

// optional int32 cardId = 11;
inline bool ShopItemInfo::has_cardid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ShopItemInfo::set_has_cardid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ShopItemInfo::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ShopItemInfo::clear_cardid() {
  cardid_ = 0;
  clear_has_cardid();
}
inline ::google::protobuf::int32 ShopItemInfo::cardid() const {
  // @@protoc_insertion_point(field_get:ShopItemInfo.cardId)
  return cardid_;
}
inline void ShopItemInfo::set_cardid(::google::protobuf::int32 value) {
  set_has_cardid();
  cardid_ = value;
  // @@protoc_insertion_point(field_set:ShopItemInfo.cardId)
}

// -------------------------------------------------------------------

// ShopSingInfo

// optional int32 id = 1;
inline bool ShopSingInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopSingInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopSingInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopSingInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ShopSingInfo::id() const {
  // @@protoc_insertion_point(field_get:ShopSingInfo.id)
  return id_;
}
inline void ShopSingInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ShopSingInfo.id)
}

// optional int32 name = 2;
inline bool ShopSingInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopSingInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopSingInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopSingInfo::clear_name() {
  name_ = 0;
  clear_has_name();
}
inline ::google::protobuf::int32 ShopSingInfo::name() const {
  // @@protoc_insertion_point(field_get:ShopSingInfo.name)
  return name_;
}
inline void ShopSingInfo::set_name(::google::protobuf::int32 value) {
  set_has_name();
  name_ = value;
  // @@protoc_insertion_point(field_set:ShopSingInfo.name)
}

// optional int32 canSee = 3;
inline bool ShopSingInfo::has_cansee() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopSingInfo::set_has_cansee() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopSingInfo::clear_has_cansee() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopSingInfo::clear_cansee() {
  cansee_ = 0;
  clear_has_cansee();
}
inline ::google::protobuf::int32 ShopSingInfo::cansee() const {
  // @@protoc_insertion_point(field_get:ShopSingInfo.canSee)
  return cansee_;
}
inline void ShopSingInfo::set_cansee(::google::protobuf::int32 value) {
  set_has_cansee();
  cansee_ = value;
  // @@protoc_insertion_point(field_set:ShopSingInfo.canSee)
}

// optional int32 order = 4;
inline bool ShopSingInfo::has_order() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShopSingInfo::set_has_order() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShopSingInfo::clear_has_order() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShopSingInfo::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 ShopSingInfo::order() const {
  // @@protoc_insertion_point(field_get:ShopSingInfo.order)
  return order_;
}
inline void ShopSingInfo::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:ShopSingInfo.order)
}

// optional int32 card = 5;
inline bool ShopSingInfo::has_card() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShopSingInfo::set_has_card() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShopSingInfo::clear_has_card() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShopSingInfo::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::google::protobuf::int32 ShopSingInfo::card() const {
  // @@protoc_insertion_point(field_get:ShopSingInfo.card)
  return card_;
}
inline void ShopSingInfo::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
  // @@protoc_insertion_point(field_set:ShopSingInfo.card)
}

// optional string result = 6;
inline bool ShopSingInfo::has_result() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShopSingInfo::set_has_result() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShopSingInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShopSingInfo::clear_result() {
  if (result_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_->clear();
  }
  clear_has_result();
}
inline const ::std::string& ShopSingInfo::result() const {
  // @@protoc_insertion_point(field_get:ShopSingInfo.result)
  return *result_;
}
inline void ShopSingInfo::set_result(const ::std::string& value) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  result_->assign(value);
  // @@protoc_insertion_point(field_set:ShopSingInfo.result)
}
inline void ShopSingInfo::set_result(const char* value) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  result_->assign(value);
  // @@protoc_insertion_point(field_set_char:ShopSingInfo.result)
}
inline void ShopSingInfo::set_result(const char* value, size_t size) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  result_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ShopSingInfo.result)
}
inline ::std::string* ShopSingInfo::mutable_result() {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ShopSingInfo.result)
  return result_;
}
inline ::std::string* ShopSingInfo::release_result() {
  clear_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = result_;
    result_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShopSingInfo::set_allocated_result(::std::string* result) {
  if (result_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete result_;
  }
  if (result) {
    set_has_result();
    result_ = result;
  } else {
    clear_has_result();
    result_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ShopSingInfo.result)
}

// repeated .ShopCardInfo ShopCardInfo = 7;
inline int ShopSingInfo::shopcardinfo_size() const {
  return shopcardinfo_.size();
}
inline void ShopSingInfo::clear_shopcardinfo() {
  shopcardinfo_.Clear();
}
inline const ::ShopCardInfo& ShopSingInfo::shopcardinfo(int index) const {
  // @@protoc_insertion_point(field_get:ShopSingInfo.ShopCardInfo)
  return shopcardinfo_.Get(index);
}
inline ::ShopCardInfo* ShopSingInfo::mutable_shopcardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:ShopSingInfo.ShopCardInfo)
  return shopcardinfo_.Mutable(index);
}
inline ::ShopCardInfo* ShopSingInfo::add_shopcardinfo() {
  // @@protoc_insertion_point(field_add:ShopSingInfo.ShopCardInfo)
  return shopcardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ShopCardInfo >&
ShopSingInfo::shopcardinfo() const {
  // @@protoc_insertion_point(field_list:ShopSingInfo.ShopCardInfo)
  return shopcardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ShopCardInfo >*
ShopSingInfo::mutable_shopcardinfo() {
  // @@protoc_insertion_point(field_mutable_list:ShopSingInfo.ShopCardInfo)
  return &shopcardinfo_;
}

// optional int32 storeType = 8;
inline bool ShopSingInfo::has_storetype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShopSingInfo::set_has_storetype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShopSingInfo::clear_has_storetype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShopSingInfo::clear_storetype() {
  storetype_ = 0;
  clear_has_storetype();
}
inline ::google::protobuf::int32 ShopSingInfo::storetype() const {
  // @@protoc_insertion_point(field_get:ShopSingInfo.storeType)
  return storetype_;
}
inline void ShopSingInfo::set_storetype(::google::protobuf::int32 value) {
  set_has_storetype();
  storetype_ = value;
  // @@protoc_insertion_point(field_set:ShopSingInfo.storeType)
}

// -------------------------------------------------------------------

// ShopCardInfo

// optional int32 cardId = 1;
inline bool ShopCardInfo::has_cardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopCardInfo::set_has_cardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopCardInfo::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopCardInfo::clear_cardid() {
  cardid_ = 0;
  clear_has_cardid();
}
inline ::google::protobuf::int32 ShopCardInfo::cardid() const {
  // @@protoc_insertion_point(field_get:ShopCardInfo.cardId)
  return cardid_;
}
inline void ShopCardInfo::set_cardid(::google::protobuf::int32 value) {
  set_has_cardid();
  cardid_ = value;
  // @@protoc_insertion_point(field_set:ShopCardInfo.cardId)
}

// optional string CardName = 2;
inline bool ShopCardInfo::has_cardname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopCardInfo::set_has_cardname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopCardInfo::clear_has_cardname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopCardInfo::clear_cardname() {
  if (cardname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cardname_->clear();
  }
  clear_has_cardname();
}
inline const ::std::string& ShopCardInfo::cardname() const {
  // @@protoc_insertion_point(field_get:ShopCardInfo.CardName)
  return *cardname_;
}
inline void ShopCardInfo::set_cardname(const ::std::string& value) {
  set_has_cardname();
  if (cardname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cardname_ = new ::std::string;
  }
  cardname_->assign(value);
  // @@protoc_insertion_point(field_set:ShopCardInfo.CardName)
}
inline void ShopCardInfo::set_cardname(const char* value) {
  set_has_cardname();
  if (cardname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cardname_ = new ::std::string;
  }
  cardname_->assign(value);
  // @@protoc_insertion_point(field_set_char:ShopCardInfo.CardName)
}
inline void ShopCardInfo::set_cardname(const char* value, size_t size) {
  set_has_cardname();
  if (cardname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cardname_ = new ::std::string;
  }
  cardname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ShopCardInfo.CardName)
}
inline ::std::string* ShopCardInfo::mutable_cardname() {
  set_has_cardname();
  if (cardname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cardname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ShopCardInfo.CardName)
  return cardname_;
}
inline ::std::string* ShopCardInfo::release_cardname() {
  clear_has_cardname();
  if (cardname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = cardname_;
    cardname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShopCardInfo::set_allocated_cardname(::std::string* cardname) {
  if (cardname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cardname_;
  }
  if (cardname) {
    set_has_cardname();
    cardname_ = cardname;
  } else {
    clear_has_cardname();
    cardname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ShopCardInfo.CardName)
}

// -------------------------------------------------------------------

// GCPushShopData

// repeated .ShopItemInfo shopData = 1;
inline int GCPushShopData::shopdata_size() const {
  return shopdata_.size();
}
inline void GCPushShopData::clear_shopdata() {
  shopdata_.Clear();
}
inline const ::ShopItemInfo& GCPushShopData::shopdata(int index) const {
  // @@protoc_insertion_point(field_get:GCPushShopData.shopData)
  return shopdata_.Get(index);
}
inline ::ShopItemInfo* GCPushShopData::mutable_shopdata(int index) {
  // @@protoc_insertion_point(field_mutable:GCPushShopData.shopData)
  return shopdata_.Mutable(index);
}
inline ::ShopItemInfo* GCPushShopData::add_shopdata() {
  // @@protoc_insertion_point(field_add:GCPushShopData.shopData)
  return shopdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >&
GCPushShopData::shopdata() const {
  // @@protoc_insertion_point(field_list:GCPushShopData.shopData)
  return shopdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >*
GCPushShopData::mutable_shopdata() {
  // @@protoc_insertion_point(field_mutable_list:GCPushShopData.shopData)
  return &shopdata_;
}

// repeated .ShopSingInfo shopSing = 2;
inline int GCPushShopData::shopsing_size() const {
  return shopsing_.size();
}
inline void GCPushShopData::clear_shopsing() {
  shopsing_.Clear();
}
inline const ::ShopSingInfo& GCPushShopData::shopsing(int index) const {
  // @@protoc_insertion_point(field_get:GCPushShopData.shopSing)
  return shopsing_.Get(index);
}
inline ::ShopSingInfo* GCPushShopData::mutable_shopsing(int index) {
  // @@protoc_insertion_point(field_mutable:GCPushShopData.shopSing)
  return shopsing_.Mutable(index);
}
inline ::ShopSingInfo* GCPushShopData::add_shopsing() {
  // @@protoc_insertion_point(field_add:GCPushShopData.shopSing)
  return shopsing_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ShopSingInfo >&
GCPushShopData::shopsing() const {
  // @@protoc_insertion_point(field_list:GCPushShopData.shopSing)
  return shopsing_;
}
inline ::google::protobuf::RepeatedPtrField< ::ShopSingInfo >*
GCPushShopData::mutable_shopsing() {
  // @@protoc_insertion_point(field_mutable_list:GCPushShopData.shopSing)
  return &shopsing_;
}

// -------------------------------------------------------------------

// GCAddShopItemData

// repeated .ShopItemInfo shopData = 1;
inline int GCAddShopItemData::shopdata_size() const {
  return shopdata_.size();
}
inline void GCAddShopItemData::clear_shopdata() {
  shopdata_.Clear();
}
inline const ::ShopItemInfo& GCAddShopItemData::shopdata(int index) const {
  // @@protoc_insertion_point(field_get:GCAddShopItemData.shopData)
  return shopdata_.Get(index);
}
inline ::ShopItemInfo* GCAddShopItemData::mutable_shopdata(int index) {
  // @@protoc_insertion_point(field_mutable:GCAddShopItemData.shopData)
  return shopdata_.Mutable(index);
}
inline ::ShopItemInfo* GCAddShopItemData::add_shopdata() {
  // @@protoc_insertion_point(field_add:GCAddShopItemData.shopData)
  return shopdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >&
GCAddShopItemData::shopdata() const {
  // @@protoc_insertion_point(field_list:GCAddShopItemData.shopData)
  return shopdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >*
GCAddShopItemData::mutable_shopdata() {
  // @@protoc_insertion_point(field_mutable_list:GCAddShopItemData.shopData)
  return &shopdata_;
}

// -------------------------------------------------------------------

// DelItemData

// optional int32 type = 1;
inline bool DelItemData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelItemData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelItemData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelItemData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 DelItemData::type() const {
  // @@protoc_insertion_point(field_get:DelItemData.type)
  return type_;
}
inline void DelItemData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:DelItemData.type)
}

// optional int64 id = 2;
inline bool DelItemData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelItemData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelItemData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelItemData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 DelItemData::id() const {
  // @@protoc_insertion_point(field_get:DelItemData.id)
  return id_;
}
inline void DelItemData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:DelItemData.id)
}

// -------------------------------------------------------------------

// GCDelShopItemData

// repeated .DelItemData shopData = 1;
inline int GCDelShopItemData::shopdata_size() const {
  return shopdata_.size();
}
inline void GCDelShopItemData::clear_shopdata() {
  shopdata_.Clear();
}
inline const ::DelItemData& GCDelShopItemData::shopdata(int index) const {
  // @@protoc_insertion_point(field_get:GCDelShopItemData.shopData)
  return shopdata_.Get(index);
}
inline ::DelItemData* GCDelShopItemData::mutable_shopdata(int index) {
  // @@protoc_insertion_point(field_mutable:GCDelShopItemData.shopData)
  return shopdata_.Mutable(index);
}
inline ::DelItemData* GCDelShopItemData::add_shopdata() {
  // @@protoc_insertion_point(field_add:GCDelShopItemData.shopData)
  return shopdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DelItemData >&
GCDelShopItemData::shopdata() const {
  // @@protoc_insertion_point(field_list:GCDelShopItemData.shopData)
  return shopdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::DelItemData >*
GCDelShopItemData::mutable_shopdata() {
  // @@protoc_insertion_point(field_mutable_list:GCDelShopItemData.shopData)
  return &shopdata_;
}

// -------------------------------------------------------------------

// CGShopLuckDraw

// optional int32 type = 1;
inline bool CGShopLuckDraw::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGShopLuckDraw::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGShopLuckDraw::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGShopLuckDraw::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGShopLuckDraw::type() const {
  // @@protoc_insertion_point(field_get:CGShopLuckDraw.type)
  return type_;
}
inline void CGShopLuckDraw::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGShopLuckDraw.type)
}

// -------------------------------------------------------------------

// GCPushShop

// optional int32 type = 1;
inline bool GCPushShop::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPushShop::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPushShop::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPushShop::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCPushShop::type() const {
  // @@protoc_insertion_point(field_get:GCPushShop.type)
  return type_;
}
inline void GCPushShop::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCPushShop.type)
}

// repeated .ItemInfo itemInfo = 2;
inline int GCPushShop::iteminfo_size() const {
  return iteminfo_.size();
}
inline void GCPushShop::clear_iteminfo() {
  iteminfo_.Clear();
}
inline const ::ItemInfo& GCPushShop::iteminfo(int index) const {
  // @@protoc_insertion_point(field_get:GCPushShop.itemInfo)
  return iteminfo_.Get(index);
}
inline ::ItemInfo* GCPushShop::mutable_iteminfo(int index) {
  // @@protoc_insertion_point(field_mutable:GCPushShop.itemInfo)
  return iteminfo_.Mutable(index);
}
inline ::ItemInfo* GCPushShop::add_iteminfo() {
  // @@protoc_insertion_point(field_add:GCPushShop.itemInfo)
  return iteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
GCPushShop::iteminfo() const {
  // @@protoc_insertion_point(field_list:GCPushShop.itemInfo)
  return iteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
GCPushShop::mutable_iteminfo() {
  // @@protoc_insertion_point(field_mutable_list:GCPushShop.itemInfo)
  return &iteminfo_;
}

// optional int32 errorCode = 3;
inline bool GCPushShop::has_errorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCPushShop::set_has_errorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCPushShop::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCPushShop::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 GCPushShop::errorcode() const {
  // @@protoc_insertion_point(field_get:GCPushShop.errorCode)
  return errorcode_;
}
inline void GCPushShop::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:GCPushShop.errorCode)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ShopMessage_2eproto__INCLUDED
