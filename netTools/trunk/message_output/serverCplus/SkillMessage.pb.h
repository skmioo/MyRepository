// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SkillMessage.proto

#ifndef PROTOBUF_SkillMessage_2eproto__INCLUDED
#define PROTOBUF_SkillMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "InnerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SkillMessage_2eproto();
void protobuf_AssignDesc_SkillMessage_2eproto();
void protobuf_ShutdownFile_SkillMessage_2eproto();

class CGUseSkill;
class GCUseSkill;
class GCTriggerMotion;
class CGUpSkill;
class GCUpSkillOK;
class CGChangeSkill;
class GCChangeSkillOK;
class BuffImpactInfo;
class GCAddBuffImpact;
class GCDelBuffImpact;
class CGRefreshBuff;
class GCRefreshBuffBack;
class CombatResult;
class GCCombatResult;
class SkillCDInfo;
class GCRefreshSkillCDInfo;
class GCUseSkillResult;
class GCChangeMotion;

// ===================================================================

class CGUseSkill : public ::google::protobuf::Message {
 public:
  CGUseSkill();
  virtual ~CGUseSkill();

  CGUseSkill(const CGUseSkill& from);

  inline CGUseSkill& operator=(const CGUseSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGUseSkill& default_instance();

  void Swap(CGUseSkill* other);

  // implements Message ----------------------------------------------

  CGUseSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGUseSkill& from);
  void MergeFrom(const CGUseSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 skillIndex = 2;
  inline bool has_skillindex() const;
  inline void clear_skillindex();
  static const int kSkillIndexFieldNumber = 2;
  inline ::google::protobuf::int32 skillindex() const;
  inline void set_skillindex(::google::protobuf::int32 value);

  // optional .Vector3Info attackerPos = 3;
  inline bool has_attackerpos() const;
  inline void clear_attackerpos();
  static const int kAttackerPosFieldNumber = 3;
  inline const ::Vector3Info& attackerpos() const;
  inline ::Vector3Info* mutable_attackerpos();
  inline ::Vector3Info* release_attackerpos();
  inline void set_allocated_attackerpos(::Vector3Info* attackerpos);

  // repeated int64 targetObjIds = 4;
  inline int targetobjids_size() const;
  inline void clear_targetobjids();
  static const int kTargetObjIdsFieldNumber = 4;
  inline ::google::protobuf::int64 targetobjids(int index) const;
  inline void set_targetobjids(int index, ::google::protobuf::int64 value);
  inline void add_targetobjids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      targetobjids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_targetobjids();

  // optional int64 clientStartTime = 5;
  inline bool has_clientstarttime() const;
  inline void clear_clientstarttime();
  static const int kClientStartTimeFieldNumber = 5;
  inline ::google::protobuf::int64 clientstarttime() const;
  inline void set_clientstarttime(::google::protobuf::int64 value);

  // optional .Vector3Info attackerDirection = 6;
  inline bool has_attackerdirection() const;
  inline void clear_attackerdirection();
  static const int kAttackerDirectionFieldNumber = 6;
  inline const ::Vector3Info& attackerdirection() const;
  inline ::Vector3Info* mutable_attackerdirection();
  inline ::Vector3Info* release_attackerdirection();
  inline void set_allocated_attackerdirection(::Vector3Info* attackerdirection);

  // optional int64 attackerId = 7;
  inline bool has_attackerid() const;
  inline void clear_attackerid();
  static const int kAttackerIdFieldNumber = 7;
  inline ::google::protobuf::int64 attackerid() const;
  inline void set_attackerid(::google::protobuf::int64 value);

  // optional .Vector3Info targetPos = 8;
  inline bool has_targetpos() const;
  inline void clear_targetpos();
  static const int kTargetPosFieldNumber = 8;
  inline const ::Vector3Info& targetpos() const;
  inline ::Vector3Info* mutable_targetpos();
  inline ::Vector3Info* release_targetpos();
  inline void set_allocated_targetpos(::Vector3Info* targetpos);

  // @@protoc_insertion_point(class_scope:CGUseSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_skillindex();
  inline void clear_has_skillindex();
  inline void set_has_attackerpos();
  inline void clear_has_attackerpos();
  inline void set_has_clientstarttime();
  inline void clear_has_clientstarttime();
  inline void set_has_attackerdirection();
  inline void clear_has_attackerdirection();
  inline void set_has_attackerid();
  inline void clear_has_attackerid();
  inline void set_has_targetpos();
  inline void clear_has_targetpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 skillindex_;
  ::Vector3Info* attackerpos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > targetobjids_;
  ::google::protobuf::int64 clientstarttime_;
  ::Vector3Info* attackerdirection_;
  ::google::protobuf::int64 attackerid_;
  ::Vector3Info* targetpos_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static CGUseSkill* default_instance_;
};
// -------------------------------------------------------------------

class GCUseSkill : public ::google::protobuf::Message {
 public:
  GCUseSkill();
  virtual ~GCUseSkill();

  GCUseSkill(const GCUseSkill& from);

  inline GCUseSkill& operator=(const GCUseSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCUseSkill& default_instance();

  void Swap(GCUseSkill* other);

  // implements Message ----------------------------------------------

  GCUseSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCUseSkill& from);
  void MergeFrom(const GCUseSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 attackerId = 1;
  inline bool has_attackerid() const;
  inline void clear_attackerid();
  static const int kAttackerIdFieldNumber = 1;
  inline ::google::protobuf::int64 attackerid() const;
  inline void set_attackerid(::google::protobuf::int64 value);

  // optional int32 skillId = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 skillIndex = 3;
  inline bool has_skillindex() const;
  inline void clear_skillindex();
  static const int kSkillIndexFieldNumber = 3;
  inline ::google::protobuf::int32 skillindex() const;
  inline void set_skillindex(::google::protobuf::int32 value);

  // optional .Vector3Info attackerPos = 4;
  inline bool has_attackerpos() const;
  inline void clear_attackerpos();
  static const int kAttackerPosFieldNumber = 4;
  inline const ::Vector3Info& attackerpos() const;
  inline ::Vector3Info* mutable_attackerpos();
  inline ::Vector3Info* release_attackerpos();
  inline void set_allocated_attackerpos(::Vector3Info* attackerpos);

  // repeated int64 targetObjIds = 5;
  inline int targetobjids_size() const;
  inline void clear_targetobjids();
  static const int kTargetObjIdsFieldNumber = 5;
  inline ::google::protobuf::int64 targetobjids(int index) const;
  inline void set_targetobjids(int index, ::google::protobuf::int64 value);
  inline void add_targetobjids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      targetobjids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_targetobjids();

  // optional int64 clientStartTime = 6;
  inline bool has_clientstarttime() const;
  inline void clear_clientstarttime();
  static const int kClientStartTimeFieldNumber = 6;
  inline ::google::protobuf::int64 clientstarttime() const;
  inline void set_clientstarttime(::google::protobuf::int64 value);

  // optional .Vector3Info attackerDirection = 7;
  inline bool has_attackerdirection() const;
  inline void clear_attackerdirection();
  static const int kAttackerDirectionFieldNumber = 7;
  inline const ::Vector3Info& attackerdirection() const;
  inline ::Vector3Info* mutable_attackerdirection();
  inline ::Vector3Info* release_attackerdirection();
  inline void set_allocated_attackerdirection(::Vector3Info* attackerdirection);

  // repeated .SkillAttackRelation attackRelationList = 8;
  inline int attackrelationlist_size() const;
  inline void clear_attackrelationlist();
  static const int kAttackRelationListFieldNumber = 8;
  inline const ::SkillAttackRelation& attackrelationlist(int index) const;
  inline ::SkillAttackRelation* mutable_attackrelationlist(int index);
  inline ::SkillAttackRelation* add_attackrelationlist();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillAttackRelation >&
      attackrelationlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillAttackRelation >*
      mutable_attackrelationlist();

  // optional .Vector3Info targetPos = 9;
  inline bool has_targetpos() const;
  inline void clear_targetpos();
  static const int kTargetPosFieldNumber = 9;
  inline const ::Vector3Info& targetpos() const;
  inline ::Vector3Info* mutable_targetpos();
  inline ::Vector3Info* release_targetpos();
  inline void set_allocated_targetpos(::Vector3Info* targetpos);

  // @@protoc_insertion_point(class_scope:GCUseSkill)
 private:
  inline void set_has_attackerid();
  inline void clear_has_attackerid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_skillindex();
  inline void clear_has_skillindex();
  inline void set_has_attackerpos();
  inline void clear_has_attackerpos();
  inline void set_has_clientstarttime();
  inline void clear_has_clientstarttime();
  inline void set_has_attackerdirection();
  inline void clear_has_attackerdirection();
  inline void set_has_targetpos();
  inline void clear_has_targetpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 attackerid_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 skillindex_;
  ::Vector3Info* attackerpos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > targetobjids_;
  ::google::protobuf::int64 clientstarttime_;
  ::Vector3Info* attackerdirection_;
  ::google::protobuf::RepeatedPtrField< ::SkillAttackRelation > attackrelationlist_;
  ::Vector3Info* targetpos_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static GCUseSkill* default_instance_;
};
// -------------------------------------------------------------------

class GCTriggerMotion : public ::google::protobuf::Message {
 public:
  GCTriggerMotion();
  virtual ~GCTriggerMotion();

  GCTriggerMotion(const GCTriggerMotion& from);

  inline GCTriggerMotion& operator=(const GCTriggerMotion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCTriggerMotion& default_instance();

  void Swap(GCTriggerMotion* other);

  // implements Message ----------------------------------------------

  GCTriggerMotion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCTriggerMotion& from);
  void MergeFrom(const GCTriggerMotion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 motionId = 1;
  inline bool has_motionid() const;
  inline void clear_motionid();
  static const int kMotionIdFieldNumber = 1;
  inline ::google::protobuf::int32 motionid() const;
  inline void set_motionid(::google::protobuf::int32 value);

  // optional int64 targetId = 2;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIdFieldNumber = 2;
  inline ::google::protobuf::int64 targetid() const;
  inline void set_targetid(::google::protobuf::int64 value);

  // optional .Vector3Info targetPos = 3;
  inline bool has_targetpos() const;
  inline void clear_targetpos();
  static const int kTargetPosFieldNumber = 3;
  inline const ::Vector3Info& targetpos() const;
  inline ::Vector3Info* mutable_targetpos();
  inline ::Vector3Info* release_targetpos();
  inline void set_allocated_targetpos(::Vector3Info* targetpos);

  // optional .Vector3Info targetDir = 4;
  inline bool has_targetdir() const;
  inline void clear_targetdir();
  static const int kTargetDirFieldNumber = 4;
  inline const ::Vector3Info& targetdir() const;
  inline ::Vector3Info* mutable_targetdir();
  inline ::Vector3Info* release_targetdir();
  inline void set_allocated_targetdir(::Vector3Info* targetdir);

  // @@protoc_insertion_point(class_scope:GCTriggerMotion)
 private:
  inline void set_has_motionid();
  inline void clear_has_motionid();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_targetpos();
  inline void clear_has_targetpos();
  inline void set_has_targetdir();
  inline void clear_has_targetdir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 targetid_;
  ::Vector3Info* targetpos_;
  ::Vector3Info* targetdir_;
  ::google::protobuf::int32 motionid_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static GCTriggerMotion* default_instance_;
};
// -------------------------------------------------------------------

class CGUpSkill : public ::google::protobuf::Message {
 public:
  CGUpSkill();
  virtual ~CGUpSkill();

  CGUpSkill(const CGUpSkill& from);

  inline CGUpSkill& operator=(const CGUpSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGUpSkill& default_instance();

  void Swap(CGUpSkill* other);

  // implements Message ----------------------------------------------

  CGUpSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGUpSkill& from);
  void MergeFrom(const CGUpSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 flagall = 2;
  inline bool has_flagall() const;
  inline void clear_flagall();
  static const int kFlagallFieldNumber = 2;
  inline ::google::protobuf::int32 flagall() const;
  inline void set_flagall(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGUpSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_flagall();
  inline void clear_has_flagall();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 flagall_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static CGUpSkill* default_instance_;
};
// -------------------------------------------------------------------

class GCUpSkillOK : public ::google::protobuf::Message {
 public:
  GCUpSkillOK();
  virtual ~GCUpSkillOK();

  GCUpSkillOK(const GCUpSkillOK& from);

  inline GCUpSkillOK& operator=(const GCUpSkillOK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCUpSkillOK& default_instance();

  void Swap(GCUpSkillOK* other);

  // implements Message ----------------------------------------------

  GCUpSkillOK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCUpSkillOK& from);
  void MergeFrom(const GCUpSkillOK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // repeated .SkillItemData skilldata = 2;
  inline int skilldata_size() const;
  inline void clear_skilldata();
  static const int kSkilldataFieldNumber = 2;
  inline const ::SkillItemData& skilldata(int index) const;
  inline ::SkillItemData* mutable_skilldata(int index);
  inline ::SkillItemData* add_skilldata();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillItemData >&
      skilldata() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillItemData >*
      mutable_skilldata();

  // optional int32 skillFlag = 3;
  inline bool has_skillflag() const;
  inline void clear_skillflag();
  static const int kSkillFlagFieldNumber = 3;
  inline ::google::protobuf::int32 skillflag() const;
  inline void set_skillflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCUpSkillOK)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_skillflag();
  inline void clear_has_skillflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SkillItemData > skilldata_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 skillflag_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static GCUpSkillOK* default_instance_;
};
// -------------------------------------------------------------------

class CGChangeSkill : public ::google::protobuf::Message {
 public:
  CGChangeSkill();
  virtual ~CGChangeSkill();

  CGChangeSkill(const CGChangeSkill& from);

  inline CGChangeSkill& operator=(const CGChangeSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGChangeSkill& default_instance();

  void Swap(CGChangeSkill* other);

  // implements Message ----------------------------------------------

  CGChangeSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGChangeSkill& from);
  void MergeFrom(const CGChangeSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGChangeSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_position();
  inline void clear_has_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 position_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static CGChangeSkill* default_instance_;
};
// -------------------------------------------------------------------

class GCChangeSkillOK : public ::google::protobuf::Message {
 public:
  GCChangeSkillOK();
  virtual ~GCChangeSkillOK();

  GCChangeSkillOK(const GCChangeSkillOK& from);

  inline GCChangeSkillOK& operator=(const GCChangeSkillOK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCChangeSkillOK& default_instance();

  void Swap(GCChangeSkillOK* other);

  // implements Message ----------------------------------------------

  GCChangeSkillOK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCChangeSkillOK& from);
  void MergeFrom(const GCChangeSkillOK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // repeated .SkillItemData skilldata = 2;
  inline int skilldata_size() const;
  inline void clear_skilldata();
  static const int kSkilldataFieldNumber = 2;
  inline const ::SkillItemData& skilldata(int index) const;
  inline ::SkillItemData* mutable_skilldata(int index);
  inline ::SkillItemData* add_skilldata();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillItemData >&
      skilldata() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillItemData >*
      mutable_skilldata();

  // optional int32 skillFlag = 3;
  inline bool has_skillflag() const;
  inline void clear_skillflag();
  static const int kSkillFlagFieldNumber = 3;
  inline ::google::protobuf::int32 skillflag() const;
  inline void set_skillflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCChangeSkillOK)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_skillflag();
  inline void clear_has_skillflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SkillItemData > skilldata_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 skillflag_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static GCChangeSkillOK* default_instance_;
};
// -------------------------------------------------------------------

class BuffImpactInfo : public ::google::protobuf::Message {
 public:
  BuffImpactInfo();
  virtual ~BuffImpactInfo();

  BuffImpactInfo(const BuffImpactInfo& from);

  inline BuffImpactInfo& operator=(const BuffImpactInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffImpactInfo& default_instance();

  void Swap(BuffImpactInfo* other);

  // implements Message ----------------------------------------------

  BuffImpactInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffImpactInfo& from);
  void MergeFrom(const BuffImpactInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 buffGuid = 1;
  inline bool has_buffguid() const;
  inline void clear_buffguid();
  static const int kBuffGuidFieldNumber = 1;
  inline ::google::protobuf::int64 buffguid() const;
  inline void set_buffguid(::google::protobuf::int64 value);

  // optional int32 impactId = 2;
  inline bool has_impactid() const;
  inline void clear_impactid();
  static const int kImpactIdFieldNumber = 2;
  inline ::google::protobuf::int32 impactid() const;
  inline void set_impactid(::google::protobuf::int32 value);

  // optional int32 restTime = 3;
  inline bool has_resttime() const;
  inline void clear_resttime();
  static const int kRestTimeFieldNumber = 3;
  inline ::google::protobuf::int32 resttime() const;
  inline void set_resttime(::google::protobuf::int32 value);

  // repeated int32 params = 4;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 4;
  inline ::google::protobuf::int32 params(int index) const;
  inline void set_params(int index, ::google::protobuf::int32 value);
  inline void add_params(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      params() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_params();

  // @@protoc_insertion_point(class_scope:BuffImpactInfo)
 private:
  inline void set_has_buffguid();
  inline void clear_has_buffguid();
  inline void set_has_impactid();
  inline void clear_has_impactid();
  inline void set_has_resttime();
  inline void clear_has_resttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 buffguid_;
  ::google::protobuf::int32 impactid_;
  ::google::protobuf::int32 resttime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > params_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static BuffImpactInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCAddBuffImpact : public ::google::protobuf::Message {
 public:
  GCAddBuffImpact();
  virtual ~GCAddBuffImpact();

  GCAddBuffImpact(const GCAddBuffImpact& from);

  inline GCAddBuffImpact& operator=(const GCAddBuffImpact& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCAddBuffImpact& default_instance();

  void Swap(GCAddBuffImpact* other);

  // implements Message ----------------------------------------------

  GCAddBuffImpact* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCAddBuffImpact& from);
  void MergeFrom(const GCAddBuffImpact& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // repeated .BuffImpactInfo buffs = 2;
  inline int buffs_size() const;
  inline void clear_buffs();
  static const int kBuffsFieldNumber = 2;
  inline const ::BuffImpactInfo& buffs(int index) const;
  inline ::BuffImpactInfo* mutable_buffs(int index);
  inline ::BuffImpactInfo* add_buffs();
  inline const ::google::protobuf::RepeatedPtrField< ::BuffImpactInfo >&
      buffs() const;
  inline ::google::protobuf::RepeatedPtrField< ::BuffImpactInfo >*
      mutable_buffs();

  // @@protoc_insertion_point(class_scope:GCAddBuffImpact)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::google::protobuf::RepeatedPtrField< ::BuffImpactInfo > buffs_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static GCAddBuffImpact* default_instance_;
};
// -------------------------------------------------------------------

class GCDelBuffImpact : public ::google::protobuf::Message {
 public:
  GCDelBuffImpact();
  virtual ~GCDelBuffImpact();

  GCDelBuffImpact(const GCDelBuffImpact& from);

  inline GCDelBuffImpact& operator=(const GCDelBuffImpact& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDelBuffImpact& default_instance();

  void Swap(GCDelBuffImpact* other);

  // implements Message ----------------------------------------------

  GCDelBuffImpact* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDelBuffImpact& from);
  void MergeFrom(const GCDelBuffImpact& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // repeated int64 buffGuids = 2;
  inline int buffguids_size() const;
  inline void clear_buffguids();
  static const int kBuffGuidsFieldNumber = 2;
  inline ::google::protobuf::int64 buffguids(int index) const;
  inline void set_buffguids(int index, ::google::protobuf::int64 value);
  inline void add_buffguids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      buffguids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_buffguids();

  // @@protoc_insertion_point(class_scope:GCDelBuffImpact)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > buffguids_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDelBuffImpact* default_instance_;
};
// -------------------------------------------------------------------

class CGRefreshBuff : public ::google::protobuf::Message {
 public:
  CGRefreshBuff();
  virtual ~CGRefreshBuff();

  CGRefreshBuff(const CGRefreshBuff& from);

  inline CGRefreshBuff& operator=(const CGRefreshBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGRefreshBuff& default_instance();

  void Swap(CGRefreshBuff* other);

  // implements Message ----------------------------------------------

  CGRefreshBuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGRefreshBuff& from);
  void MergeFrom(const CGRefreshBuff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGRefreshBuff)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static CGRefreshBuff* default_instance_;
};
// -------------------------------------------------------------------

class GCRefreshBuffBack : public ::google::protobuf::Message {
 public:
  GCRefreshBuffBack();
  virtual ~GCRefreshBuffBack();

  GCRefreshBuffBack(const GCRefreshBuffBack& from);

  inline GCRefreshBuffBack& operator=(const GCRefreshBuffBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRefreshBuffBack& default_instance();

  void Swap(GCRefreshBuffBack* other);

  // implements Message ----------------------------------------------

  GCRefreshBuffBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRefreshBuffBack& from);
  void MergeFrom(const GCRefreshBuffBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BuffImpactInfo buffs = 1;
  inline int buffs_size() const;
  inline void clear_buffs();
  static const int kBuffsFieldNumber = 1;
  inline const ::BuffImpactInfo& buffs(int index) const;
  inline ::BuffImpactInfo* mutable_buffs(int index);
  inline ::BuffImpactInfo* add_buffs();
  inline const ::google::protobuf::RepeatedPtrField< ::BuffImpactInfo >&
      buffs() const;
  inline ::google::protobuf::RepeatedPtrField< ::BuffImpactInfo >*
      mutable_buffs();

  // @@protoc_insertion_point(class_scope:GCRefreshBuffBack)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BuffImpactInfo > buffs_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRefreshBuffBack* default_instance_;
};
// -------------------------------------------------------------------

class CombatResult : public ::google::protobuf::Message {
 public:
  CombatResult();
  virtual ~CombatResult();

  CombatResult(const CombatResult& from);

  inline CombatResult& operator=(const CombatResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatResult& default_instance();

  void Swap(CombatResult* other);

  // implements Message ----------------------------------------------

  CombatResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombatResult& from);
  void MergeFrom(const CombatResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CombatResult)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static CombatResult* default_instance_;
};
// -------------------------------------------------------------------

class GCCombatResult : public ::google::protobuf::Message {
 public:
  GCCombatResult();
  virtual ~GCCombatResult();

  GCCombatResult(const GCCombatResult& from);

  inline GCCombatResult& operator=(const GCCombatResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCombatResult& default_instance();

  void Swap(GCCombatResult* other);

  // implements Message ----------------------------------------------

  GCCombatResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCombatResult& from);
  void MergeFrom(const GCCombatResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // repeated .CombatResult result = 2;
  inline int result_size() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline const ::CombatResult& result(int index) const;
  inline ::CombatResult* mutable_result(int index);
  inline ::CombatResult* add_result();
  inline const ::google::protobuf::RepeatedPtrField< ::CombatResult >&
      result() const;
  inline ::google::protobuf::RepeatedPtrField< ::CombatResult >*
      mutable_result();

  // optional int64 srcObjId = 3;
  inline bool has_srcobjid() const;
  inline void clear_srcobjid();
  static const int kSrcObjIdFieldNumber = 3;
  inline ::google::protobuf::int64 srcobjid() const;
  inline void set_srcobjid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCCombatResult)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_srcobjid();
  inline void clear_has_srcobjid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::google::protobuf::RepeatedPtrField< ::CombatResult > result_;
  ::google::protobuf::int64 srcobjid_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCombatResult* default_instance_;
};
// -------------------------------------------------------------------

class SkillCDInfo : public ::google::protobuf::Message {
 public:
  SkillCDInfo();
  virtual ~SkillCDInfo();

  SkillCDInfo(const SkillCDInfo& from);

  inline SkillCDInfo& operator=(const SkillCDInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillCDInfo& default_instance();

  void Swap(SkillCDInfo* other);

  // implements Message ----------------------------------------------

  SkillCDInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillCDInfo& from);
  void MergeFrom(const SkillCDInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int64 cdEndTime = 2;
  inline bool has_cdendtime() const;
  inline void clear_cdendtime();
  static const int kCdEndTimeFieldNumber = 2;
  inline ::google::protobuf::int64 cdendtime() const;
  inline void set_cdendtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SkillCDInfo)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_cdendtime();
  inline void clear_has_cdendtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 cdendtime_;
  ::google::protobuf::int32 skillid_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static SkillCDInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCRefreshSkillCDInfo : public ::google::protobuf::Message {
 public:
  GCRefreshSkillCDInfo();
  virtual ~GCRefreshSkillCDInfo();

  GCRefreshSkillCDInfo(const GCRefreshSkillCDInfo& from);

  inline GCRefreshSkillCDInfo& operator=(const GCRefreshSkillCDInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRefreshSkillCDInfo& default_instance();

  void Swap(GCRefreshSkillCDInfo* other);

  // implements Message ----------------------------------------------

  GCRefreshSkillCDInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRefreshSkillCDInfo& from);
  void MergeFrom(const GCRefreshSkillCDInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SkillCDInfo cdInfo = 1;
  inline int cdinfo_size() const;
  inline void clear_cdinfo();
  static const int kCdInfoFieldNumber = 1;
  inline const ::SkillCDInfo& cdinfo(int index) const;
  inline ::SkillCDInfo* mutable_cdinfo(int index);
  inline ::SkillCDInfo* add_cdinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillCDInfo >&
      cdinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillCDInfo >*
      mutable_cdinfo();

  // @@protoc_insertion_point(class_scope:GCRefreshSkillCDInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SkillCDInfo > cdinfo_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRefreshSkillCDInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCUseSkillResult : public ::google::protobuf::Message {
 public:
  GCUseSkillResult();
  virtual ~GCUseSkillResult();

  GCUseSkillResult(const GCUseSkillResult& from);

  inline GCUseSkillResult& operator=(const GCUseSkillResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCUseSkillResult& default_instance();

  void Swap(GCUseSkillResult* other);

  // implements Message ----------------------------------------------

  GCUseSkillResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCUseSkillResult& from);
  void MergeFrom(const GCUseSkillResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional .SkillCDInfo cdInfo = 2;
  inline bool has_cdinfo() const;
  inline void clear_cdinfo();
  static const int kCdInfoFieldNumber = 2;
  inline const ::SkillCDInfo& cdinfo() const;
  inline ::SkillCDInfo* mutable_cdinfo();
  inline ::SkillCDInfo* release_cdinfo();
  inline void set_allocated_cdinfo(::SkillCDInfo* cdinfo);

  // @@protoc_insertion_point(class_scope:GCUseSkillResult)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_cdinfo();
  inline void clear_has_cdinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SkillCDInfo* cdinfo_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static GCUseSkillResult* default_instance_;
};
// -------------------------------------------------------------------

class GCChangeMotion : public ::google::protobuf::Message {
 public:
  GCChangeMotion();
  virtual ~GCChangeMotion();

  GCChangeMotion(const GCChangeMotion& from);

  inline GCChangeMotion& operator=(const GCChangeMotion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCChangeMotion& default_instance();

  void Swap(GCChangeMotion* other);

  // implements Message ----------------------------------------------

  GCChangeMotion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCChangeMotion& from);
  void MergeFrom(const GCChangeMotion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 motionId = 1;
  inline bool has_motionid() const;
  inline void clear_motionid();
  static const int kMotionIdFieldNumber = 1;
  inline ::google::protobuf::int32 motionid() const;
  inline void set_motionid(::google::protobuf::int32 value);

  // optional int64 objId = 2;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 2;
  inline ::google::protobuf::int64 objid() const;
  inline void set_objid(::google::protobuf::int64 value);

  // optional string effectId = 3;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectIdFieldNumber = 3;
  inline const ::std::string& effectid() const;
  inline void set_effectid(const ::std::string& value);
  inline void set_effectid(const char* value);
  inline void set_effectid(const char* value, size_t size);
  inline ::std::string* mutable_effectid();
  inline ::std::string* release_effectid();
  inline void set_allocated_effectid(::std::string* effectid);

  // optional int64 atkId = 4;
  inline bool has_atkid() const;
  inline void clear_atkid();
  static const int kAtkIdFieldNumber = 4;
  inline ::google::protobuf::int64 atkid() const;
  inline void set_atkid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCChangeMotion)
 private:
  inline void set_has_motionid();
  inline void clear_has_motionid();
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_atkid();
  inline void clear_has_atkid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 objid_;
  ::std::string* effectid_;
  ::google::protobuf::int64 atkid_;
  ::google::protobuf::int32 motionid_;
  friend void  protobuf_AddDesc_SkillMessage_2eproto();
  friend void protobuf_AssignDesc_SkillMessage_2eproto();
  friend void protobuf_ShutdownFile_SkillMessage_2eproto();

  void InitAsDefaultInstance();
  static GCChangeMotion* default_instance_;
};
// ===================================================================


// ===================================================================

// CGUseSkill

// optional int32 skillId = 1;
inline bool CGUseSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGUseSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGUseSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGUseSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 CGUseSkill::skillid() const {
  // @@protoc_insertion_point(field_get:CGUseSkill.skillId)
  return skillid_;
}
inline void CGUseSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:CGUseSkill.skillId)
}

// optional int32 skillIndex = 2;
inline bool CGUseSkill::has_skillindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGUseSkill::set_has_skillindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGUseSkill::clear_has_skillindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGUseSkill::clear_skillindex() {
  skillindex_ = 0;
  clear_has_skillindex();
}
inline ::google::protobuf::int32 CGUseSkill::skillindex() const {
  // @@protoc_insertion_point(field_get:CGUseSkill.skillIndex)
  return skillindex_;
}
inline void CGUseSkill::set_skillindex(::google::protobuf::int32 value) {
  set_has_skillindex();
  skillindex_ = value;
  // @@protoc_insertion_point(field_set:CGUseSkill.skillIndex)
}

// optional .Vector3Info attackerPos = 3;
inline bool CGUseSkill::has_attackerpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGUseSkill::set_has_attackerpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGUseSkill::clear_has_attackerpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGUseSkill::clear_attackerpos() {
  if (attackerpos_ != NULL) attackerpos_->::Vector3Info::Clear();
  clear_has_attackerpos();
}
inline const ::Vector3Info& CGUseSkill::attackerpos() const {
  // @@protoc_insertion_point(field_get:CGUseSkill.attackerPos)
  return attackerpos_ != NULL ? *attackerpos_ : *default_instance_->attackerpos_;
}
inline ::Vector3Info* CGUseSkill::mutable_attackerpos() {
  set_has_attackerpos();
  if (attackerpos_ == NULL) attackerpos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGUseSkill.attackerPos)
  return attackerpos_;
}
inline ::Vector3Info* CGUseSkill::release_attackerpos() {
  clear_has_attackerpos();
  ::Vector3Info* temp = attackerpos_;
  attackerpos_ = NULL;
  return temp;
}
inline void CGUseSkill::set_allocated_attackerpos(::Vector3Info* attackerpos) {
  delete attackerpos_;
  attackerpos_ = attackerpos;
  if (attackerpos) {
    set_has_attackerpos();
  } else {
    clear_has_attackerpos();
  }
  // @@protoc_insertion_point(field_set_allocated:CGUseSkill.attackerPos)
}

// repeated int64 targetObjIds = 4;
inline int CGUseSkill::targetobjids_size() const {
  return targetobjids_.size();
}
inline void CGUseSkill::clear_targetobjids() {
  targetobjids_.Clear();
}
inline ::google::protobuf::int64 CGUseSkill::targetobjids(int index) const {
  // @@protoc_insertion_point(field_get:CGUseSkill.targetObjIds)
  return targetobjids_.Get(index);
}
inline void CGUseSkill::set_targetobjids(int index, ::google::protobuf::int64 value) {
  targetobjids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGUseSkill.targetObjIds)
}
inline void CGUseSkill::add_targetobjids(::google::protobuf::int64 value) {
  targetobjids_.Add(value);
  // @@protoc_insertion_point(field_add:CGUseSkill.targetObjIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CGUseSkill::targetobjids() const {
  // @@protoc_insertion_point(field_list:CGUseSkill.targetObjIds)
  return targetobjids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CGUseSkill::mutable_targetobjids() {
  // @@protoc_insertion_point(field_mutable_list:CGUseSkill.targetObjIds)
  return &targetobjids_;
}

// optional int64 clientStartTime = 5;
inline bool CGUseSkill::has_clientstarttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGUseSkill::set_has_clientstarttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGUseSkill::clear_has_clientstarttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGUseSkill::clear_clientstarttime() {
  clientstarttime_ = GOOGLE_LONGLONG(0);
  clear_has_clientstarttime();
}
inline ::google::protobuf::int64 CGUseSkill::clientstarttime() const {
  // @@protoc_insertion_point(field_get:CGUseSkill.clientStartTime)
  return clientstarttime_;
}
inline void CGUseSkill::set_clientstarttime(::google::protobuf::int64 value) {
  set_has_clientstarttime();
  clientstarttime_ = value;
  // @@protoc_insertion_point(field_set:CGUseSkill.clientStartTime)
}

// optional .Vector3Info attackerDirection = 6;
inline bool CGUseSkill::has_attackerdirection() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGUseSkill::set_has_attackerdirection() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CGUseSkill::clear_has_attackerdirection() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CGUseSkill::clear_attackerdirection() {
  if (attackerdirection_ != NULL) attackerdirection_->::Vector3Info::Clear();
  clear_has_attackerdirection();
}
inline const ::Vector3Info& CGUseSkill::attackerdirection() const {
  // @@protoc_insertion_point(field_get:CGUseSkill.attackerDirection)
  return attackerdirection_ != NULL ? *attackerdirection_ : *default_instance_->attackerdirection_;
}
inline ::Vector3Info* CGUseSkill::mutable_attackerdirection() {
  set_has_attackerdirection();
  if (attackerdirection_ == NULL) attackerdirection_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGUseSkill.attackerDirection)
  return attackerdirection_;
}
inline ::Vector3Info* CGUseSkill::release_attackerdirection() {
  clear_has_attackerdirection();
  ::Vector3Info* temp = attackerdirection_;
  attackerdirection_ = NULL;
  return temp;
}
inline void CGUseSkill::set_allocated_attackerdirection(::Vector3Info* attackerdirection) {
  delete attackerdirection_;
  attackerdirection_ = attackerdirection;
  if (attackerdirection) {
    set_has_attackerdirection();
  } else {
    clear_has_attackerdirection();
  }
  // @@protoc_insertion_point(field_set_allocated:CGUseSkill.attackerDirection)
}

// optional int64 attackerId = 7;
inline bool CGUseSkill::has_attackerid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGUseSkill::set_has_attackerid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CGUseSkill::clear_has_attackerid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CGUseSkill::clear_attackerid() {
  attackerid_ = GOOGLE_LONGLONG(0);
  clear_has_attackerid();
}
inline ::google::protobuf::int64 CGUseSkill::attackerid() const {
  // @@protoc_insertion_point(field_get:CGUseSkill.attackerId)
  return attackerid_;
}
inline void CGUseSkill::set_attackerid(::google::protobuf::int64 value) {
  set_has_attackerid();
  attackerid_ = value;
  // @@protoc_insertion_point(field_set:CGUseSkill.attackerId)
}

// optional .Vector3Info targetPos = 8;
inline bool CGUseSkill::has_targetpos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGUseSkill::set_has_targetpos() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CGUseSkill::clear_has_targetpos() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CGUseSkill::clear_targetpos() {
  if (targetpos_ != NULL) targetpos_->::Vector3Info::Clear();
  clear_has_targetpos();
}
inline const ::Vector3Info& CGUseSkill::targetpos() const {
  // @@protoc_insertion_point(field_get:CGUseSkill.targetPos)
  return targetpos_ != NULL ? *targetpos_ : *default_instance_->targetpos_;
}
inline ::Vector3Info* CGUseSkill::mutable_targetpos() {
  set_has_targetpos();
  if (targetpos_ == NULL) targetpos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:CGUseSkill.targetPos)
  return targetpos_;
}
inline ::Vector3Info* CGUseSkill::release_targetpos() {
  clear_has_targetpos();
  ::Vector3Info* temp = targetpos_;
  targetpos_ = NULL;
  return temp;
}
inline void CGUseSkill::set_allocated_targetpos(::Vector3Info* targetpos) {
  delete targetpos_;
  targetpos_ = targetpos;
  if (targetpos) {
    set_has_targetpos();
  } else {
    clear_has_targetpos();
  }
  // @@protoc_insertion_point(field_set_allocated:CGUseSkill.targetPos)
}

// -------------------------------------------------------------------

// GCUseSkill

// optional int64 attackerId = 1;
inline bool GCUseSkill::has_attackerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCUseSkill::set_has_attackerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCUseSkill::clear_has_attackerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCUseSkill::clear_attackerid() {
  attackerid_ = GOOGLE_LONGLONG(0);
  clear_has_attackerid();
}
inline ::google::protobuf::int64 GCUseSkill::attackerid() const {
  // @@protoc_insertion_point(field_get:GCUseSkill.attackerId)
  return attackerid_;
}
inline void GCUseSkill::set_attackerid(::google::protobuf::int64 value) {
  set_has_attackerid();
  attackerid_ = value;
  // @@protoc_insertion_point(field_set:GCUseSkill.attackerId)
}

// optional int32 skillId = 2;
inline bool GCUseSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCUseSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCUseSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCUseSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 GCUseSkill::skillid() const {
  // @@protoc_insertion_point(field_get:GCUseSkill.skillId)
  return skillid_;
}
inline void GCUseSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:GCUseSkill.skillId)
}

// optional int32 skillIndex = 3;
inline bool GCUseSkill::has_skillindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCUseSkill::set_has_skillindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCUseSkill::clear_has_skillindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCUseSkill::clear_skillindex() {
  skillindex_ = 0;
  clear_has_skillindex();
}
inline ::google::protobuf::int32 GCUseSkill::skillindex() const {
  // @@protoc_insertion_point(field_get:GCUseSkill.skillIndex)
  return skillindex_;
}
inline void GCUseSkill::set_skillindex(::google::protobuf::int32 value) {
  set_has_skillindex();
  skillindex_ = value;
  // @@protoc_insertion_point(field_set:GCUseSkill.skillIndex)
}

// optional .Vector3Info attackerPos = 4;
inline bool GCUseSkill::has_attackerpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCUseSkill::set_has_attackerpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCUseSkill::clear_has_attackerpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCUseSkill::clear_attackerpos() {
  if (attackerpos_ != NULL) attackerpos_->::Vector3Info::Clear();
  clear_has_attackerpos();
}
inline const ::Vector3Info& GCUseSkill::attackerpos() const {
  // @@protoc_insertion_point(field_get:GCUseSkill.attackerPos)
  return attackerpos_ != NULL ? *attackerpos_ : *default_instance_->attackerpos_;
}
inline ::Vector3Info* GCUseSkill::mutable_attackerpos() {
  set_has_attackerpos();
  if (attackerpos_ == NULL) attackerpos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCUseSkill.attackerPos)
  return attackerpos_;
}
inline ::Vector3Info* GCUseSkill::release_attackerpos() {
  clear_has_attackerpos();
  ::Vector3Info* temp = attackerpos_;
  attackerpos_ = NULL;
  return temp;
}
inline void GCUseSkill::set_allocated_attackerpos(::Vector3Info* attackerpos) {
  delete attackerpos_;
  attackerpos_ = attackerpos;
  if (attackerpos) {
    set_has_attackerpos();
  } else {
    clear_has_attackerpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GCUseSkill.attackerPos)
}

// repeated int64 targetObjIds = 5;
inline int GCUseSkill::targetobjids_size() const {
  return targetobjids_.size();
}
inline void GCUseSkill::clear_targetobjids() {
  targetobjids_.Clear();
}
inline ::google::protobuf::int64 GCUseSkill::targetobjids(int index) const {
  // @@protoc_insertion_point(field_get:GCUseSkill.targetObjIds)
  return targetobjids_.Get(index);
}
inline void GCUseSkill::set_targetobjids(int index, ::google::protobuf::int64 value) {
  targetobjids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCUseSkill.targetObjIds)
}
inline void GCUseSkill::add_targetobjids(::google::protobuf::int64 value) {
  targetobjids_.Add(value);
  // @@protoc_insertion_point(field_add:GCUseSkill.targetObjIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GCUseSkill::targetobjids() const {
  // @@protoc_insertion_point(field_list:GCUseSkill.targetObjIds)
  return targetobjids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GCUseSkill::mutable_targetobjids() {
  // @@protoc_insertion_point(field_mutable_list:GCUseSkill.targetObjIds)
  return &targetobjids_;
}

// optional int64 clientStartTime = 6;
inline bool GCUseSkill::has_clientstarttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCUseSkill::set_has_clientstarttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCUseSkill::clear_has_clientstarttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCUseSkill::clear_clientstarttime() {
  clientstarttime_ = GOOGLE_LONGLONG(0);
  clear_has_clientstarttime();
}
inline ::google::protobuf::int64 GCUseSkill::clientstarttime() const {
  // @@protoc_insertion_point(field_get:GCUseSkill.clientStartTime)
  return clientstarttime_;
}
inline void GCUseSkill::set_clientstarttime(::google::protobuf::int64 value) {
  set_has_clientstarttime();
  clientstarttime_ = value;
  // @@protoc_insertion_point(field_set:GCUseSkill.clientStartTime)
}

// optional .Vector3Info attackerDirection = 7;
inline bool GCUseSkill::has_attackerdirection() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GCUseSkill::set_has_attackerdirection() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GCUseSkill::clear_has_attackerdirection() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GCUseSkill::clear_attackerdirection() {
  if (attackerdirection_ != NULL) attackerdirection_->::Vector3Info::Clear();
  clear_has_attackerdirection();
}
inline const ::Vector3Info& GCUseSkill::attackerdirection() const {
  // @@protoc_insertion_point(field_get:GCUseSkill.attackerDirection)
  return attackerdirection_ != NULL ? *attackerdirection_ : *default_instance_->attackerdirection_;
}
inline ::Vector3Info* GCUseSkill::mutable_attackerdirection() {
  set_has_attackerdirection();
  if (attackerdirection_ == NULL) attackerdirection_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCUseSkill.attackerDirection)
  return attackerdirection_;
}
inline ::Vector3Info* GCUseSkill::release_attackerdirection() {
  clear_has_attackerdirection();
  ::Vector3Info* temp = attackerdirection_;
  attackerdirection_ = NULL;
  return temp;
}
inline void GCUseSkill::set_allocated_attackerdirection(::Vector3Info* attackerdirection) {
  delete attackerdirection_;
  attackerdirection_ = attackerdirection;
  if (attackerdirection) {
    set_has_attackerdirection();
  } else {
    clear_has_attackerdirection();
  }
  // @@protoc_insertion_point(field_set_allocated:GCUseSkill.attackerDirection)
}

// repeated .SkillAttackRelation attackRelationList = 8;
inline int GCUseSkill::attackrelationlist_size() const {
  return attackrelationlist_.size();
}
inline void GCUseSkill::clear_attackrelationlist() {
  attackrelationlist_.Clear();
}
inline const ::SkillAttackRelation& GCUseSkill::attackrelationlist(int index) const {
  // @@protoc_insertion_point(field_get:GCUseSkill.attackRelationList)
  return attackrelationlist_.Get(index);
}
inline ::SkillAttackRelation* GCUseSkill::mutable_attackrelationlist(int index) {
  // @@protoc_insertion_point(field_mutable:GCUseSkill.attackRelationList)
  return attackrelationlist_.Mutable(index);
}
inline ::SkillAttackRelation* GCUseSkill::add_attackrelationlist() {
  // @@protoc_insertion_point(field_add:GCUseSkill.attackRelationList)
  return attackrelationlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillAttackRelation >&
GCUseSkill::attackrelationlist() const {
  // @@protoc_insertion_point(field_list:GCUseSkill.attackRelationList)
  return attackrelationlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillAttackRelation >*
GCUseSkill::mutable_attackrelationlist() {
  // @@protoc_insertion_point(field_mutable_list:GCUseSkill.attackRelationList)
  return &attackrelationlist_;
}

// optional .Vector3Info targetPos = 9;
inline bool GCUseSkill::has_targetpos() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GCUseSkill::set_has_targetpos() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GCUseSkill::clear_has_targetpos() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GCUseSkill::clear_targetpos() {
  if (targetpos_ != NULL) targetpos_->::Vector3Info::Clear();
  clear_has_targetpos();
}
inline const ::Vector3Info& GCUseSkill::targetpos() const {
  // @@protoc_insertion_point(field_get:GCUseSkill.targetPos)
  return targetpos_ != NULL ? *targetpos_ : *default_instance_->targetpos_;
}
inline ::Vector3Info* GCUseSkill::mutable_targetpos() {
  set_has_targetpos();
  if (targetpos_ == NULL) targetpos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCUseSkill.targetPos)
  return targetpos_;
}
inline ::Vector3Info* GCUseSkill::release_targetpos() {
  clear_has_targetpos();
  ::Vector3Info* temp = targetpos_;
  targetpos_ = NULL;
  return temp;
}
inline void GCUseSkill::set_allocated_targetpos(::Vector3Info* targetpos) {
  delete targetpos_;
  targetpos_ = targetpos;
  if (targetpos) {
    set_has_targetpos();
  } else {
    clear_has_targetpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GCUseSkill.targetPos)
}

// -------------------------------------------------------------------

// GCTriggerMotion

// optional int32 motionId = 1;
inline bool GCTriggerMotion::has_motionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCTriggerMotion::set_has_motionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCTriggerMotion::clear_has_motionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCTriggerMotion::clear_motionid() {
  motionid_ = 0;
  clear_has_motionid();
}
inline ::google::protobuf::int32 GCTriggerMotion::motionid() const {
  // @@protoc_insertion_point(field_get:GCTriggerMotion.motionId)
  return motionid_;
}
inline void GCTriggerMotion::set_motionid(::google::protobuf::int32 value) {
  set_has_motionid();
  motionid_ = value;
  // @@protoc_insertion_point(field_set:GCTriggerMotion.motionId)
}

// optional int64 targetId = 2;
inline bool GCTriggerMotion::has_targetid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCTriggerMotion::set_has_targetid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCTriggerMotion::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCTriggerMotion::clear_targetid() {
  targetid_ = GOOGLE_LONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::int64 GCTriggerMotion::targetid() const {
  // @@protoc_insertion_point(field_get:GCTriggerMotion.targetId)
  return targetid_;
}
inline void GCTriggerMotion::set_targetid(::google::protobuf::int64 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:GCTriggerMotion.targetId)
}

// optional .Vector3Info targetPos = 3;
inline bool GCTriggerMotion::has_targetpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCTriggerMotion::set_has_targetpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCTriggerMotion::clear_has_targetpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCTriggerMotion::clear_targetpos() {
  if (targetpos_ != NULL) targetpos_->::Vector3Info::Clear();
  clear_has_targetpos();
}
inline const ::Vector3Info& GCTriggerMotion::targetpos() const {
  // @@protoc_insertion_point(field_get:GCTriggerMotion.targetPos)
  return targetpos_ != NULL ? *targetpos_ : *default_instance_->targetpos_;
}
inline ::Vector3Info* GCTriggerMotion::mutable_targetpos() {
  set_has_targetpos();
  if (targetpos_ == NULL) targetpos_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCTriggerMotion.targetPos)
  return targetpos_;
}
inline ::Vector3Info* GCTriggerMotion::release_targetpos() {
  clear_has_targetpos();
  ::Vector3Info* temp = targetpos_;
  targetpos_ = NULL;
  return temp;
}
inline void GCTriggerMotion::set_allocated_targetpos(::Vector3Info* targetpos) {
  delete targetpos_;
  targetpos_ = targetpos;
  if (targetpos) {
    set_has_targetpos();
  } else {
    clear_has_targetpos();
  }
  // @@protoc_insertion_point(field_set_allocated:GCTriggerMotion.targetPos)
}

// optional .Vector3Info targetDir = 4;
inline bool GCTriggerMotion::has_targetdir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCTriggerMotion::set_has_targetdir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCTriggerMotion::clear_has_targetdir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCTriggerMotion::clear_targetdir() {
  if (targetdir_ != NULL) targetdir_->::Vector3Info::Clear();
  clear_has_targetdir();
}
inline const ::Vector3Info& GCTriggerMotion::targetdir() const {
  // @@protoc_insertion_point(field_get:GCTriggerMotion.targetDir)
  return targetdir_ != NULL ? *targetdir_ : *default_instance_->targetdir_;
}
inline ::Vector3Info* GCTriggerMotion::mutable_targetdir() {
  set_has_targetdir();
  if (targetdir_ == NULL) targetdir_ = new ::Vector3Info;
  // @@protoc_insertion_point(field_mutable:GCTriggerMotion.targetDir)
  return targetdir_;
}
inline ::Vector3Info* GCTriggerMotion::release_targetdir() {
  clear_has_targetdir();
  ::Vector3Info* temp = targetdir_;
  targetdir_ = NULL;
  return temp;
}
inline void GCTriggerMotion::set_allocated_targetdir(::Vector3Info* targetdir) {
  delete targetdir_;
  targetdir_ = targetdir;
  if (targetdir) {
    set_has_targetdir();
  } else {
    clear_has_targetdir();
  }
  // @@protoc_insertion_point(field_set_allocated:GCTriggerMotion.targetDir)
}

// -------------------------------------------------------------------

// CGUpSkill

// optional int32 skillId = 1;
inline bool CGUpSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGUpSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGUpSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGUpSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 CGUpSkill::skillid() const {
  // @@protoc_insertion_point(field_get:CGUpSkill.skillId)
  return skillid_;
}
inline void CGUpSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:CGUpSkill.skillId)
}

// optional int32 flagall = 2;
inline bool CGUpSkill::has_flagall() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGUpSkill::set_has_flagall() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGUpSkill::clear_has_flagall() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGUpSkill::clear_flagall() {
  flagall_ = 0;
  clear_has_flagall();
}
inline ::google::protobuf::int32 CGUpSkill::flagall() const {
  // @@protoc_insertion_point(field_get:CGUpSkill.flagall)
  return flagall_;
}
inline void CGUpSkill::set_flagall(::google::protobuf::int32 value) {
  set_has_flagall();
  flagall_ = value;
  // @@protoc_insertion_point(field_set:CGUpSkill.flagall)
}

// -------------------------------------------------------------------

// GCUpSkillOK

// optional int32 flag = 1;
inline bool GCUpSkillOK::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCUpSkillOK::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCUpSkillOK::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCUpSkillOK::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCUpSkillOK::flag() const {
  // @@protoc_insertion_point(field_get:GCUpSkillOK.flag)
  return flag_;
}
inline void GCUpSkillOK::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCUpSkillOK.flag)
}

// repeated .SkillItemData skilldata = 2;
inline int GCUpSkillOK::skilldata_size() const {
  return skilldata_.size();
}
inline void GCUpSkillOK::clear_skilldata() {
  skilldata_.Clear();
}
inline const ::SkillItemData& GCUpSkillOK::skilldata(int index) const {
  // @@protoc_insertion_point(field_get:GCUpSkillOK.skilldata)
  return skilldata_.Get(index);
}
inline ::SkillItemData* GCUpSkillOK::mutable_skilldata(int index) {
  // @@protoc_insertion_point(field_mutable:GCUpSkillOK.skilldata)
  return skilldata_.Mutable(index);
}
inline ::SkillItemData* GCUpSkillOK::add_skilldata() {
  // @@protoc_insertion_point(field_add:GCUpSkillOK.skilldata)
  return skilldata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillItemData >&
GCUpSkillOK::skilldata() const {
  // @@protoc_insertion_point(field_list:GCUpSkillOK.skilldata)
  return skilldata_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillItemData >*
GCUpSkillOK::mutable_skilldata() {
  // @@protoc_insertion_point(field_mutable_list:GCUpSkillOK.skilldata)
  return &skilldata_;
}

// optional int32 skillFlag = 3;
inline bool GCUpSkillOK::has_skillflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCUpSkillOK::set_has_skillflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCUpSkillOK::clear_has_skillflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCUpSkillOK::clear_skillflag() {
  skillflag_ = 0;
  clear_has_skillflag();
}
inline ::google::protobuf::int32 GCUpSkillOK::skillflag() const {
  // @@protoc_insertion_point(field_get:GCUpSkillOK.skillFlag)
  return skillflag_;
}
inline void GCUpSkillOK::set_skillflag(::google::protobuf::int32 value) {
  set_has_skillflag();
  skillflag_ = value;
  // @@protoc_insertion_point(field_set:GCUpSkillOK.skillFlag)
}

// -------------------------------------------------------------------

// CGChangeSkill

// optional int32 skillId = 1;
inline bool CGChangeSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGChangeSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGChangeSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGChangeSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 CGChangeSkill::skillid() const {
  // @@protoc_insertion_point(field_get:CGChangeSkill.skillId)
  return skillid_;
}
inline void CGChangeSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:CGChangeSkill.skillId)
}

// optional int32 position = 2;
inline bool CGChangeSkill::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGChangeSkill::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGChangeSkill::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGChangeSkill::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 CGChangeSkill::position() const {
  // @@protoc_insertion_point(field_get:CGChangeSkill.position)
  return position_;
}
inline void CGChangeSkill::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:CGChangeSkill.position)
}

// -------------------------------------------------------------------

// GCChangeSkillOK

// optional int32 flag = 1;
inline bool GCChangeSkillOK::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCChangeSkillOK::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCChangeSkillOK::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCChangeSkillOK::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCChangeSkillOK::flag() const {
  // @@protoc_insertion_point(field_get:GCChangeSkillOK.flag)
  return flag_;
}
inline void GCChangeSkillOK::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCChangeSkillOK.flag)
}

// repeated .SkillItemData skilldata = 2;
inline int GCChangeSkillOK::skilldata_size() const {
  return skilldata_.size();
}
inline void GCChangeSkillOK::clear_skilldata() {
  skilldata_.Clear();
}
inline const ::SkillItemData& GCChangeSkillOK::skilldata(int index) const {
  // @@protoc_insertion_point(field_get:GCChangeSkillOK.skilldata)
  return skilldata_.Get(index);
}
inline ::SkillItemData* GCChangeSkillOK::mutable_skilldata(int index) {
  // @@protoc_insertion_point(field_mutable:GCChangeSkillOK.skilldata)
  return skilldata_.Mutable(index);
}
inline ::SkillItemData* GCChangeSkillOK::add_skilldata() {
  // @@protoc_insertion_point(field_add:GCChangeSkillOK.skilldata)
  return skilldata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillItemData >&
GCChangeSkillOK::skilldata() const {
  // @@protoc_insertion_point(field_list:GCChangeSkillOK.skilldata)
  return skilldata_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillItemData >*
GCChangeSkillOK::mutable_skilldata() {
  // @@protoc_insertion_point(field_mutable_list:GCChangeSkillOK.skilldata)
  return &skilldata_;
}

// optional int32 skillFlag = 3;
inline bool GCChangeSkillOK::has_skillflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCChangeSkillOK::set_has_skillflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCChangeSkillOK::clear_has_skillflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCChangeSkillOK::clear_skillflag() {
  skillflag_ = 0;
  clear_has_skillflag();
}
inline ::google::protobuf::int32 GCChangeSkillOK::skillflag() const {
  // @@protoc_insertion_point(field_get:GCChangeSkillOK.skillFlag)
  return skillflag_;
}
inline void GCChangeSkillOK::set_skillflag(::google::protobuf::int32 value) {
  set_has_skillflag();
  skillflag_ = value;
  // @@protoc_insertion_point(field_set:GCChangeSkillOK.skillFlag)
}

// -------------------------------------------------------------------

// BuffImpactInfo

// optional int64 buffGuid = 1;
inline bool BuffImpactInfo::has_buffguid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffImpactInfo::set_has_buffguid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffImpactInfo::clear_has_buffguid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffImpactInfo::clear_buffguid() {
  buffguid_ = GOOGLE_LONGLONG(0);
  clear_has_buffguid();
}
inline ::google::protobuf::int64 BuffImpactInfo::buffguid() const {
  // @@protoc_insertion_point(field_get:BuffImpactInfo.buffGuid)
  return buffguid_;
}
inline void BuffImpactInfo::set_buffguid(::google::protobuf::int64 value) {
  set_has_buffguid();
  buffguid_ = value;
  // @@protoc_insertion_point(field_set:BuffImpactInfo.buffGuid)
}

// optional int32 impactId = 2;
inline bool BuffImpactInfo::has_impactid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffImpactInfo::set_has_impactid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffImpactInfo::clear_has_impactid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffImpactInfo::clear_impactid() {
  impactid_ = 0;
  clear_has_impactid();
}
inline ::google::protobuf::int32 BuffImpactInfo::impactid() const {
  // @@protoc_insertion_point(field_get:BuffImpactInfo.impactId)
  return impactid_;
}
inline void BuffImpactInfo::set_impactid(::google::protobuf::int32 value) {
  set_has_impactid();
  impactid_ = value;
  // @@protoc_insertion_point(field_set:BuffImpactInfo.impactId)
}

// optional int32 restTime = 3;
inline bool BuffImpactInfo::has_resttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffImpactInfo::set_has_resttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffImpactInfo::clear_has_resttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffImpactInfo::clear_resttime() {
  resttime_ = 0;
  clear_has_resttime();
}
inline ::google::protobuf::int32 BuffImpactInfo::resttime() const {
  // @@protoc_insertion_point(field_get:BuffImpactInfo.restTime)
  return resttime_;
}
inline void BuffImpactInfo::set_resttime(::google::protobuf::int32 value) {
  set_has_resttime();
  resttime_ = value;
  // @@protoc_insertion_point(field_set:BuffImpactInfo.restTime)
}

// repeated int32 params = 4;
inline int BuffImpactInfo::params_size() const {
  return params_.size();
}
inline void BuffImpactInfo::clear_params() {
  params_.Clear();
}
inline ::google::protobuf::int32 BuffImpactInfo::params(int index) const {
  // @@protoc_insertion_point(field_get:BuffImpactInfo.params)
  return params_.Get(index);
}
inline void BuffImpactInfo::set_params(int index, ::google::protobuf::int32 value) {
  params_.Set(index, value);
  // @@protoc_insertion_point(field_set:BuffImpactInfo.params)
}
inline void BuffImpactInfo::add_params(::google::protobuf::int32 value) {
  params_.Add(value);
  // @@protoc_insertion_point(field_add:BuffImpactInfo.params)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BuffImpactInfo::params() const {
  // @@protoc_insertion_point(field_list:BuffImpactInfo.params)
  return params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BuffImpactInfo::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:BuffImpactInfo.params)
  return &params_;
}

// -------------------------------------------------------------------

// GCAddBuffImpact

// optional int64 objId = 1;
inline bool GCAddBuffImpact::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCAddBuffImpact::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCAddBuffImpact::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCAddBuffImpact::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 GCAddBuffImpact::objid() const {
  // @@protoc_insertion_point(field_get:GCAddBuffImpact.objId)
  return objid_;
}
inline void GCAddBuffImpact::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:GCAddBuffImpact.objId)
}

// repeated .BuffImpactInfo buffs = 2;
inline int GCAddBuffImpact::buffs_size() const {
  return buffs_.size();
}
inline void GCAddBuffImpact::clear_buffs() {
  buffs_.Clear();
}
inline const ::BuffImpactInfo& GCAddBuffImpact::buffs(int index) const {
  // @@protoc_insertion_point(field_get:GCAddBuffImpact.buffs)
  return buffs_.Get(index);
}
inline ::BuffImpactInfo* GCAddBuffImpact::mutable_buffs(int index) {
  // @@protoc_insertion_point(field_mutable:GCAddBuffImpact.buffs)
  return buffs_.Mutable(index);
}
inline ::BuffImpactInfo* GCAddBuffImpact::add_buffs() {
  // @@protoc_insertion_point(field_add:GCAddBuffImpact.buffs)
  return buffs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BuffImpactInfo >&
GCAddBuffImpact::buffs() const {
  // @@protoc_insertion_point(field_list:GCAddBuffImpact.buffs)
  return buffs_;
}
inline ::google::protobuf::RepeatedPtrField< ::BuffImpactInfo >*
GCAddBuffImpact::mutable_buffs() {
  // @@protoc_insertion_point(field_mutable_list:GCAddBuffImpact.buffs)
  return &buffs_;
}

// -------------------------------------------------------------------

// GCDelBuffImpact

// optional int64 objId = 1;
inline bool GCDelBuffImpact::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCDelBuffImpact::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCDelBuffImpact::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCDelBuffImpact::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 GCDelBuffImpact::objid() const {
  // @@protoc_insertion_point(field_get:GCDelBuffImpact.objId)
  return objid_;
}
inline void GCDelBuffImpact::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:GCDelBuffImpact.objId)
}

// repeated int64 buffGuids = 2;
inline int GCDelBuffImpact::buffguids_size() const {
  return buffguids_.size();
}
inline void GCDelBuffImpact::clear_buffguids() {
  buffguids_.Clear();
}
inline ::google::protobuf::int64 GCDelBuffImpact::buffguids(int index) const {
  // @@protoc_insertion_point(field_get:GCDelBuffImpact.buffGuids)
  return buffguids_.Get(index);
}
inline void GCDelBuffImpact::set_buffguids(int index, ::google::protobuf::int64 value) {
  buffguids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCDelBuffImpact.buffGuids)
}
inline void GCDelBuffImpact::add_buffguids(::google::protobuf::int64 value) {
  buffguids_.Add(value);
  // @@protoc_insertion_point(field_add:GCDelBuffImpact.buffGuids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GCDelBuffImpact::buffguids() const {
  // @@protoc_insertion_point(field_list:GCDelBuffImpact.buffGuids)
  return buffguids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GCDelBuffImpact::mutable_buffguids() {
  // @@protoc_insertion_point(field_mutable_list:GCDelBuffImpact.buffGuids)
  return &buffguids_;
}

// -------------------------------------------------------------------

// CGRefreshBuff

// -------------------------------------------------------------------

// GCRefreshBuffBack

// repeated .BuffImpactInfo buffs = 1;
inline int GCRefreshBuffBack::buffs_size() const {
  return buffs_.size();
}
inline void GCRefreshBuffBack::clear_buffs() {
  buffs_.Clear();
}
inline const ::BuffImpactInfo& GCRefreshBuffBack::buffs(int index) const {
  // @@protoc_insertion_point(field_get:GCRefreshBuffBack.buffs)
  return buffs_.Get(index);
}
inline ::BuffImpactInfo* GCRefreshBuffBack::mutable_buffs(int index) {
  // @@protoc_insertion_point(field_mutable:GCRefreshBuffBack.buffs)
  return buffs_.Mutable(index);
}
inline ::BuffImpactInfo* GCRefreshBuffBack::add_buffs() {
  // @@protoc_insertion_point(field_add:GCRefreshBuffBack.buffs)
  return buffs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BuffImpactInfo >&
GCRefreshBuffBack::buffs() const {
  // @@protoc_insertion_point(field_list:GCRefreshBuffBack.buffs)
  return buffs_;
}
inline ::google::protobuf::RepeatedPtrField< ::BuffImpactInfo >*
GCRefreshBuffBack::mutable_buffs() {
  // @@protoc_insertion_point(field_mutable_list:GCRefreshBuffBack.buffs)
  return &buffs_;
}

// -------------------------------------------------------------------

// CombatResult

// optional int32 type = 2;
inline bool CombatResult::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatResult::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatResult::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatResult::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CombatResult::type() const {
  // @@protoc_insertion_point(field_get:CombatResult.type)
  return type_;
}
inline void CombatResult::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CombatResult.type)
}

// optional int32 value = 3;
inline bool CombatResult::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatResult::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatResult::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatResult::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 CombatResult::value() const {
  // @@protoc_insertion_point(field_get:CombatResult.value)
  return value_;
}
inline void CombatResult::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:CombatResult.value)
}

// -------------------------------------------------------------------

// GCCombatResult

// optional int64 objId = 1;
inline bool GCCombatResult::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCCombatResult::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCCombatResult::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCCombatResult::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 GCCombatResult::objid() const {
  // @@protoc_insertion_point(field_get:GCCombatResult.objId)
  return objid_;
}
inline void GCCombatResult::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:GCCombatResult.objId)
}

// repeated .CombatResult result = 2;
inline int GCCombatResult::result_size() const {
  return result_.size();
}
inline void GCCombatResult::clear_result() {
  result_.Clear();
}
inline const ::CombatResult& GCCombatResult::result(int index) const {
  // @@protoc_insertion_point(field_get:GCCombatResult.result)
  return result_.Get(index);
}
inline ::CombatResult* GCCombatResult::mutable_result(int index) {
  // @@protoc_insertion_point(field_mutable:GCCombatResult.result)
  return result_.Mutable(index);
}
inline ::CombatResult* GCCombatResult::add_result() {
  // @@protoc_insertion_point(field_add:GCCombatResult.result)
  return result_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CombatResult >&
GCCombatResult::result() const {
  // @@protoc_insertion_point(field_list:GCCombatResult.result)
  return result_;
}
inline ::google::protobuf::RepeatedPtrField< ::CombatResult >*
GCCombatResult::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:GCCombatResult.result)
  return &result_;
}

// optional int64 srcObjId = 3;
inline bool GCCombatResult::has_srcobjid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCCombatResult::set_has_srcobjid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCCombatResult::clear_has_srcobjid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCCombatResult::clear_srcobjid() {
  srcobjid_ = GOOGLE_LONGLONG(0);
  clear_has_srcobjid();
}
inline ::google::protobuf::int64 GCCombatResult::srcobjid() const {
  // @@protoc_insertion_point(field_get:GCCombatResult.srcObjId)
  return srcobjid_;
}
inline void GCCombatResult::set_srcobjid(::google::protobuf::int64 value) {
  set_has_srcobjid();
  srcobjid_ = value;
  // @@protoc_insertion_point(field_set:GCCombatResult.srcObjId)
}

// -------------------------------------------------------------------

// SkillCDInfo

// optional int32 skillId = 1;
inline bool SkillCDInfo::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillCDInfo::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillCDInfo::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillCDInfo::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 SkillCDInfo::skillid() const {
  // @@protoc_insertion_point(field_get:SkillCDInfo.skillId)
  return skillid_;
}
inline void SkillCDInfo::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillCDInfo.skillId)
}

// optional int64 cdEndTime = 2;
inline bool SkillCDInfo::has_cdendtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillCDInfo::set_has_cdendtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillCDInfo::clear_has_cdendtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillCDInfo::clear_cdendtime() {
  cdendtime_ = GOOGLE_LONGLONG(0);
  clear_has_cdendtime();
}
inline ::google::protobuf::int64 SkillCDInfo::cdendtime() const {
  // @@protoc_insertion_point(field_get:SkillCDInfo.cdEndTime)
  return cdendtime_;
}
inline void SkillCDInfo::set_cdendtime(::google::protobuf::int64 value) {
  set_has_cdendtime();
  cdendtime_ = value;
  // @@protoc_insertion_point(field_set:SkillCDInfo.cdEndTime)
}

// -------------------------------------------------------------------

// GCRefreshSkillCDInfo

// repeated .SkillCDInfo cdInfo = 1;
inline int GCRefreshSkillCDInfo::cdinfo_size() const {
  return cdinfo_.size();
}
inline void GCRefreshSkillCDInfo::clear_cdinfo() {
  cdinfo_.Clear();
}
inline const ::SkillCDInfo& GCRefreshSkillCDInfo::cdinfo(int index) const {
  // @@protoc_insertion_point(field_get:GCRefreshSkillCDInfo.cdInfo)
  return cdinfo_.Get(index);
}
inline ::SkillCDInfo* GCRefreshSkillCDInfo::mutable_cdinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GCRefreshSkillCDInfo.cdInfo)
  return cdinfo_.Mutable(index);
}
inline ::SkillCDInfo* GCRefreshSkillCDInfo::add_cdinfo() {
  // @@protoc_insertion_point(field_add:GCRefreshSkillCDInfo.cdInfo)
  return cdinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillCDInfo >&
GCRefreshSkillCDInfo::cdinfo() const {
  // @@protoc_insertion_point(field_list:GCRefreshSkillCDInfo.cdInfo)
  return cdinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillCDInfo >*
GCRefreshSkillCDInfo::mutable_cdinfo() {
  // @@protoc_insertion_point(field_mutable_list:GCRefreshSkillCDInfo.cdInfo)
  return &cdinfo_;
}

// -------------------------------------------------------------------

// GCUseSkillResult

// optional int32 flag = 1;
inline bool GCUseSkillResult::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCUseSkillResult::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCUseSkillResult::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCUseSkillResult::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCUseSkillResult::flag() const {
  // @@protoc_insertion_point(field_get:GCUseSkillResult.flag)
  return flag_;
}
inline void GCUseSkillResult::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCUseSkillResult.flag)
}

// optional .SkillCDInfo cdInfo = 2;
inline bool GCUseSkillResult::has_cdinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCUseSkillResult::set_has_cdinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCUseSkillResult::clear_has_cdinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCUseSkillResult::clear_cdinfo() {
  if (cdinfo_ != NULL) cdinfo_->::SkillCDInfo::Clear();
  clear_has_cdinfo();
}
inline const ::SkillCDInfo& GCUseSkillResult::cdinfo() const {
  // @@protoc_insertion_point(field_get:GCUseSkillResult.cdInfo)
  return cdinfo_ != NULL ? *cdinfo_ : *default_instance_->cdinfo_;
}
inline ::SkillCDInfo* GCUseSkillResult::mutable_cdinfo() {
  set_has_cdinfo();
  if (cdinfo_ == NULL) cdinfo_ = new ::SkillCDInfo;
  // @@protoc_insertion_point(field_mutable:GCUseSkillResult.cdInfo)
  return cdinfo_;
}
inline ::SkillCDInfo* GCUseSkillResult::release_cdinfo() {
  clear_has_cdinfo();
  ::SkillCDInfo* temp = cdinfo_;
  cdinfo_ = NULL;
  return temp;
}
inline void GCUseSkillResult::set_allocated_cdinfo(::SkillCDInfo* cdinfo) {
  delete cdinfo_;
  cdinfo_ = cdinfo;
  if (cdinfo) {
    set_has_cdinfo();
  } else {
    clear_has_cdinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCUseSkillResult.cdInfo)
}

// -------------------------------------------------------------------

// GCChangeMotion

// optional int32 motionId = 1;
inline bool GCChangeMotion::has_motionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCChangeMotion::set_has_motionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCChangeMotion::clear_has_motionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCChangeMotion::clear_motionid() {
  motionid_ = 0;
  clear_has_motionid();
}
inline ::google::protobuf::int32 GCChangeMotion::motionid() const {
  // @@protoc_insertion_point(field_get:GCChangeMotion.motionId)
  return motionid_;
}
inline void GCChangeMotion::set_motionid(::google::protobuf::int32 value) {
  set_has_motionid();
  motionid_ = value;
  // @@protoc_insertion_point(field_set:GCChangeMotion.motionId)
}

// optional int64 objId = 2;
inline bool GCChangeMotion::has_objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCChangeMotion::set_has_objid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCChangeMotion::clear_has_objid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCChangeMotion::clear_objid() {
  objid_ = GOOGLE_LONGLONG(0);
  clear_has_objid();
}
inline ::google::protobuf::int64 GCChangeMotion::objid() const {
  // @@protoc_insertion_point(field_get:GCChangeMotion.objId)
  return objid_;
}
inline void GCChangeMotion::set_objid(::google::protobuf::int64 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:GCChangeMotion.objId)
}

// optional string effectId = 3;
inline bool GCChangeMotion::has_effectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCChangeMotion::set_has_effectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCChangeMotion::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCChangeMotion::clear_effectid() {
  if (effectid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    effectid_->clear();
  }
  clear_has_effectid();
}
inline const ::std::string& GCChangeMotion::effectid() const {
  // @@protoc_insertion_point(field_get:GCChangeMotion.effectId)
  return *effectid_;
}
inline void GCChangeMotion::set_effectid(const ::std::string& value) {
  set_has_effectid();
  if (effectid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    effectid_ = new ::std::string;
  }
  effectid_->assign(value);
  // @@protoc_insertion_point(field_set:GCChangeMotion.effectId)
}
inline void GCChangeMotion::set_effectid(const char* value) {
  set_has_effectid();
  if (effectid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    effectid_ = new ::std::string;
  }
  effectid_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCChangeMotion.effectId)
}
inline void GCChangeMotion::set_effectid(const char* value, size_t size) {
  set_has_effectid();
  if (effectid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    effectid_ = new ::std::string;
  }
  effectid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCChangeMotion.effectId)
}
inline ::std::string* GCChangeMotion::mutable_effectid() {
  set_has_effectid();
  if (effectid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    effectid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCChangeMotion.effectId)
  return effectid_;
}
inline ::std::string* GCChangeMotion::release_effectid() {
  clear_has_effectid();
  if (effectid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = effectid_;
    effectid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCChangeMotion::set_allocated_effectid(::std::string* effectid) {
  if (effectid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete effectid_;
  }
  if (effectid) {
    set_has_effectid();
    effectid_ = effectid;
  } else {
    clear_has_effectid();
    effectid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCChangeMotion.effectId)
}

// optional int64 atkId = 4;
inline bool GCChangeMotion::has_atkid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCChangeMotion::set_has_atkid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCChangeMotion::clear_has_atkid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCChangeMotion::clear_atkid() {
  atkid_ = GOOGLE_LONGLONG(0);
  clear_has_atkid();
}
inline ::google::protobuf::int64 GCChangeMotion::atkid() const {
  // @@protoc_insertion_point(field_get:GCChangeMotion.atkId)
  return atkid_;
}
inline void GCChangeMotion::set_atkid(::google::protobuf::int64 value) {
  set_has_atkid();
  atkid_ = value;
  // @@protoc_insertion_point(field_set:GCChangeMotion.atkId)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SkillMessage_2eproto__INCLUDED
