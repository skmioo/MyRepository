// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SpiritBeastMessage.proto

#ifndef PROTOBUF_SpiritBeastMessage_2eproto__INCLUDED
#define PROTOBUF_SpiritBeastMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

class SpiritBeastInfo;
class SpiritBeastAttr;
class SpiritBeastSkillInfo;
class SpiritBeastShouLingInfo;
class SpiritBeastInUnite;
class SpiritBeastUniteInfo;
class CGSpiritBeastOperate;
class GCSpiritBeastOperateResult;
class CGSpiritBeastInherit;
class GCSpiritBeastInheritResult;
class CGSpiritBeastLevelUp;
class GCSpiritBeastLevelUpResult;
class CGSpiritBeastOperateSkill;
class GCSpiritBeastOperateSkillResult;
class CGSpiritBeastUniteOperate;
class GCSpiritBeastUniteOperateResult;
class CGSpiritBeastFree;
class GCSpiritBeastFreeResult;
class CGSpiritBeastBreed;
class GCSpiritBeastBreedResult;
class CGSpiritBeastHatch;
class GCSpiritBeastHatchResult;
class GCSpiritBeastRelive;
class CGSpiritBeastCatch;
class GCSpiritBeastCatchResult;

// ===================================================================

class SpiritBeastInfo : public ::google::protobuf::Message {
 public:
  SpiritBeastInfo();
  virtual ~SpiritBeastInfo();

  SpiritBeastInfo(const SpiritBeastInfo& from);

  inline SpiritBeastInfo& operator=(const SpiritBeastInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpiritBeastInfo& default_instance();

  void Swap(SpiritBeastInfo* other);

  // implements Message ----------------------------------------------

  SpiritBeastInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpiritBeastInfo& from);
  void MergeFrom(const SpiritBeastInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 sid = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int32 growthLv = 3;
  inline bool has_growthlv() const;
  inline void clear_growthlv();
  static const int kGrowthLvFieldNumber = 3;
  inline ::google::protobuf::int32 growthlv() const;
  inline void set_growthlv(::google::protobuf::int32 value);

  // optional int32 starLv = 4;
  inline bool has_starlv() const;
  inline void clear_starlv();
  static const int kStarLvFieldNumber = 4;
  inline ::google::protobuf::int32 starlv() const;
  inline void set_starlv(::google::protobuf::int32 value);

  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 generations = 6;
  inline bool has_generations() const;
  inline void clear_generations();
  static const int kGenerationsFieldNumber = 6;
  inline ::google::protobuf::int32 generations() const;
  inline void set_generations(::google::protobuf::int32 value);

  // optional int64 nowexp = 7;
  inline bool has_nowexp() const;
  inline void clear_nowexp();
  static const int kNowexpFieldNumber = 7;
  inline ::google::protobuf::int64 nowexp() const;
  inline void set_nowexp(::google::protobuf::int64 value);

  // optional int32 savvyLv = 8;
  inline bool has_savvylv() const;
  inline void clear_savvylv();
  static const int kSavvyLvFieldNumber = 8;
  inline ::google::protobuf::int32 savvylv() const;
  inline void set_savvylv(::google::protobuf::int32 value);

  // repeated .SpiritBeastAttr attlist = 9;
  inline int attlist_size() const;
  inline void clear_attlist();
  static const int kAttlistFieldNumber = 9;
  inline const ::SpiritBeastAttr& attlist(int index) const;
  inline ::SpiritBeastAttr* mutable_attlist(int index);
  inline ::SpiritBeastAttr* add_attlist();
  inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastAttr >&
      attlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastAttr >*
      mutable_attlist();

  // repeated .SpiritBeastSkillInfo skilllist = 10;
  inline int skilllist_size() const;
  inline void clear_skilllist();
  static const int kSkilllistFieldNumber = 10;
  inline const ::SpiritBeastSkillInfo& skilllist(int index) const;
  inline ::SpiritBeastSkillInfo* mutable_skilllist(int index);
  inline ::SpiritBeastSkillInfo* add_skilllist();
  inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastSkillInfo >&
      skilllist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastSkillInfo >*
      mutable_skilllist();

  // optional int64 reliveTime = 11;
  inline bool has_relivetime() const;
  inline void clear_relivetime();
  static const int kReliveTimeFieldNumber = 11;
  inline ::google::protobuf::int64 relivetime() const;
  inline void set_relivetime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SpiritBeastInfo)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_growthlv();
  inline void clear_has_growthlv();
  inline void set_has_starlv();
  inline void clear_has_starlv();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_generations();
  inline void clear_has_generations();
  inline void set_has_nowexp();
  inline void clear_has_nowexp();
  inline void set_has_savvylv();
  inline void clear_has_savvylv();
  inline void set_has_relivetime();
  inline void clear_has_relivetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 growthlv_;
  ::google::protobuf::int32 starlv_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int64 nowexp_;
  ::google::protobuf::int32 generations_;
  ::google::protobuf::int32 savvylv_;
  ::google::protobuf::RepeatedPtrField< ::SpiritBeastAttr > attlist_;
  ::google::protobuf::RepeatedPtrField< ::SpiritBeastSkillInfo > skilllist_;
  ::google::protobuf::int64 relivetime_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static SpiritBeastInfo* default_instance_;
};
// -------------------------------------------------------------------

class SpiritBeastAttr : public ::google::protobuf::Message {
 public:
  SpiritBeastAttr();
  virtual ~SpiritBeastAttr();

  SpiritBeastAttr(const SpiritBeastAttr& from);

  inline SpiritBeastAttr& operator=(const SpiritBeastAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpiritBeastAttr& default_instance();

  void Swap(SpiritBeastAttr* other);

  // implements Message ----------------------------------------------

  SpiritBeastAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpiritBeastAttr& from);
  void MergeFrom(const SpiritBeastAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 attrkey = 1;
  inline bool has_attrkey() const;
  inline void clear_attrkey();
  static const int kAttrkeyFieldNumber = 1;
  inline ::google::protobuf::int32 attrkey() const;
  inline void set_attrkey(::google::protobuf::int32 value);

  // optional int32 growupvalue = 2;
  inline bool has_growupvalue() const;
  inline void clear_growupvalue();
  static const int kGrowupvalueFieldNumber = 2;
  inline ::google::protobuf::int32 growupvalue() const;
  inline void set_growupvalue(::google::protobuf::int32 value);

  // optional int32 viewflag = 3;
  inline bool has_viewflag() const;
  inline void clear_viewflag();
  static const int kViewflagFieldNumber = 3;
  inline ::google::protobuf::int32 viewflag() const;
  inline void set_viewflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SpiritBeastAttr)
 private:
  inline void set_has_attrkey();
  inline void clear_has_attrkey();
  inline void set_has_growupvalue();
  inline void clear_has_growupvalue();
  inline void set_has_viewflag();
  inline void clear_has_viewflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 attrkey_;
  ::google::protobuf::int32 growupvalue_;
  ::google::protobuf::int32 viewflag_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static SpiritBeastAttr* default_instance_;
};
// -------------------------------------------------------------------

class SpiritBeastSkillInfo : public ::google::protobuf::Message {
 public:
  SpiritBeastSkillInfo();
  virtual ~SpiritBeastSkillInfo();

  SpiritBeastSkillInfo(const SpiritBeastSkillInfo& from);

  inline SpiritBeastSkillInfo& operator=(const SpiritBeastSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpiritBeastSkillInfo& default_instance();

  void Swap(SpiritBeastSkillInfo* other);

  // implements Message ----------------------------------------------

  SpiritBeastSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpiritBeastSkillInfo& from);
  void MergeFrom(const SpiritBeastSkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 skillID = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 skillLevel = 2;
  inline bool has_skilllevel() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::int32 skilllevel() const;
  inline void set_skilllevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SpiritBeastSkillInfo)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_skilllevel();
  inline void clear_has_skilllevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 skilllevel_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static SpiritBeastSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class SpiritBeastShouLingInfo : public ::google::protobuf::Message {
 public:
  SpiritBeastShouLingInfo();
  virtual ~SpiritBeastShouLingInfo();

  SpiritBeastShouLingInfo(const SpiritBeastShouLingInfo& from);

  inline SpiritBeastShouLingInfo& operator=(const SpiritBeastShouLingInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpiritBeastShouLingInfo& default_instance();

  void Swap(SpiritBeastShouLingInfo* other);

  // implements Message ----------------------------------------------

  SpiritBeastShouLingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpiritBeastShouLingInfo& from);
  void MergeFrom(const SpiritBeastShouLingInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional int32 sid = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SpiritBeastShouLingInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static SpiritBeastShouLingInfo* default_instance_;
};
// -------------------------------------------------------------------

class SpiritBeastInUnite : public ::google::protobuf::Message {
 public:
  SpiritBeastInUnite();
  virtual ~SpiritBeastInUnite();

  SpiritBeastInUnite(const SpiritBeastInUnite& from);

  inline SpiritBeastInUnite& operator=(const SpiritBeastInUnite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpiritBeastInUnite& default_instance();

  void Swap(SpiritBeastInUnite* other);

  // implements Message ----------------------------------------------

  SpiritBeastInUnite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpiritBeastInUnite& from);
  void MergeFrom(const SpiritBeastInUnite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional .SpiritBeastInfo sbInfo = 2;
  inline bool has_sbinfo() const;
  inline void clear_sbinfo();
  static const int kSbInfoFieldNumber = 2;
  inline const ::SpiritBeastInfo& sbinfo() const;
  inline ::SpiritBeastInfo* mutable_sbinfo();
  inline ::SpiritBeastInfo* release_sbinfo();
  inline void set_allocated_sbinfo(::SpiritBeastInfo* sbinfo);

  // @@protoc_insertion_point(class_scope:SpiritBeastInUnite)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_sbinfo();
  inline void clear_has_sbinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SpiritBeastInfo* sbinfo_;
  ::google::protobuf::int32 pos_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static SpiritBeastInUnite* default_instance_;
};
// -------------------------------------------------------------------

class SpiritBeastUniteInfo : public ::google::protobuf::Message {
 public:
  SpiritBeastUniteInfo();
  virtual ~SpiritBeastUniteInfo();

  SpiritBeastUniteInfo(const SpiritBeastUniteInfo& from);

  inline SpiritBeastUniteInfo& operator=(const SpiritBeastUniteInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpiritBeastUniteInfo& default_instance();

  void Swap(SpiritBeastUniteInfo* other);

  // implements Message ----------------------------------------------

  SpiritBeastUniteInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpiritBeastUniteInfo& from);
  void MergeFrom(const SpiritBeastUniteInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 zhenID = 1;
  inline bool has_zhenid() const;
  inline void clear_zhenid();
  static const int kZhenIDFieldNumber = 1;
  inline ::google::protobuf::int32 zhenid() const;
  inline void set_zhenid(::google::protobuf::int32 value);

  // repeated .SpiritBeastInUnite sbInUnite = 2;
  inline int sbinunite_size() const;
  inline void clear_sbinunite();
  static const int kSbInUniteFieldNumber = 2;
  inline const ::SpiritBeastInUnite& sbinunite(int index) const;
  inline ::SpiritBeastInUnite* mutable_sbinunite(int index);
  inline ::SpiritBeastInUnite* add_sbinunite();
  inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastInUnite >&
      sbinunite() const;
  inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastInUnite >*
      mutable_sbinunite();

  // repeated .SpiritBeastShouLingInfo sbShouling = 3;
  inline int sbshouling_size() const;
  inline void clear_sbshouling();
  static const int kSbShoulingFieldNumber = 3;
  inline const ::SpiritBeastShouLingInfo& sbshouling(int index) const;
  inline ::SpiritBeastShouLingInfo* mutable_sbshouling(int index);
  inline ::SpiritBeastShouLingInfo* add_sbshouling();
  inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastShouLingInfo >&
      sbshouling() const;
  inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastShouLingInfo >*
      mutable_sbshouling();

  // @@protoc_insertion_point(class_scope:SpiritBeastUniteInfo)
 private:
  inline void set_has_zhenid();
  inline void clear_has_zhenid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SpiritBeastInUnite > sbinunite_;
  ::google::protobuf::RepeatedPtrField< ::SpiritBeastShouLingInfo > sbshouling_;
  ::google::protobuf::int32 zhenid_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static SpiritBeastUniteInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGSpiritBeastOperate : public ::google::protobuf::Message {
 public:
  CGSpiritBeastOperate();
  virtual ~CGSpiritBeastOperate();

  CGSpiritBeastOperate(const CGSpiritBeastOperate& from);

  inline CGSpiritBeastOperate& operator=(const CGSpiritBeastOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSpiritBeastOperate& default_instance();

  void Swap(CGSpiritBeastOperate* other);

  // implements Message ----------------------------------------------

  CGSpiritBeastOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSpiritBeastOperate& from);
  void MergeFrom(const CGSpiritBeastOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int64 pid = 2;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 2;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int64 offPid = 3;
  inline bool has_offpid() const;
  inline void clear_offpid();
  static const int kOffPidFieldNumber = 3;
  inline ::google::protobuf::int64 offpid() const;
  inline void set_offpid(::google::protobuf::int64 value);

  // optional int32 developType = 4;
  inline bool has_developtype() const;
  inline void clear_developtype();
  static const int kDevelopTypeFieldNumber = 4;
  inline ::google::protobuf::int32 developtype() const;
  inline void set_developtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGSpiritBeastOperate)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_offpid();
  inline void clear_has_offpid();
  inline void set_has_developtype();
  inline void clear_has_developtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 developtype_;
  ::google::protobuf::int64 offpid_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSpiritBeastOperate* default_instance_;
};
// -------------------------------------------------------------------

class GCSpiritBeastOperateResult : public ::google::protobuf::Message {
 public:
  GCSpiritBeastOperateResult();
  virtual ~GCSpiritBeastOperateResult();

  GCSpiritBeastOperateResult(const GCSpiritBeastOperateResult& from);

  inline GCSpiritBeastOperateResult& operator=(const GCSpiritBeastOperateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSpiritBeastOperateResult& default_instance();

  void Swap(GCSpiritBeastOperateResult* other);

  // implements Message ----------------------------------------------

  GCSpiritBeastOperateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSpiritBeastOperateResult& from);
  void MergeFrom(const GCSpiritBeastOperateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .SpiritBeastInfo sbInfo = 3;
  inline int sbinfo_size() const;
  inline void clear_sbinfo();
  static const int kSbInfoFieldNumber = 3;
  inline const ::SpiritBeastInfo& sbinfo(int index) const;
  inline ::SpiritBeastInfo* mutable_sbinfo(int index);
  inline ::SpiritBeastInfo* add_sbinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo >&
      sbinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo >*
      mutable_sbinfo();

  // optional int64 petFight = 4;
  inline bool has_petfight() const;
  inline void clear_petfight();
  static const int kPetFightFieldNumber = 4;
  inline ::google::protobuf::int64 petfight() const;
  inline void set_petfight(::google::protobuf::int64 value);

  // repeated int64 battleArray = 5;
  inline int battlearray_size() const;
  inline void clear_battlearray();
  static const int kBattleArrayFieldNumber = 5;
  inline ::google::protobuf::int64 battlearray(int index) const;
  inline void set_battlearray(int index, ::google::protobuf::int64 value);
  inline void add_battlearray(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      battlearray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_battlearray();

  // repeated .SpiritBeastUniteInfo sbUnite = 6;
  inline int sbunite_size() const;
  inline void clear_sbunite();
  static const int kSbUniteFieldNumber = 6;
  inline const ::SpiritBeastUniteInfo& sbunite(int index) const;
  inline ::SpiritBeastUniteInfo* mutable_sbunite(int index);
  inline ::SpiritBeastUniteInfo* add_sbunite();
  inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastUniteInfo >&
      sbunite() const;
  inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastUniteInfo >*
      mutable_sbunite();

  // optional int64 receiveTime = 7;
  inline bool has_receivetime() const;
  inline void clear_receivetime();
  static const int kReceiveTimeFieldNumber = 7;
  inline ::google::protobuf::int64 receivetime() const;
  inline void set_receivetime(::google::protobuf::int64 value);

  // optional int32 remainNum = 8;
  inline bool has_remainnum() const;
  inline void clear_remainnum();
  static const int kRemainNumFieldNumber = 8;
  inline ::google::protobuf::int32 remainnum() const;
  inline void set_remainnum(::google::protobuf::int32 value);

  // optional int32 lucky = 9;
  inline bool has_lucky() const;
  inline void clear_lucky();
  static const int kLuckyFieldNumber = 9;
  inline ::google::protobuf::int32 lucky() const;
  inline void set_lucky(::google::protobuf::int32 value);

  // optional string breedResult = 10;
  inline bool has_breedresult() const;
  inline void clear_breedresult();
  static const int kBreedResultFieldNumber = 10;
  inline const ::std::string& breedresult() const;
  inline void set_breedresult(const ::std::string& value);
  inline void set_breedresult(const char* value);
  inline void set_breedresult(const char* value, size_t size);
  inline ::std::string* mutable_breedresult();
  inline ::std::string* release_breedresult();
  inline void set_allocated_breedresult(::std::string* breedresult);

  // @@protoc_insertion_point(class_scope:GCSpiritBeastOperateResult)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_petfight();
  inline void clear_has_petfight();
  inline void set_has_receivetime();
  inline void clear_has_receivetime();
  inline void set_has_remainnum();
  inline void clear_has_remainnum();
  inline void set_has_lucky();
  inline void clear_has_lucky();
  inline void set_has_breedresult();
  inline void clear_has_breedresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo > sbinfo_;
  ::google::protobuf::int64 petfight_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > battlearray_;
  ::google::protobuf::RepeatedPtrField< ::SpiritBeastUniteInfo > sbunite_;
  ::google::protobuf::int64 receivetime_;
  ::google::protobuf::int32 remainnum_;
  ::google::protobuf::int32 lucky_;
  ::std::string* breedresult_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSpiritBeastOperateResult* default_instance_;
};
// -------------------------------------------------------------------

class CGSpiritBeastInherit : public ::google::protobuf::Message {
 public:
  CGSpiritBeastInherit();
  virtual ~CGSpiritBeastInherit();

  CGSpiritBeastInherit(const CGSpiritBeastInherit& from);

  inline CGSpiritBeastInherit& operator=(const CGSpiritBeastInherit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSpiritBeastInherit& default_instance();

  void Swap(CGSpiritBeastInherit* other);

  // implements Message ----------------------------------------------

  CGSpiritBeastInherit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSpiritBeastInherit& from);
  void MergeFrom(const CGSpiritBeastInherit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 targetPid = 1;
  inline bool has_targetpid() const;
  inline void clear_targetpid();
  static const int kTargetPidFieldNumber = 1;
  inline ::google::protobuf::int64 targetpid() const;
  inline void set_targetpid(::google::protobuf::int64 value);

  // optional int64 stuffPid = 2;
  inline bool has_stuffpid() const;
  inline void clear_stuffpid();
  static const int kStuffPidFieldNumber = 2;
  inline ::google::protobuf::int64 stuffpid() const;
  inline void set_stuffpid(::google::protobuf::int64 value);

  // optional int32 isSavvy = 3;
  inline bool has_issavvy() const;
  inline void clear_issavvy();
  static const int kIsSavvyFieldNumber = 3;
  inline ::google::protobuf::int32 issavvy() const;
  inline void set_issavvy(::google::protobuf::int32 value);

  // optional int32 isSkill = 4;
  inline bool has_isskill() const;
  inline void clear_isskill();
  static const int kIsSkillFieldNumber = 4;
  inline ::google::protobuf::int32 isskill() const;
  inline void set_isskill(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGSpiritBeastInherit)
 private:
  inline void set_has_targetpid();
  inline void clear_has_targetpid();
  inline void set_has_stuffpid();
  inline void clear_has_stuffpid();
  inline void set_has_issavvy();
  inline void clear_has_issavvy();
  inline void set_has_isskill();
  inline void clear_has_isskill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 targetpid_;
  ::google::protobuf::int64 stuffpid_;
  ::google::protobuf::int32 issavvy_;
  ::google::protobuf::int32 isskill_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSpiritBeastInherit* default_instance_;
};
// -------------------------------------------------------------------

class GCSpiritBeastInheritResult : public ::google::protobuf::Message {
 public:
  GCSpiritBeastInheritResult();
  virtual ~GCSpiritBeastInheritResult();

  GCSpiritBeastInheritResult(const GCSpiritBeastInheritResult& from);

  inline GCSpiritBeastInheritResult& operator=(const GCSpiritBeastInheritResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSpiritBeastInheritResult& default_instance();

  void Swap(GCSpiritBeastInheritResult* other);

  // implements Message ----------------------------------------------

  GCSpiritBeastInheritResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSpiritBeastInheritResult& from);
  void MergeFrom(const GCSpiritBeastInheritResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 stuffPid = 2;
  inline bool has_stuffpid() const;
  inline void clear_stuffpid();
  static const int kStuffPidFieldNumber = 2;
  inline ::google::protobuf::int64 stuffpid() const;
  inline void set_stuffpid(::google::protobuf::int64 value);

  // optional .SpiritBeastInfo sbInfo = 3;
  inline bool has_sbinfo() const;
  inline void clear_sbinfo();
  static const int kSbInfoFieldNumber = 3;
  inline const ::SpiritBeastInfo& sbinfo() const;
  inline ::SpiritBeastInfo* mutable_sbinfo();
  inline ::SpiritBeastInfo* release_sbinfo();
  inline void set_allocated_sbinfo(::SpiritBeastInfo* sbinfo);

  // @@protoc_insertion_point(class_scope:GCSpiritBeastInheritResult)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_stuffpid();
  inline void clear_has_stuffpid();
  inline void set_has_sbinfo();
  inline void clear_has_sbinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 stuffpid_;
  ::SpiritBeastInfo* sbinfo_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSpiritBeastInheritResult* default_instance_;
};
// -------------------------------------------------------------------

class CGSpiritBeastLevelUp : public ::google::protobuf::Message {
 public:
  CGSpiritBeastLevelUp();
  virtual ~CGSpiritBeastLevelUp();

  CGSpiritBeastLevelUp(const CGSpiritBeastLevelUp& from);

  inline CGSpiritBeastLevelUp& operator=(const CGSpiritBeastLevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSpiritBeastLevelUp& default_instance();

  void Swap(CGSpiritBeastLevelUp* other);

  // implements Message ----------------------------------------------

  CGSpiritBeastLevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSpiritBeastLevelUp& from);
  void MergeFrom(const CGSpiritBeastLevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 pelletID = 2;
  inline bool has_pelletid() const;
  inline void clear_pelletid();
  static const int kPelletIDFieldNumber = 2;
  inline ::google::protobuf::int32 pelletid() const;
  inline void set_pelletid(::google::protobuf::int32 value);

  // optional int32 pelletNum = 3;
  inline bool has_pelletnum() const;
  inline void clear_pelletnum();
  static const int kPelletNumFieldNumber = 3;
  inline ::google::protobuf::int32 pelletnum() const;
  inline void set_pelletnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGSpiritBeastLevelUp)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_pelletid();
  inline void clear_has_pelletid();
  inline void set_has_pelletnum();
  inline void clear_has_pelletnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 pelletid_;
  ::google::protobuf::int32 pelletnum_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSpiritBeastLevelUp* default_instance_;
};
// -------------------------------------------------------------------

class GCSpiritBeastLevelUpResult : public ::google::protobuf::Message {
 public:
  GCSpiritBeastLevelUpResult();
  virtual ~GCSpiritBeastLevelUpResult();

  GCSpiritBeastLevelUpResult(const GCSpiritBeastLevelUpResult& from);

  inline GCSpiritBeastLevelUpResult& operator=(const GCSpiritBeastLevelUpResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSpiritBeastLevelUpResult& default_instance();

  void Swap(GCSpiritBeastLevelUpResult* other);

  // implements Message ----------------------------------------------

  GCSpiritBeastLevelUpResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSpiritBeastLevelUpResult& from);
  void MergeFrom(const GCSpiritBeastLevelUpResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .SpiritBeastInfo sbInfo = 2;
  inline bool has_sbinfo() const;
  inline void clear_sbinfo();
  static const int kSbInfoFieldNumber = 2;
  inline const ::SpiritBeastInfo& sbinfo() const;
  inline ::SpiritBeastInfo* mutable_sbinfo();
  inline ::SpiritBeastInfo* release_sbinfo();
  inline void set_allocated_sbinfo(::SpiritBeastInfo* sbinfo);

  // @@protoc_insertion_point(class_scope:GCSpiritBeastLevelUpResult)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_sbinfo();
  inline void clear_has_sbinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SpiritBeastInfo* sbinfo_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSpiritBeastLevelUpResult* default_instance_;
};
// -------------------------------------------------------------------

class CGSpiritBeastOperateSkill : public ::google::protobuf::Message {
 public:
  CGSpiritBeastOperateSkill();
  virtual ~CGSpiritBeastOperateSkill();

  CGSpiritBeastOperateSkill(const CGSpiritBeastOperateSkill& from);

  inline CGSpiritBeastOperateSkill& operator=(const CGSpiritBeastOperateSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSpiritBeastOperateSkill& default_instance();

  void Swap(CGSpiritBeastOperateSkill* other);

  // implements Message ----------------------------------------------

  CGSpiritBeastOperateSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSpiritBeastOperateSkill& from);
  void MergeFrom(const CGSpiritBeastOperateSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int64 pid = 2;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 2;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 targetID = 3;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIDFieldNumber = 3;
  inline ::google::protobuf::int32 targetid() const;
  inline void set_targetid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGSpiritBeastOperateSkill)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_targetid();
  inline void clear_has_targetid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 targetid_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSpiritBeastOperateSkill* default_instance_;
};
// -------------------------------------------------------------------

class GCSpiritBeastOperateSkillResult : public ::google::protobuf::Message {
 public:
  GCSpiritBeastOperateSkillResult();
  virtual ~GCSpiritBeastOperateSkillResult();

  GCSpiritBeastOperateSkillResult(const GCSpiritBeastOperateSkillResult& from);

  inline GCSpiritBeastOperateSkillResult& operator=(const GCSpiritBeastOperateSkillResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSpiritBeastOperateSkillResult& default_instance();

  void Swap(GCSpiritBeastOperateSkillResult* other);

  // implements Message ----------------------------------------------

  GCSpiritBeastOperateSkillResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSpiritBeastOperateSkillResult& from);
  void MergeFrom(const GCSpiritBeastOperateSkillResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .SpiritBeastInfo sbInfo = 3;
  inline bool has_sbinfo() const;
  inline void clear_sbinfo();
  static const int kSbInfoFieldNumber = 3;
  inline const ::SpiritBeastInfo& sbinfo() const;
  inline ::SpiritBeastInfo* mutable_sbinfo();
  inline ::SpiritBeastInfo* release_sbinfo();
  inline void set_allocated_sbinfo(::SpiritBeastInfo* sbinfo);

  // @@protoc_insertion_point(class_scope:GCSpiritBeastOperateSkillResult)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_sbinfo();
  inline void clear_has_sbinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 result_;
  ::SpiritBeastInfo* sbinfo_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSpiritBeastOperateSkillResult* default_instance_;
};
// -------------------------------------------------------------------

class CGSpiritBeastUniteOperate : public ::google::protobuf::Message {
 public:
  CGSpiritBeastUniteOperate();
  virtual ~CGSpiritBeastUniteOperate();

  CGSpiritBeastUniteOperate(const CGSpiritBeastUniteOperate& from);

  inline CGSpiritBeastUniteOperate& operator=(const CGSpiritBeastUniteOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSpiritBeastUniteOperate& default_instance();

  void Swap(CGSpiritBeastUniteOperate* other);

  // implements Message ----------------------------------------------

  CGSpiritBeastUniteOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSpiritBeastUniteOperate& from);
  void MergeFrom(const CGSpiritBeastUniteOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int32 target = 2;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 2;
  inline ::google::protobuf::int32 target() const;
  inline void set_target(::google::protobuf::int32 value);

  // optional int32 zhenID = 3;
  inline bool has_zhenid() const;
  inline void clear_zhenid();
  static const int kZhenIDFieldNumber = 3;
  inline ::google::protobuf::int32 zhenid() const;
  inline void set_zhenid(::google::protobuf::int32 value);

  // optional int32 posID = 4;
  inline bool has_posid() const;
  inline void clear_posid();
  static const int kPosIDFieldNumber = 4;
  inline ::google::protobuf::int32 posid() const;
  inline void set_posid(::google::protobuf::int32 value);

  // optional int64 pid = 5;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 5;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGSpiritBeastUniteOperate)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_zhenid();
  inline void clear_has_zhenid();
  inline void set_has_posid();
  inline void clear_has_posid();
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 target_;
  ::google::protobuf::int32 zhenid_;
  ::google::protobuf::int32 posid_;
  ::google::protobuf::int64 pid_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSpiritBeastUniteOperate* default_instance_;
};
// -------------------------------------------------------------------

class GCSpiritBeastUniteOperateResult : public ::google::protobuf::Message {
 public:
  GCSpiritBeastUniteOperateResult();
  virtual ~GCSpiritBeastUniteOperateResult();

  GCSpiritBeastUniteOperateResult(const GCSpiritBeastUniteOperateResult& from);

  inline GCSpiritBeastUniteOperateResult& operator=(const GCSpiritBeastUniteOperateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSpiritBeastUniteOperateResult& default_instance();

  void Swap(GCSpiritBeastUniteOperateResult* other);

  // implements Message ----------------------------------------------

  GCSpiritBeastUniteOperateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSpiritBeastUniteOperateResult& from);
  void MergeFrom(const GCSpiritBeastUniteOperateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 operate = 2;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 2;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int32 target = 3;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 3;
  inline ::google::protobuf::int32 target() const;
  inline void set_target(::google::protobuf::int32 value);

  // optional .SpiritBeastUniteInfo sbUnite = 4;
  inline bool has_sbunite() const;
  inline void clear_sbunite();
  static const int kSbUniteFieldNumber = 4;
  inline const ::SpiritBeastUniteInfo& sbunite() const;
  inline ::SpiritBeastUniteInfo* mutable_sbunite();
  inline ::SpiritBeastUniteInfo* release_sbunite();
  inline void set_allocated_sbunite(::SpiritBeastUniteInfo* sbunite);

  // optional .SpiritBeastInfo sbInfo = 5;
  inline bool has_sbinfo() const;
  inline void clear_sbinfo();
  static const int kSbInfoFieldNumber = 5;
  inline const ::SpiritBeastInfo& sbinfo() const;
  inline ::SpiritBeastInfo* mutable_sbinfo();
  inline ::SpiritBeastInfo* release_sbinfo();
  inline void set_allocated_sbinfo(::SpiritBeastInfo* sbinfo);

  // @@protoc_insertion_point(class_scope:GCSpiritBeastUniteOperateResult)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_sbunite();
  inline void clear_has_sbunite();
  inline void set_has_sbinfo();
  inline void clear_has_sbinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 operate_;
  ::SpiritBeastUniteInfo* sbunite_;
  ::SpiritBeastInfo* sbinfo_;
  ::google::protobuf::int32 target_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSpiritBeastUniteOperateResult* default_instance_;
};
// -------------------------------------------------------------------

class CGSpiritBeastFree : public ::google::protobuf::Message {
 public:
  CGSpiritBeastFree();
  virtual ~CGSpiritBeastFree();

  CGSpiritBeastFree(const CGSpiritBeastFree& from);

  inline CGSpiritBeastFree& operator=(const CGSpiritBeastFree& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSpiritBeastFree& default_instance();

  void Swap(CGSpiritBeastFree* other);

  // implements Message ----------------------------------------------

  CGSpiritBeastFree* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSpiritBeastFree& from);
  void MergeFrom(const CGSpiritBeastFree& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGSpiritBeastFree)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSpiritBeastFree* default_instance_;
};
// -------------------------------------------------------------------

class GCSpiritBeastFreeResult : public ::google::protobuf::Message {
 public:
  GCSpiritBeastFreeResult();
  virtual ~GCSpiritBeastFreeResult();

  GCSpiritBeastFreeResult(const GCSpiritBeastFreeResult& from);

  inline GCSpiritBeastFreeResult& operator=(const GCSpiritBeastFreeResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSpiritBeastFreeResult& default_instance();

  void Swap(GCSpiritBeastFreeResult* other);

  // implements Message ----------------------------------------------

  GCSpiritBeastFreeResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSpiritBeastFreeResult& from);
  void MergeFrom(const GCSpiritBeastFreeResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCSpiritBeastFreeResult)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSpiritBeastFreeResult* default_instance_;
};
// -------------------------------------------------------------------

class CGSpiritBeastBreed : public ::google::protobuf::Message {
 public:
  CGSpiritBeastBreed();
  virtual ~CGSpiritBeastBreed();

  CGSpiritBeastBreed(const CGSpiritBeastBreed& from);

  inline CGSpiritBeastBreed& operator=(const CGSpiritBeastBreed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSpiritBeastBreed& default_instance();

  void Swap(CGSpiritBeastBreed* other);

  // implements Message ----------------------------------------------

  CGSpiritBeastBreed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSpiritBeastBreed& from);
  void MergeFrom(const CGSpiritBeastBreed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int32 breedType = 2;
  inline bool has_breedtype() const;
  inline void clear_breedtype();
  static const int kBreedTypeFieldNumber = 2;
  inline ::google::protobuf::int32 breedtype() const;
  inline void set_breedtype(::google::protobuf::int32 value);

  // optional int64 pid = 3;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 3;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGSpiritBeastBreed)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_breedtype();
  inline void clear_has_breedtype();
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 breedtype_;
  ::google::protobuf::int64 pid_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSpiritBeastBreed* default_instance_;
};
// -------------------------------------------------------------------

class GCSpiritBeastBreedResult : public ::google::protobuf::Message {
 public:
  GCSpiritBeastBreedResult();
  virtual ~GCSpiritBeastBreedResult();

  GCSpiritBeastBreedResult(const GCSpiritBeastBreedResult& from);

  inline GCSpiritBeastBreedResult& operator=(const GCSpiritBeastBreedResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSpiritBeastBreedResult& default_instance();

  void Swap(GCSpiritBeastBreedResult* other);

  // implements Message ----------------------------------------------

  GCSpiritBeastBreedResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSpiritBeastBreedResult& from);
  void MergeFrom(const GCSpiritBeastBreedResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int32 breedType = 2;
  inline bool has_breedtype() const;
  inline void clear_breedtype();
  static const int kBreedTypeFieldNumber = 2;
  inline ::google::protobuf::int32 breedtype() const;
  inline void set_breedtype(::google::protobuf::int32 value);

  // optional int32 objectType = 3;
  inline bool has_objecttype() const;
  inline void clear_objecttype();
  static const int kObjectTypeFieldNumber = 3;
  inline ::google::protobuf::int32 objecttype() const;
  inline void set_objecttype(::google::protobuf::int32 value);

  // repeated .SpiritBeastInfo sbInfo = 4;
  inline int sbinfo_size() const;
  inline void clear_sbinfo();
  static const int kSbInfoFieldNumber = 4;
  inline const ::SpiritBeastInfo& sbinfo(int index) const;
  inline ::SpiritBeastInfo* mutable_sbinfo(int index);
  inline ::SpiritBeastInfo* add_sbinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo >&
      sbinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo >*
      mutable_sbinfo();

  // optional int64 receiveTime = 5;
  inline bool has_receivetime() const;
  inline void clear_receivetime();
  static const int kReceiveTimeFieldNumber = 5;
  inline ::google::protobuf::int64 receivetime() const;
  inline void set_receivetime(::google::protobuf::int64 value);

  // optional string objectName = 6;
  inline bool has_objectname() const;
  inline void clear_objectname();
  static const int kObjectNameFieldNumber = 6;
  inline const ::std::string& objectname() const;
  inline void set_objectname(const ::std::string& value);
  inline void set_objectname(const char* value);
  inline void set_objectname(const char* value, size_t size);
  inline ::std::string* mutable_objectname();
  inline ::std::string* release_objectname();
  inline void set_allocated_objectname(::std::string* objectname);

  // optional int32 lucky = 7;
  inline bool has_lucky() const;
  inline void clear_lucky();
  static const int kLuckyFieldNumber = 7;
  inline ::google::protobuf::int32 lucky() const;
  inline void set_lucky(::google::protobuf::int32 value);

  // optional string breedResult = 8;
  inline bool has_breedresult() const;
  inline void clear_breedresult();
  static const int kBreedResultFieldNumber = 8;
  inline const ::std::string& breedresult() const;
  inline void set_breedresult(const ::std::string& value);
  inline void set_breedresult(const char* value);
  inline void set_breedresult(const char* value, size_t size);
  inline ::std::string* mutable_breedresult();
  inline ::std::string* release_breedresult();
  inline void set_allocated_breedresult(::std::string* breedresult);

  // @@protoc_insertion_point(class_scope:GCSpiritBeastBreedResult)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_breedtype();
  inline void clear_has_breedtype();
  inline void set_has_objecttype();
  inline void clear_has_objecttype();
  inline void set_has_receivetime();
  inline void clear_has_receivetime();
  inline void set_has_objectname();
  inline void clear_has_objectname();
  inline void set_has_lucky();
  inline void clear_has_lucky();
  inline void set_has_breedresult();
  inline void clear_has_breedresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 breedtype_;
  ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo > sbinfo_;
  ::google::protobuf::int64 receivetime_;
  ::google::protobuf::int32 objecttype_;
  ::google::protobuf::int32 lucky_;
  ::std::string* objectname_;
  ::std::string* breedresult_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSpiritBeastBreedResult* default_instance_;
};
// -------------------------------------------------------------------

class CGSpiritBeastHatch : public ::google::protobuf::Message {
 public:
  CGSpiritBeastHatch();
  virtual ~CGSpiritBeastHatch();

  CGSpiritBeastHatch(const CGSpiritBeastHatch& from);

  inline CGSpiritBeastHatch& operator=(const CGSpiritBeastHatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSpiritBeastHatch& default_instance();

  void Swap(CGSpiritBeastHatch* other);

  // implements Message ----------------------------------------------

  CGSpiritBeastHatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSpiritBeastHatch& from);
  void MergeFrom(const CGSpiritBeastHatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGSpiritBeastHatch)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSpiritBeastHatch* default_instance_;
};
// -------------------------------------------------------------------

class GCSpiritBeastHatchResult : public ::google::protobuf::Message {
 public:
  GCSpiritBeastHatchResult();
  virtual ~GCSpiritBeastHatchResult();

  GCSpiritBeastHatchResult(const GCSpiritBeastHatchResult& from);

  inline GCSpiritBeastHatchResult& operator=(const GCSpiritBeastHatchResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSpiritBeastHatchResult& default_instance();

  void Swap(GCSpiritBeastHatchResult* other);

  // implements Message ----------------------------------------------

  GCSpiritBeastHatchResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSpiritBeastHatchResult& from);
  void MergeFrom(const GCSpiritBeastHatchResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SpiritBeastInfo sbInfo = 1;
  inline bool has_sbinfo() const;
  inline void clear_sbinfo();
  static const int kSbInfoFieldNumber = 1;
  inline const ::SpiritBeastInfo& sbinfo() const;
  inline ::SpiritBeastInfo* mutable_sbinfo();
  inline ::SpiritBeastInfo* release_sbinfo();
  inline void set_allocated_sbinfo(::SpiritBeastInfo* sbinfo);

  // @@protoc_insertion_point(class_scope:GCSpiritBeastHatchResult)
 private:
  inline void set_has_sbinfo();
  inline void clear_has_sbinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SpiritBeastInfo* sbinfo_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSpiritBeastHatchResult* default_instance_;
};
// -------------------------------------------------------------------

class GCSpiritBeastRelive : public ::google::protobuf::Message {
 public:
  GCSpiritBeastRelive();
  virtual ~GCSpiritBeastRelive();

  GCSpiritBeastRelive(const GCSpiritBeastRelive& from);

  inline GCSpiritBeastRelive& operator=(const GCSpiritBeastRelive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSpiritBeastRelive& default_instance();

  void Swap(GCSpiritBeastRelive* other);

  // implements Message ----------------------------------------------

  GCSpiritBeastRelive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSpiritBeastRelive& from);
  void MergeFrom(const GCSpiritBeastRelive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int64 reliveTime = 2;
  inline bool has_relivetime() const;
  inline void clear_relivetime();
  static const int kReliveTimeFieldNumber = 2;
  inline ::google::protobuf::int64 relivetime() const;
  inline void set_relivetime(::google::protobuf::int64 value);

  // optional int64 fightPid = 3;
  inline bool has_fightpid() const;
  inline void clear_fightpid();
  static const int kFightPidFieldNumber = 3;
  inline ::google::protobuf::int64 fightpid() const;
  inline void set_fightpid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCSpiritBeastRelive)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_relivetime();
  inline void clear_has_relivetime();
  inline void set_has_fightpid();
  inline void clear_has_fightpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int64 relivetime_;
  ::google::protobuf::int64 fightpid_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSpiritBeastRelive* default_instance_;
};
// -------------------------------------------------------------------

class CGSpiritBeastCatch : public ::google::protobuf::Message {
 public:
  CGSpiritBeastCatch();
  virtual ~CGSpiritBeastCatch();

  CGSpiritBeastCatch(const CGSpiritBeastCatch& from);

  inline CGSpiritBeastCatch& operator=(const CGSpiritBeastCatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSpiritBeastCatch& default_instance();

  void Swap(CGSpiritBeastCatch* other);

  // implements Message ----------------------------------------------

  CGSpiritBeastCatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSpiritBeastCatch& from);
  void MergeFrom(const CGSpiritBeastCatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int64 pid = 2;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 2;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGSpiritBeastCatch)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 operate_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSpiritBeastCatch* default_instance_;
};
// -------------------------------------------------------------------

class GCSpiritBeastCatchResult : public ::google::protobuf::Message {
 public:
  GCSpiritBeastCatchResult();
  virtual ~GCSpiritBeastCatchResult();

  GCSpiritBeastCatchResult(const GCSpiritBeastCatchResult& from);

  inline GCSpiritBeastCatchResult& operator=(const GCSpiritBeastCatchResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSpiritBeastCatchResult& default_instance();

  void Swap(GCSpiritBeastCatchResult* other);

  // implements Message ----------------------------------------------

  GCSpiritBeastCatchResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSpiritBeastCatchResult& from);
  void MergeFrom(const GCSpiritBeastCatchResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operate = 1;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 1;
  inline ::google::protobuf::int32 operate() const;
  inline void set_operate(::google::protobuf::int32 value);

  // optional int64 pid = 2;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 2;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int64 playerPid = 3;
  inline bool has_playerpid() const;
  inline void clear_playerpid();
  static const int kPlayerPidFieldNumber = 3;
  inline ::google::protobuf::int64 playerpid() const;
  inline void set_playerpid(::google::protobuf::int64 value);

  // optional int32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional .SpiritBeastInfo sbInfo = 5;
  inline bool has_sbinfo() const;
  inline void clear_sbinfo();
  static const int kSbInfoFieldNumber = 5;
  inline const ::SpiritBeastInfo& sbinfo() const;
  inline ::SpiritBeastInfo* mutable_sbinfo();
  inline ::SpiritBeastInfo* release_sbinfo();
  inline void set_allocated_sbinfo(::SpiritBeastInfo* sbinfo);

  // @@protoc_insertion_point(class_scope:GCSpiritBeastCatchResult)
 private:
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_playerpid();
  inline void clear_has_playerpid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_sbinfo();
  inline void clear_has_sbinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 operate_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int64 playerpid_;
  ::SpiritBeastInfo* sbinfo_;
  friend void  protobuf_AddDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_AssignDesc_SpiritBeastMessage_2eproto();
  friend void protobuf_ShutdownFile_SpiritBeastMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSpiritBeastCatchResult* default_instance_;
};
// ===================================================================


// ===================================================================

// SpiritBeastInfo

// optional int64 pid = 1;
inline bool SpiritBeastInfo::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpiritBeastInfo::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpiritBeastInfo::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpiritBeastInfo::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 SpiritBeastInfo::pid() const {
  // @@protoc_insertion_point(field_get:SpiritBeastInfo.pid)
  return pid_;
}
inline void SpiritBeastInfo::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastInfo.pid)
}

// optional int32 sid = 2;
inline bool SpiritBeastInfo::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpiritBeastInfo::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpiritBeastInfo::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpiritBeastInfo::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 SpiritBeastInfo::sid() const {
  // @@protoc_insertion_point(field_get:SpiritBeastInfo.sid)
  return sid_;
}
inline void SpiritBeastInfo::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastInfo.sid)
}

// optional int32 growthLv = 3;
inline bool SpiritBeastInfo::has_growthlv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpiritBeastInfo::set_has_growthlv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpiritBeastInfo::clear_has_growthlv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpiritBeastInfo::clear_growthlv() {
  growthlv_ = 0;
  clear_has_growthlv();
}
inline ::google::protobuf::int32 SpiritBeastInfo::growthlv() const {
  // @@protoc_insertion_point(field_get:SpiritBeastInfo.growthLv)
  return growthlv_;
}
inline void SpiritBeastInfo::set_growthlv(::google::protobuf::int32 value) {
  set_has_growthlv();
  growthlv_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastInfo.growthLv)
}

// optional int32 starLv = 4;
inline bool SpiritBeastInfo::has_starlv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SpiritBeastInfo::set_has_starlv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SpiritBeastInfo::clear_has_starlv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SpiritBeastInfo::clear_starlv() {
  starlv_ = 0;
  clear_has_starlv();
}
inline ::google::protobuf::int32 SpiritBeastInfo::starlv() const {
  // @@protoc_insertion_point(field_get:SpiritBeastInfo.starLv)
  return starlv_;
}
inline void SpiritBeastInfo::set_starlv(::google::protobuf::int32 value) {
  set_has_starlv();
  starlv_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastInfo.starLv)
}

// optional int32 level = 5;
inline bool SpiritBeastInfo::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SpiritBeastInfo::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SpiritBeastInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SpiritBeastInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SpiritBeastInfo::level() const {
  // @@protoc_insertion_point(field_get:SpiritBeastInfo.level)
  return level_;
}
inline void SpiritBeastInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastInfo.level)
}

// optional int32 generations = 6;
inline bool SpiritBeastInfo::has_generations() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SpiritBeastInfo::set_has_generations() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SpiritBeastInfo::clear_has_generations() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SpiritBeastInfo::clear_generations() {
  generations_ = 0;
  clear_has_generations();
}
inline ::google::protobuf::int32 SpiritBeastInfo::generations() const {
  // @@protoc_insertion_point(field_get:SpiritBeastInfo.generations)
  return generations_;
}
inline void SpiritBeastInfo::set_generations(::google::protobuf::int32 value) {
  set_has_generations();
  generations_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastInfo.generations)
}

// optional int64 nowexp = 7;
inline bool SpiritBeastInfo::has_nowexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SpiritBeastInfo::set_has_nowexp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SpiritBeastInfo::clear_has_nowexp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SpiritBeastInfo::clear_nowexp() {
  nowexp_ = GOOGLE_LONGLONG(0);
  clear_has_nowexp();
}
inline ::google::protobuf::int64 SpiritBeastInfo::nowexp() const {
  // @@protoc_insertion_point(field_get:SpiritBeastInfo.nowexp)
  return nowexp_;
}
inline void SpiritBeastInfo::set_nowexp(::google::protobuf::int64 value) {
  set_has_nowexp();
  nowexp_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastInfo.nowexp)
}

// optional int32 savvyLv = 8;
inline bool SpiritBeastInfo::has_savvylv() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SpiritBeastInfo::set_has_savvylv() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SpiritBeastInfo::clear_has_savvylv() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SpiritBeastInfo::clear_savvylv() {
  savvylv_ = 0;
  clear_has_savvylv();
}
inline ::google::protobuf::int32 SpiritBeastInfo::savvylv() const {
  // @@protoc_insertion_point(field_get:SpiritBeastInfo.savvyLv)
  return savvylv_;
}
inline void SpiritBeastInfo::set_savvylv(::google::protobuf::int32 value) {
  set_has_savvylv();
  savvylv_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastInfo.savvyLv)
}

// repeated .SpiritBeastAttr attlist = 9;
inline int SpiritBeastInfo::attlist_size() const {
  return attlist_.size();
}
inline void SpiritBeastInfo::clear_attlist() {
  attlist_.Clear();
}
inline const ::SpiritBeastAttr& SpiritBeastInfo::attlist(int index) const {
  // @@protoc_insertion_point(field_get:SpiritBeastInfo.attlist)
  return attlist_.Get(index);
}
inline ::SpiritBeastAttr* SpiritBeastInfo::mutable_attlist(int index) {
  // @@protoc_insertion_point(field_mutable:SpiritBeastInfo.attlist)
  return attlist_.Mutable(index);
}
inline ::SpiritBeastAttr* SpiritBeastInfo::add_attlist() {
  // @@protoc_insertion_point(field_add:SpiritBeastInfo.attlist)
  return attlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastAttr >&
SpiritBeastInfo::attlist() const {
  // @@protoc_insertion_point(field_list:SpiritBeastInfo.attlist)
  return attlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastAttr >*
SpiritBeastInfo::mutable_attlist() {
  // @@protoc_insertion_point(field_mutable_list:SpiritBeastInfo.attlist)
  return &attlist_;
}

// repeated .SpiritBeastSkillInfo skilllist = 10;
inline int SpiritBeastInfo::skilllist_size() const {
  return skilllist_.size();
}
inline void SpiritBeastInfo::clear_skilllist() {
  skilllist_.Clear();
}
inline const ::SpiritBeastSkillInfo& SpiritBeastInfo::skilllist(int index) const {
  // @@protoc_insertion_point(field_get:SpiritBeastInfo.skilllist)
  return skilllist_.Get(index);
}
inline ::SpiritBeastSkillInfo* SpiritBeastInfo::mutable_skilllist(int index) {
  // @@protoc_insertion_point(field_mutable:SpiritBeastInfo.skilllist)
  return skilllist_.Mutable(index);
}
inline ::SpiritBeastSkillInfo* SpiritBeastInfo::add_skilllist() {
  // @@protoc_insertion_point(field_add:SpiritBeastInfo.skilllist)
  return skilllist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastSkillInfo >&
SpiritBeastInfo::skilllist() const {
  // @@protoc_insertion_point(field_list:SpiritBeastInfo.skilllist)
  return skilllist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastSkillInfo >*
SpiritBeastInfo::mutable_skilllist() {
  // @@protoc_insertion_point(field_mutable_list:SpiritBeastInfo.skilllist)
  return &skilllist_;
}

// optional int64 reliveTime = 11;
inline bool SpiritBeastInfo::has_relivetime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SpiritBeastInfo::set_has_relivetime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SpiritBeastInfo::clear_has_relivetime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SpiritBeastInfo::clear_relivetime() {
  relivetime_ = GOOGLE_LONGLONG(0);
  clear_has_relivetime();
}
inline ::google::protobuf::int64 SpiritBeastInfo::relivetime() const {
  // @@protoc_insertion_point(field_get:SpiritBeastInfo.reliveTime)
  return relivetime_;
}
inline void SpiritBeastInfo::set_relivetime(::google::protobuf::int64 value) {
  set_has_relivetime();
  relivetime_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastInfo.reliveTime)
}

// -------------------------------------------------------------------

// SpiritBeastAttr

// optional int32 attrkey = 1;
inline bool SpiritBeastAttr::has_attrkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpiritBeastAttr::set_has_attrkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpiritBeastAttr::clear_has_attrkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpiritBeastAttr::clear_attrkey() {
  attrkey_ = 0;
  clear_has_attrkey();
}
inline ::google::protobuf::int32 SpiritBeastAttr::attrkey() const {
  // @@protoc_insertion_point(field_get:SpiritBeastAttr.attrkey)
  return attrkey_;
}
inline void SpiritBeastAttr::set_attrkey(::google::protobuf::int32 value) {
  set_has_attrkey();
  attrkey_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastAttr.attrkey)
}

// optional int32 growupvalue = 2;
inline bool SpiritBeastAttr::has_growupvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpiritBeastAttr::set_has_growupvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpiritBeastAttr::clear_has_growupvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpiritBeastAttr::clear_growupvalue() {
  growupvalue_ = 0;
  clear_has_growupvalue();
}
inline ::google::protobuf::int32 SpiritBeastAttr::growupvalue() const {
  // @@protoc_insertion_point(field_get:SpiritBeastAttr.growupvalue)
  return growupvalue_;
}
inline void SpiritBeastAttr::set_growupvalue(::google::protobuf::int32 value) {
  set_has_growupvalue();
  growupvalue_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastAttr.growupvalue)
}

// optional int32 viewflag = 3;
inline bool SpiritBeastAttr::has_viewflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpiritBeastAttr::set_has_viewflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpiritBeastAttr::clear_has_viewflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpiritBeastAttr::clear_viewflag() {
  viewflag_ = 0;
  clear_has_viewflag();
}
inline ::google::protobuf::int32 SpiritBeastAttr::viewflag() const {
  // @@protoc_insertion_point(field_get:SpiritBeastAttr.viewflag)
  return viewflag_;
}
inline void SpiritBeastAttr::set_viewflag(::google::protobuf::int32 value) {
  set_has_viewflag();
  viewflag_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastAttr.viewflag)
}

// -------------------------------------------------------------------

// SpiritBeastSkillInfo

// optional int32 skillID = 1;
inline bool SpiritBeastSkillInfo::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpiritBeastSkillInfo::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpiritBeastSkillInfo::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpiritBeastSkillInfo::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 SpiritBeastSkillInfo::skillid() const {
  // @@protoc_insertion_point(field_get:SpiritBeastSkillInfo.skillID)
  return skillid_;
}
inline void SpiritBeastSkillInfo::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastSkillInfo.skillID)
}

// optional int32 skillLevel = 2;
inline bool SpiritBeastSkillInfo::has_skilllevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpiritBeastSkillInfo::set_has_skilllevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpiritBeastSkillInfo::clear_has_skilllevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpiritBeastSkillInfo::clear_skilllevel() {
  skilllevel_ = 0;
  clear_has_skilllevel();
}
inline ::google::protobuf::int32 SpiritBeastSkillInfo::skilllevel() const {
  // @@protoc_insertion_point(field_get:SpiritBeastSkillInfo.skillLevel)
  return skilllevel_;
}
inline void SpiritBeastSkillInfo::set_skilllevel(::google::protobuf::int32 value) {
  set_has_skilllevel();
  skilllevel_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastSkillInfo.skillLevel)
}

// -------------------------------------------------------------------

// SpiritBeastShouLingInfo

// optional int32 pos = 1;
inline bool SpiritBeastShouLingInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpiritBeastShouLingInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpiritBeastShouLingInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpiritBeastShouLingInfo::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 SpiritBeastShouLingInfo::pos() const {
  // @@protoc_insertion_point(field_get:SpiritBeastShouLingInfo.pos)
  return pos_;
}
inline void SpiritBeastShouLingInfo::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastShouLingInfo.pos)
}

// optional int32 sid = 2;
inline bool SpiritBeastShouLingInfo::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpiritBeastShouLingInfo::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpiritBeastShouLingInfo::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpiritBeastShouLingInfo::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 SpiritBeastShouLingInfo::sid() const {
  // @@protoc_insertion_point(field_get:SpiritBeastShouLingInfo.sid)
  return sid_;
}
inline void SpiritBeastShouLingInfo::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastShouLingInfo.sid)
}

// optional int32 level = 3;
inline bool SpiritBeastShouLingInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpiritBeastShouLingInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpiritBeastShouLingInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpiritBeastShouLingInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SpiritBeastShouLingInfo::level() const {
  // @@protoc_insertion_point(field_get:SpiritBeastShouLingInfo.level)
  return level_;
}
inline void SpiritBeastShouLingInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastShouLingInfo.level)
}

// -------------------------------------------------------------------

// SpiritBeastInUnite

// optional int32 pos = 1;
inline bool SpiritBeastInUnite::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpiritBeastInUnite::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpiritBeastInUnite::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpiritBeastInUnite::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 SpiritBeastInUnite::pos() const {
  // @@protoc_insertion_point(field_get:SpiritBeastInUnite.pos)
  return pos_;
}
inline void SpiritBeastInUnite::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastInUnite.pos)
}

// optional .SpiritBeastInfo sbInfo = 2;
inline bool SpiritBeastInUnite::has_sbinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpiritBeastInUnite::set_has_sbinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpiritBeastInUnite::clear_has_sbinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpiritBeastInUnite::clear_sbinfo() {
  if (sbinfo_ != NULL) sbinfo_->::SpiritBeastInfo::Clear();
  clear_has_sbinfo();
}
inline const ::SpiritBeastInfo& SpiritBeastInUnite::sbinfo() const {
  // @@protoc_insertion_point(field_get:SpiritBeastInUnite.sbInfo)
  return sbinfo_ != NULL ? *sbinfo_ : *default_instance_->sbinfo_;
}
inline ::SpiritBeastInfo* SpiritBeastInUnite::mutable_sbinfo() {
  set_has_sbinfo();
  if (sbinfo_ == NULL) sbinfo_ = new ::SpiritBeastInfo;
  // @@protoc_insertion_point(field_mutable:SpiritBeastInUnite.sbInfo)
  return sbinfo_;
}
inline ::SpiritBeastInfo* SpiritBeastInUnite::release_sbinfo() {
  clear_has_sbinfo();
  ::SpiritBeastInfo* temp = sbinfo_;
  sbinfo_ = NULL;
  return temp;
}
inline void SpiritBeastInUnite::set_allocated_sbinfo(::SpiritBeastInfo* sbinfo) {
  delete sbinfo_;
  sbinfo_ = sbinfo;
  if (sbinfo) {
    set_has_sbinfo();
  } else {
    clear_has_sbinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SpiritBeastInUnite.sbInfo)
}

// -------------------------------------------------------------------

// SpiritBeastUniteInfo

// optional int32 zhenID = 1;
inline bool SpiritBeastUniteInfo::has_zhenid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpiritBeastUniteInfo::set_has_zhenid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpiritBeastUniteInfo::clear_has_zhenid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpiritBeastUniteInfo::clear_zhenid() {
  zhenid_ = 0;
  clear_has_zhenid();
}
inline ::google::protobuf::int32 SpiritBeastUniteInfo::zhenid() const {
  // @@protoc_insertion_point(field_get:SpiritBeastUniteInfo.zhenID)
  return zhenid_;
}
inline void SpiritBeastUniteInfo::set_zhenid(::google::protobuf::int32 value) {
  set_has_zhenid();
  zhenid_ = value;
  // @@protoc_insertion_point(field_set:SpiritBeastUniteInfo.zhenID)
}

// repeated .SpiritBeastInUnite sbInUnite = 2;
inline int SpiritBeastUniteInfo::sbinunite_size() const {
  return sbinunite_.size();
}
inline void SpiritBeastUniteInfo::clear_sbinunite() {
  sbinunite_.Clear();
}
inline const ::SpiritBeastInUnite& SpiritBeastUniteInfo::sbinunite(int index) const {
  // @@protoc_insertion_point(field_get:SpiritBeastUniteInfo.sbInUnite)
  return sbinunite_.Get(index);
}
inline ::SpiritBeastInUnite* SpiritBeastUniteInfo::mutable_sbinunite(int index) {
  // @@protoc_insertion_point(field_mutable:SpiritBeastUniteInfo.sbInUnite)
  return sbinunite_.Mutable(index);
}
inline ::SpiritBeastInUnite* SpiritBeastUniteInfo::add_sbinunite() {
  // @@protoc_insertion_point(field_add:SpiritBeastUniteInfo.sbInUnite)
  return sbinunite_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastInUnite >&
SpiritBeastUniteInfo::sbinunite() const {
  // @@protoc_insertion_point(field_list:SpiritBeastUniteInfo.sbInUnite)
  return sbinunite_;
}
inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastInUnite >*
SpiritBeastUniteInfo::mutable_sbinunite() {
  // @@protoc_insertion_point(field_mutable_list:SpiritBeastUniteInfo.sbInUnite)
  return &sbinunite_;
}

// repeated .SpiritBeastShouLingInfo sbShouling = 3;
inline int SpiritBeastUniteInfo::sbshouling_size() const {
  return sbshouling_.size();
}
inline void SpiritBeastUniteInfo::clear_sbshouling() {
  sbshouling_.Clear();
}
inline const ::SpiritBeastShouLingInfo& SpiritBeastUniteInfo::sbshouling(int index) const {
  // @@protoc_insertion_point(field_get:SpiritBeastUniteInfo.sbShouling)
  return sbshouling_.Get(index);
}
inline ::SpiritBeastShouLingInfo* SpiritBeastUniteInfo::mutable_sbshouling(int index) {
  // @@protoc_insertion_point(field_mutable:SpiritBeastUniteInfo.sbShouling)
  return sbshouling_.Mutable(index);
}
inline ::SpiritBeastShouLingInfo* SpiritBeastUniteInfo::add_sbshouling() {
  // @@protoc_insertion_point(field_add:SpiritBeastUniteInfo.sbShouling)
  return sbshouling_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastShouLingInfo >&
SpiritBeastUniteInfo::sbshouling() const {
  // @@protoc_insertion_point(field_list:SpiritBeastUniteInfo.sbShouling)
  return sbshouling_;
}
inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastShouLingInfo >*
SpiritBeastUniteInfo::mutable_sbshouling() {
  // @@protoc_insertion_point(field_mutable_list:SpiritBeastUniteInfo.sbShouling)
  return &sbshouling_;
}

// -------------------------------------------------------------------

// CGSpiritBeastOperate

// optional int32 operate = 1;
inline bool CGSpiritBeastOperate::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSpiritBeastOperate::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSpiritBeastOperate::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSpiritBeastOperate::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 CGSpiritBeastOperate::operate() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastOperate.operate)
  return operate_;
}
inline void CGSpiritBeastOperate::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastOperate.operate)
}

// optional int64 pid = 2;
inline bool CGSpiritBeastOperate::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSpiritBeastOperate::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSpiritBeastOperate::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSpiritBeastOperate::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGSpiritBeastOperate::pid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastOperate.pid)
  return pid_;
}
inline void CGSpiritBeastOperate::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastOperate.pid)
}

// optional int64 offPid = 3;
inline bool CGSpiritBeastOperate::has_offpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGSpiritBeastOperate::set_has_offpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGSpiritBeastOperate::clear_has_offpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGSpiritBeastOperate::clear_offpid() {
  offpid_ = GOOGLE_LONGLONG(0);
  clear_has_offpid();
}
inline ::google::protobuf::int64 CGSpiritBeastOperate::offpid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastOperate.offPid)
  return offpid_;
}
inline void CGSpiritBeastOperate::set_offpid(::google::protobuf::int64 value) {
  set_has_offpid();
  offpid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastOperate.offPid)
}

// optional int32 developType = 4;
inline bool CGSpiritBeastOperate::has_developtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGSpiritBeastOperate::set_has_developtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGSpiritBeastOperate::clear_has_developtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGSpiritBeastOperate::clear_developtype() {
  developtype_ = 0;
  clear_has_developtype();
}
inline ::google::protobuf::int32 CGSpiritBeastOperate::developtype() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastOperate.developType)
  return developtype_;
}
inline void CGSpiritBeastOperate::set_developtype(::google::protobuf::int32 value) {
  set_has_developtype();
  developtype_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastOperate.developType)
}

// -------------------------------------------------------------------

// GCSpiritBeastOperateResult

// optional int32 operate = 1;
inline bool GCSpiritBeastOperateResult::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSpiritBeastOperateResult::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSpiritBeastOperateResult::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSpiritBeastOperateResult::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 GCSpiritBeastOperateResult::operate() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateResult.operate)
  return operate_;
}
inline void GCSpiritBeastOperateResult::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastOperateResult.operate)
}

// optional int32 result = 2;
inline bool GCSpiritBeastOperateResult::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSpiritBeastOperateResult::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSpiritBeastOperateResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSpiritBeastOperateResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCSpiritBeastOperateResult::result() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateResult.result)
  return result_;
}
inline void GCSpiritBeastOperateResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastOperateResult.result)
}

// repeated .SpiritBeastInfo sbInfo = 3;
inline int GCSpiritBeastOperateResult::sbinfo_size() const {
  return sbinfo_.size();
}
inline void GCSpiritBeastOperateResult::clear_sbinfo() {
  sbinfo_.Clear();
}
inline const ::SpiritBeastInfo& GCSpiritBeastOperateResult::sbinfo(int index) const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateResult.sbInfo)
  return sbinfo_.Get(index);
}
inline ::SpiritBeastInfo* GCSpiritBeastOperateResult::mutable_sbinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastOperateResult.sbInfo)
  return sbinfo_.Mutable(index);
}
inline ::SpiritBeastInfo* GCSpiritBeastOperateResult::add_sbinfo() {
  // @@protoc_insertion_point(field_add:GCSpiritBeastOperateResult.sbInfo)
  return sbinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo >&
GCSpiritBeastOperateResult::sbinfo() const {
  // @@protoc_insertion_point(field_list:GCSpiritBeastOperateResult.sbInfo)
  return sbinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo >*
GCSpiritBeastOperateResult::mutable_sbinfo() {
  // @@protoc_insertion_point(field_mutable_list:GCSpiritBeastOperateResult.sbInfo)
  return &sbinfo_;
}

// optional int64 petFight = 4;
inline bool GCSpiritBeastOperateResult::has_petfight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCSpiritBeastOperateResult::set_has_petfight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCSpiritBeastOperateResult::clear_has_petfight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCSpiritBeastOperateResult::clear_petfight() {
  petfight_ = GOOGLE_LONGLONG(0);
  clear_has_petfight();
}
inline ::google::protobuf::int64 GCSpiritBeastOperateResult::petfight() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateResult.petFight)
  return petfight_;
}
inline void GCSpiritBeastOperateResult::set_petfight(::google::protobuf::int64 value) {
  set_has_petfight();
  petfight_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastOperateResult.petFight)
}

// repeated int64 battleArray = 5;
inline int GCSpiritBeastOperateResult::battlearray_size() const {
  return battlearray_.size();
}
inline void GCSpiritBeastOperateResult::clear_battlearray() {
  battlearray_.Clear();
}
inline ::google::protobuf::int64 GCSpiritBeastOperateResult::battlearray(int index) const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateResult.battleArray)
  return battlearray_.Get(index);
}
inline void GCSpiritBeastOperateResult::set_battlearray(int index, ::google::protobuf::int64 value) {
  battlearray_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCSpiritBeastOperateResult.battleArray)
}
inline void GCSpiritBeastOperateResult::add_battlearray(::google::protobuf::int64 value) {
  battlearray_.Add(value);
  // @@protoc_insertion_point(field_add:GCSpiritBeastOperateResult.battleArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GCSpiritBeastOperateResult::battlearray() const {
  // @@protoc_insertion_point(field_list:GCSpiritBeastOperateResult.battleArray)
  return battlearray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GCSpiritBeastOperateResult::mutable_battlearray() {
  // @@protoc_insertion_point(field_mutable_list:GCSpiritBeastOperateResult.battleArray)
  return &battlearray_;
}

// repeated .SpiritBeastUniteInfo sbUnite = 6;
inline int GCSpiritBeastOperateResult::sbunite_size() const {
  return sbunite_.size();
}
inline void GCSpiritBeastOperateResult::clear_sbunite() {
  sbunite_.Clear();
}
inline const ::SpiritBeastUniteInfo& GCSpiritBeastOperateResult::sbunite(int index) const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateResult.sbUnite)
  return sbunite_.Get(index);
}
inline ::SpiritBeastUniteInfo* GCSpiritBeastOperateResult::mutable_sbunite(int index) {
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastOperateResult.sbUnite)
  return sbunite_.Mutable(index);
}
inline ::SpiritBeastUniteInfo* GCSpiritBeastOperateResult::add_sbunite() {
  // @@protoc_insertion_point(field_add:GCSpiritBeastOperateResult.sbUnite)
  return sbunite_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastUniteInfo >&
GCSpiritBeastOperateResult::sbunite() const {
  // @@protoc_insertion_point(field_list:GCSpiritBeastOperateResult.sbUnite)
  return sbunite_;
}
inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastUniteInfo >*
GCSpiritBeastOperateResult::mutable_sbunite() {
  // @@protoc_insertion_point(field_mutable_list:GCSpiritBeastOperateResult.sbUnite)
  return &sbunite_;
}

// optional int64 receiveTime = 7;
inline bool GCSpiritBeastOperateResult::has_receivetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GCSpiritBeastOperateResult::set_has_receivetime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GCSpiritBeastOperateResult::clear_has_receivetime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GCSpiritBeastOperateResult::clear_receivetime() {
  receivetime_ = GOOGLE_LONGLONG(0);
  clear_has_receivetime();
}
inline ::google::protobuf::int64 GCSpiritBeastOperateResult::receivetime() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateResult.receiveTime)
  return receivetime_;
}
inline void GCSpiritBeastOperateResult::set_receivetime(::google::protobuf::int64 value) {
  set_has_receivetime();
  receivetime_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastOperateResult.receiveTime)
}

// optional int32 remainNum = 8;
inline bool GCSpiritBeastOperateResult::has_remainnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GCSpiritBeastOperateResult::set_has_remainnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GCSpiritBeastOperateResult::clear_has_remainnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GCSpiritBeastOperateResult::clear_remainnum() {
  remainnum_ = 0;
  clear_has_remainnum();
}
inline ::google::protobuf::int32 GCSpiritBeastOperateResult::remainnum() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateResult.remainNum)
  return remainnum_;
}
inline void GCSpiritBeastOperateResult::set_remainnum(::google::protobuf::int32 value) {
  set_has_remainnum();
  remainnum_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastOperateResult.remainNum)
}

// optional int32 lucky = 9;
inline bool GCSpiritBeastOperateResult::has_lucky() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GCSpiritBeastOperateResult::set_has_lucky() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GCSpiritBeastOperateResult::clear_has_lucky() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GCSpiritBeastOperateResult::clear_lucky() {
  lucky_ = 0;
  clear_has_lucky();
}
inline ::google::protobuf::int32 GCSpiritBeastOperateResult::lucky() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateResult.lucky)
  return lucky_;
}
inline void GCSpiritBeastOperateResult::set_lucky(::google::protobuf::int32 value) {
  set_has_lucky();
  lucky_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastOperateResult.lucky)
}

// optional string breedResult = 10;
inline bool GCSpiritBeastOperateResult::has_breedresult() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GCSpiritBeastOperateResult::set_has_breedresult() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GCSpiritBeastOperateResult::clear_has_breedresult() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GCSpiritBeastOperateResult::clear_breedresult() {
  if (breedresult_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    breedresult_->clear();
  }
  clear_has_breedresult();
}
inline const ::std::string& GCSpiritBeastOperateResult::breedresult() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateResult.breedResult)
  return *breedresult_;
}
inline void GCSpiritBeastOperateResult::set_breedresult(const ::std::string& value) {
  set_has_breedresult();
  if (breedresult_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    breedresult_ = new ::std::string;
  }
  breedresult_->assign(value);
  // @@protoc_insertion_point(field_set:GCSpiritBeastOperateResult.breedResult)
}
inline void GCSpiritBeastOperateResult::set_breedresult(const char* value) {
  set_has_breedresult();
  if (breedresult_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    breedresult_ = new ::std::string;
  }
  breedresult_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCSpiritBeastOperateResult.breedResult)
}
inline void GCSpiritBeastOperateResult::set_breedresult(const char* value, size_t size) {
  set_has_breedresult();
  if (breedresult_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    breedresult_ = new ::std::string;
  }
  breedresult_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCSpiritBeastOperateResult.breedResult)
}
inline ::std::string* GCSpiritBeastOperateResult::mutable_breedresult() {
  set_has_breedresult();
  if (breedresult_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    breedresult_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastOperateResult.breedResult)
  return breedresult_;
}
inline ::std::string* GCSpiritBeastOperateResult::release_breedresult() {
  clear_has_breedresult();
  if (breedresult_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = breedresult_;
    breedresult_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCSpiritBeastOperateResult::set_allocated_breedresult(::std::string* breedresult) {
  if (breedresult_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete breedresult_;
  }
  if (breedresult) {
    set_has_breedresult();
    breedresult_ = breedresult;
  } else {
    clear_has_breedresult();
    breedresult_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCSpiritBeastOperateResult.breedResult)
}

// -------------------------------------------------------------------

// CGSpiritBeastInherit

// optional int64 targetPid = 1;
inline bool CGSpiritBeastInherit::has_targetpid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSpiritBeastInherit::set_has_targetpid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSpiritBeastInherit::clear_has_targetpid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSpiritBeastInherit::clear_targetpid() {
  targetpid_ = GOOGLE_LONGLONG(0);
  clear_has_targetpid();
}
inline ::google::protobuf::int64 CGSpiritBeastInherit::targetpid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastInherit.targetPid)
  return targetpid_;
}
inline void CGSpiritBeastInherit::set_targetpid(::google::protobuf::int64 value) {
  set_has_targetpid();
  targetpid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastInherit.targetPid)
}

// optional int64 stuffPid = 2;
inline bool CGSpiritBeastInherit::has_stuffpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSpiritBeastInherit::set_has_stuffpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSpiritBeastInherit::clear_has_stuffpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSpiritBeastInherit::clear_stuffpid() {
  stuffpid_ = GOOGLE_LONGLONG(0);
  clear_has_stuffpid();
}
inline ::google::protobuf::int64 CGSpiritBeastInherit::stuffpid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastInherit.stuffPid)
  return stuffpid_;
}
inline void CGSpiritBeastInherit::set_stuffpid(::google::protobuf::int64 value) {
  set_has_stuffpid();
  stuffpid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastInherit.stuffPid)
}

// optional int32 isSavvy = 3;
inline bool CGSpiritBeastInherit::has_issavvy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGSpiritBeastInherit::set_has_issavvy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGSpiritBeastInherit::clear_has_issavvy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGSpiritBeastInherit::clear_issavvy() {
  issavvy_ = 0;
  clear_has_issavvy();
}
inline ::google::protobuf::int32 CGSpiritBeastInherit::issavvy() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastInherit.isSavvy)
  return issavvy_;
}
inline void CGSpiritBeastInherit::set_issavvy(::google::protobuf::int32 value) {
  set_has_issavvy();
  issavvy_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastInherit.isSavvy)
}

// optional int32 isSkill = 4;
inline bool CGSpiritBeastInherit::has_isskill() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGSpiritBeastInherit::set_has_isskill() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGSpiritBeastInherit::clear_has_isskill() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGSpiritBeastInherit::clear_isskill() {
  isskill_ = 0;
  clear_has_isskill();
}
inline ::google::protobuf::int32 CGSpiritBeastInherit::isskill() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastInherit.isSkill)
  return isskill_;
}
inline void CGSpiritBeastInherit::set_isskill(::google::protobuf::int32 value) {
  set_has_isskill();
  isskill_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastInherit.isSkill)
}

// -------------------------------------------------------------------

// GCSpiritBeastInheritResult

// optional int32 result = 1;
inline bool GCSpiritBeastInheritResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSpiritBeastInheritResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSpiritBeastInheritResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSpiritBeastInheritResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCSpiritBeastInheritResult::result() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastInheritResult.result)
  return result_;
}
inline void GCSpiritBeastInheritResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastInheritResult.result)
}

// optional int64 stuffPid = 2;
inline bool GCSpiritBeastInheritResult::has_stuffpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSpiritBeastInheritResult::set_has_stuffpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSpiritBeastInheritResult::clear_has_stuffpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSpiritBeastInheritResult::clear_stuffpid() {
  stuffpid_ = GOOGLE_LONGLONG(0);
  clear_has_stuffpid();
}
inline ::google::protobuf::int64 GCSpiritBeastInheritResult::stuffpid() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastInheritResult.stuffPid)
  return stuffpid_;
}
inline void GCSpiritBeastInheritResult::set_stuffpid(::google::protobuf::int64 value) {
  set_has_stuffpid();
  stuffpid_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastInheritResult.stuffPid)
}

// optional .SpiritBeastInfo sbInfo = 3;
inline bool GCSpiritBeastInheritResult::has_sbinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSpiritBeastInheritResult::set_has_sbinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSpiritBeastInheritResult::clear_has_sbinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSpiritBeastInheritResult::clear_sbinfo() {
  if (sbinfo_ != NULL) sbinfo_->::SpiritBeastInfo::Clear();
  clear_has_sbinfo();
}
inline const ::SpiritBeastInfo& GCSpiritBeastInheritResult::sbinfo() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastInheritResult.sbInfo)
  return sbinfo_ != NULL ? *sbinfo_ : *default_instance_->sbinfo_;
}
inline ::SpiritBeastInfo* GCSpiritBeastInheritResult::mutable_sbinfo() {
  set_has_sbinfo();
  if (sbinfo_ == NULL) sbinfo_ = new ::SpiritBeastInfo;
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastInheritResult.sbInfo)
  return sbinfo_;
}
inline ::SpiritBeastInfo* GCSpiritBeastInheritResult::release_sbinfo() {
  clear_has_sbinfo();
  ::SpiritBeastInfo* temp = sbinfo_;
  sbinfo_ = NULL;
  return temp;
}
inline void GCSpiritBeastInheritResult::set_allocated_sbinfo(::SpiritBeastInfo* sbinfo) {
  delete sbinfo_;
  sbinfo_ = sbinfo;
  if (sbinfo) {
    set_has_sbinfo();
  } else {
    clear_has_sbinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSpiritBeastInheritResult.sbInfo)
}

// -------------------------------------------------------------------

// CGSpiritBeastLevelUp

// optional int64 pid = 1;
inline bool CGSpiritBeastLevelUp::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSpiritBeastLevelUp::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSpiritBeastLevelUp::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSpiritBeastLevelUp::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGSpiritBeastLevelUp::pid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastLevelUp.pid)
  return pid_;
}
inline void CGSpiritBeastLevelUp::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastLevelUp.pid)
}

// optional int32 pelletID = 2;
inline bool CGSpiritBeastLevelUp::has_pelletid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSpiritBeastLevelUp::set_has_pelletid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSpiritBeastLevelUp::clear_has_pelletid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSpiritBeastLevelUp::clear_pelletid() {
  pelletid_ = 0;
  clear_has_pelletid();
}
inline ::google::protobuf::int32 CGSpiritBeastLevelUp::pelletid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastLevelUp.pelletID)
  return pelletid_;
}
inline void CGSpiritBeastLevelUp::set_pelletid(::google::protobuf::int32 value) {
  set_has_pelletid();
  pelletid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastLevelUp.pelletID)
}

// optional int32 pelletNum = 3;
inline bool CGSpiritBeastLevelUp::has_pelletnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGSpiritBeastLevelUp::set_has_pelletnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGSpiritBeastLevelUp::clear_has_pelletnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGSpiritBeastLevelUp::clear_pelletnum() {
  pelletnum_ = 0;
  clear_has_pelletnum();
}
inline ::google::protobuf::int32 CGSpiritBeastLevelUp::pelletnum() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastLevelUp.pelletNum)
  return pelletnum_;
}
inline void CGSpiritBeastLevelUp::set_pelletnum(::google::protobuf::int32 value) {
  set_has_pelletnum();
  pelletnum_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastLevelUp.pelletNum)
}

// -------------------------------------------------------------------

// GCSpiritBeastLevelUpResult

// optional int32 result = 1;
inline bool GCSpiritBeastLevelUpResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSpiritBeastLevelUpResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSpiritBeastLevelUpResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSpiritBeastLevelUpResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCSpiritBeastLevelUpResult::result() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastLevelUpResult.result)
  return result_;
}
inline void GCSpiritBeastLevelUpResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastLevelUpResult.result)
}

// optional .SpiritBeastInfo sbInfo = 2;
inline bool GCSpiritBeastLevelUpResult::has_sbinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSpiritBeastLevelUpResult::set_has_sbinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSpiritBeastLevelUpResult::clear_has_sbinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSpiritBeastLevelUpResult::clear_sbinfo() {
  if (sbinfo_ != NULL) sbinfo_->::SpiritBeastInfo::Clear();
  clear_has_sbinfo();
}
inline const ::SpiritBeastInfo& GCSpiritBeastLevelUpResult::sbinfo() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastLevelUpResult.sbInfo)
  return sbinfo_ != NULL ? *sbinfo_ : *default_instance_->sbinfo_;
}
inline ::SpiritBeastInfo* GCSpiritBeastLevelUpResult::mutable_sbinfo() {
  set_has_sbinfo();
  if (sbinfo_ == NULL) sbinfo_ = new ::SpiritBeastInfo;
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastLevelUpResult.sbInfo)
  return sbinfo_;
}
inline ::SpiritBeastInfo* GCSpiritBeastLevelUpResult::release_sbinfo() {
  clear_has_sbinfo();
  ::SpiritBeastInfo* temp = sbinfo_;
  sbinfo_ = NULL;
  return temp;
}
inline void GCSpiritBeastLevelUpResult::set_allocated_sbinfo(::SpiritBeastInfo* sbinfo) {
  delete sbinfo_;
  sbinfo_ = sbinfo;
  if (sbinfo) {
    set_has_sbinfo();
  } else {
    clear_has_sbinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSpiritBeastLevelUpResult.sbInfo)
}

// -------------------------------------------------------------------

// CGSpiritBeastOperateSkill

// optional int32 operate = 1;
inline bool CGSpiritBeastOperateSkill::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSpiritBeastOperateSkill::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSpiritBeastOperateSkill::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSpiritBeastOperateSkill::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 CGSpiritBeastOperateSkill::operate() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastOperateSkill.operate)
  return operate_;
}
inline void CGSpiritBeastOperateSkill::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastOperateSkill.operate)
}

// optional int64 pid = 2;
inline bool CGSpiritBeastOperateSkill::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSpiritBeastOperateSkill::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSpiritBeastOperateSkill::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSpiritBeastOperateSkill::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGSpiritBeastOperateSkill::pid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastOperateSkill.pid)
  return pid_;
}
inline void CGSpiritBeastOperateSkill::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastOperateSkill.pid)
}

// optional int32 targetID = 3;
inline bool CGSpiritBeastOperateSkill::has_targetid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGSpiritBeastOperateSkill::set_has_targetid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGSpiritBeastOperateSkill::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGSpiritBeastOperateSkill::clear_targetid() {
  targetid_ = 0;
  clear_has_targetid();
}
inline ::google::protobuf::int32 CGSpiritBeastOperateSkill::targetid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastOperateSkill.targetID)
  return targetid_;
}
inline void CGSpiritBeastOperateSkill::set_targetid(::google::protobuf::int32 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastOperateSkill.targetID)
}

// -------------------------------------------------------------------

// GCSpiritBeastOperateSkillResult

// optional int32 operate = 1;
inline bool GCSpiritBeastOperateSkillResult::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSpiritBeastOperateSkillResult::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSpiritBeastOperateSkillResult::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSpiritBeastOperateSkillResult::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 GCSpiritBeastOperateSkillResult::operate() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateSkillResult.operate)
  return operate_;
}
inline void GCSpiritBeastOperateSkillResult::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastOperateSkillResult.operate)
}

// optional int32 result = 2;
inline bool GCSpiritBeastOperateSkillResult::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSpiritBeastOperateSkillResult::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSpiritBeastOperateSkillResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSpiritBeastOperateSkillResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCSpiritBeastOperateSkillResult::result() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateSkillResult.result)
  return result_;
}
inline void GCSpiritBeastOperateSkillResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastOperateSkillResult.result)
}

// optional .SpiritBeastInfo sbInfo = 3;
inline bool GCSpiritBeastOperateSkillResult::has_sbinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSpiritBeastOperateSkillResult::set_has_sbinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSpiritBeastOperateSkillResult::clear_has_sbinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSpiritBeastOperateSkillResult::clear_sbinfo() {
  if (sbinfo_ != NULL) sbinfo_->::SpiritBeastInfo::Clear();
  clear_has_sbinfo();
}
inline const ::SpiritBeastInfo& GCSpiritBeastOperateSkillResult::sbinfo() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastOperateSkillResult.sbInfo)
  return sbinfo_ != NULL ? *sbinfo_ : *default_instance_->sbinfo_;
}
inline ::SpiritBeastInfo* GCSpiritBeastOperateSkillResult::mutable_sbinfo() {
  set_has_sbinfo();
  if (sbinfo_ == NULL) sbinfo_ = new ::SpiritBeastInfo;
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastOperateSkillResult.sbInfo)
  return sbinfo_;
}
inline ::SpiritBeastInfo* GCSpiritBeastOperateSkillResult::release_sbinfo() {
  clear_has_sbinfo();
  ::SpiritBeastInfo* temp = sbinfo_;
  sbinfo_ = NULL;
  return temp;
}
inline void GCSpiritBeastOperateSkillResult::set_allocated_sbinfo(::SpiritBeastInfo* sbinfo) {
  delete sbinfo_;
  sbinfo_ = sbinfo;
  if (sbinfo) {
    set_has_sbinfo();
  } else {
    clear_has_sbinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSpiritBeastOperateSkillResult.sbInfo)
}

// -------------------------------------------------------------------

// CGSpiritBeastUniteOperate

// optional int32 operate = 1;
inline bool CGSpiritBeastUniteOperate::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSpiritBeastUniteOperate::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSpiritBeastUniteOperate::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSpiritBeastUniteOperate::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 CGSpiritBeastUniteOperate::operate() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastUniteOperate.operate)
  return operate_;
}
inline void CGSpiritBeastUniteOperate::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastUniteOperate.operate)
}

// optional int32 target = 2;
inline bool CGSpiritBeastUniteOperate::has_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSpiritBeastUniteOperate::set_has_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSpiritBeastUniteOperate::clear_has_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSpiritBeastUniteOperate::clear_target() {
  target_ = 0;
  clear_has_target();
}
inline ::google::protobuf::int32 CGSpiritBeastUniteOperate::target() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastUniteOperate.target)
  return target_;
}
inline void CGSpiritBeastUniteOperate::set_target(::google::protobuf::int32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastUniteOperate.target)
}

// optional int32 zhenID = 3;
inline bool CGSpiritBeastUniteOperate::has_zhenid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGSpiritBeastUniteOperate::set_has_zhenid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGSpiritBeastUniteOperate::clear_has_zhenid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGSpiritBeastUniteOperate::clear_zhenid() {
  zhenid_ = 0;
  clear_has_zhenid();
}
inline ::google::protobuf::int32 CGSpiritBeastUniteOperate::zhenid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastUniteOperate.zhenID)
  return zhenid_;
}
inline void CGSpiritBeastUniteOperate::set_zhenid(::google::protobuf::int32 value) {
  set_has_zhenid();
  zhenid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastUniteOperate.zhenID)
}

// optional int32 posID = 4;
inline bool CGSpiritBeastUniteOperate::has_posid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGSpiritBeastUniteOperate::set_has_posid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGSpiritBeastUniteOperate::clear_has_posid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGSpiritBeastUniteOperate::clear_posid() {
  posid_ = 0;
  clear_has_posid();
}
inline ::google::protobuf::int32 CGSpiritBeastUniteOperate::posid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastUniteOperate.posID)
  return posid_;
}
inline void CGSpiritBeastUniteOperate::set_posid(::google::protobuf::int32 value) {
  set_has_posid();
  posid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastUniteOperate.posID)
}

// optional int64 pid = 5;
inline bool CGSpiritBeastUniteOperate::has_pid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGSpiritBeastUniteOperate::set_has_pid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGSpiritBeastUniteOperate::clear_has_pid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGSpiritBeastUniteOperate::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGSpiritBeastUniteOperate::pid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastUniteOperate.pid)
  return pid_;
}
inline void CGSpiritBeastUniteOperate::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastUniteOperate.pid)
}

// -------------------------------------------------------------------

// GCSpiritBeastUniteOperateResult

// optional int32 result = 1;
inline bool GCSpiritBeastUniteOperateResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSpiritBeastUniteOperateResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSpiritBeastUniteOperateResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSpiritBeastUniteOperateResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCSpiritBeastUniteOperateResult::result() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastUniteOperateResult.result)
  return result_;
}
inline void GCSpiritBeastUniteOperateResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastUniteOperateResult.result)
}

// optional int32 operate = 2;
inline bool GCSpiritBeastUniteOperateResult::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSpiritBeastUniteOperateResult::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSpiritBeastUniteOperateResult::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSpiritBeastUniteOperateResult::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 GCSpiritBeastUniteOperateResult::operate() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastUniteOperateResult.operate)
  return operate_;
}
inline void GCSpiritBeastUniteOperateResult::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastUniteOperateResult.operate)
}

// optional int32 target = 3;
inline bool GCSpiritBeastUniteOperateResult::has_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSpiritBeastUniteOperateResult::set_has_target() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSpiritBeastUniteOperateResult::clear_has_target() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSpiritBeastUniteOperateResult::clear_target() {
  target_ = 0;
  clear_has_target();
}
inline ::google::protobuf::int32 GCSpiritBeastUniteOperateResult::target() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastUniteOperateResult.target)
  return target_;
}
inline void GCSpiritBeastUniteOperateResult::set_target(::google::protobuf::int32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastUniteOperateResult.target)
}

// optional .SpiritBeastUniteInfo sbUnite = 4;
inline bool GCSpiritBeastUniteOperateResult::has_sbunite() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCSpiritBeastUniteOperateResult::set_has_sbunite() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCSpiritBeastUniteOperateResult::clear_has_sbunite() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCSpiritBeastUniteOperateResult::clear_sbunite() {
  if (sbunite_ != NULL) sbunite_->::SpiritBeastUniteInfo::Clear();
  clear_has_sbunite();
}
inline const ::SpiritBeastUniteInfo& GCSpiritBeastUniteOperateResult::sbunite() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastUniteOperateResult.sbUnite)
  return sbunite_ != NULL ? *sbunite_ : *default_instance_->sbunite_;
}
inline ::SpiritBeastUniteInfo* GCSpiritBeastUniteOperateResult::mutable_sbunite() {
  set_has_sbunite();
  if (sbunite_ == NULL) sbunite_ = new ::SpiritBeastUniteInfo;
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastUniteOperateResult.sbUnite)
  return sbunite_;
}
inline ::SpiritBeastUniteInfo* GCSpiritBeastUniteOperateResult::release_sbunite() {
  clear_has_sbunite();
  ::SpiritBeastUniteInfo* temp = sbunite_;
  sbunite_ = NULL;
  return temp;
}
inline void GCSpiritBeastUniteOperateResult::set_allocated_sbunite(::SpiritBeastUniteInfo* sbunite) {
  delete sbunite_;
  sbunite_ = sbunite;
  if (sbunite) {
    set_has_sbunite();
  } else {
    clear_has_sbunite();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSpiritBeastUniteOperateResult.sbUnite)
}

// optional .SpiritBeastInfo sbInfo = 5;
inline bool GCSpiritBeastUniteOperateResult::has_sbinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCSpiritBeastUniteOperateResult::set_has_sbinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCSpiritBeastUniteOperateResult::clear_has_sbinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCSpiritBeastUniteOperateResult::clear_sbinfo() {
  if (sbinfo_ != NULL) sbinfo_->::SpiritBeastInfo::Clear();
  clear_has_sbinfo();
}
inline const ::SpiritBeastInfo& GCSpiritBeastUniteOperateResult::sbinfo() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastUniteOperateResult.sbInfo)
  return sbinfo_ != NULL ? *sbinfo_ : *default_instance_->sbinfo_;
}
inline ::SpiritBeastInfo* GCSpiritBeastUniteOperateResult::mutable_sbinfo() {
  set_has_sbinfo();
  if (sbinfo_ == NULL) sbinfo_ = new ::SpiritBeastInfo;
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastUniteOperateResult.sbInfo)
  return sbinfo_;
}
inline ::SpiritBeastInfo* GCSpiritBeastUniteOperateResult::release_sbinfo() {
  clear_has_sbinfo();
  ::SpiritBeastInfo* temp = sbinfo_;
  sbinfo_ = NULL;
  return temp;
}
inline void GCSpiritBeastUniteOperateResult::set_allocated_sbinfo(::SpiritBeastInfo* sbinfo) {
  delete sbinfo_;
  sbinfo_ = sbinfo;
  if (sbinfo) {
    set_has_sbinfo();
  } else {
    clear_has_sbinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSpiritBeastUniteOperateResult.sbInfo)
}

// -------------------------------------------------------------------

// CGSpiritBeastFree

// optional int64 pid = 1;
inline bool CGSpiritBeastFree::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSpiritBeastFree::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSpiritBeastFree::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSpiritBeastFree::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGSpiritBeastFree::pid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastFree.pid)
  return pid_;
}
inline void CGSpiritBeastFree::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastFree.pid)
}

// -------------------------------------------------------------------

// GCSpiritBeastFreeResult

// optional int64 pid = 1;
inline bool GCSpiritBeastFreeResult::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSpiritBeastFreeResult::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSpiritBeastFreeResult::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSpiritBeastFreeResult::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 GCSpiritBeastFreeResult::pid() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastFreeResult.pid)
  return pid_;
}
inline void GCSpiritBeastFreeResult::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastFreeResult.pid)
}

// -------------------------------------------------------------------

// CGSpiritBeastBreed

// optional int32 operate = 1;
inline bool CGSpiritBeastBreed::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSpiritBeastBreed::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSpiritBeastBreed::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSpiritBeastBreed::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 CGSpiritBeastBreed::operate() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastBreed.operate)
  return operate_;
}
inline void CGSpiritBeastBreed::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastBreed.operate)
}

// optional int32 breedType = 2;
inline bool CGSpiritBeastBreed::has_breedtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSpiritBeastBreed::set_has_breedtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSpiritBeastBreed::clear_has_breedtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSpiritBeastBreed::clear_breedtype() {
  breedtype_ = 0;
  clear_has_breedtype();
}
inline ::google::protobuf::int32 CGSpiritBeastBreed::breedtype() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastBreed.breedType)
  return breedtype_;
}
inline void CGSpiritBeastBreed::set_breedtype(::google::protobuf::int32 value) {
  set_has_breedtype();
  breedtype_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastBreed.breedType)
}

// optional int64 pid = 3;
inline bool CGSpiritBeastBreed::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGSpiritBeastBreed::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGSpiritBeastBreed::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGSpiritBeastBreed::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGSpiritBeastBreed::pid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastBreed.pid)
  return pid_;
}
inline void CGSpiritBeastBreed::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastBreed.pid)
}

// -------------------------------------------------------------------

// GCSpiritBeastBreedResult

// optional int32 operate = 1;
inline bool GCSpiritBeastBreedResult::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSpiritBeastBreedResult::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSpiritBeastBreedResult::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSpiritBeastBreedResult::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 GCSpiritBeastBreedResult::operate() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastBreedResult.operate)
  return operate_;
}
inline void GCSpiritBeastBreedResult::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastBreedResult.operate)
}

// optional int32 breedType = 2;
inline bool GCSpiritBeastBreedResult::has_breedtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSpiritBeastBreedResult::set_has_breedtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSpiritBeastBreedResult::clear_has_breedtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSpiritBeastBreedResult::clear_breedtype() {
  breedtype_ = 0;
  clear_has_breedtype();
}
inline ::google::protobuf::int32 GCSpiritBeastBreedResult::breedtype() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastBreedResult.breedType)
  return breedtype_;
}
inline void GCSpiritBeastBreedResult::set_breedtype(::google::protobuf::int32 value) {
  set_has_breedtype();
  breedtype_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastBreedResult.breedType)
}

// optional int32 objectType = 3;
inline bool GCSpiritBeastBreedResult::has_objecttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSpiritBeastBreedResult::set_has_objecttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSpiritBeastBreedResult::clear_has_objecttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSpiritBeastBreedResult::clear_objecttype() {
  objecttype_ = 0;
  clear_has_objecttype();
}
inline ::google::protobuf::int32 GCSpiritBeastBreedResult::objecttype() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastBreedResult.objectType)
  return objecttype_;
}
inline void GCSpiritBeastBreedResult::set_objecttype(::google::protobuf::int32 value) {
  set_has_objecttype();
  objecttype_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastBreedResult.objectType)
}

// repeated .SpiritBeastInfo sbInfo = 4;
inline int GCSpiritBeastBreedResult::sbinfo_size() const {
  return sbinfo_.size();
}
inline void GCSpiritBeastBreedResult::clear_sbinfo() {
  sbinfo_.Clear();
}
inline const ::SpiritBeastInfo& GCSpiritBeastBreedResult::sbinfo(int index) const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastBreedResult.sbInfo)
  return sbinfo_.Get(index);
}
inline ::SpiritBeastInfo* GCSpiritBeastBreedResult::mutable_sbinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastBreedResult.sbInfo)
  return sbinfo_.Mutable(index);
}
inline ::SpiritBeastInfo* GCSpiritBeastBreedResult::add_sbinfo() {
  // @@protoc_insertion_point(field_add:GCSpiritBeastBreedResult.sbInfo)
  return sbinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo >&
GCSpiritBeastBreedResult::sbinfo() const {
  // @@protoc_insertion_point(field_list:GCSpiritBeastBreedResult.sbInfo)
  return sbinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SpiritBeastInfo >*
GCSpiritBeastBreedResult::mutable_sbinfo() {
  // @@protoc_insertion_point(field_mutable_list:GCSpiritBeastBreedResult.sbInfo)
  return &sbinfo_;
}

// optional int64 receiveTime = 5;
inline bool GCSpiritBeastBreedResult::has_receivetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCSpiritBeastBreedResult::set_has_receivetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCSpiritBeastBreedResult::clear_has_receivetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCSpiritBeastBreedResult::clear_receivetime() {
  receivetime_ = GOOGLE_LONGLONG(0);
  clear_has_receivetime();
}
inline ::google::protobuf::int64 GCSpiritBeastBreedResult::receivetime() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastBreedResult.receiveTime)
  return receivetime_;
}
inline void GCSpiritBeastBreedResult::set_receivetime(::google::protobuf::int64 value) {
  set_has_receivetime();
  receivetime_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastBreedResult.receiveTime)
}

// optional string objectName = 6;
inline bool GCSpiritBeastBreedResult::has_objectname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCSpiritBeastBreedResult::set_has_objectname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCSpiritBeastBreedResult::clear_has_objectname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCSpiritBeastBreedResult::clear_objectname() {
  if (objectname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    objectname_->clear();
  }
  clear_has_objectname();
}
inline const ::std::string& GCSpiritBeastBreedResult::objectname() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastBreedResult.objectName)
  return *objectname_;
}
inline void GCSpiritBeastBreedResult::set_objectname(const ::std::string& value) {
  set_has_objectname();
  if (objectname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    objectname_ = new ::std::string;
  }
  objectname_->assign(value);
  // @@protoc_insertion_point(field_set:GCSpiritBeastBreedResult.objectName)
}
inline void GCSpiritBeastBreedResult::set_objectname(const char* value) {
  set_has_objectname();
  if (objectname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    objectname_ = new ::std::string;
  }
  objectname_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCSpiritBeastBreedResult.objectName)
}
inline void GCSpiritBeastBreedResult::set_objectname(const char* value, size_t size) {
  set_has_objectname();
  if (objectname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    objectname_ = new ::std::string;
  }
  objectname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCSpiritBeastBreedResult.objectName)
}
inline ::std::string* GCSpiritBeastBreedResult::mutable_objectname() {
  set_has_objectname();
  if (objectname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    objectname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastBreedResult.objectName)
  return objectname_;
}
inline ::std::string* GCSpiritBeastBreedResult::release_objectname() {
  clear_has_objectname();
  if (objectname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = objectname_;
    objectname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCSpiritBeastBreedResult::set_allocated_objectname(::std::string* objectname) {
  if (objectname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete objectname_;
  }
  if (objectname) {
    set_has_objectname();
    objectname_ = objectname;
  } else {
    clear_has_objectname();
    objectname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCSpiritBeastBreedResult.objectName)
}

// optional int32 lucky = 7;
inline bool GCSpiritBeastBreedResult::has_lucky() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GCSpiritBeastBreedResult::set_has_lucky() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GCSpiritBeastBreedResult::clear_has_lucky() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GCSpiritBeastBreedResult::clear_lucky() {
  lucky_ = 0;
  clear_has_lucky();
}
inline ::google::protobuf::int32 GCSpiritBeastBreedResult::lucky() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastBreedResult.lucky)
  return lucky_;
}
inline void GCSpiritBeastBreedResult::set_lucky(::google::protobuf::int32 value) {
  set_has_lucky();
  lucky_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastBreedResult.lucky)
}

// optional string breedResult = 8;
inline bool GCSpiritBeastBreedResult::has_breedresult() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GCSpiritBeastBreedResult::set_has_breedresult() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GCSpiritBeastBreedResult::clear_has_breedresult() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GCSpiritBeastBreedResult::clear_breedresult() {
  if (breedresult_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    breedresult_->clear();
  }
  clear_has_breedresult();
}
inline const ::std::string& GCSpiritBeastBreedResult::breedresult() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastBreedResult.breedResult)
  return *breedresult_;
}
inline void GCSpiritBeastBreedResult::set_breedresult(const ::std::string& value) {
  set_has_breedresult();
  if (breedresult_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    breedresult_ = new ::std::string;
  }
  breedresult_->assign(value);
  // @@protoc_insertion_point(field_set:GCSpiritBeastBreedResult.breedResult)
}
inline void GCSpiritBeastBreedResult::set_breedresult(const char* value) {
  set_has_breedresult();
  if (breedresult_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    breedresult_ = new ::std::string;
  }
  breedresult_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCSpiritBeastBreedResult.breedResult)
}
inline void GCSpiritBeastBreedResult::set_breedresult(const char* value, size_t size) {
  set_has_breedresult();
  if (breedresult_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    breedresult_ = new ::std::string;
  }
  breedresult_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCSpiritBeastBreedResult.breedResult)
}
inline ::std::string* GCSpiritBeastBreedResult::mutable_breedresult() {
  set_has_breedresult();
  if (breedresult_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    breedresult_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastBreedResult.breedResult)
  return breedresult_;
}
inline ::std::string* GCSpiritBeastBreedResult::release_breedresult() {
  clear_has_breedresult();
  if (breedresult_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = breedresult_;
    breedresult_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCSpiritBeastBreedResult::set_allocated_breedresult(::std::string* breedresult) {
  if (breedresult_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete breedresult_;
  }
  if (breedresult) {
    set_has_breedresult();
    breedresult_ = breedresult;
  } else {
    clear_has_breedresult();
    breedresult_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCSpiritBeastBreedResult.breedResult)
}

// -------------------------------------------------------------------

// CGSpiritBeastHatch

// -------------------------------------------------------------------

// GCSpiritBeastHatchResult

// optional .SpiritBeastInfo sbInfo = 1;
inline bool GCSpiritBeastHatchResult::has_sbinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSpiritBeastHatchResult::set_has_sbinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSpiritBeastHatchResult::clear_has_sbinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSpiritBeastHatchResult::clear_sbinfo() {
  if (sbinfo_ != NULL) sbinfo_->::SpiritBeastInfo::Clear();
  clear_has_sbinfo();
}
inline const ::SpiritBeastInfo& GCSpiritBeastHatchResult::sbinfo() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastHatchResult.sbInfo)
  return sbinfo_ != NULL ? *sbinfo_ : *default_instance_->sbinfo_;
}
inline ::SpiritBeastInfo* GCSpiritBeastHatchResult::mutable_sbinfo() {
  set_has_sbinfo();
  if (sbinfo_ == NULL) sbinfo_ = new ::SpiritBeastInfo;
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastHatchResult.sbInfo)
  return sbinfo_;
}
inline ::SpiritBeastInfo* GCSpiritBeastHatchResult::release_sbinfo() {
  clear_has_sbinfo();
  ::SpiritBeastInfo* temp = sbinfo_;
  sbinfo_ = NULL;
  return temp;
}
inline void GCSpiritBeastHatchResult::set_allocated_sbinfo(::SpiritBeastInfo* sbinfo) {
  delete sbinfo_;
  sbinfo_ = sbinfo;
  if (sbinfo) {
    set_has_sbinfo();
  } else {
    clear_has_sbinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSpiritBeastHatchResult.sbInfo)
}

// -------------------------------------------------------------------

// GCSpiritBeastRelive

// optional int64 pid = 1;
inline bool GCSpiritBeastRelive::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSpiritBeastRelive::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSpiritBeastRelive::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSpiritBeastRelive::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 GCSpiritBeastRelive::pid() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastRelive.pid)
  return pid_;
}
inline void GCSpiritBeastRelive::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastRelive.pid)
}

// optional int64 reliveTime = 2;
inline bool GCSpiritBeastRelive::has_relivetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSpiritBeastRelive::set_has_relivetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSpiritBeastRelive::clear_has_relivetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSpiritBeastRelive::clear_relivetime() {
  relivetime_ = GOOGLE_LONGLONG(0);
  clear_has_relivetime();
}
inline ::google::protobuf::int64 GCSpiritBeastRelive::relivetime() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastRelive.reliveTime)
  return relivetime_;
}
inline void GCSpiritBeastRelive::set_relivetime(::google::protobuf::int64 value) {
  set_has_relivetime();
  relivetime_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastRelive.reliveTime)
}

// optional int64 fightPid = 3;
inline bool GCSpiritBeastRelive::has_fightpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSpiritBeastRelive::set_has_fightpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSpiritBeastRelive::clear_has_fightpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSpiritBeastRelive::clear_fightpid() {
  fightpid_ = GOOGLE_LONGLONG(0);
  clear_has_fightpid();
}
inline ::google::protobuf::int64 GCSpiritBeastRelive::fightpid() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastRelive.fightPid)
  return fightpid_;
}
inline void GCSpiritBeastRelive::set_fightpid(::google::protobuf::int64 value) {
  set_has_fightpid();
  fightpid_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastRelive.fightPid)
}

// -------------------------------------------------------------------

// CGSpiritBeastCatch

// optional int32 operate = 1;
inline bool CGSpiritBeastCatch::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSpiritBeastCatch::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSpiritBeastCatch::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSpiritBeastCatch::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 CGSpiritBeastCatch::operate() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastCatch.operate)
  return operate_;
}
inline void CGSpiritBeastCatch::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastCatch.operate)
}

// optional int64 pid = 2;
inline bool CGSpiritBeastCatch::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSpiritBeastCatch::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSpiritBeastCatch::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSpiritBeastCatch::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGSpiritBeastCatch::pid() const {
  // @@protoc_insertion_point(field_get:CGSpiritBeastCatch.pid)
  return pid_;
}
inline void CGSpiritBeastCatch::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGSpiritBeastCatch.pid)
}

// -------------------------------------------------------------------

// GCSpiritBeastCatchResult

// optional int32 operate = 1;
inline bool GCSpiritBeastCatchResult::has_operate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSpiritBeastCatchResult::set_has_operate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSpiritBeastCatchResult::clear_has_operate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSpiritBeastCatchResult::clear_operate() {
  operate_ = 0;
  clear_has_operate();
}
inline ::google::protobuf::int32 GCSpiritBeastCatchResult::operate() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastCatchResult.operate)
  return operate_;
}
inline void GCSpiritBeastCatchResult::set_operate(::google::protobuf::int32 value) {
  set_has_operate();
  operate_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastCatchResult.operate)
}

// optional int64 pid = 2;
inline bool GCSpiritBeastCatchResult::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSpiritBeastCatchResult::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSpiritBeastCatchResult::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSpiritBeastCatchResult::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 GCSpiritBeastCatchResult::pid() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastCatchResult.pid)
  return pid_;
}
inline void GCSpiritBeastCatchResult::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastCatchResult.pid)
}

// optional int64 playerPid = 3;
inline bool GCSpiritBeastCatchResult::has_playerpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSpiritBeastCatchResult::set_has_playerpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSpiritBeastCatchResult::clear_has_playerpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSpiritBeastCatchResult::clear_playerpid() {
  playerpid_ = GOOGLE_LONGLONG(0);
  clear_has_playerpid();
}
inline ::google::protobuf::int64 GCSpiritBeastCatchResult::playerpid() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastCatchResult.playerPid)
  return playerpid_;
}
inline void GCSpiritBeastCatchResult::set_playerpid(::google::protobuf::int64 value) {
  set_has_playerpid();
  playerpid_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastCatchResult.playerPid)
}

// optional int32 time = 4;
inline bool GCSpiritBeastCatchResult::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCSpiritBeastCatchResult::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCSpiritBeastCatchResult::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCSpiritBeastCatchResult::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 GCSpiritBeastCatchResult::time() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastCatchResult.time)
  return time_;
}
inline void GCSpiritBeastCatchResult::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GCSpiritBeastCatchResult.time)
}

// optional .SpiritBeastInfo sbInfo = 5;
inline bool GCSpiritBeastCatchResult::has_sbinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCSpiritBeastCatchResult::set_has_sbinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCSpiritBeastCatchResult::clear_has_sbinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCSpiritBeastCatchResult::clear_sbinfo() {
  if (sbinfo_ != NULL) sbinfo_->::SpiritBeastInfo::Clear();
  clear_has_sbinfo();
}
inline const ::SpiritBeastInfo& GCSpiritBeastCatchResult::sbinfo() const {
  // @@protoc_insertion_point(field_get:GCSpiritBeastCatchResult.sbInfo)
  return sbinfo_ != NULL ? *sbinfo_ : *default_instance_->sbinfo_;
}
inline ::SpiritBeastInfo* GCSpiritBeastCatchResult::mutable_sbinfo() {
  set_has_sbinfo();
  if (sbinfo_ == NULL) sbinfo_ = new ::SpiritBeastInfo;
  // @@protoc_insertion_point(field_mutable:GCSpiritBeastCatchResult.sbInfo)
  return sbinfo_;
}
inline ::SpiritBeastInfo* GCSpiritBeastCatchResult::release_sbinfo() {
  clear_has_sbinfo();
  ::SpiritBeastInfo* temp = sbinfo_;
  sbinfo_ = NULL;
  return temp;
}
inline void GCSpiritBeastCatchResult::set_allocated_sbinfo(::SpiritBeastInfo* sbinfo) {
  delete sbinfo_;
  sbinfo_ = sbinfo;
  if (sbinfo) {
    set_has_sbinfo();
  } else {
    clear_has_sbinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSpiritBeastCatchResult.sbInfo)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SpiritBeastMessage_2eproto__INCLUDED
