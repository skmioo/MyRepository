// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoneMessage.proto

#ifndef PROTOBUF_StoneMessage_2eproto__INCLUDED
#define PROTOBUF_StoneMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_StoneMessage_2eproto();
void protobuf_AssignDesc_StoneMessage_2eproto();
void protobuf_ShutdownFile_StoneMessage_2eproto();

class CGStone;
class GCStone;
class StoneSlotInfo;
class StoneInfo;

// ===================================================================

class CGStone : public ::google::protobuf::Message {
 public:
  CGStone();
  virtual ~CGStone();

  CGStone(const CGStone& from);

  inline CGStone& operator=(const CGStone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGStone& default_instance();

  void Swap(CGStone* other);

  // implements Message ----------------------------------------------

  CGStone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGStone& from);
  void MergeFrom(const CGStone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 slotId = 2;
  inline bool has_slotid() const;
  inline void clear_slotid();
  static const int kSlotIdFieldNumber = 2;
  inline ::google::protobuf::int32 slotid() const;
  inline void set_slotid(::google::protobuf::int32 value);

  // optional int32 holeId = 3;
  inline bool has_holeid() const;
  inline void clear_holeid();
  static const int kHoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 holeid() const;
  inline void set_holeid(::google::protobuf::int32 value);

  // optional int32 templateId = 4;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 4;
  inline ::google::protobuf::int32 templateid() const;
  inline void set_templateid(::google::protobuf::int32 value);

  // optional int32 addBind = 5;
  inline bool has_addbind() const;
  inline void clear_addbind();
  static const int kAddBindFieldNumber = 5;
  inline ::google::protobuf::int32 addbind() const;
  inline void set_addbind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGStone)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_slotid();
  inline void clear_has_slotid();
  inline void set_has_holeid();
  inline void clear_has_holeid();
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_addbind();
  inline void clear_has_addbind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 slotid_;
  ::google::protobuf::int32 holeid_;
  ::google::protobuf::int32 templateid_;
  ::google::protobuf::int32 addbind_;
  friend void  protobuf_AddDesc_StoneMessage_2eproto();
  friend void protobuf_AssignDesc_StoneMessage_2eproto();
  friend void protobuf_ShutdownFile_StoneMessage_2eproto();

  void InitAsDefaultInstance();
  static CGStone* default_instance_;
};
// -------------------------------------------------------------------

class GCStone : public ::google::protobuf::Message {
 public:
  GCStone();
  virtual ~GCStone();

  GCStone(const GCStone& from);

  inline GCStone& operator=(const GCStone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCStone& default_instance();

  void Swap(GCStone* other);

  // implements Message ----------------------------------------------

  GCStone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCStone& from);
  void MergeFrom(const GCStone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .StoneSlotInfo stoneSlotList = 2;
  inline int stoneslotlist_size() const;
  inline void clear_stoneslotlist();
  static const int kStoneSlotListFieldNumber = 2;
  inline const ::StoneSlotInfo& stoneslotlist(int index) const;
  inline ::StoneSlotInfo* mutable_stoneslotlist(int index);
  inline ::StoneSlotInfo* add_stoneslotlist();
  inline const ::google::protobuf::RepeatedPtrField< ::StoneSlotInfo >&
      stoneslotlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::StoneSlotInfo >*
      mutable_stoneslotlist();

  // optional int32 errorCode = 3;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 3;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);

  // repeated int32 gemSyms = 4;
  inline int gemsyms_size() const;
  inline void clear_gemsyms();
  static const int kGemSymsFieldNumber = 4;
  inline ::google::protobuf::int32 gemsyms(int index) const;
  inline void set_gemsyms(int index, ::google::protobuf::int32 value);
  inline void add_gemsyms(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gemsyms() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gemsyms();

  // @@protoc_insertion_point(class_scope:GCStone)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::StoneSlotInfo > stoneslotlist_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gemsyms_;
  friend void  protobuf_AddDesc_StoneMessage_2eproto();
  friend void protobuf_AssignDesc_StoneMessage_2eproto();
  friend void protobuf_ShutdownFile_StoneMessage_2eproto();

  void InitAsDefaultInstance();
  static GCStone* default_instance_;
};
// -------------------------------------------------------------------

class StoneSlotInfo : public ::google::protobuf::Message {
 public:
  StoneSlotInfo();
  virtual ~StoneSlotInfo();

  StoneSlotInfo(const StoneSlotInfo& from);

  inline StoneSlotInfo& operator=(const StoneSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoneSlotInfo& default_instance();

  void Swap(StoneSlotInfo* other);

  // implements Message ----------------------------------------------

  StoneSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoneSlotInfo& from);
  void MergeFrom(const StoneSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slotId = 1;
  inline bool has_slotid() const;
  inline void clear_slotid();
  static const int kSlotIdFieldNumber = 1;
  inline ::google::protobuf::int32 slotid() const;
  inline void set_slotid(::google::protobuf::int32 value);

  // repeated .StoneInfo stoneInfo = 2;
  inline int stoneinfo_size() const;
  inline void clear_stoneinfo();
  static const int kStoneInfoFieldNumber = 2;
  inline const ::StoneInfo& stoneinfo(int index) const;
  inline ::StoneInfo* mutable_stoneinfo(int index);
  inline ::StoneInfo* add_stoneinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::StoneInfo >&
      stoneinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::StoneInfo >*
      mutable_stoneinfo();

  // @@protoc_insertion_point(class_scope:StoneSlotInfo)
 private:
  inline void set_has_slotid();
  inline void clear_has_slotid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::StoneInfo > stoneinfo_;
  ::google::protobuf::int32 slotid_;
  friend void  protobuf_AddDesc_StoneMessage_2eproto();
  friend void protobuf_AssignDesc_StoneMessage_2eproto();
  friend void protobuf_ShutdownFile_StoneMessage_2eproto();

  void InitAsDefaultInstance();
  static StoneSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class StoneInfo : public ::google::protobuf::Message {
 public:
  StoneInfo();
  virtual ~StoneInfo();

  StoneInfo(const StoneInfo& from);

  inline StoneInfo& operator=(const StoneInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoneInfo& default_instance();

  void Swap(StoneInfo* other);

  // implements Message ----------------------------------------------

  StoneInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoneInfo& from);
  void MergeFrom(const StoneInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 holeId = 1;
  inline bool has_holeid() const;
  inline void clear_holeid();
  static const int kHoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 holeid() const;
  inline void set_holeid(::google::protobuf::int32 value);

  // optional int32 templateId = 2;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 2;
  inline ::google::protobuf::int32 templateid() const;
  inline void set_templateid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:StoneInfo)
 private:
  inline void set_has_holeid();
  inline void clear_has_holeid();
  inline void set_has_templateid();
  inline void clear_has_templateid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 holeid_;
  ::google::protobuf::int32 templateid_;
  friend void  protobuf_AddDesc_StoneMessage_2eproto();
  friend void protobuf_AssignDesc_StoneMessage_2eproto();
  friend void protobuf_ShutdownFile_StoneMessage_2eproto();

  void InitAsDefaultInstance();
  static StoneInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// CGStone

// optional int32 type = 1;
inline bool CGStone::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGStone::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGStone::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGStone::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGStone::type() const {
  // @@protoc_insertion_point(field_get:CGStone.type)
  return type_;
}
inline void CGStone::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGStone.type)
}

// optional int32 slotId = 2;
inline bool CGStone::has_slotid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGStone::set_has_slotid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGStone::clear_has_slotid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGStone::clear_slotid() {
  slotid_ = 0;
  clear_has_slotid();
}
inline ::google::protobuf::int32 CGStone::slotid() const {
  // @@protoc_insertion_point(field_get:CGStone.slotId)
  return slotid_;
}
inline void CGStone::set_slotid(::google::protobuf::int32 value) {
  set_has_slotid();
  slotid_ = value;
  // @@protoc_insertion_point(field_set:CGStone.slotId)
}

// optional int32 holeId = 3;
inline bool CGStone::has_holeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGStone::set_has_holeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGStone::clear_has_holeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGStone::clear_holeid() {
  holeid_ = 0;
  clear_has_holeid();
}
inline ::google::protobuf::int32 CGStone::holeid() const {
  // @@protoc_insertion_point(field_get:CGStone.holeId)
  return holeid_;
}
inline void CGStone::set_holeid(::google::protobuf::int32 value) {
  set_has_holeid();
  holeid_ = value;
  // @@protoc_insertion_point(field_set:CGStone.holeId)
}

// optional int32 templateId = 4;
inline bool CGStone::has_templateid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGStone::set_has_templateid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGStone::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGStone::clear_templateid() {
  templateid_ = 0;
  clear_has_templateid();
}
inline ::google::protobuf::int32 CGStone::templateid() const {
  // @@protoc_insertion_point(field_get:CGStone.templateId)
  return templateid_;
}
inline void CGStone::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:CGStone.templateId)
}

// optional int32 addBind = 5;
inline bool CGStone::has_addbind() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGStone::set_has_addbind() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGStone::clear_has_addbind() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGStone::clear_addbind() {
  addbind_ = 0;
  clear_has_addbind();
}
inline ::google::protobuf::int32 CGStone::addbind() const {
  // @@protoc_insertion_point(field_get:CGStone.addBind)
  return addbind_;
}
inline void CGStone::set_addbind(::google::protobuf::int32 value) {
  set_has_addbind();
  addbind_ = value;
  // @@protoc_insertion_point(field_set:CGStone.addBind)
}

// -------------------------------------------------------------------

// GCStone

// optional int32 type = 1;
inline bool GCStone::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCStone::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCStone::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCStone::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCStone::type() const {
  // @@protoc_insertion_point(field_get:GCStone.type)
  return type_;
}
inline void GCStone::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCStone.type)
}

// repeated .StoneSlotInfo stoneSlotList = 2;
inline int GCStone::stoneslotlist_size() const {
  return stoneslotlist_.size();
}
inline void GCStone::clear_stoneslotlist() {
  stoneslotlist_.Clear();
}
inline const ::StoneSlotInfo& GCStone::stoneslotlist(int index) const {
  // @@protoc_insertion_point(field_get:GCStone.stoneSlotList)
  return stoneslotlist_.Get(index);
}
inline ::StoneSlotInfo* GCStone::mutable_stoneslotlist(int index) {
  // @@protoc_insertion_point(field_mutable:GCStone.stoneSlotList)
  return stoneslotlist_.Mutable(index);
}
inline ::StoneSlotInfo* GCStone::add_stoneslotlist() {
  // @@protoc_insertion_point(field_add:GCStone.stoneSlotList)
  return stoneslotlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::StoneSlotInfo >&
GCStone::stoneslotlist() const {
  // @@protoc_insertion_point(field_list:GCStone.stoneSlotList)
  return stoneslotlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::StoneSlotInfo >*
GCStone::mutable_stoneslotlist() {
  // @@protoc_insertion_point(field_mutable_list:GCStone.stoneSlotList)
  return &stoneslotlist_;
}

// optional int32 errorCode = 3;
inline bool GCStone::has_errorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCStone::set_has_errorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCStone::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCStone::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 GCStone::errorcode() const {
  // @@protoc_insertion_point(field_get:GCStone.errorCode)
  return errorcode_;
}
inline void GCStone::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:GCStone.errorCode)
}

// repeated int32 gemSyms = 4;
inline int GCStone::gemsyms_size() const {
  return gemsyms_.size();
}
inline void GCStone::clear_gemsyms() {
  gemsyms_.Clear();
}
inline ::google::protobuf::int32 GCStone::gemsyms(int index) const {
  // @@protoc_insertion_point(field_get:GCStone.gemSyms)
  return gemsyms_.Get(index);
}
inline void GCStone::set_gemsyms(int index, ::google::protobuf::int32 value) {
  gemsyms_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCStone.gemSyms)
}
inline void GCStone::add_gemsyms(::google::protobuf::int32 value) {
  gemsyms_.Add(value);
  // @@protoc_insertion_point(field_add:GCStone.gemSyms)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCStone::gemsyms() const {
  // @@protoc_insertion_point(field_list:GCStone.gemSyms)
  return gemsyms_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCStone::mutable_gemsyms() {
  // @@protoc_insertion_point(field_mutable_list:GCStone.gemSyms)
  return &gemsyms_;
}

// -------------------------------------------------------------------

// StoneSlotInfo

// optional int32 slotId = 1;
inline bool StoneSlotInfo::has_slotid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoneSlotInfo::set_has_slotid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoneSlotInfo::clear_has_slotid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoneSlotInfo::clear_slotid() {
  slotid_ = 0;
  clear_has_slotid();
}
inline ::google::protobuf::int32 StoneSlotInfo::slotid() const {
  // @@protoc_insertion_point(field_get:StoneSlotInfo.slotId)
  return slotid_;
}
inline void StoneSlotInfo::set_slotid(::google::protobuf::int32 value) {
  set_has_slotid();
  slotid_ = value;
  // @@protoc_insertion_point(field_set:StoneSlotInfo.slotId)
}

// repeated .StoneInfo stoneInfo = 2;
inline int StoneSlotInfo::stoneinfo_size() const {
  return stoneinfo_.size();
}
inline void StoneSlotInfo::clear_stoneinfo() {
  stoneinfo_.Clear();
}
inline const ::StoneInfo& StoneSlotInfo::stoneinfo(int index) const {
  // @@protoc_insertion_point(field_get:StoneSlotInfo.stoneInfo)
  return stoneinfo_.Get(index);
}
inline ::StoneInfo* StoneSlotInfo::mutable_stoneinfo(int index) {
  // @@protoc_insertion_point(field_mutable:StoneSlotInfo.stoneInfo)
  return stoneinfo_.Mutable(index);
}
inline ::StoneInfo* StoneSlotInfo::add_stoneinfo() {
  // @@protoc_insertion_point(field_add:StoneSlotInfo.stoneInfo)
  return stoneinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::StoneInfo >&
StoneSlotInfo::stoneinfo() const {
  // @@protoc_insertion_point(field_list:StoneSlotInfo.stoneInfo)
  return stoneinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::StoneInfo >*
StoneSlotInfo::mutable_stoneinfo() {
  // @@protoc_insertion_point(field_mutable_list:StoneSlotInfo.stoneInfo)
  return &stoneinfo_;
}

// -------------------------------------------------------------------

// StoneInfo

// optional int32 holeId = 1;
inline bool StoneInfo::has_holeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoneInfo::set_has_holeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoneInfo::clear_has_holeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoneInfo::clear_holeid() {
  holeid_ = 0;
  clear_has_holeid();
}
inline ::google::protobuf::int32 StoneInfo::holeid() const {
  // @@protoc_insertion_point(field_get:StoneInfo.holeId)
  return holeid_;
}
inline void StoneInfo::set_holeid(::google::protobuf::int32 value) {
  set_has_holeid();
  holeid_ = value;
  // @@protoc_insertion_point(field_set:StoneInfo.holeId)
}

// optional int32 templateId = 2;
inline bool StoneInfo::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoneInfo::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoneInfo::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoneInfo::clear_templateid() {
  templateid_ = 0;
  clear_has_templateid();
}
inline ::google::protobuf::int32 StoneInfo::templateid() const {
  // @@protoc_insertion_point(field_get:StoneInfo.templateId)
  return templateid_;
}
inline void StoneInfo::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:StoneInfo.templateId)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_StoneMessage_2eproto__INCLUDED
