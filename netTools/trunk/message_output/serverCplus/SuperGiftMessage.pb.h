// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SuperGiftMessage.proto

#ifndef PROTOBUF_SuperGiftMessage_2eproto__INCLUDED
#define PROTOBUF_SuperGiftMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonMessage.pb.h"
#include "ShopMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SuperGiftMessage_2eproto();
void protobuf_AssignDesc_SuperGiftMessage_2eproto();
void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

class CardRewardData;
class RechargeTypeData;
class RechargeRewardData;
class GCUpdateCardReward;
class CGGetCardReward;
class OneInDay;
class GCSevenDaysHappy;
class CGSevenDaysHappy;
class CGFirstCharge;
class GCFirstCharge;
class CGRechargeReward;
class GCRechargeReward;
class GCRechargeTypeUpdate;
class GCSigninStatusList;
class SignInTem;
class CGSignin;
class GCSignin;
class SunSignInRew;
class CGGrowFund;
class GCGrowFund;
class GCGrowFundBuyNum;
class CGDoublePay;
class GCDoublePay;
class GCDailyGiftInfo;
class WinnersInfo;
class GCUpdateRewardList;
class oneBuyInfo;
class GCUpdateOneBuyList;
class CGCanBuy;
class GCCanBuyBack;
class GCHoliday;
class CGHoliday;
class GCFeelGold;
class CGFeelGold;
class LevelQuotaInfo;
class GCLevelQuota;
class CGBuyLevelQuota;
class GCLevelQuotaUpdate;
class FreeBackInfo;
class CGBuyFreeBack;
class GCFreeBack;
class SuperRebateItem;
class SuperRebateInfo;
class CGGetSuperRebateReward;
class GCSuperRebateBack;
class RechargeDailyGiftItem;
class GCRechargeDailyGiftInfo;
class CGGetRechargeDailyGiftReward;
class GCGetRechargeDailyGiftRewardBack;
class GCPointsBuyHisInfo;
class GCPointsBuyList;
class CGBuyPoints;

// ===================================================================

class CardRewardData : public ::google::protobuf::Message {
 public:
  CardRewardData();
  virtual ~CardRewardData();

  CardRewardData(const CardRewardData& from);

  inline CardRewardData& operator=(const CardRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardRewardData& default_instance();

  void Swap(CardRewardData* other);

  // implements Message ----------------------------------------------

  CardRewardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardRewardData& from);
  void MergeFrom(const CardRewardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 day = 3;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 3;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // optional int32 chargeId = 4;
  inline bool has_chargeid() const;
  inline void clear_chargeid();
  static const int kChargeIdFieldNumber = 4;
  inline ::google::protobuf::int32 chargeid() const;
  inline void set_chargeid(::google::protobuf::int32 value);

  // optional int32 getStatus = 5;
  inline bool has_getstatus() const;
  inline void clear_getstatus();
  static const int kGetStatusFieldNumber = 5;
  inline ::google::protobuf::int32 getstatus() const;
  inline void set_getstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CardRewardData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_chargeid();
  inline void clear_has_chargeid();
  inline void set_has_getstatus();
  inline void clear_has_getstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 chargeid_;
  ::google::protobuf::int32 getstatus_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CardRewardData* default_instance_;
};
// -------------------------------------------------------------------

class RechargeTypeData : public ::google::protobuf::Message {
 public:
  RechargeTypeData();
  virtual ~RechargeTypeData();

  RechargeTypeData(const RechargeTypeData& from);

  inline RechargeTypeData& operator=(const RechargeTypeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeTypeData& default_instance();

  void Swap(RechargeTypeData* other);

  // implements Message ----------------------------------------------

  RechargeTypeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargeTypeData& from);
  void MergeFrom(const RechargeTypeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 startTime = 2;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::int64 starttime() const;
  inline void set_starttime(::google::protobuf::int64 value);

  // optional int64 endTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // repeated .RechargeRewardData rewardData = 4;
  inline int rewarddata_size() const;
  inline void clear_rewarddata();
  static const int kRewardDataFieldNumber = 4;
  inline const ::RechargeRewardData& rewarddata(int index) const;
  inline ::RechargeRewardData* mutable_rewarddata(int index);
  inline ::RechargeRewardData* add_rewarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::RechargeRewardData >&
      rewarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::RechargeRewardData >*
      mutable_rewarddata();

  // optional int32 value = 5;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // optional int64 refreshTime = 6;
  inline bool has_refreshtime() const;
  inline void clear_refreshtime();
  static const int kRefreshTimeFieldNumber = 6;
  inline ::google::protobuf::int64 refreshtime() const;
  inline void set_refreshtime(::google::protobuf::int64 value);

  // optional int32 status = 7;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 7;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RechargeTypeData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_refreshtime();
  inline void clear_has_refreshtime();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::RepeatedPtrField< ::RechargeRewardData > rewarddata_;
  ::google::protobuf::int64 refreshtime_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static RechargeTypeData* default_instance_;
};
// -------------------------------------------------------------------

class RechargeRewardData : public ::google::protobuf::Message {
 public:
  RechargeRewardData();
  virtual ~RechargeRewardData();

  RechargeRewardData(const RechargeRewardData& from);

  inline RechargeRewardData& operator=(const RechargeRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeRewardData& default_instance();

  void Swap(RechargeRewardData* other);

  // implements Message ----------------------------------------------

  RechargeRewardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargeRewardData& from);
  void MergeFrom(const RechargeRewardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 needNum = 3;
  inline bool has_neednum() const;
  inline void clear_neednum();
  static const int kNeedNumFieldNumber = 3;
  inline ::google::protobuf::int32 neednum() const;
  inline void set_neednum(::google::protobuf::int32 value);

  // optional string reward = 4;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline const ::std::string& reward() const;
  inline void set_reward(const ::std::string& value);
  inline void set_reward(const char* value);
  inline void set_reward(const char* value, size_t size);
  inline ::std::string* mutable_reward();
  inline ::std::string* release_reward();
  inline void set_allocated_reward(::std::string* reward);

  // @@protoc_insertion_point(class_scope:RechargeRewardData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_neednum();
  inline void clear_has_neednum();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::std::string* reward_;
  ::google::protobuf::int32 neednum_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static RechargeRewardData* default_instance_;
};
// -------------------------------------------------------------------

class GCUpdateCardReward : public ::google::protobuf::Message {
 public:
  GCUpdateCardReward();
  virtual ~GCUpdateCardReward();

  GCUpdateCardReward(const GCUpdateCardReward& from);

  inline GCUpdateCardReward& operator=(const GCUpdateCardReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCUpdateCardReward& default_instance();

  void Swap(GCUpdateCardReward* other);

  // implements Message ----------------------------------------------

  GCUpdateCardReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCUpdateCardReward& from);
  void MergeFrom(const GCUpdateCardReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CardRewardData cardRewardData = 1;
  inline int cardrewarddata_size() const;
  inline void clear_cardrewarddata();
  static const int kCardRewardDataFieldNumber = 1;
  inline const ::CardRewardData& cardrewarddata(int index) const;
  inline ::CardRewardData* mutable_cardrewarddata(int index);
  inline ::CardRewardData* add_cardrewarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::CardRewardData >&
      cardrewarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::CardRewardData >*
      mutable_cardrewarddata();

  // @@protoc_insertion_point(class_scope:GCUpdateCardReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CardRewardData > cardrewarddata_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCUpdateCardReward* default_instance_;
};
// -------------------------------------------------------------------

class CGGetCardReward : public ::google::protobuf::Message {
 public:
  CGGetCardReward();
  virtual ~CGGetCardReward();

  CGGetCardReward(const CGGetCardReward& from);

  inline CGGetCardReward& operator=(const CGGetCardReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetCardReward& default_instance();

  void Swap(CGGetCardReward* other);

  // implements Message ----------------------------------------------

  CGGetCardReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetCardReward& from);
  void MergeFrom(const CGGetCardReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetCardReward)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetCardReward* default_instance_;
};
// -------------------------------------------------------------------

class OneInDay : public ::google::protobuf::Message {
 public:
  OneInDay();
  virtual ~OneInDay();

  OneInDay(const OneInDay& from);

  inline OneInDay& operator=(const OneInDay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneInDay& default_instance();

  void Swap(OneInDay* other);

  // implements Message ----------------------------------------------

  OneInDay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneInDay& from);
  void MergeFrom(const OneInDay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tblId = 1;
  inline bool has_tblid() const;
  inline void clear_tblid();
  static const int kTblIdFieldNumber = 1;
  inline ::google::protobuf::int32 tblid() const;
  inline void set_tblid(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 totalCount = 3;
  inline bool has_totalcount() const;
  inline void clear_totalcount();
  static const int kTotalCountFieldNumber = 3;
  inline ::google::protobuf::int32 totalcount() const;
  inline void set_totalcount(::google::protobuf::int32 value);

  // optional int32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OneInDay)
 private:
  inline void set_has_tblid();
  inline void clear_has_tblid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_totalcount();
  inline void clear_has_totalcount();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tblid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 totalcount_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static OneInDay* default_instance_;
};
// -------------------------------------------------------------------

class GCSevenDaysHappy : public ::google::protobuf::Message {
 public:
  GCSevenDaysHappy();
  virtual ~GCSevenDaysHappy();

  GCSevenDaysHappy(const GCSevenDaysHappy& from);

  inline GCSevenDaysHappy& operator=(const GCSevenDaysHappy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSevenDaysHappy& default_instance();

  void Swap(GCSevenDaysHappy* other);

  // implements Message ----------------------------------------------

  GCSevenDaysHappy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSevenDaysHappy& from);
  void MergeFrom(const GCSevenDaysHappy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .OneInDay targetLst = 2;
  inline int targetlst_size() const;
  inline void clear_targetlst();
  static const int kTargetLstFieldNumber = 2;
  inline const ::OneInDay& targetlst(int index) const;
  inline ::OneInDay* mutable_targetlst(int index);
  inline ::OneInDay* add_targetlst();
  inline const ::google::protobuf::RepeatedPtrField< ::OneInDay >&
      targetlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneInDay >*
      mutable_targetlst();

  // repeated .OneInDay upgradeLst = 3;
  inline int upgradelst_size() const;
  inline void clear_upgradelst();
  static const int kUpgradeLstFieldNumber = 3;
  inline const ::OneInDay& upgradelst(int index) const;
  inline ::OneInDay* mutable_upgradelst(int index);
  inline ::OneInDay* add_upgradelst();
  inline const ::google::protobuf::RepeatedPtrField< ::OneInDay >&
      upgradelst() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneInDay >*
      mutable_upgradelst();

  // repeated .OneInDay fightPowerLst = 4;
  inline int fightpowerlst_size() const;
  inline void clear_fightpowerlst();
  static const int kFightPowerLstFieldNumber = 4;
  inline const ::OneInDay& fightpowerlst(int index) const;
  inline ::OneInDay* mutable_fightpowerlst(int index);
  inline ::OneInDay* add_fightpowerlst();
  inline const ::google::protobuf::RepeatedPtrField< ::OneInDay >&
      fightpowerlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneInDay >*
      mutable_fightpowerlst();

  // repeated .OneInDay halfPrice = 5;
  inline int halfprice_size() const;
  inline void clear_halfprice();
  static const int kHalfPriceFieldNumber = 5;
  inline const ::OneInDay& halfprice(int index) const;
  inline ::OneInDay* mutable_halfprice(int index);
  inline ::OneInDay* add_halfprice();
  inline const ::google::protobuf::RepeatedPtrField< ::OneInDay >&
      halfprice() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneInDay >*
      mutable_halfprice();

  // optional int32 day = 6;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 6;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // optional int32 score = 7;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 7;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 curId = 8;
  inline bool has_curid() const;
  inline void clear_curid();
  static const int kCurIdFieldNumber = 8;
  inline ::google::protobuf::int32 curid() const;
  inline void set_curid(::google::protobuf::int32 value);

  // optional int64 endTime = 9;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 9;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int32 result = 10;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 10;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCSevenDaysHappy)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_curid();
  inline void clear_has_curid();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::OneInDay > targetlst_;
  ::google::protobuf::RepeatedPtrField< ::OneInDay > upgradelst_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::RepeatedPtrField< ::OneInDay > fightpowerlst_;
  ::google::protobuf::RepeatedPtrField< ::OneInDay > halfprice_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 curid_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSevenDaysHappy* default_instance_;
};
// -------------------------------------------------------------------

class CGSevenDaysHappy : public ::google::protobuf::Message {
 public:
  CGSevenDaysHappy();
  virtual ~CGSevenDaysHappy();

  CGSevenDaysHappy(const CGSevenDaysHappy& from);

  inline CGSevenDaysHappy& operator=(const CGSevenDaysHappy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSevenDaysHappy& default_instance();

  void Swap(CGSevenDaysHappy* other);

  // implements Message ----------------------------------------------

  CGSevenDaysHappy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSevenDaysHappy& from);
  void MergeFrom(const CGSevenDaysHappy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 day = 2;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 2;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // optional int32 tblId = 3;
  inline bool has_tblid() const;
  inline void clear_tblid();
  static const int kTblIdFieldNumber = 3;
  inline ::google::protobuf::int32 tblid() const;
  inline void set_tblid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGSevenDaysHappy)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_tblid();
  inline void clear_has_tblid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 tblid_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSevenDaysHappy* default_instance_;
};
// -------------------------------------------------------------------

class CGFirstCharge : public ::google::protobuf::Message {
 public:
  CGFirstCharge();
  virtual ~CGFirstCharge();

  CGFirstCharge(const CGFirstCharge& from);

  inline CGFirstCharge& operator=(const CGFirstCharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGFirstCharge& default_instance();

  void Swap(CGFirstCharge* other);

  // implements Message ----------------------------------------------

  CGFirstCharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGFirstCharge& from);
  void MergeFrom(const CGFirstCharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGFirstCharge)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGFirstCharge* default_instance_;
};
// -------------------------------------------------------------------

class GCFirstCharge : public ::google::protobuf::Message {
 public:
  GCFirstCharge();
  virtual ~GCFirstCharge();

  GCFirstCharge(const GCFirstCharge& from);

  inline GCFirstCharge& operator=(const GCFirstCharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCFirstCharge& default_instance();

  void Swap(GCFirstCharge* other);

  // implements Message ----------------------------------------------

  GCFirstCharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCFirstCharge& from);
  void MergeFrom(const GCFirstCharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCFirstCharge)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCFirstCharge* default_instance_;
};
// -------------------------------------------------------------------

class CGRechargeReward : public ::google::protobuf::Message {
 public:
  CGRechargeReward();
  virtual ~CGRechargeReward();

  CGRechargeReward(const CGRechargeReward& from);

  inline CGRechargeReward& operator=(const CGRechargeReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGRechargeReward& default_instance();

  void Swap(CGRechargeReward* other);

  // implements Message ----------------------------------------------

  CGRechargeReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGRechargeReward& from);
  void MergeFrom(const CGRechargeReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opType = 1;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 1;
  inline ::google::protobuf::int32 optype() const;
  inline void set_optype(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGRechargeReward)
 private:
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 optype_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGRechargeReward* default_instance_;
};
// -------------------------------------------------------------------

class GCRechargeReward : public ::google::protobuf::Message {
 public:
  GCRechargeReward();
  virtual ~GCRechargeReward();

  GCRechargeReward(const GCRechargeReward& from);

  inline GCRechargeReward& operator=(const GCRechargeReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRechargeReward& default_instance();

  void Swap(GCRechargeReward* other);

  // implements Message ----------------------------------------------

  GCRechargeReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRechargeReward& from);
  void MergeFrom(const GCRechargeReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opType = 1;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 1;
  inline ::google::protobuf::int32 optype() const;
  inline void set_optype(::google::protobuf::int32 value);

  // repeated .RechargeTypeData typeData = 2;
  inline int typedata_size() const;
  inline void clear_typedata();
  static const int kTypeDataFieldNumber = 2;
  inline const ::RechargeTypeData& typedata(int index) const;
  inline ::RechargeTypeData* mutable_typedata(int index);
  inline ::RechargeTypeData* add_typedata();
  inline const ::google::protobuf::RepeatedPtrField< ::RechargeTypeData >&
      typedata() const;
  inline ::google::protobuf::RepeatedPtrField< ::RechargeTypeData >*
      mutable_typedata();

  // optional int32 flag = 3;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 3;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCRechargeReward)
 private:
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RechargeTypeData > typedata_;
  ::google::protobuf::int32 optype_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRechargeReward* default_instance_;
};
// -------------------------------------------------------------------

class GCRechargeTypeUpdate : public ::google::protobuf::Message {
 public:
  GCRechargeTypeUpdate();
  virtual ~GCRechargeTypeUpdate();

  GCRechargeTypeUpdate(const GCRechargeTypeUpdate& from);

  inline GCRechargeTypeUpdate& operator=(const GCRechargeTypeUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRechargeTypeUpdate& default_instance();

  void Swap(GCRechargeTypeUpdate* other);

  // implements Message ----------------------------------------------

  GCRechargeTypeUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRechargeTypeUpdate& from);
  void MergeFrom(const GCRechargeTypeUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RechargeTypeData typeData = 1;
  inline bool has_typedata() const;
  inline void clear_typedata();
  static const int kTypeDataFieldNumber = 1;
  inline const ::RechargeTypeData& typedata() const;
  inline ::RechargeTypeData* mutable_typedata();
  inline ::RechargeTypeData* release_typedata();
  inline void set_allocated_typedata(::RechargeTypeData* typedata);

  // @@protoc_insertion_point(class_scope:GCRechargeTypeUpdate)
 private:
  inline void set_has_typedata();
  inline void clear_has_typedata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::RechargeTypeData* typedata_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRechargeTypeUpdate* default_instance_;
};
// -------------------------------------------------------------------

class GCSigninStatusList : public ::google::protobuf::Message {
 public:
  GCSigninStatusList();
  virtual ~GCSigninStatusList();

  GCSigninStatusList(const GCSigninStatusList& from);

  inline GCSigninStatusList& operator=(const GCSigninStatusList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSigninStatusList& default_instance();

  void Swap(GCSigninStatusList* other);

  // implements Message ----------------------------------------------

  GCSigninStatusList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSigninStatusList& from);
  void MergeFrom(const GCSigninStatusList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 today = 1;
  inline bool has_today() const;
  inline void clear_today();
  static const int kTodayFieldNumber = 1;
  inline ::google::protobuf::int32 today() const;
  inline void set_today(::google::protobuf::int32 value);

  // repeated .SunSignInRew rewardMap = 2;
  inline int rewardmap_size() const;
  inline void clear_rewardmap();
  static const int kRewardMapFieldNumber = 2;
  inline const ::SunSignInRew& rewardmap(int index) const;
  inline ::SunSignInRew* mutable_rewardmap(int index);
  inline ::SunSignInRew* add_rewardmap();
  inline const ::google::protobuf::RepeatedPtrField< ::SunSignInRew >&
      rewardmap() const;
  inline ::google::protobuf::RepeatedPtrField< ::SunSignInRew >*
      mutable_rewardmap();

  // optional int32 signCount = 3;
  inline bool has_signcount() const;
  inline void clear_signcount();
  static const int kSignCountFieldNumber = 3;
  inline ::google::protobuf::int32 signcount() const;
  inline void set_signcount(::google::protobuf::int32 value);

  // repeated .SignInTem signInTem = 4;
  inline int signintem_size() const;
  inline void clear_signintem();
  static const int kSignInTemFieldNumber = 4;
  inline const ::SignInTem& signintem(int index) const;
  inline ::SignInTem* mutable_signintem(int index);
  inline ::SignInTem* add_signintem();
  inline const ::google::protobuf::RepeatedPtrField< ::SignInTem >&
      signintem() const;
  inline ::google::protobuf::RepeatedPtrField< ::SignInTem >*
      mutable_signintem();

  // optional int32 totalSignNum = 5;
  inline bool has_totalsignnum() const;
  inline void clear_totalsignnum();
  static const int kTotalSignNumFieldNumber = 5;
  inline ::google::protobuf::int32 totalsignnum() const;
  inline void set_totalsignnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCSigninStatusList)
 private:
  inline void set_has_today();
  inline void clear_has_today();
  inline void set_has_signcount();
  inline void clear_has_signcount();
  inline void set_has_totalsignnum();
  inline void clear_has_totalsignnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SunSignInRew > rewardmap_;
  ::google::protobuf::int32 today_;
  ::google::protobuf::int32 signcount_;
  ::google::protobuf::RepeatedPtrField< ::SignInTem > signintem_;
  ::google::protobuf::int32 totalsignnum_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSigninStatusList* default_instance_;
};
// -------------------------------------------------------------------

class SignInTem : public ::google::protobuf::Message {
 public:
  SignInTem();
  virtual ~SignInTem();

  SignInTem(const SignInTem& from);

  inline SignInTem& operator=(const SignInTem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignInTem& default_instance();

  void Swap(SignInTem* other);

  // implements Message ----------------------------------------------

  SignInTem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignInTem& from);
  void MergeFrom(const SignInTem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 temId = 1;
  inline bool has_temid() const;
  inline void clear_temid();
  static const int kTemIdFieldNumber = 1;
  inline ::google::protobuf::int32 temid() const;
  inline void set_temid(::google::protobuf::int32 value);

  // optional int32 month = 2;
  inline bool has_month() const;
  inline void clear_month();
  static const int kMonthFieldNumber = 2;
  inline ::google::protobuf::int32 month() const;
  inline void set_month(::google::protobuf::int32 value);

  // optional int32 day = 3;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 3;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // optional .ItemInfo itemInfo = 4;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 4;
  inline const ::ItemInfo& iteminfo() const;
  inline ::ItemInfo* mutable_iteminfo();
  inline ::ItemInfo* release_iteminfo();
  inline void set_allocated_iteminfo(::ItemInfo* iteminfo);

  // optional int32 vip = 5;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 5;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);

  // optional int32 ratio = 6;
  inline bool has_ratio() const;
  inline void clear_ratio();
  static const int kRatioFieldNumber = 6;
  inline ::google::protobuf::int32 ratio() const;
  inline void set_ratio(::google::protobuf::int32 value);

  // optional int32 signStatus = 7;
  inline bool has_signstatus() const;
  inline void clear_signstatus();
  static const int kSignStatusFieldNumber = 7;
  inline ::google::protobuf::int32 signstatus() const;
  inline void set_signstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SignInTem)
 private:
  inline void set_has_temid();
  inline void clear_has_temid();
  inline void set_has_month();
  inline void clear_has_month();
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_ratio();
  inline void clear_has_ratio();
  inline void set_has_signstatus();
  inline void clear_has_signstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 temid_;
  ::google::protobuf::int32 month_;
  ::ItemInfo* iteminfo_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 ratio_;
  ::google::protobuf::int32 signstatus_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static SignInTem* default_instance_;
};
// -------------------------------------------------------------------

class CGSignin : public ::google::protobuf::Message {
 public:
  CGSignin();
  virtual ~CGSignin();

  CGSignin(const CGSignin& from);

  inline CGSignin& operator=(const CGSignin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSignin& default_instance();

  void Swap(CGSignin* other);

  // implements Message ----------------------------------------------

  CGSignin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSignin& from);
  void MergeFrom(const CGSignin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 temId = 2;
  inline bool has_temid() const;
  inline void clear_temid();
  static const int kTemIdFieldNumber = 2;
  inline ::google::protobuf::int32 temid() const;
  inline void set_temid(::google::protobuf::int32 value);

  // optional int32 indexId = 3;
  inline bool has_indexid() const;
  inline void clear_indexid();
  static const int kIndexIdFieldNumber = 3;
  inline ::google::protobuf::int32 indexid() const;
  inline void set_indexid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGSignin)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_temid();
  inline void clear_has_temid();
  inline void set_has_indexid();
  inline void clear_has_indexid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 temid_;
  ::google::protobuf::int32 indexid_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSignin* default_instance_;
};
// -------------------------------------------------------------------

class GCSignin : public ::google::protobuf::Message {
 public:
  GCSignin();
  virtual ~GCSignin();

  GCSignin(const GCSignin& from);

  inline GCSignin& operator=(const GCSignin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSignin& default_instance();

  void Swap(GCSignin* other);

  // implements Message ----------------------------------------------

  GCSignin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSignin& from);
  void MergeFrom(const GCSignin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 signStatus = 2;
  inline bool has_signstatus() const;
  inline void clear_signstatus();
  static const int kSignStatusFieldNumber = 2;
  inline ::google::protobuf::int32 signstatus() const;
  inline void set_signstatus(::google::protobuf::int32 value);

  // optional int32 signId = 3;
  inline bool has_signid() const;
  inline void clear_signid();
  static const int kSignIdFieldNumber = 3;
  inline ::google::protobuf::int32 signid() const;
  inline void set_signid(::google::protobuf::int32 value);

  // optional int32 signCount = 4;
  inline bool has_signcount() const;
  inline void clear_signcount();
  static const int kSignCountFieldNumber = 4;
  inline ::google::protobuf::int32 signcount() const;
  inline void set_signcount(::google::protobuf::int32 value);

  // optional int32 totalSignNum = 5;
  inline bool has_totalsignnum() const;
  inline void clear_totalsignnum();
  static const int kTotalSignNumFieldNumber = 5;
  inline ::google::protobuf::int32 totalsignnum() const;
  inline void set_totalsignnum(::google::protobuf::int32 value);

  // optional .SunSignInRew changeRew = 6;
  inline bool has_changerew() const;
  inline void clear_changerew();
  static const int kChangeRewFieldNumber = 6;
  inline const ::SunSignInRew& changerew() const;
  inline ::SunSignInRew* mutable_changerew();
  inline ::SunSignInRew* release_changerew();
  inline void set_allocated_changerew(::SunSignInRew* changerew);

  // @@protoc_insertion_point(class_scope:GCSignin)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_signstatus();
  inline void clear_has_signstatus();
  inline void set_has_signid();
  inline void clear_has_signid();
  inline void set_has_signcount();
  inline void clear_has_signcount();
  inline void set_has_totalsignnum();
  inline void clear_has_totalsignnum();
  inline void set_has_changerew();
  inline void clear_has_changerew();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 signstatus_;
  ::google::protobuf::int32 signid_;
  ::google::protobuf::int32 signcount_;
  ::SunSignInRew* changerew_;
  ::google::protobuf::int32 totalsignnum_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSignin* default_instance_;
};
// -------------------------------------------------------------------

class SunSignInRew : public ::google::protobuf::Message {
 public:
  SunSignInRew();
  virtual ~SunSignInRew();

  SunSignInRew(const SunSignInRew& from);

  inline SunSignInRew& operator=(const SunSignInRew& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SunSignInRew& default_instance();

  void Swap(SunSignInRew* other);

  // implements Message ----------------------------------------------

  SunSignInRew* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SunSignInRew& from);
  void MergeFrom(const SunSignInRew& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 temId = 1;
  inline bool has_temid() const;
  inline void clear_temid();
  static const int kTemIdFieldNumber = 1;
  inline ::google::protobuf::int32 temid() const;
  inline void set_temid(::google::protobuf::int32 value);

  // optional int32 signNum = 2;
  inline bool has_signnum() const;
  inline void clear_signnum();
  static const int kSignNumFieldNumber = 2;
  inline ::google::protobuf::int32 signnum() const;
  inline void set_signnum(::google::protobuf::int32 value);

  // optional .ItemInfo itemInfo = 3;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 3;
  inline const ::ItemInfo& iteminfo() const;
  inline ::ItemInfo* mutable_iteminfo();
  inline ::ItemInfo* release_iteminfo();
  inline void set_allocated_iteminfo(::ItemInfo* iteminfo);

  // optional int32 value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SunSignInRew)
 private:
  inline void set_has_temid();
  inline void clear_has_temid();
  inline void set_has_signnum();
  inline void clear_has_signnum();
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 temid_;
  ::google::protobuf::int32 signnum_;
  ::ItemInfo* iteminfo_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static SunSignInRew* default_instance_;
};
// -------------------------------------------------------------------

class CGGrowFund : public ::google::protobuf::Message {
 public:
  CGGrowFund();
  virtual ~CGGrowFund();

  CGGrowFund(const CGGrowFund& from);

  inline CGGrowFund& operator=(const CGGrowFund& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGrowFund& default_instance();

  void Swap(CGGrowFund* other);

  // implements Message ----------------------------------------------

  CGGrowFund* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGrowFund& from);
  void MergeFrom(const CGGrowFund& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opType = 1;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 1;
  inline ::google::protobuf::int32 optype() const;
  inline void set_optype(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGrowFund)
 private:
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 optype_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGrowFund* default_instance_;
};
// -------------------------------------------------------------------

class GCGrowFund : public ::google::protobuf::Message {
 public:
  GCGrowFund();
  virtual ~GCGrowFund();

  GCGrowFund(const GCGrowFund& from);

  inline GCGrowFund& operator=(const GCGrowFund& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGrowFund& default_instance();

  void Swap(GCGrowFund* other);

  // implements Message ----------------------------------------------

  GCGrowFund* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGrowFund& from);
  void MergeFrom(const GCGrowFund& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opType = 1;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 1;
  inline ::google::protobuf::int32 optype() const;
  inline void set_optype(::google::protobuf::int32 value);

  // optional int32 flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional int32 buyStatus = 3;
  inline bool has_buystatus() const;
  inline void clear_buystatus();
  static const int kBuyStatusFieldNumber = 3;
  inline ::google::protobuf::int32 buystatus() const;
  inline void set_buystatus(::google::protobuf::int32 value);

  // optional int32 buyNum = 4;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuyNumFieldNumber = 4;
  inline ::google::protobuf::int32 buynum() const;
  inline void set_buynum(::google::protobuf::int32 value);

  // repeated int32 growFundList = 5;
  inline int growfundlist_size() const;
  inline void clear_growfundlist();
  static const int kGrowFundListFieldNumber = 5;
  inline ::google::protobuf::int32 growfundlist(int index) const;
  inline void set_growfundlist(int index, ::google::protobuf::int32 value);
  inline void add_growfundlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      growfundlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_growfundlist();

  // repeated int32 generalWelfareList = 6;
  inline int generalwelfarelist_size() const;
  inline void clear_generalwelfarelist();
  static const int kGeneralWelfareListFieldNumber = 6;
  inline ::google::protobuf::int32 generalwelfarelist(int index) const;
  inline void set_generalwelfarelist(int index, ::google::protobuf::int32 value);
  inline void add_generalwelfarelist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      generalwelfarelist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_generalwelfarelist();

  // @@protoc_insertion_point(class_scope:GCGrowFund)
 private:
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_buystatus();
  inline void clear_has_buystatus();
  inline void set_has_buynum();
  inline void clear_has_buynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 optype_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 buystatus_;
  ::google::protobuf::int32 buynum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > growfundlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > generalwelfarelist_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGrowFund* default_instance_;
};
// -------------------------------------------------------------------

class GCGrowFundBuyNum : public ::google::protobuf::Message {
 public:
  GCGrowFundBuyNum();
  virtual ~GCGrowFundBuyNum();

  GCGrowFundBuyNum(const GCGrowFundBuyNum& from);

  inline GCGrowFundBuyNum& operator=(const GCGrowFundBuyNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGrowFundBuyNum& default_instance();

  void Swap(GCGrowFundBuyNum* other);

  // implements Message ----------------------------------------------

  GCGrowFundBuyNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGrowFundBuyNum& from);
  void MergeFrom(const GCGrowFundBuyNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 buyNum = 1;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuyNumFieldNumber = 1;
  inline ::google::protobuf::int32 buynum() const;
  inline void set_buynum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGrowFundBuyNum)
 private:
  inline void set_has_buynum();
  inline void clear_has_buynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 buynum_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGrowFundBuyNum* default_instance_;
};
// -------------------------------------------------------------------

class CGDoublePay : public ::google::protobuf::Message {
 public:
  CGDoublePay();
  virtual ~CGDoublePay();

  CGDoublePay(const CGDoublePay& from);

  inline CGDoublePay& operator=(const CGDoublePay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGDoublePay& default_instance();

  void Swap(CGDoublePay* other);

  // implements Message ----------------------------------------------

  CGDoublePay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGDoublePay& from);
  void MergeFrom(const CGDoublePay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGDoublePay)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGDoublePay* default_instance_;
};
// -------------------------------------------------------------------

class GCDoublePay : public ::google::protobuf::Message {
 public:
  GCDoublePay();
  virtual ~GCDoublePay();

  GCDoublePay(const GCDoublePay& from);

  inline GCDoublePay& operator=(const GCDoublePay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDoublePay& default_instance();

  void Swap(GCDoublePay* other);

  // implements Message ----------------------------------------------

  GCDoublePay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDoublePay& from);
  void MergeFrom(const GCDoublePay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 payIdList = 1;
  inline int payidlist_size() const;
  inline void clear_payidlist();
  static const int kPayIdListFieldNumber = 1;
  inline ::google::protobuf::int32 payidlist(int index) const;
  inline void set_payidlist(int index, ::google::protobuf::int32 value);
  inline void add_payidlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      payidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_payidlist();

  // @@protoc_insertion_point(class_scope:GCDoublePay)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > payidlist_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDoublePay* default_instance_;
};
// -------------------------------------------------------------------

class GCDailyGiftInfo : public ::google::protobuf::Message {
 public:
  GCDailyGiftInfo();
  virtual ~GCDailyGiftInfo();

  GCDailyGiftInfo(const GCDailyGiftInfo& from);

  inline GCDailyGiftInfo& operator=(const GCDailyGiftInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDailyGiftInfo& default_instance();

  void Swap(GCDailyGiftInfo* other);

  // implements Message ----------------------------------------------

  GCDailyGiftInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDailyGiftInfo& from);
  void MergeFrom(const GCDailyGiftInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 dailyGiftList = 1;
  inline int dailygiftlist_size() const;
  inline void clear_dailygiftlist();
  static const int kDailyGiftListFieldNumber = 1;
  inline ::google::protobuf::int32 dailygiftlist(int index) const;
  inline void set_dailygiftlist(int index, ::google::protobuf::int32 value);
  inline void add_dailygiftlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dailygiftlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dailygiftlist();

  // @@protoc_insertion_point(class_scope:GCDailyGiftInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dailygiftlist_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDailyGiftInfo* default_instance_;
};
// -------------------------------------------------------------------

class WinnersInfo : public ::google::protobuf::Message {
 public:
  WinnersInfo();
  virtual ~WinnersInfo();

  WinnersInfo(const WinnersInfo& from);

  inline WinnersInfo& operator=(const WinnersInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WinnersInfo& default_instance();

  void Swap(WinnersInfo* other);

  // implements Message ----------------------------------------------

  WinnersInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WinnersInfo& from);
  void MergeFrom(const WinnersInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string playerName = 1;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 1;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // optional int32 price = 2;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 2;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:WinnersInfo)
 private:
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* playername_;
  ::std::string* name_;
  ::google::protobuf::int32 price_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static WinnersInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCUpdateRewardList : public ::google::protobuf::Message {
 public:
  GCUpdateRewardList();
  virtual ~GCUpdateRewardList();

  GCUpdateRewardList(const GCUpdateRewardList& from);

  inline GCUpdateRewardList& operator=(const GCUpdateRewardList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCUpdateRewardList& default_instance();

  void Swap(GCUpdateRewardList* other);

  // implements Message ----------------------------------------------

  GCUpdateRewardList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCUpdateRewardList& from);
  void MergeFrom(const GCUpdateRewardList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .WinnersInfo winnersInfoList = 2;
  inline int winnersinfolist_size() const;
  inline void clear_winnersinfolist();
  static const int kWinnersInfoListFieldNumber = 2;
  inline const ::WinnersInfo& winnersinfolist(int index) const;
  inline ::WinnersInfo* mutable_winnersinfolist(int index);
  inline ::WinnersInfo* add_winnersinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::WinnersInfo >&
      winnersinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::WinnersInfo >*
      mutable_winnersinfolist();

  // @@protoc_insertion_point(class_scope:GCUpdateRewardList)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WinnersInfo > winnersinfolist_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCUpdateRewardList* default_instance_;
};
// -------------------------------------------------------------------

class oneBuyInfo : public ::google::protobuf::Message {
 public:
  oneBuyInfo();
  virtual ~oneBuyInfo();

  oneBuyInfo(const oneBuyInfo& from);

  inline oneBuyInfo& operator=(const oneBuyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const oneBuyInfo& default_instance();

  void Swap(oneBuyInfo* other);

  // implements Message ----------------------------------------------

  oneBuyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const oneBuyInfo& from);
  void MergeFrom(const oneBuyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 curTotalBuyNum = 3;
  inline bool has_curtotalbuynum() const;
  inline void clear_curtotalbuynum();
  static const int kCurTotalBuyNumFieldNumber = 3;
  inline ::google::protobuf::int32 curtotalbuynum() const;
  inline void set_curtotalbuynum(::google::protobuf::int32 value);

  // optional int32 curMyBuyNum = 4;
  inline bool has_curmybuynum() const;
  inline void clear_curmybuynum();
  static const int kCurMyBuyNumFieldNumber = 4;
  inline ::google::protobuf::int32 curmybuynum() const;
  inline void set_curmybuynum(::google::protobuf::int32 value);

  // optional int64 overTime = 5;
  inline bool has_overtime() const;
  inline void clear_overtime();
  static const int kOverTimeFieldNumber = 5;
  inline ::google::protobuf::int64 overtime() const;
  inline void set_overtime(::google::protobuf::int64 value);

  // optional int32 group = 6;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 6;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // optional int32 price = 7;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 7;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional string name = 8;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 8;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string item = 9;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 9;
  inline const ::std::string& item() const;
  inline void set_item(const ::std::string& value);
  inline void set_item(const char* value);
  inline void set_item(const char* value, size_t size);
  inline ::std::string* mutable_item();
  inline ::std::string* release_item();
  inline void set_allocated_item(::std::string* item);

  // optional int32 nextID = 10;
  inline bool has_nextid() const;
  inline void clear_nextid();
  static const int kNextIDFieldNumber = 10;
  inline ::google::protobuf::int32 nextid() const;
  inline void set_nextid(::google::protobuf::int32 value);

  // optional string charge = 11;
  inline bool has_charge() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 11;
  inline const ::std::string& charge() const;
  inline void set_charge(const ::std::string& value);
  inline void set_charge(const char* value);
  inline void set_charge(const char* value, size_t size);
  inline ::std::string* mutable_charge();
  inline ::std::string* release_charge();
  inline void set_allocated_charge(::std::string* charge);

  // @@protoc_insertion_point(class_scope:oneBuyInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_curtotalbuynum();
  inline void clear_has_curtotalbuynum();
  inline void set_has_curmybuynum();
  inline void clear_has_curmybuynum();
  inline void set_has_overtime();
  inline void clear_has_overtime();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_nextid();
  inline void clear_has_nextid();
  inline void set_has_charge();
  inline void clear_has_charge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 curtotalbuynum_;
  ::google::protobuf::int32 curmybuynum_;
  ::google::protobuf::int64 overtime_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 price_;
  ::std::string* name_;
  ::std::string* item_;
  ::std::string* charge_;
  ::google::protobuf::int32 nextid_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static oneBuyInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCUpdateOneBuyList : public ::google::protobuf::Message {
 public:
  GCUpdateOneBuyList();
  virtual ~GCUpdateOneBuyList();

  GCUpdateOneBuyList(const GCUpdateOneBuyList& from);

  inline GCUpdateOneBuyList& operator=(const GCUpdateOneBuyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCUpdateOneBuyList& default_instance();

  void Swap(GCUpdateOneBuyList* other);

  // implements Message ----------------------------------------------

  GCUpdateOneBuyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCUpdateOneBuyList& from);
  void MergeFrom(const GCUpdateOneBuyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .oneBuyInfo buyInfoList = 2;
  inline int buyinfolist_size() const;
  inline void clear_buyinfolist();
  static const int kBuyInfoListFieldNumber = 2;
  inline const ::oneBuyInfo& buyinfolist(int index) const;
  inline ::oneBuyInfo* mutable_buyinfolist(int index);
  inline ::oneBuyInfo* add_buyinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::oneBuyInfo >&
      buyinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::oneBuyInfo >*
      mutable_buyinfolist();

  // @@protoc_insertion_point(class_scope:GCUpdateOneBuyList)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::oneBuyInfo > buyinfolist_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCUpdateOneBuyList* default_instance_;
};
// -------------------------------------------------------------------

class CGCanBuy : public ::google::protobuf::Message {
 public:
  CGCanBuy();
  virtual ~CGCanBuy();

  CGCanBuy(const CGCanBuy& from);

  inline CGCanBuy& operator=(const CGCanBuy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCanBuy& default_instance();

  void Swap(CGCanBuy* other);

  // implements Message ----------------------------------------------

  CGCanBuy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCanBuy& from);
  void MergeFrom(const CGCanBuy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGCanBuy)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGCanBuy* default_instance_;
};
// -------------------------------------------------------------------

class GCCanBuyBack : public ::google::protobuf::Message {
 public:
  GCCanBuyBack();
  virtual ~GCCanBuyBack();

  GCCanBuyBack(const GCCanBuyBack& from);

  inline GCCanBuyBack& operator=(const GCCanBuyBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCanBuyBack& default_instance();

  void Swap(GCCanBuyBack* other);

  // implements Message ----------------------------------------------

  GCCanBuyBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCanBuyBack& from);
  void MergeFrom(const GCCanBuyBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCCanBuyBack)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCanBuyBack* default_instance_;
};
// -------------------------------------------------------------------

class GCHoliday : public ::google::protobuf::Message {
 public:
  GCHoliday();
  virtual ~GCHoliday();

  GCHoliday(const GCHoliday& from);

  inline GCHoliday& operator=(const GCHoliday& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCHoliday& default_instance();

  void Swap(GCHoliday* other);

  // implements Message ----------------------------------------------

  GCHoliday* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCHoliday& from);
  void MergeFrom(const GCHoliday& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .EntryIntInt paraMap = 3;
  inline int paramap_size() const;
  inline void clear_paramap();
  static const int kParaMapFieldNumber = 3;
  inline const ::EntryIntInt& paramap(int index) const;
  inline ::EntryIntInt* mutable_paramap(int index);
  inline ::EntryIntInt* add_paramap();
  inline const ::google::protobuf::RepeatedPtrField< ::EntryIntInt >&
      paramap() const;
  inline ::google::protobuf::RepeatedPtrField< ::EntryIntInt >*
      mutable_paramap();

  // repeated .ItemInfo itemLst = 4;
  inline int itemlst_size() const;
  inline void clear_itemlst();
  static const int kItemLstFieldNumber = 4;
  inline const ::ItemInfo& itemlst(int index) const;
  inline ::ItemInfo* mutable_itemlst(int index);
  inline ::ItemInfo* add_itemlst();
  inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
      itemlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
      mutable_itemlst();

  // @@protoc_insertion_point(class_scope:GCHoliday)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::RepeatedPtrField< ::EntryIntInt > paramap_;
  ::google::protobuf::RepeatedPtrField< ::ItemInfo > itemlst_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCHoliday* default_instance_;
};
// -------------------------------------------------------------------

class CGHoliday : public ::google::protobuf::Message {
 public:
  CGHoliday();
  virtual ~CGHoliday();

  CGHoliday(const CGHoliday& from);

  inline CGHoliday& operator=(const CGHoliday& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGHoliday& default_instance();

  void Swap(CGHoliday* other);

  // implements Message ----------------------------------------------

  CGHoliday* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGHoliday& from);
  void MergeFrom(const CGHoliday& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGHoliday)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 key_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGHoliday* default_instance_;
};
// -------------------------------------------------------------------

class GCFeelGold : public ::google::protobuf::Message {
 public:
  GCFeelGold();
  virtual ~GCFeelGold();

  GCFeelGold(const GCFeelGold& from);

  inline GCFeelGold& operator=(const GCFeelGold& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCFeelGold& default_instance();

  void Swap(GCFeelGold* other);

  // implements Message ----------------------------------------------

  GCFeelGold* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCFeelGold& from);
  void MergeFrom(const GCFeelGold& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 lastCount = 4;
  inline bool has_lastcount() const;
  inline void clear_lastcount();
  static const int kLastCountFieldNumber = 4;
  inline ::google::protobuf::int32 lastcount() const;
  inline void set_lastcount(::google::protobuf::int32 value);

  // repeated .ItemInfo item1 = 5;
  inline int item1_size() const;
  inline void clear_item1();
  static const int kItem1FieldNumber = 5;
  inline const ::ItemInfo& item1(int index) const;
  inline ::ItemInfo* mutable_item1(int index);
  inline ::ItemInfo* add_item1();
  inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
      item1() const;
  inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
      mutable_item1();

  // repeated .ItemInfo item2 = 6;
  inline int item2_size() const;
  inline void clear_item2();
  static const int kItem2FieldNumber = 6;
  inline const ::ItemInfo& item2(int index) const;
  inline ::ItemInfo* mutable_item2(int index);
  inline ::ItemInfo* add_item2();
  inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
      item2() const;
  inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
      mutable_item2();

  // repeated .ItemInfo item3 = 7;
  inline int item3_size() const;
  inline void clear_item3();
  static const int kItem3FieldNumber = 7;
  inline const ::ItemInfo& item3(int index) const;
  inline ::ItemInfo* mutable_item3(int index);
  inline ::ItemInfo* add_item3();
  inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
      item3() const;
  inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
      mutable_item3();

  // optional string startDate = 8;
  inline bool has_startdate() const;
  inline void clear_startdate();
  static const int kStartDateFieldNumber = 8;
  inline const ::std::string& startdate() const;
  inline void set_startdate(const ::std::string& value);
  inline void set_startdate(const char* value);
  inline void set_startdate(const char* value, size_t size);
  inline ::std::string* mutable_startdate();
  inline ::std::string* release_startdate();
  inline void set_allocated_startdate(::std::string* startdate);

  // optional string endDate = 9;
  inline bool has_enddate() const;
  inline void clear_enddate();
  static const int kEndDateFieldNumber = 9;
  inline const ::std::string& enddate() const;
  inline void set_enddate(const ::std::string& value);
  inline void set_enddate(const char* value);
  inline void set_enddate(const char* value, size_t size);
  inline ::std::string* mutable_enddate();
  inline ::std::string* release_enddate();
  inline void set_allocated_enddate(::std::string* enddate);

  // optional int32 nextNeedGold = 10;
  inline bool has_nextneedgold() const;
  inline void clear_nextneedgold();
  static const int kNextNeedGoldFieldNumber = 10;
  inline ::google::protobuf::int32 nextneedgold() const;
  inline void set_nextneedgold(::google::protobuf::int32 value);

  // optional int32 buyType = 11;
  inline bool has_buytype() const;
  inline void clear_buytype();
  static const int kBuyTypeFieldNumber = 11;
  inline ::google::protobuf::int32 buytype() const;
  inline void set_buytype(::google::protobuf::int32 value);

  // optional int32 singleMoney = 12;
  inline bool has_singlemoney() const;
  inline void clear_singlemoney();
  static const int kSingleMoneyFieldNumber = 12;
  inline ::google::protobuf::int32 singlemoney() const;
  inline void set_singlemoney(::google::protobuf::int32 value);

  // optional string itemShow = 13;
  inline bool has_itemshow() const;
  inline void clear_itemshow();
  static const int kItemShowFieldNumber = 13;
  inline const ::std::string& itemshow() const;
  inline void set_itemshow(const ::std::string& value);
  inline void set_itemshow(const char* value);
  inline void set_itemshow(const char* value, size_t size);
  inline ::std::string* mutable_itemshow();
  inline ::std::string* release_itemshow();
  inline void set_allocated_itemshow(::std::string* itemshow);

  // optional string buyOneMoney = 14;
  inline bool has_buyonemoney() const;
  inline void clear_buyonemoney();
  static const int kBuyOneMoneyFieldNumber = 14;
  inline const ::std::string& buyonemoney() const;
  inline void set_buyonemoney(const ::std::string& value);
  inline void set_buyonemoney(const char* value);
  inline void set_buyonemoney(const char* value, size_t size);
  inline ::std::string* mutable_buyonemoney();
  inline ::std::string* release_buyonemoney();
  inline void set_allocated_buyonemoney(::std::string* buyonemoney);

  // optional string buyTenMoney = 15;
  inline bool has_buytenmoney() const;
  inline void clear_buytenmoney();
  static const int kBuyTenMoneyFieldNumber = 15;
  inline const ::std::string& buytenmoney() const;
  inline void set_buytenmoney(const ::std::string& value);
  inline void set_buytenmoney(const char* value);
  inline void set_buytenmoney(const char* value, size_t size);
  inline ::std::string* mutable_buytenmoney();
  inline ::std::string* release_buytenmoney();
  inline void set_allocated_buytenmoney(::std::string* buytenmoney);

  // @@protoc_insertion_point(class_scope:GCFeelGold)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_lastcount();
  inline void clear_has_lastcount();
  inline void set_has_startdate();
  inline void clear_has_startdate();
  inline void set_has_enddate();
  inline void clear_has_enddate();
  inline void set_has_nextneedgold();
  inline void clear_has_nextneedgold();
  inline void set_has_buytype();
  inline void clear_has_buytype();
  inline void set_has_singlemoney();
  inline void clear_has_singlemoney();
  inline void set_has_itemshow();
  inline void clear_has_itemshow();
  inline void set_has_buyonemoney();
  inline void clear_has_buyonemoney();
  inline void set_has_buytenmoney();
  inline void clear_has_buytenmoney();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 lastcount_;
  ::google::protobuf::RepeatedPtrField< ::ItemInfo > item1_;
  ::google::protobuf::RepeatedPtrField< ::ItemInfo > item2_;
  ::google::protobuf::RepeatedPtrField< ::ItemInfo > item3_;
  ::std::string* startdate_;
  ::std::string* enddate_;
  ::google::protobuf::int32 nextneedgold_;
  ::google::protobuf::int32 buytype_;
  ::std::string* itemshow_;
  ::std::string* buyonemoney_;
  ::std::string* buytenmoney_;
  ::google::protobuf::int32 singlemoney_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCFeelGold* default_instance_;
};
// -------------------------------------------------------------------

class CGFeelGold : public ::google::protobuf::Message {
 public:
  CGFeelGold();
  virtual ~CGFeelGold();

  CGFeelGold(const CGFeelGold& from);

  inline CGFeelGold& operator=(const CGFeelGold& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGFeelGold& default_instance();

  void Swap(CGFeelGold* other);

  // implements Message ----------------------------------------------

  CGFeelGold* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGFeelGold& from);
  void MergeFrom(const CGFeelGold& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGFeelGold)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 key_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGFeelGold* default_instance_;
};
// -------------------------------------------------------------------

class LevelQuotaInfo : public ::google::protobuf::Message {
 public:
  LevelQuotaInfo();
  virtual ~LevelQuotaInfo();

  LevelQuotaInfo(const LevelQuotaInfo& from);

  inline LevelQuotaInfo& operator=(const LevelQuotaInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelQuotaInfo& default_instance();

  void Swap(LevelQuotaInfo* other);

  // implements Message ----------------------------------------------

  LevelQuotaInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelQuotaInfo& from);
  void MergeFrom(const LevelQuotaInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 levelLimit = 2;
  inline bool has_levellimit() const;
  inline void clear_levellimit();
  static const int kLevelLimitFieldNumber = 2;
  inline ::google::protobuf::int32 levellimit() const;
  inline void set_levellimit(::google::protobuf::int32 value);

  // optional string goodsGroup = 3;
  inline bool has_goodsgroup() const;
  inline void clear_goodsgroup();
  static const int kGoodsGroupFieldNumber = 3;
  inline const ::std::string& goodsgroup() const;
  inline void set_goodsgroup(const ::std::string& value);
  inline void set_goodsgroup(const char* value);
  inline void set_goodsgroup(const char* value, size_t size);
  inline ::std::string* mutable_goodsgroup();
  inline ::std::string* release_goodsgroup();
  inline void set_allocated_goodsgroup(::std::string* goodsgroup);

  // optional string ChargeId = 4;
  inline bool has_chargeid() const;
  inline void clear_chargeid();
  static const int kChargeIdFieldNumber = 4;
  inline const ::std::string& chargeid() const;
  inline void set_chargeid(const ::std::string& value);
  inline void set_chargeid(const char* value);
  inline void set_chargeid(const char* value, size_t size);
  inline ::std::string* mutable_chargeid();
  inline ::std::string* release_chargeid();
  inline void set_allocated_chargeid(::std::string* chargeid);

  // optional int32 originalPrice = 5;
  inline bool has_originalprice() const;
  inline void clear_originalprice();
  static const int kOriginalPriceFieldNumber = 5;
  inline ::google::protobuf::int32 originalprice() const;
  inline void set_originalprice(::google::protobuf::int32 value);

  // optional int32 currentPrice = 6;
  inline bool has_currentprice() const;
  inline void clear_currentprice();
  static const int kCurrentPriceFieldNumber = 6;
  inline ::google::protobuf::int32 currentprice() const;
  inline void set_currentprice(::google::protobuf::int32 value);

  // optional int32 noSeeLevel = 7;
  inline bool has_noseelevel() const;
  inline void clear_noseelevel();
  static const int kNoSeeLevelFieldNumber = 7;
  inline ::google::protobuf::int32 noseelevel() const;
  inline void set_noseelevel(::google::protobuf::int32 value);

  // optional int32 moneyType = 8;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneyTypeFieldNumber = 8;
  inline ::google::protobuf::int32 moneytype() const;
  inline void set_moneytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LevelQuotaInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_levellimit();
  inline void clear_has_levellimit();
  inline void set_has_goodsgroup();
  inline void clear_has_goodsgroup();
  inline void set_has_chargeid();
  inline void clear_has_chargeid();
  inline void set_has_originalprice();
  inline void clear_has_originalprice();
  inline void set_has_currentprice();
  inline void clear_has_currentprice();
  inline void set_has_noseelevel();
  inline void clear_has_noseelevel();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 levellimit_;
  ::std::string* goodsgroup_;
  ::std::string* chargeid_;
  ::google::protobuf::int32 originalprice_;
  ::google::protobuf::int32 currentprice_;
  ::google::protobuf::int32 noseelevel_;
  ::google::protobuf::int32 moneytype_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static LevelQuotaInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCLevelQuota : public ::google::protobuf::Message {
 public:
  GCLevelQuota();
  virtual ~GCLevelQuota();

  GCLevelQuota(const GCLevelQuota& from);

  inline GCLevelQuota& operator=(const GCLevelQuota& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCLevelQuota& default_instance();

  void Swap(GCLevelQuota* other);

  // implements Message ----------------------------------------------

  GCLevelQuota* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCLevelQuota& from);
  void MergeFrom(const GCLevelQuota& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .LevelQuotaInfo infoList = 1;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfoListFieldNumber = 1;
  inline const ::LevelQuotaInfo& infolist(int index) const;
  inline ::LevelQuotaInfo* mutable_infolist(int index);
  inline ::LevelQuotaInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::LevelQuotaInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::LevelQuotaInfo >*
      mutable_infolist();

  // @@protoc_insertion_point(class_scope:GCLevelQuota)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::LevelQuotaInfo > infolist_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCLevelQuota* default_instance_;
};
// -------------------------------------------------------------------

class CGBuyLevelQuota : public ::google::protobuf::Message {
 public:
  CGBuyLevelQuota();
  virtual ~CGBuyLevelQuota();

  CGBuyLevelQuota(const CGBuyLevelQuota& from);

  inline CGBuyLevelQuota& operator=(const CGBuyLevelQuota& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGBuyLevelQuota& default_instance();

  void Swap(CGBuyLevelQuota* other);

  // implements Message ----------------------------------------------

  CGBuyLevelQuota* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGBuyLevelQuota& from);
  void MergeFrom(const CGBuyLevelQuota& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGBuyLevelQuota)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGBuyLevelQuota* default_instance_;
};
// -------------------------------------------------------------------

class GCLevelQuotaUpdate : public ::google::protobuf::Message {
 public:
  GCLevelQuotaUpdate();
  virtual ~GCLevelQuotaUpdate();

  GCLevelQuotaUpdate(const GCLevelQuotaUpdate& from);

  inline GCLevelQuotaUpdate& operator=(const GCLevelQuotaUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCLevelQuotaUpdate& default_instance();

  void Swap(GCLevelQuotaUpdate* other);

  // implements Message ----------------------------------------------

  GCLevelQuotaUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCLevelQuotaUpdate& from);
  void MergeFrom(const GCLevelQuotaUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCLevelQuotaUpdate)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCLevelQuotaUpdate* default_instance_;
};
// -------------------------------------------------------------------

class FreeBackInfo : public ::google::protobuf::Message {
 public:
  FreeBackInfo();
  virtual ~FreeBackInfo();

  FreeBackInfo(const FreeBackInfo& from);

  inline FreeBackInfo& operator=(const FreeBackInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FreeBackInfo& default_instance();

  void Swap(FreeBackInfo* other);

  // implements Message ----------------------------------------------

  FreeBackInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FreeBackInfo& from);
  void MergeFrom(const FreeBackInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string itemShop = 2;
  inline bool has_itemshop() const;
  inline void clear_itemshop();
  static const int kItemShopFieldNumber = 2;
  inline const ::std::string& itemshop() const;
  inline void set_itemshop(const ::std::string& value);
  inline void set_itemshop(const char* value);
  inline void set_itemshop(const char* value, size_t size);
  inline ::std::string* mutable_itemshop();
  inline ::std::string* release_itemshop();
  inline void set_allocated_itemshop(::std::string* itemshop);

  // optional string showPrice = 3;
  inline bool has_showprice() const;
  inline void clear_showprice();
  static const int kShowPriceFieldNumber = 3;
  inline const ::std::string& showprice() const;
  inline void set_showprice(const ::std::string& value);
  inline void set_showprice(const char* value);
  inline void set_showprice(const char* value, size_t size);
  inline ::std::string* mutable_showprice();
  inline ::std::string* release_showprice();
  inline void set_allocated_showprice(::std::string* showprice);

  // optional string sellPrice = 4;
  inline bool has_sellprice() const;
  inline void clear_sellprice();
  static const int kSellPriceFieldNumber = 4;
  inline const ::std::string& sellprice() const;
  inline void set_sellprice(const ::std::string& value);
  inline void set_sellprice(const char* value);
  inline void set_sellprice(const char* value, size_t size);
  inline ::std::string* mutable_sellprice();
  inline ::std::string* release_sellprice();
  inline void set_allocated_sellprice(::std::string* sellprice);

  // optional string chargeID = 5;
  inline bool has_chargeid() const;
  inline void clear_chargeid();
  static const int kChargeIDFieldNumber = 5;
  inline const ::std::string& chargeid() const;
  inline void set_chargeid(const ::std::string& value);
  inline void set_chargeid(const char* value);
  inline void set_chargeid(const char* value, size_t size);
  inline ::std::string* mutable_chargeid();
  inline ::std::string* release_chargeid();
  inline void set_allocated_chargeid(::std::string* chargeid);

  // @@protoc_insertion_point(class_scope:FreeBackInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_itemshop();
  inline void clear_has_itemshop();
  inline void set_has_showprice();
  inline void clear_has_showprice();
  inline void set_has_sellprice();
  inline void clear_has_sellprice();
  inline void set_has_chargeid();
  inline void clear_has_chargeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* itemshop_;
  ::std::string* showprice_;
  ::std::string* sellprice_;
  ::std::string* chargeid_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static FreeBackInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGBuyFreeBack : public ::google::protobuf::Message {
 public:
  CGBuyFreeBack();
  virtual ~CGBuyFreeBack();

  CGBuyFreeBack(const CGBuyFreeBack& from);

  inline CGBuyFreeBack& operator=(const CGBuyFreeBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGBuyFreeBack& default_instance();

  void Swap(CGBuyFreeBack* other);

  // implements Message ----------------------------------------------

  CGBuyFreeBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGBuyFreeBack& from);
  void MergeFrom(const CGBuyFreeBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGBuyFreeBack)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGBuyFreeBack* default_instance_;
};
// -------------------------------------------------------------------

class GCFreeBack : public ::google::protobuf::Message {
 public:
  GCFreeBack();
  virtual ~GCFreeBack();

  GCFreeBack(const GCFreeBack& from);

  inline GCFreeBack& operator=(const GCFreeBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCFreeBack& default_instance();

  void Swap(GCFreeBack* other);

  // implements Message ----------------------------------------------

  GCFreeBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCFreeBack& from);
  void MergeFrom(const GCFreeBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operateType = 1;
  inline bool has_operatetype() const;
  inline void clear_operatetype();
  static const int kOperateTypeFieldNumber = 1;
  inline ::google::protobuf::int32 operatetype() const;
  inline void set_operatetype(::google::protobuf::int32 value);

  // optional .FreeBackInfo freeBackInfo = 2;
  inline bool has_freebackinfo() const;
  inline void clear_freebackinfo();
  static const int kFreeBackInfoFieldNumber = 2;
  inline const ::FreeBackInfo& freebackinfo() const;
  inline ::FreeBackInfo* mutable_freebackinfo();
  inline ::FreeBackInfo* release_freebackinfo();
  inline void set_allocated_freebackinfo(::FreeBackInfo* freebackinfo);

  // @@protoc_insertion_point(class_scope:GCFreeBack)
 private:
  inline void set_has_operatetype();
  inline void clear_has_operatetype();
  inline void set_has_freebackinfo();
  inline void clear_has_freebackinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::FreeBackInfo* freebackinfo_;
  ::google::protobuf::int32 operatetype_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCFreeBack* default_instance_;
};
// -------------------------------------------------------------------

class SuperRebateItem : public ::google::protobuf::Message {
 public:
  SuperRebateItem();
  virtual ~SuperRebateItem();

  SuperRebateItem(const SuperRebateItem& from);

  inline SuperRebateItem& operator=(const SuperRebateItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuperRebateItem& default_instance();

  void Swap(SuperRebateItem* other);

  // implements Message ----------------------------------------------

  SuperRebateItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuperRebateItem& from);
  void MergeFrom(const SuperRebateItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string itemInfo = 2;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 2;
  inline const ::std::string& iteminfo() const;
  inline void set_iteminfo(const ::std::string& value);
  inline void set_iteminfo(const char* value);
  inline void set_iteminfo(const char* value, size_t size);
  inline ::std::string* mutable_iteminfo();
  inline ::std::string* release_iteminfo();
  inline void set_allocated_iteminfo(::std::string* iteminfo);

  // optional int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SuperRebateItem)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* iteminfo_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static SuperRebateItem* default_instance_;
};
// -------------------------------------------------------------------

class SuperRebateInfo : public ::google::protobuf::Message {
 public:
  SuperRebateInfo();
  virtual ~SuperRebateInfo();

  SuperRebateInfo(const SuperRebateInfo& from);

  inline SuperRebateInfo& operator=(const SuperRebateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuperRebateInfo& default_instance();

  void Swap(SuperRebateInfo* other);

  // implements Message ----------------------------------------------

  SuperRebateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SuperRebateInfo& from);
  void MergeFrom(const SuperRebateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 price = 2;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 2;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional string note = 3;
  inline bool has_note() const;
  inline void clear_note();
  static const int kNoteFieldNumber = 3;
  inline const ::std::string& note() const;
  inline void set_note(const ::std::string& value);
  inline void set_note(const char* value);
  inline void set_note(const char* value, size_t size);
  inline ::std::string* mutable_note();
  inline ::std::string* release_note();
  inline void set_allocated_note(::std::string* note);

  // repeated .SuperRebateItem itemList = 4;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 4;
  inline const ::SuperRebateItem& itemlist(int index) const;
  inline ::SuperRebateItem* mutable_itemlist(int index);
  inline ::SuperRebateItem* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::SuperRebateItem >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SuperRebateItem >*
      mutable_itemlist();

  // @@protoc_insertion_point(class_scope:SuperRebateInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_note();
  inline void clear_has_note();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 price_;
  ::std::string* note_;
  ::google::protobuf::RepeatedPtrField< ::SuperRebateItem > itemlist_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static SuperRebateInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGGetSuperRebateReward : public ::google::protobuf::Message {
 public:
  CGGetSuperRebateReward();
  virtual ~CGGetSuperRebateReward();

  CGGetSuperRebateReward(const CGGetSuperRebateReward& from);

  inline CGGetSuperRebateReward& operator=(const CGGetSuperRebateReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetSuperRebateReward& default_instance();

  void Swap(CGGetSuperRebateReward* other);

  // implements Message ----------------------------------------------

  CGGetSuperRebateReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetSuperRebateReward& from);
  void MergeFrom(const CGGetSuperRebateReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetSuperRebateReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 index_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetSuperRebateReward* default_instance_;
};
// -------------------------------------------------------------------

class GCSuperRebateBack : public ::google::protobuf::Message {
 public:
  GCSuperRebateBack();
  virtual ~GCSuperRebateBack();

  GCSuperRebateBack(const GCSuperRebateBack& from);

  inline GCSuperRebateBack& operator=(const GCSuperRebateBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSuperRebateBack& default_instance();

  void Swap(GCSuperRebateBack* other);

  // implements Message ----------------------------------------------

  GCSuperRebateBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSuperRebateBack& from);
  void MergeFrom(const GCSuperRebateBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operateType = 1;
  inline bool has_operatetype() const;
  inline void clear_operatetype();
  static const int kOperateTypeFieldNumber = 1;
  inline ::google::protobuf::int32 operatetype() const;
  inline void set_operatetype(::google::protobuf::int32 value);

  // optional string note = 2;
  inline bool has_note() const;
  inline void clear_note();
  static const int kNoteFieldNumber = 2;
  inline const ::std::string& note() const;
  inline void set_note(const ::std::string& value);
  inline void set_note(const char* value);
  inline void set_note(const char* value, size_t size);
  inline ::std::string* mutable_note();
  inline ::std::string* release_note();
  inline void set_allocated_note(::std::string* note);

  // repeated .SuperRebateInfo infoList = 3;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfoListFieldNumber = 3;
  inline const ::SuperRebateInfo& infolist(int index) const;
  inline ::SuperRebateInfo* mutable_infolist(int index);
  inline ::SuperRebateInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::SuperRebateInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SuperRebateInfo >*
      mutable_infolist();

  // optional .SuperRebateInfo rebateInfo = 4;
  inline bool has_rebateinfo() const;
  inline void clear_rebateinfo();
  static const int kRebateInfoFieldNumber = 4;
  inline const ::SuperRebateInfo& rebateinfo() const;
  inline ::SuperRebateInfo* mutable_rebateinfo();
  inline ::SuperRebateInfo* release_rebateinfo();
  inline void set_allocated_rebateinfo(::SuperRebateInfo* rebateinfo);

  // @@protoc_insertion_point(class_scope:GCSuperRebateBack)
 private:
  inline void set_has_operatetype();
  inline void clear_has_operatetype();
  inline void set_has_note();
  inline void clear_has_note();
  inline void set_has_rebateinfo();
  inline void clear_has_rebateinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* note_;
  ::google::protobuf::RepeatedPtrField< ::SuperRebateInfo > infolist_;
  ::SuperRebateInfo* rebateinfo_;
  ::google::protobuf::int32 operatetype_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSuperRebateBack* default_instance_;
};
// -------------------------------------------------------------------

class RechargeDailyGiftItem : public ::google::protobuf::Message {
 public:
  RechargeDailyGiftItem();
  virtual ~RechargeDailyGiftItem();

  RechargeDailyGiftItem(const RechargeDailyGiftItem& from);

  inline RechargeDailyGiftItem& operator=(const RechargeDailyGiftItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeDailyGiftItem& default_instance();

  void Swap(RechargeDailyGiftItem* other);

  // implements Message ----------------------------------------------

  RechargeDailyGiftItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargeDailyGiftItem& from);
  void MergeFrom(const RechargeDailyGiftItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RechargeDailyGiftItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static RechargeDailyGiftItem* default_instance_;
};
// -------------------------------------------------------------------

class GCRechargeDailyGiftInfo : public ::google::protobuf::Message {
 public:
  GCRechargeDailyGiftInfo();
  virtual ~GCRechargeDailyGiftInfo();

  GCRechargeDailyGiftInfo(const GCRechargeDailyGiftInfo& from);

  inline GCRechargeDailyGiftInfo& operator=(const GCRechargeDailyGiftInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRechargeDailyGiftInfo& default_instance();

  void Swap(GCRechargeDailyGiftInfo* other);

  // implements Message ----------------------------------------------

  GCRechargeDailyGiftInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRechargeDailyGiftInfo& from);
  void MergeFrom(const GCRechargeDailyGiftInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RechargeDailyGiftItem dailyGiftList = 1;
  inline int dailygiftlist_size() const;
  inline void clear_dailygiftlist();
  static const int kDailyGiftListFieldNumber = 1;
  inline const ::RechargeDailyGiftItem& dailygiftlist(int index) const;
  inline ::RechargeDailyGiftItem* mutable_dailygiftlist(int index);
  inline ::RechargeDailyGiftItem* add_dailygiftlist();
  inline const ::google::protobuf::RepeatedPtrField< ::RechargeDailyGiftItem >&
      dailygiftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::RechargeDailyGiftItem >*
      mutable_dailygiftlist();

  // @@protoc_insertion_point(class_scope:GCRechargeDailyGiftInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RechargeDailyGiftItem > dailygiftlist_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRechargeDailyGiftInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGGetRechargeDailyGiftReward : public ::google::protobuf::Message {
 public:
  CGGetRechargeDailyGiftReward();
  virtual ~CGGetRechargeDailyGiftReward();

  CGGetRechargeDailyGiftReward(const CGGetRechargeDailyGiftReward& from);

  inline CGGetRechargeDailyGiftReward& operator=(const CGGetRechargeDailyGiftReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetRechargeDailyGiftReward& default_instance();

  void Swap(CGGetRechargeDailyGiftReward* other);

  // implements Message ----------------------------------------------

  CGGetRechargeDailyGiftReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetRechargeDailyGiftReward& from);
  void MergeFrom(const CGGetRechargeDailyGiftReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetRechargeDailyGiftReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetRechargeDailyGiftReward* default_instance_;
};
// -------------------------------------------------------------------

class GCGetRechargeDailyGiftRewardBack : public ::google::protobuf::Message {
 public:
  GCGetRechargeDailyGiftRewardBack();
  virtual ~GCGetRechargeDailyGiftRewardBack();

  GCGetRechargeDailyGiftRewardBack(const GCGetRechargeDailyGiftRewardBack& from);

  inline GCGetRechargeDailyGiftRewardBack& operator=(const GCGetRechargeDailyGiftRewardBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetRechargeDailyGiftRewardBack& default_instance();

  void Swap(GCGetRechargeDailyGiftRewardBack* other);

  // implements Message ----------------------------------------------

  GCGetRechargeDailyGiftRewardBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetRechargeDailyGiftRewardBack& from);
  void MergeFrom(const GCGetRechargeDailyGiftRewardBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGetRechargeDailyGiftRewardBack)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetRechargeDailyGiftRewardBack* default_instance_;
};
// -------------------------------------------------------------------

class GCPointsBuyHisInfo : public ::google::protobuf::Message {
 public:
  GCPointsBuyHisInfo();
  virtual ~GCPointsBuyHisInfo();

  GCPointsBuyHisInfo(const GCPointsBuyHisInfo& from);

  inline GCPointsBuyHisInfo& operator=(const GCPointsBuyHisInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPointsBuyHisInfo& default_instance();

  void Swap(GCPointsBuyHisInfo* other);

  // implements Message ----------------------------------------------

  GCPointsBuyHisInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPointsBuyHisInfo& from);
  void MergeFrom(const GCPointsBuyHisInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .WinnersInfo winnersInfoList = 2;
  inline int winnersinfolist_size() const;
  inline void clear_winnersinfolist();
  static const int kWinnersInfoListFieldNumber = 2;
  inline const ::WinnersInfo& winnersinfolist(int index) const;
  inline ::WinnersInfo* mutable_winnersinfolist(int index);
  inline ::WinnersInfo* add_winnersinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::WinnersInfo >&
      winnersinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::WinnersInfo >*
      mutable_winnersinfolist();

  // @@protoc_insertion_point(class_scope:GCPointsBuyHisInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WinnersInfo > winnersinfolist_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPointsBuyHisInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCPointsBuyList : public ::google::protobuf::Message {
 public:
  GCPointsBuyList();
  virtual ~GCPointsBuyList();

  GCPointsBuyList(const GCPointsBuyList& from);

  inline GCPointsBuyList& operator=(const GCPointsBuyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPointsBuyList& default_instance();

  void Swap(GCPointsBuyList* other);

  // implements Message ----------------------------------------------

  GCPointsBuyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPointsBuyList& from);
  void MergeFrom(const GCPointsBuyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 points = 2;
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 2;
  inline ::google::protobuf::int32 points() const;
  inline void set_points(::google::protobuf::int32 value);

  // repeated .oneBuyInfo buyInfoList = 3;
  inline int buyinfolist_size() const;
  inline void clear_buyinfolist();
  static const int kBuyInfoListFieldNumber = 3;
  inline const ::oneBuyInfo& buyinfolist(int index) const;
  inline ::oneBuyInfo* mutable_buyinfolist(int index);
  inline ::oneBuyInfo* add_buyinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::oneBuyInfo >&
      buyinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::oneBuyInfo >*
      mutable_buyinfolist();

  // @@protoc_insertion_point(class_scope:GCPointsBuyList)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_points();
  inline void clear_has_points();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 points_;
  ::google::protobuf::RepeatedPtrField< ::oneBuyInfo > buyinfolist_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPointsBuyList* default_instance_;
};
// -------------------------------------------------------------------

class CGBuyPoints : public ::google::protobuf::Message {
 public:
  CGBuyPoints();
  virtual ~CGBuyPoints();

  CGBuyPoints(const CGBuyPoints& from);

  inline CGBuyPoints& operator=(const CGBuyPoints& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGBuyPoints& default_instance();

  void Swap(CGBuyPoints* other);

  // implements Message ----------------------------------------------

  CGBuyPoints* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGBuyPoints& from);
  void MergeFrom(const CGBuyPoints& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGBuyPoints)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 num_;
  friend void  protobuf_AddDesc_SuperGiftMessage_2eproto();
  friend void protobuf_AssignDesc_SuperGiftMessage_2eproto();
  friend void protobuf_ShutdownFile_SuperGiftMessage_2eproto();

  void InitAsDefaultInstance();
  static CGBuyPoints* default_instance_;
};
// ===================================================================


// ===================================================================

// CardRewardData

// optional int32 type = 1;
inline bool CardRewardData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardRewardData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardRewardData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardRewardData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CardRewardData::type() const {
  // @@protoc_insertion_point(field_get:CardRewardData.type)
  return type_;
}
inline void CardRewardData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CardRewardData.type)
}

// optional int32 status = 2;
inline bool CardRewardData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardRewardData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardRewardData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardRewardData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CardRewardData::status() const {
  // @@protoc_insertion_point(field_get:CardRewardData.status)
  return status_;
}
inline void CardRewardData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CardRewardData.status)
}

// optional int32 day = 3;
inline bool CardRewardData::has_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardRewardData::set_has_day() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardRewardData::clear_has_day() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardRewardData::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 CardRewardData::day() const {
  // @@protoc_insertion_point(field_get:CardRewardData.day)
  return day_;
}
inline void CardRewardData::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:CardRewardData.day)
}

// optional int32 chargeId = 4;
inline bool CardRewardData::has_chargeid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CardRewardData::set_has_chargeid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CardRewardData::clear_has_chargeid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CardRewardData::clear_chargeid() {
  chargeid_ = 0;
  clear_has_chargeid();
}
inline ::google::protobuf::int32 CardRewardData::chargeid() const {
  // @@protoc_insertion_point(field_get:CardRewardData.chargeId)
  return chargeid_;
}
inline void CardRewardData::set_chargeid(::google::protobuf::int32 value) {
  set_has_chargeid();
  chargeid_ = value;
  // @@protoc_insertion_point(field_set:CardRewardData.chargeId)
}

// optional int32 getStatus = 5;
inline bool CardRewardData::has_getstatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CardRewardData::set_has_getstatus() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CardRewardData::clear_has_getstatus() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CardRewardData::clear_getstatus() {
  getstatus_ = 0;
  clear_has_getstatus();
}
inline ::google::protobuf::int32 CardRewardData::getstatus() const {
  // @@protoc_insertion_point(field_get:CardRewardData.getStatus)
  return getstatus_;
}
inline void CardRewardData::set_getstatus(::google::protobuf::int32 value) {
  set_has_getstatus();
  getstatus_ = value;
  // @@protoc_insertion_point(field_set:CardRewardData.getStatus)
}

// -------------------------------------------------------------------

// RechargeTypeData

// optional int32 type = 1;
inline bool RechargeTypeData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RechargeTypeData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RechargeTypeData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RechargeTypeData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 RechargeTypeData::type() const {
  // @@protoc_insertion_point(field_get:RechargeTypeData.type)
  return type_;
}
inline void RechargeTypeData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:RechargeTypeData.type)
}

// optional int64 startTime = 2;
inline bool RechargeTypeData::has_starttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RechargeTypeData::set_has_starttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RechargeTypeData::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RechargeTypeData::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::int64 RechargeTypeData::starttime() const {
  // @@protoc_insertion_point(field_get:RechargeTypeData.startTime)
  return starttime_;
}
inline void RechargeTypeData::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:RechargeTypeData.startTime)
}

// optional int64 endTime = 3;
inline bool RechargeTypeData::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RechargeTypeData::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RechargeTypeData::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RechargeTypeData::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 RechargeTypeData::endtime() const {
  // @@protoc_insertion_point(field_get:RechargeTypeData.endTime)
  return endtime_;
}
inline void RechargeTypeData::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:RechargeTypeData.endTime)
}

// repeated .RechargeRewardData rewardData = 4;
inline int RechargeTypeData::rewarddata_size() const {
  return rewarddata_.size();
}
inline void RechargeTypeData::clear_rewarddata() {
  rewarddata_.Clear();
}
inline const ::RechargeRewardData& RechargeTypeData::rewarddata(int index) const {
  // @@protoc_insertion_point(field_get:RechargeTypeData.rewardData)
  return rewarddata_.Get(index);
}
inline ::RechargeRewardData* RechargeTypeData::mutable_rewarddata(int index) {
  // @@protoc_insertion_point(field_mutable:RechargeTypeData.rewardData)
  return rewarddata_.Mutable(index);
}
inline ::RechargeRewardData* RechargeTypeData::add_rewarddata() {
  // @@protoc_insertion_point(field_add:RechargeTypeData.rewardData)
  return rewarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RechargeRewardData >&
RechargeTypeData::rewarddata() const {
  // @@protoc_insertion_point(field_list:RechargeTypeData.rewardData)
  return rewarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::RechargeRewardData >*
RechargeTypeData::mutable_rewarddata() {
  // @@protoc_insertion_point(field_mutable_list:RechargeTypeData.rewardData)
  return &rewarddata_;
}

// optional int32 value = 5;
inline bool RechargeTypeData::has_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RechargeTypeData::set_has_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RechargeTypeData::clear_has_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RechargeTypeData::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 RechargeTypeData::value() const {
  // @@protoc_insertion_point(field_get:RechargeTypeData.value)
  return value_;
}
inline void RechargeTypeData::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:RechargeTypeData.value)
}

// optional int64 refreshTime = 6;
inline bool RechargeTypeData::has_refreshtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RechargeTypeData::set_has_refreshtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RechargeTypeData::clear_has_refreshtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RechargeTypeData::clear_refreshtime() {
  refreshtime_ = GOOGLE_LONGLONG(0);
  clear_has_refreshtime();
}
inline ::google::protobuf::int64 RechargeTypeData::refreshtime() const {
  // @@protoc_insertion_point(field_get:RechargeTypeData.refreshTime)
  return refreshtime_;
}
inline void RechargeTypeData::set_refreshtime(::google::protobuf::int64 value) {
  set_has_refreshtime();
  refreshtime_ = value;
  // @@protoc_insertion_point(field_set:RechargeTypeData.refreshTime)
}

// optional int32 status = 7;
inline bool RechargeTypeData::has_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RechargeTypeData::set_has_status() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RechargeTypeData::clear_has_status() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RechargeTypeData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 RechargeTypeData::status() const {
  // @@protoc_insertion_point(field_get:RechargeTypeData.status)
  return status_;
}
inline void RechargeTypeData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:RechargeTypeData.status)
}

// -------------------------------------------------------------------

// RechargeRewardData

// optional int32 id = 1;
inline bool RechargeRewardData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RechargeRewardData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RechargeRewardData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RechargeRewardData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RechargeRewardData::id() const {
  // @@protoc_insertion_point(field_get:RechargeRewardData.id)
  return id_;
}
inline void RechargeRewardData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:RechargeRewardData.id)
}

// optional int32 status = 2;
inline bool RechargeRewardData::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RechargeRewardData::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RechargeRewardData::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RechargeRewardData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 RechargeRewardData::status() const {
  // @@protoc_insertion_point(field_get:RechargeRewardData.status)
  return status_;
}
inline void RechargeRewardData::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:RechargeRewardData.status)
}

// optional int32 needNum = 3;
inline bool RechargeRewardData::has_neednum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RechargeRewardData::set_has_neednum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RechargeRewardData::clear_has_neednum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RechargeRewardData::clear_neednum() {
  neednum_ = 0;
  clear_has_neednum();
}
inline ::google::protobuf::int32 RechargeRewardData::neednum() const {
  // @@protoc_insertion_point(field_get:RechargeRewardData.needNum)
  return neednum_;
}
inline void RechargeRewardData::set_neednum(::google::protobuf::int32 value) {
  set_has_neednum();
  neednum_ = value;
  // @@protoc_insertion_point(field_set:RechargeRewardData.needNum)
}

// optional string reward = 4;
inline bool RechargeRewardData::has_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RechargeRewardData::set_has_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RechargeRewardData::clear_has_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RechargeRewardData::clear_reward() {
  if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_->clear();
  }
  clear_has_reward();
}
inline const ::std::string& RechargeRewardData::reward() const {
  // @@protoc_insertion_point(field_get:RechargeRewardData.reward)
  return *reward_;
}
inline void RechargeRewardData::set_reward(const ::std::string& value) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  reward_->assign(value);
  // @@protoc_insertion_point(field_set:RechargeRewardData.reward)
}
inline void RechargeRewardData::set_reward(const char* value) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  reward_->assign(value);
  // @@protoc_insertion_point(field_set_char:RechargeRewardData.reward)
}
inline void RechargeRewardData::set_reward(const char* value, size_t size) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  reward_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RechargeRewardData.reward)
}
inline ::std::string* RechargeRewardData::mutable_reward() {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reward_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:RechargeRewardData.reward)
  return reward_;
}
inline ::std::string* RechargeRewardData::release_reward() {
  clear_has_reward();
  if (reward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reward_;
    reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RechargeRewardData::set_allocated_reward(::std::string* reward) {
  if (reward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reward_;
  }
  if (reward) {
    set_has_reward();
    reward_ = reward;
  } else {
    clear_has_reward();
    reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:RechargeRewardData.reward)
}

// -------------------------------------------------------------------

// GCUpdateCardReward

// repeated .CardRewardData cardRewardData = 1;
inline int GCUpdateCardReward::cardrewarddata_size() const {
  return cardrewarddata_.size();
}
inline void GCUpdateCardReward::clear_cardrewarddata() {
  cardrewarddata_.Clear();
}
inline const ::CardRewardData& GCUpdateCardReward::cardrewarddata(int index) const {
  // @@protoc_insertion_point(field_get:GCUpdateCardReward.cardRewardData)
  return cardrewarddata_.Get(index);
}
inline ::CardRewardData* GCUpdateCardReward::mutable_cardrewarddata(int index) {
  // @@protoc_insertion_point(field_mutable:GCUpdateCardReward.cardRewardData)
  return cardrewarddata_.Mutable(index);
}
inline ::CardRewardData* GCUpdateCardReward::add_cardrewarddata() {
  // @@protoc_insertion_point(field_add:GCUpdateCardReward.cardRewardData)
  return cardrewarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CardRewardData >&
GCUpdateCardReward::cardrewarddata() const {
  // @@protoc_insertion_point(field_list:GCUpdateCardReward.cardRewardData)
  return cardrewarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::CardRewardData >*
GCUpdateCardReward::mutable_cardrewarddata() {
  // @@protoc_insertion_point(field_mutable_list:GCUpdateCardReward.cardRewardData)
  return &cardrewarddata_;
}

// -------------------------------------------------------------------

// CGGetCardReward

// optional int32 type = 1;
inline bool CGGetCardReward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetCardReward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetCardReward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetCardReward::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGGetCardReward::type() const {
  // @@protoc_insertion_point(field_get:CGGetCardReward.type)
  return type_;
}
inline void CGGetCardReward::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGGetCardReward.type)
}

// -------------------------------------------------------------------

// OneInDay

// optional int32 tblId = 1;
inline bool OneInDay::has_tblid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneInDay::set_has_tblid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneInDay::clear_has_tblid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneInDay::clear_tblid() {
  tblid_ = 0;
  clear_has_tblid();
}
inline ::google::protobuf::int32 OneInDay::tblid() const {
  // @@protoc_insertion_point(field_get:OneInDay.tblId)
  return tblid_;
}
inline void OneInDay::set_tblid(::google::protobuf::int32 value) {
  set_has_tblid();
  tblid_ = value;
  // @@protoc_insertion_point(field_set:OneInDay.tblId)
}

// optional int32 status = 2;
inline bool OneInDay::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneInDay::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneInDay::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneInDay::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 OneInDay::status() const {
  // @@protoc_insertion_point(field_get:OneInDay.status)
  return status_;
}
inline void OneInDay::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:OneInDay.status)
}

// optional int32 totalCount = 3;
inline bool OneInDay::has_totalcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneInDay::set_has_totalcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneInDay::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneInDay::clear_totalcount() {
  totalcount_ = 0;
  clear_has_totalcount();
}
inline ::google::protobuf::int32 OneInDay::totalcount() const {
  // @@protoc_insertion_point(field_get:OneInDay.totalCount)
  return totalcount_;
}
inline void OneInDay::set_totalcount(::google::protobuf::int32 value) {
  set_has_totalcount();
  totalcount_ = value;
  // @@protoc_insertion_point(field_set:OneInDay.totalCount)
}

// optional int32 count = 4;
inline bool OneInDay::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneInDay::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneInDay::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneInDay::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 OneInDay::count() const {
  // @@protoc_insertion_point(field_get:OneInDay.count)
  return count_;
}
inline void OneInDay::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:OneInDay.count)
}

// -------------------------------------------------------------------

// GCSevenDaysHappy

// optional int32 type = 1;
inline bool GCSevenDaysHappy::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSevenDaysHappy::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSevenDaysHappy::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSevenDaysHappy::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCSevenDaysHappy::type() const {
  // @@protoc_insertion_point(field_get:GCSevenDaysHappy.type)
  return type_;
}
inline void GCSevenDaysHappy::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCSevenDaysHappy.type)
}

// repeated .OneInDay targetLst = 2;
inline int GCSevenDaysHappy::targetlst_size() const {
  return targetlst_.size();
}
inline void GCSevenDaysHappy::clear_targetlst() {
  targetlst_.Clear();
}
inline const ::OneInDay& GCSevenDaysHappy::targetlst(int index) const {
  // @@protoc_insertion_point(field_get:GCSevenDaysHappy.targetLst)
  return targetlst_.Get(index);
}
inline ::OneInDay* GCSevenDaysHappy::mutable_targetlst(int index) {
  // @@protoc_insertion_point(field_mutable:GCSevenDaysHappy.targetLst)
  return targetlst_.Mutable(index);
}
inline ::OneInDay* GCSevenDaysHappy::add_targetlst() {
  // @@protoc_insertion_point(field_add:GCSevenDaysHappy.targetLst)
  return targetlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneInDay >&
GCSevenDaysHappy::targetlst() const {
  // @@protoc_insertion_point(field_list:GCSevenDaysHappy.targetLst)
  return targetlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneInDay >*
GCSevenDaysHappy::mutable_targetlst() {
  // @@protoc_insertion_point(field_mutable_list:GCSevenDaysHappy.targetLst)
  return &targetlst_;
}

// repeated .OneInDay upgradeLst = 3;
inline int GCSevenDaysHappy::upgradelst_size() const {
  return upgradelst_.size();
}
inline void GCSevenDaysHappy::clear_upgradelst() {
  upgradelst_.Clear();
}
inline const ::OneInDay& GCSevenDaysHappy::upgradelst(int index) const {
  // @@protoc_insertion_point(field_get:GCSevenDaysHappy.upgradeLst)
  return upgradelst_.Get(index);
}
inline ::OneInDay* GCSevenDaysHappy::mutable_upgradelst(int index) {
  // @@protoc_insertion_point(field_mutable:GCSevenDaysHappy.upgradeLst)
  return upgradelst_.Mutable(index);
}
inline ::OneInDay* GCSevenDaysHappy::add_upgradelst() {
  // @@protoc_insertion_point(field_add:GCSevenDaysHappy.upgradeLst)
  return upgradelst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneInDay >&
GCSevenDaysHappy::upgradelst() const {
  // @@protoc_insertion_point(field_list:GCSevenDaysHappy.upgradeLst)
  return upgradelst_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneInDay >*
GCSevenDaysHappy::mutable_upgradelst() {
  // @@protoc_insertion_point(field_mutable_list:GCSevenDaysHappy.upgradeLst)
  return &upgradelst_;
}

// repeated .OneInDay fightPowerLst = 4;
inline int GCSevenDaysHappy::fightpowerlst_size() const {
  return fightpowerlst_.size();
}
inline void GCSevenDaysHappy::clear_fightpowerlst() {
  fightpowerlst_.Clear();
}
inline const ::OneInDay& GCSevenDaysHappy::fightpowerlst(int index) const {
  // @@protoc_insertion_point(field_get:GCSevenDaysHappy.fightPowerLst)
  return fightpowerlst_.Get(index);
}
inline ::OneInDay* GCSevenDaysHappy::mutable_fightpowerlst(int index) {
  // @@protoc_insertion_point(field_mutable:GCSevenDaysHappy.fightPowerLst)
  return fightpowerlst_.Mutable(index);
}
inline ::OneInDay* GCSevenDaysHappy::add_fightpowerlst() {
  // @@protoc_insertion_point(field_add:GCSevenDaysHappy.fightPowerLst)
  return fightpowerlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneInDay >&
GCSevenDaysHappy::fightpowerlst() const {
  // @@protoc_insertion_point(field_list:GCSevenDaysHappy.fightPowerLst)
  return fightpowerlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneInDay >*
GCSevenDaysHappy::mutable_fightpowerlst() {
  // @@protoc_insertion_point(field_mutable_list:GCSevenDaysHappy.fightPowerLst)
  return &fightpowerlst_;
}

// repeated .OneInDay halfPrice = 5;
inline int GCSevenDaysHappy::halfprice_size() const {
  return halfprice_.size();
}
inline void GCSevenDaysHappy::clear_halfprice() {
  halfprice_.Clear();
}
inline const ::OneInDay& GCSevenDaysHappy::halfprice(int index) const {
  // @@protoc_insertion_point(field_get:GCSevenDaysHappy.halfPrice)
  return halfprice_.Get(index);
}
inline ::OneInDay* GCSevenDaysHappy::mutable_halfprice(int index) {
  // @@protoc_insertion_point(field_mutable:GCSevenDaysHappy.halfPrice)
  return halfprice_.Mutable(index);
}
inline ::OneInDay* GCSevenDaysHappy::add_halfprice() {
  // @@protoc_insertion_point(field_add:GCSevenDaysHappy.halfPrice)
  return halfprice_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneInDay >&
GCSevenDaysHappy::halfprice() const {
  // @@protoc_insertion_point(field_list:GCSevenDaysHappy.halfPrice)
  return halfprice_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneInDay >*
GCSevenDaysHappy::mutable_halfprice() {
  // @@protoc_insertion_point(field_mutable_list:GCSevenDaysHappy.halfPrice)
  return &halfprice_;
}

// optional int32 day = 6;
inline bool GCSevenDaysHappy::has_day() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCSevenDaysHappy::set_has_day() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCSevenDaysHappy::clear_has_day() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCSevenDaysHappy::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 GCSevenDaysHappy::day() const {
  // @@protoc_insertion_point(field_get:GCSevenDaysHappy.day)
  return day_;
}
inline void GCSevenDaysHappy::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:GCSevenDaysHappy.day)
}

// optional int32 score = 7;
inline bool GCSevenDaysHappy::has_score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GCSevenDaysHappy::set_has_score() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GCSevenDaysHappy::clear_has_score() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GCSevenDaysHappy::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 GCSevenDaysHappy::score() const {
  // @@protoc_insertion_point(field_get:GCSevenDaysHappy.score)
  return score_;
}
inline void GCSevenDaysHappy::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:GCSevenDaysHappy.score)
}

// optional int32 curId = 8;
inline bool GCSevenDaysHappy::has_curid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GCSevenDaysHappy::set_has_curid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GCSevenDaysHappy::clear_has_curid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GCSevenDaysHappy::clear_curid() {
  curid_ = 0;
  clear_has_curid();
}
inline ::google::protobuf::int32 GCSevenDaysHappy::curid() const {
  // @@protoc_insertion_point(field_get:GCSevenDaysHappy.curId)
  return curid_;
}
inline void GCSevenDaysHappy::set_curid(::google::protobuf::int32 value) {
  set_has_curid();
  curid_ = value;
  // @@protoc_insertion_point(field_set:GCSevenDaysHappy.curId)
}

// optional int64 endTime = 9;
inline bool GCSevenDaysHappy::has_endtime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GCSevenDaysHappy::set_has_endtime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GCSevenDaysHappy::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GCSevenDaysHappy::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 GCSevenDaysHappy::endtime() const {
  // @@protoc_insertion_point(field_get:GCSevenDaysHappy.endTime)
  return endtime_;
}
inline void GCSevenDaysHappy::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:GCSevenDaysHappy.endTime)
}

// optional int32 result = 10;
inline bool GCSevenDaysHappy::has_result() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GCSevenDaysHappy::set_has_result() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GCSevenDaysHappy::clear_has_result() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GCSevenDaysHappy::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCSevenDaysHappy::result() const {
  // @@protoc_insertion_point(field_get:GCSevenDaysHappy.result)
  return result_;
}
inline void GCSevenDaysHappy::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCSevenDaysHappy.result)
}

// -------------------------------------------------------------------

// CGSevenDaysHappy

// optional int32 type = 1;
inline bool CGSevenDaysHappy::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSevenDaysHappy::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSevenDaysHappy::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSevenDaysHappy::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGSevenDaysHappy::type() const {
  // @@protoc_insertion_point(field_get:CGSevenDaysHappy.type)
  return type_;
}
inline void CGSevenDaysHappy::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGSevenDaysHappy.type)
}

// optional int32 day = 2;
inline bool CGSevenDaysHappy::has_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSevenDaysHappy::set_has_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSevenDaysHappy::clear_has_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSevenDaysHappy::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 CGSevenDaysHappy::day() const {
  // @@protoc_insertion_point(field_get:CGSevenDaysHappy.day)
  return day_;
}
inline void CGSevenDaysHappy::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:CGSevenDaysHappy.day)
}

// optional int32 tblId = 3;
inline bool CGSevenDaysHappy::has_tblid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGSevenDaysHappy::set_has_tblid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGSevenDaysHappy::clear_has_tblid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGSevenDaysHappy::clear_tblid() {
  tblid_ = 0;
  clear_has_tblid();
}
inline ::google::protobuf::int32 CGSevenDaysHappy::tblid() const {
  // @@protoc_insertion_point(field_get:CGSevenDaysHappy.tblId)
  return tblid_;
}
inline void CGSevenDaysHappy::set_tblid(::google::protobuf::int32 value) {
  set_has_tblid();
  tblid_ = value;
  // @@protoc_insertion_point(field_set:CGSevenDaysHappy.tblId)
}

// -------------------------------------------------------------------

// CGFirstCharge

// optional int32 type = 1;
inline bool CGFirstCharge::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGFirstCharge::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGFirstCharge::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGFirstCharge::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGFirstCharge::type() const {
  // @@protoc_insertion_point(field_get:CGFirstCharge.type)
  return type_;
}
inline void CGFirstCharge::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGFirstCharge.type)
}

// -------------------------------------------------------------------

// GCFirstCharge

// optional int32 type = 1;
inline bool GCFirstCharge::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCFirstCharge::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCFirstCharge::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCFirstCharge::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCFirstCharge::type() const {
  // @@protoc_insertion_point(field_get:GCFirstCharge.type)
  return type_;
}
inline void GCFirstCharge::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCFirstCharge.type)
}

// optional int32 state = 2;
inline bool GCFirstCharge::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCFirstCharge::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCFirstCharge::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCFirstCharge::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GCFirstCharge::state() const {
  // @@protoc_insertion_point(field_get:GCFirstCharge.state)
  return state_;
}
inline void GCFirstCharge::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GCFirstCharge.state)
}

// -------------------------------------------------------------------

// CGRechargeReward

// optional int32 opType = 1;
inline bool CGRechargeReward::has_optype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGRechargeReward::set_has_optype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGRechargeReward::clear_has_optype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGRechargeReward::clear_optype() {
  optype_ = 0;
  clear_has_optype();
}
inline ::google::protobuf::int32 CGRechargeReward::optype() const {
  // @@protoc_insertion_point(field_get:CGRechargeReward.opType)
  return optype_;
}
inline void CGRechargeReward::set_optype(::google::protobuf::int32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:CGRechargeReward.opType)
}

// optional int32 id = 2;
inline bool CGRechargeReward::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGRechargeReward::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGRechargeReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGRechargeReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGRechargeReward::id() const {
  // @@protoc_insertion_point(field_get:CGRechargeReward.id)
  return id_;
}
inline void CGRechargeReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGRechargeReward.id)
}

// -------------------------------------------------------------------

// GCRechargeReward

// optional int32 opType = 1;
inline bool GCRechargeReward::has_optype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCRechargeReward::set_has_optype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCRechargeReward::clear_has_optype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCRechargeReward::clear_optype() {
  optype_ = 0;
  clear_has_optype();
}
inline ::google::protobuf::int32 GCRechargeReward::optype() const {
  // @@protoc_insertion_point(field_get:GCRechargeReward.opType)
  return optype_;
}
inline void GCRechargeReward::set_optype(::google::protobuf::int32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:GCRechargeReward.opType)
}

// repeated .RechargeTypeData typeData = 2;
inline int GCRechargeReward::typedata_size() const {
  return typedata_.size();
}
inline void GCRechargeReward::clear_typedata() {
  typedata_.Clear();
}
inline const ::RechargeTypeData& GCRechargeReward::typedata(int index) const {
  // @@protoc_insertion_point(field_get:GCRechargeReward.typeData)
  return typedata_.Get(index);
}
inline ::RechargeTypeData* GCRechargeReward::mutable_typedata(int index) {
  // @@protoc_insertion_point(field_mutable:GCRechargeReward.typeData)
  return typedata_.Mutable(index);
}
inline ::RechargeTypeData* GCRechargeReward::add_typedata() {
  // @@protoc_insertion_point(field_add:GCRechargeReward.typeData)
  return typedata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RechargeTypeData >&
GCRechargeReward::typedata() const {
  // @@protoc_insertion_point(field_list:GCRechargeReward.typeData)
  return typedata_;
}
inline ::google::protobuf::RepeatedPtrField< ::RechargeTypeData >*
GCRechargeReward::mutable_typedata() {
  // @@protoc_insertion_point(field_mutable_list:GCRechargeReward.typeData)
  return &typedata_;
}

// optional int32 flag = 3;
inline bool GCRechargeReward::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCRechargeReward::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCRechargeReward::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCRechargeReward::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCRechargeReward::flag() const {
  // @@protoc_insertion_point(field_get:GCRechargeReward.flag)
  return flag_;
}
inline void GCRechargeReward::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCRechargeReward.flag)
}

// -------------------------------------------------------------------

// GCRechargeTypeUpdate

// optional .RechargeTypeData typeData = 1;
inline bool GCRechargeTypeUpdate::has_typedata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCRechargeTypeUpdate::set_has_typedata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCRechargeTypeUpdate::clear_has_typedata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCRechargeTypeUpdate::clear_typedata() {
  if (typedata_ != NULL) typedata_->::RechargeTypeData::Clear();
  clear_has_typedata();
}
inline const ::RechargeTypeData& GCRechargeTypeUpdate::typedata() const {
  // @@protoc_insertion_point(field_get:GCRechargeTypeUpdate.typeData)
  return typedata_ != NULL ? *typedata_ : *default_instance_->typedata_;
}
inline ::RechargeTypeData* GCRechargeTypeUpdate::mutable_typedata() {
  set_has_typedata();
  if (typedata_ == NULL) typedata_ = new ::RechargeTypeData;
  // @@protoc_insertion_point(field_mutable:GCRechargeTypeUpdate.typeData)
  return typedata_;
}
inline ::RechargeTypeData* GCRechargeTypeUpdate::release_typedata() {
  clear_has_typedata();
  ::RechargeTypeData* temp = typedata_;
  typedata_ = NULL;
  return temp;
}
inline void GCRechargeTypeUpdate::set_allocated_typedata(::RechargeTypeData* typedata) {
  delete typedata_;
  typedata_ = typedata;
  if (typedata) {
    set_has_typedata();
  } else {
    clear_has_typedata();
  }
  // @@protoc_insertion_point(field_set_allocated:GCRechargeTypeUpdate.typeData)
}

// -------------------------------------------------------------------

// GCSigninStatusList

// optional int32 today = 1;
inline bool GCSigninStatusList::has_today() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSigninStatusList::set_has_today() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSigninStatusList::clear_has_today() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSigninStatusList::clear_today() {
  today_ = 0;
  clear_has_today();
}
inline ::google::protobuf::int32 GCSigninStatusList::today() const {
  // @@protoc_insertion_point(field_get:GCSigninStatusList.today)
  return today_;
}
inline void GCSigninStatusList::set_today(::google::protobuf::int32 value) {
  set_has_today();
  today_ = value;
  // @@protoc_insertion_point(field_set:GCSigninStatusList.today)
}

// repeated .SunSignInRew rewardMap = 2;
inline int GCSigninStatusList::rewardmap_size() const {
  return rewardmap_.size();
}
inline void GCSigninStatusList::clear_rewardmap() {
  rewardmap_.Clear();
}
inline const ::SunSignInRew& GCSigninStatusList::rewardmap(int index) const {
  // @@protoc_insertion_point(field_get:GCSigninStatusList.rewardMap)
  return rewardmap_.Get(index);
}
inline ::SunSignInRew* GCSigninStatusList::mutable_rewardmap(int index) {
  // @@protoc_insertion_point(field_mutable:GCSigninStatusList.rewardMap)
  return rewardmap_.Mutable(index);
}
inline ::SunSignInRew* GCSigninStatusList::add_rewardmap() {
  // @@protoc_insertion_point(field_add:GCSigninStatusList.rewardMap)
  return rewardmap_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SunSignInRew >&
GCSigninStatusList::rewardmap() const {
  // @@protoc_insertion_point(field_list:GCSigninStatusList.rewardMap)
  return rewardmap_;
}
inline ::google::protobuf::RepeatedPtrField< ::SunSignInRew >*
GCSigninStatusList::mutable_rewardmap() {
  // @@protoc_insertion_point(field_mutable_list:GCSigninStatusList.rewardMap)
  return &rewardmap_;
}

// optional int32 signCount = 3;
inline bool GCSigninStatusList::has_signcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSigninStatusList::set_has_signcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSigninStatusList::clear_has_signcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSigninStatusList::clear_signcount() {
  signcount_ = 0;
  clear_has_signcount();
}
inline ::google::protobuf::int32 GCSigninStatusList::signcount() const {
  // @@protoc_insertion_point(field_get:GCSigninStatusList.signCount)
  return signcount_;
}
inline void GCSigninStatusList::set_signcount(::google::protobuf::int32 value) {
  set_has_signcount();
  signcount_ = value;
  // @@protoc_insertion_point(field_set:GCSigninStatusList.signCount)
}

// repeated .SignInTem signInTem = 4;
inline int GCSigninStatusList::signintem_size() const {
  return signintem_.size();
}
inline void GCSigninStatusList::clear_signintem() {
  signintem_.Clear();
}
inline const ::SignInTem& GCSigninStatusList::signintem(int index) const {
  // @@protoc_insertion_point(field_get:GCSigninStatusList.signInTem)
  return signintem_.Get(index);
}
inline ::SignInTem* GCSigninStatusList::mutable_signintem(int index) {
  // @@protoc_insertion_point(field_mutable:GCSigninStatusList.signInTem)
  return signintem_.Mutable(index);
}
inline ::SignInTem* GCSigninStatusList::add_signintem() {
  // @@protoc_insertion_point(field_add:GCSigninStatusList.signInTem)
  return signintem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SignInTem >&
GCSigninStatusList::signintem() const {
  // @@protoc_insertion_point(field_list:GCSigninStatusList.signInTem)
  return signintem_;
}
inline ::google::protobuf::RepeatedPtrField< ::SignInTem >*
GCSigninStatusList::mutable_signintem() {
  // @@protoc_insertion_point(field_mutable_list:GCSigninStatusList.signInTem)
  return &signintem_;
}

// optional int32 totalSignNum = 5;
inline bool GCSigninStatusList::has_totalsignnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCSigninStatusList::set_has_totalsignnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCSigninStatusList::clear_has_totalsignnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCSigninStatusList::clear_totalsignnum() {
  totalsignnum_ = 0;
  clear_has_totalsignnum();
}
inline ::google::protobuf::int32 GCSigninStatusList::totalsignnum() const {
  // @@protoc_insertion_point(field_get:GCSigninStatusList.totalSignNum)
  return totalsignnum_;
}
inline void GCSigninStatusList::set_totalsignnum(::google::protobuf::int32 value) {
  set_has_totalsignnum();
  totalsignnum_ = value;
  // @@protoc_insertion_point(field_set:GCSigninStatusList.totalSignNum)
}

// -------------------------------------------------------------------

// SignInTem

// optional int32 temId = 1;
inline bool SignInTem::has_temid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignInTem::set_has_temid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignInTem::clear_has_temid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignInTem::clear_temid() {
  temid_ = 0;
  clear_has_temid();
}
inline ::google::protobuf::int32 SignInTem::temid() const {
  // @@protoc_insertion_point(field_get:SignInTem.temId)
  return temid_;
}
inline void SignInTem::set_temid(::google::protobuf::int32 value) {
  set_has_temid();
  temid_ = value;
  // @@protoc_insertion_point(field_set:SignInTem.temId)
}

// optional int32 month = 2;
inline bool SignInTem::has_month() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SignInTem::set_has_month() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SignInTem::clear_has_month() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SignInTem::clear_month() {
  month_ = 0;
  clear_has_month();
}
inline ::google::protobuf::int32 SignInTem::month() const {
  // @@protoc_insertion_point(field_get:SignInTem.month)
  return month_;
}
inline void SignInTem::set_month(::google::protobuf::int32 value) {
  set_has_month();
  month_ = value;
  // @@protoc_insertion_point(field_set:SignInTem.month)
}

// optional int32 day = 3;
inline bool SignInTem::has_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SignInTem::set_has_day() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SignInTem::clear_has_day() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SignInTem::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 SignInTem::day() const {
  // @@protoc_insertion_point(field_get:SignInTem.day)
  return day_;
}
inline void SignInTem::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:SignInTem.day)
}

// optional .ItemInfo itemInfo = 4;
inline bool SignInTem::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SignInTem::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SignInTem::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SignInTem::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::ItemInfo::Clear();
  clear_has_iteminfo();
}
inline const ::ItemInfo& SignInTem::iteminfo() const {
  // @@protoc_insertion_point(field_get:SignInTem.itemInfo)
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::ItemInfo* SignInTem::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::ItemInfo;
  // @@protoc_insertion_point(field_mutable:SignInTem.itemInfo)
  return iteminfo_;
}
inline ::ItemInfo* SignInTem::release_iteminfo() {
  clear_has_iteminfo();
  ::ItemInfo* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline void SignInTem::set_allocated_iteminfo(::ItemInfo* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SignInTem.itemInfo)
}

// optional int32 vip = 5;
inline bool SignInTem::has_vip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SignInTem::set_has_vip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SignInTem::clear_has_vip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SignInTem::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 SignInTem::vip() const {
  // @@protoc_insertion_point(field_get:SignInTem.vip)
  return vip_;
}
inline void SignInTem::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:SignInTem.vip)
}

// optional int32 ratio = 6;
inline bool SignInTem::has_ratio() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SignInTem::set_has_ratio() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SignInTem::clear_has_ratio() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SignInTem::clear_ratio() {
  ratio_ = 0;
  clear_has_ratio();
}
inline ::google::protobuf::int32 SignInTem::ratio() const {
  // @@protoc_insertion_point(field_get:SignInTem.ratio)
  return ratio_;
}
inline void SignInTem::set_ratio(::google::protobuf::int32 value) {
  set_has_ratio();
  ratio_ = value;
  // @@protoc_insertion_point(field_set:SignInTem.ratio)
}

// optional int32 signStatus = 7;
inline bool SignInTem::has_signstatus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SignInTem::set_has_signstatus() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SignInTem::clear_has_signstatus() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SignInTem::clear_signstatus() {
  signstatus_ = 0;
  clear_has_signstatus();
}
inline ::google::protobuf::int32 SignInTem::signstatus() const {
  // @@protoc_insertion_point(field_get:SignInTem.signStatus)
  return signstatus_;
}
inline void SignInTem::set_signstatus(::google::protobuf::int32 value) {
  set_has_signstatus();
  signstatus_ = value;
  // @@protoc_insertion_point(field_set:SignInTem.signStatus)
}

// -------------------------------------------------------------------

// CGSignin

// optional int32 type = 1;
inline bool CGSignin::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSignin::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSignin::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSignin::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGSignin::type() const {
  // @@protoc_insertion_point(field_get:CGSignin.type)
  return type_;
}
inline void CGSignin::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGSignin.type)
}

// optional int32 temId = 2;
inline bool CGSignin::has_temid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSignin::set_has_temid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSignin::clear_has_temid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSignin::clear_temid() {
  temid_ = 0;
  clear_has_temid();
}
inline ::google::protobuf::int32 CGSignin::temid() const {
  // @@protoc_insertion_point(field_get:CGSignin.temId)
  return temid_;
}
inline void CGSignin::set_temid(::google::protobuf::int32 value) {
  set_has_temid();
  temid_ = value;
  // @@protoc_insertion_point(field_set:CGSignin.temId)
}

// optional int32 indexId = 3;
inline bool CGSignin::has_indexid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGSignin::set_has_indexid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGSignin::clear_has_indexid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGSignin::clear_indexid() {
  indexid_ = 0;
  clear_has_indexid();
}
inline ::google::protobuf::int32 CGSignin::indexid() const {
  // @@protoc_insertion_point(field_get:CGSignin.indexId)
  return indexid_;
}
inline void CGSignin::set_indexid(::google::protobuf::int32 value) {
  set_has_indexid();
  indexid_ = value;
  // @@protoc_insertion_point(field_set:CGSignin.indexId)
}

// -------------------------------------------------------------------

// GCSignin

// optional int32 type = 1;
inline bool GCSignin::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSignin::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSignin::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSignin::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCSignin::type() const {
  // @@protoc_insertion_point(field_get:GCSignin.type)
  return type_;
}
inline void GCSignin::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCSignin.type)
}

// optional int32 signStatus = 2;
inline bool GCSignin::has_signstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSignin::set_has_signstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSignin::clear_has_signstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSignin::clear_signstatus() {
  signstatus_ = 0;
  clear_has_signstatus();
}
inline ::google::protobuf::int32 GCSignin::signstatus() const {
  // @@protoc_insertion_point(field_get:GCSignin.signStatus)
  return signstatus_;
}
inline void GCSignin::set_signstatus(::google::protobuf::int32 value) {
  set_has_signstatus();
  signstatus_ = value;
  // @@protoc_insertion_point(field_set:GCSignin.signStatus)
}

// optional int32 signId = 3;
inline bool GCSignin::has_signid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCSignin::set_has_signid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCSignin::clear_has_signid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCSignin::clear_signid() {
  signid_ = 0;
  clear_has_signid();
}
inline ::google::protobuf::int32 GCSignin::signid() const {
  // @@protoc_insertion_point(field_get:GCSignin.signId)
  return signid_;
}
inline void GCSignin::set_signid(::google::protobuf::int32 value) {
  set_has_signid();
  signid_ = value;
  // @@protoc_insertion_point(field_set:GCSignin.signId)
}

// optional int32 signCount = 4;
inline bool GCSignin::has_signcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCSignin::set_has_signcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCSignin::clear_has_signcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCSignin::clear_signcount() {
  signcount_ = 0;
  clear_has_signcount();
}
inline ::google::protobuf::int32 GCSignin::signcount() const {
  // @@protoc_insertion_point(field_get:GCSignin.signCount)
  return signcount_;
}
inline void GCSignin::set_signcount(::google::protobuf::int32 value) {
  set_has_signcount();
  signcount_ = value;
  // @@protoc_insertion_point(field_set:GCSignin.signCount)
}

// optional int32 totalSignNum = 5;
inline bool GCSignin::has_totalsignnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCSignin::set_has_totalsignnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCSignin::clear_has_totalsignnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCSignin::clear_totalsignnum() {
  totalsignnum_ = 0;
  clear_has_totalsignnum();
}
inline ::google::protobuf::int32 GCSignin::totalsignnum() const {
  // @@protoc_insertion_point(field_get:GCSignin.totalSignNum)
  return totalsignnum_;
}
inline void GCSignin::set_totalsignnum(::google::protobuf::int32 value) {
  set_has_totalsignnum();
  totalsignnum_ = value;
  // @@protoc_insertion_point(field_set:GCSignin.totalSignNum)
}

// optional .SunSignInRew changeRew = 6;
inline bool GCSignin::has_changerew() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GCSignin::set_has_changerew() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GCSignin::clear_has_changerew() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GCSignin::clear_changerew() {
  if (changerew_ != NULL) changerew_->::SunSignInRew::Clear();
  clear_has_changerew();
}
inline const ::SunSignInRew& GCSignin::changerew() const {
  // @@protoc_insertion_point(field_get:GCSignin.changeRew)
  return changerew_ != NULL ? *changerew_ : *default_instance_->changerew_;
}
inline ::SunSignInRew* GCSignin::mutable_changerew() {
  set_has_changerew();
  if (changerew_ == NULL) changerew_ = new ::SunSignInRew;
  // @@protoc_insertion_point(field_mutable:GCSignin.changeRew)
  return changerew_;
}
inline ::SunSignInRew* GCSignin::release_changerew() {
  clear_has_changerew();
  ::SunSignInRew* temp = changerew_;
  changerew_ = NULL;
  return temp;
}
inline void GCSignin::set_allocated_changerew(::SunSignInRew* changerew) {
  delete changerew_;
  changerew_ = changerew;
  if (changerew) {
    set_has_changerew();
  } else {
    clear_has_changerew();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSignin.changeRew)
}

// -------------------------------------------------------------------

// SunSignInRew

// optional int32 temId = 1;
inline bool SunSignInRew::has_temid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SunSignInRew::set_has_temid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SunSignInRew::clear_has_temid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SunSignInRew::clear_temid() {
  temid_ = 0;
  clear_has_temid();
}
inline ::google::protobuf::int32 SunSignInRew::temid() const {
  // @@protoc_insertion_point(field_get:SunSignInRew.temId)
  return temid_;
}
inline void SunSignInRew::set_temid(::google::protobuf::int32 value) {
  set_has_temid();
  temid_ = value;
  // @@protoc_insertion_point(field_set:SunSignInRew.temId)
}

// optional int32 signNum = 2;
inline bool SunSignInRew::has_signnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SunSignInRew::set_has_signnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SunSignInRew::clear_has_signnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SunSignInRew::clear_signnum() {
  signnum_ = 0;
  clear_has_signnum();
}
inline ::google::protobuf::int32 SunSignInRew::signnum() const {
  // @@protoc_insertion_point(field_get:SunSignInRew.signNum)
  return signnum_;
}
inline void SunSignInRew::set_signnum(::google::protobuf::int32 value) {
  set_has_signnum();
  signnum_ = value;
  // @@protoc_insertion_point(field_set:SunSignInRew.signNum)
}

// optional .ItemInfo itemInfo = 3;
inline bool SunSignInRew::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SunSignInRew::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SunSignInRew::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SunSignInRew::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::ItemInfo::Clear();
  clear_has_iteminfo();
}
inline const ::ItemInfo& SunSignInRew::iteminfo() const {
  // @@protoc_insertion_point(field_get:SunSignInRew.itemInfo)
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::ItemInfo* SunSignInRew::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::ItemInfo;
  // @@protoc_insertion_point(field_mutable:SunSignInRew.itemInfo)
  return iteminfo_;
}
inline ::ItemInfo* SunSignInRew::release_iteminfo() {
  clear_has_iteminfo();
  ::ItemInfo* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline void SunSignInRew::set_allocated_iteminfo(::ItemInfo* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SunSignInRew.itemInfo)
}

// optional int32 value = 4;
inline bool SunSignInRew::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SunSignInRew::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SunSignInRew::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SunSignInRew::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 SunSignInRew::value() const {
  // @@protoc_insertion_point(field_get:SunSignInRew.value)
  return value_;
}
inline void SunSignInRew::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:SunSignInRew.value)
}

// -------------------------------------------------------------------

// CGGrowFund

// optional int32 opType = 1;
inline bool CGGrowFund::has_optype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGrowFund::set_has_optype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGrowFund::clear_has_optype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGrowFund::clear_optype() {
  optype_ = 0;
  clear_has_optype();
}
inline ::google::protobuf::int32 CGGrowFund::optype() const {
  // @@protoc_insertion_point(field_get:CGGrowFund.opType)
  return optype_;
}
inline void CGGrowFund::set_optype(::google::protobuf::int32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:CGGrowFund.opType)
}

// optional int32 id = 2;
inline bool CGGrowFund::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGGrowFund::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGGrowFund::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGGrowFund::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGGrowFund::id() const {
  // @@protoc_insertion_point(field_get:CGGrowFund.id)
  return id_;
}
inline void CGGrowFund::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGGrowFund.id)
}

// -------------------------------------------------------------------

// GCGrowFund

// optional int32 opType = 1;
inline bool GCGrowFund::has_optype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGrowFund::set_has_optype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGrowFund::clear_has_optype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGrowFund::clear_optype() {
  optype_ = 0;
  clear_has_optype();
}
inline ::google::protobuf::int32 GCGrowFund::optype() const {
  // @@protoc_insertion_point(field_get:GCGrowFund.opType)
  return optype_;
}
inline void GCGrowFund::set_optype(::google::protobuf::int32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:GCGrowFund.opType)
}

// optional int32 flag = 2;
inline bool GCGrowFund::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGrowFund::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGrowFund::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGrowFund::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCGrowFund::flag() const {
  // @@protoc_insertion_point(field_get:GCGrowFund.flag)
  return flag_;
}
inline void GCGrowFund::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCGrowFund.flag)
}

// optional int32 buyStatus = 3;
inline bool GCGrowFund::has_buystatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCGrowFund::set_has_buystatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCGrowFund::clear_has_buystatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCGrowFund::clear_buystatus() {
  buystatus_ = 0;
  clear_has_buystatus();
}
inline ::google::protobuf::int32 GCGrowFund::buystatus() const {
  // @@protoc_insertion_point(field_get:GCGrowFund.buyStatus)
  return buystatus_;
}
inline void GCGrowFund::set_buystatus(::google::protobuf::int32 value) {
  set_has_buystatus();
  buystatus_ = value;
  // @@protoc_insertion_point(field_set:GCGrowFund.buyStatus)
}

// optional int32 buyNum = 4;
inline bool GCGrowFund::has_buynum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCGrowFund::set_has_buynum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCGrowFund::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCGrowFund::clear_buynum() {
  buynum_ = 0;
  clear_has_buynum();
}
inline ::google::protobuf::int32 GCGrowFund::buynum() const {
  // @@protoc_insertion_point(field_get:GCGrowFund.buyNum)
  return buynum_;
}
inline void GCGrowFund::set_buynum(::google::protobuf::int32 value) {
  set_has_buynum();
  buynum_ = value;
  // @@protoc_insertion_point(field_set:GCGrowFund.buyNum)
}

// repeated int32 growFundList = 5;
inline int GCGrowFund::growfundlist_size() const {
  return growfundlist_.size();
}
inline void GCGrowFund::clear_growfundlist() {
  growfundlist_.Clear();
}
inline ::google::protobuf::int32 GCGrowFund::growfundlist(int index) const {
  // @@protoc_insertion_point(field_get:GCGrowFund.growFundList)
  return growfundlist_.Get(index);
}
inline void GCGrowFund::set_growfundlist(int index, ::google::protobuf::int32 value) {
  growfundlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCGrowFund.growFundList)
}
inline void GCGrowFund::add_growfundlist(::google::protobuf::int32 value) {
  growfundlist_.Add(value);
  // @@protoc_insertion_point(field_add:GCGrowFund.growFundList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCGrowFund::growfundlist() const {
  // @@protoc_insertion_point(field_list:GCGrowFund.growFundList)
  return growfundlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCGrowFund::mutable_growfundlist() {
  // @@protoc_insertion_point(field_mutable_list:GCGrowFund.growFundList)
  return &growfundlist_;
}

// repeated int32 generalWelfareList = 6;
inline int GCGrowFund::generalwelfarelist_size() const {
  return generalwelfarelist_.size();
}
inline void GCGrowFund::clear_generalwelfarelist() {
  generalwelfarelist_.Clear();
}
inline ::google::protobuf::int32 GCGrowFund::generalwelfarelist(int index) const {
  // @@protoc_insertion_point(field_get:GCGrowFund.generalWelfareList)
  return generalwelfarelist_.Get(index);
}
inline void GCGrowFund::set_generalwelfarelist(int index, ::google::protobuf::int32 value) {
  generalwelfarelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCGrowFund.generalWelfareList)
}
inline void GCGrowFund::add_generalwelfarelist(::google::protobuf::int32 value) {
  generalwelfarelist_.Add(value);
  // @@protoc_insertion_point(field_add:GCGrowFund.generalWelfareList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCGrowFund::generalwelfarelist() const {
  // @@protoc_insertion_point(field_list:GCGrowFund.generalWelfareList)
  return generalwelfarelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCGrowFund::mutable_generalwelfarelist() {
  // @@protoc_insertion_point(field_mutable_list:GCGrowFund.generalWelfareList)
  return &generalwelfarelist_;
}

// -------------------------------------------------------------------

// GCGrowFundBuyNum

// optional int32 buyNum = 1;
inline bool GCGrowFundBuyNum::has_buynum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGrowFundBuyNum::set_has_buynum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGrowFundBuyNum::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGrowFundBuyNum::clear_buynum() {
  buynum_ = 0;
  clear_has_buynum();
}
inline ::google::protobuf::int32 GCGrowFundBuyNum::buynum() const {
  // @@protoc_insertion_point(field_get:GCGrowFundBuyNum.buyNum)
  return buynum_;
}
inline void GCGrowFundBuyNum::set_buynum(::google::protobuf::int32 value) {
  set_has_buynum();
  buynum_ = value;
  // @@protoc_insertion_point(field_set:GCGrowFundBuyNum.buyNum)
}

// -------------------------------------------------------------------

// CGDoublePay

// -------------------------------------------------------------------

// GCDoublePay

// repeated int32 payIdList = 1;
inline int GCDoublePay::payidlist_size() const {
  return payidlist_.size();
}
inline void GCDoublePay::clear_payidlist() {
  payidlist_.Clear();
}
inline ::google::protobuf::int32 GCDoublePay::payidlist(int index) const {
  // @@protoc_insertion_point(field_get:GCDoublePay.payIdList)
  return payidlist_.Get(index);
}
inline void GCDoublePay::set_payidlist(int index, ::google::protobuf::int32 value) {
  payidlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCDoublePay.payIdList)
}
inline void GCDoublePay::add_payidlist(::google::protobuf::int32 value) {
  payidlist_.Add(value);
  // @@protoc_insertion_point(field_add:GCDoublePay.payIdList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCDoublePay::payidlist() const {
  // @@protoc_insertion_point(field_list:GCDoublePay.payIdList)
  return payidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCDoublePay::mutable_payidlist() {
  // @@protoc_insertion_point(field_mutable_list:GCDoublePay.payIdList)
  return &payidlist_;
}

// -------------------------------------------------------------------

// GCDailyGiftInfo

// repeated int32 dailyGiftList = 1;
inline int GCDailyGiftInfo::dailygiftlist_size() const {
  return dailygiftlist_.size();
}
inline void GCDailyGiftInfo::clear_dailygiftlist() {
  dailygiftlist_.Clear();
}
inline ::google::protobuf::int32 GCDailyGiftInfo::dailygiftlist(int index) const {
  // @@protoc_insertion_point(field_get:GCDailyGiftInfo.dailyGiftList)
  return dailygiftlist_.Get(index);
}
inline void GCDailyGiftInfo::set_dailygiftlist(int index, ::google::protobuf::int32 value) {
  dailygiftlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCDailyGiftInfo.dailyGiftList)
}
inline void GCDailyGiftInfo::add_dailygiftlist(::google::protobuf::int32 value) {
  dailygiftlist_.Add(value);
  // @@protoc_insertion_point(field_add:GCDailyGiftInfo.dailyGiftList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCDailyGiftInfo::dailygiftlist() const {
  // @@protoc_insertion_point(field_list:GCDailyGiftInfo.dailyGiftList)
  return dailygiftlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCDailyGiftInfo::mutable_dailygiftlist() {
  // @@protoc_insertion_point(field_mutable_list:GCDailyGiftInfo.dailyGiftList)
  return &dailygiftlist_;
}

// -------------------------------------------------------------------

// WinnersInfo

// optional string playerName = 1;
inline bool WinnersInfo::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WinnersInfo::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WinnersInfo::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WinnersInfo::clear_playername() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& WinnersInfo::playername() const {
  // @@protoc_insertion_point(field_get:WinnersInfo.playerName)
  return *playername_;
}
inline void WinnersInfo::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set:WinnersInfo.playerName)
}
inline void WinnersInfo::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set_char:WinnersInfo.playerName)
}
inline void WinnersInfo::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:WinnersInfo.playerName)
}
inline ::std::string* WinnersInfo::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:WinnersInfo.playerName)
  return playername_;
}
inline ::std::string* WinnersInfo::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WinnersInfo::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:WinnersInfo.playerName)
}

// optional int32 price = 2;
inline bool WinnersInfo::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WinnersInfo::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WinnersInfo::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WinnersInfo::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 WinnersInfo::price() const {
  // @@protoc_insertion_point(field_get:WinnersInfo.price)
  return price_;
}
inline void WinnersInfo::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:WinnersInfo.price)
}

// optional string name = 3;
inline bool WinnersInfo::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WinnersInfo::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WinnersInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WinnersInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& WinnersInfo::name() const {
  // @@protoc_insertion_point(field_get:WinnersInfo.name)
  return *name_;
}
inline void WinnersInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:WinnersInfo.name)
}
inline void WinnersInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:WinnersInfo.name)
}
inline void WinnersInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:WinnersInfo.name)
}
inline ::std::string* WinnersInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:WinnersInfo.name)
  return name_;
}
inline ::std::string* WinnersInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WinnersInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:WinnersInfo.name)
}

// -------------------------------------------------------------------

// GCUpdateRewardList

// optional int32 type = 1;
inline bool GCUpdateRewardList::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCUpdateRewardList::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCUpdateRewardList::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCUpdateRewardList::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCUpdateRewardList::type() const {
  // @@protoc_insertion_point(field_get:GCUpdateRewardList.type)
  return type_;
}
inline void GCUpdateRewardList::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCUpdateRewardList.type)
}

// repeated .WinnersInfo winnersInfoList = 2;
inline int GCUpdateRewardList::winnersinfolist_size() const {
  return winnersinfolist_.size();
}
inline void GCUpdateRewardList::clear_winnersinfolist() {
  winnersinfolist_.Clear();
}
inline const ::WinnersInfo& GCUpdateRewardList::winnersinfolist(int index) const {
  // @@protoc_insertion_point(field_get:GCUpdateRewardList.winnersInfoList)
  return winnersinfolist_.Get(index);
}
inline ::WinnersInfo* GCUpdateRewardList::mutable_winnersinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:GCUpdateRewardList.winnersInfoList)
  return winnersinfolist_.Mutable(index);
}
inline ::WinnersInfo* GCUpdateRewardList::add_winnersinfolist() {
  // @@protoc_insertion_point(field_add:GCUpdateRewardList.winnersInfoList)
  return winnersinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WinnersInfo >&
GCUpdateRewardList::winnersinfolist() const {
  // @@protoc_insertion_point(field_list:GCUpdateRewardList.winnersInfoList)
  return winnersinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::WinnersInfo >*
GCUpdateRewardList::mutable_winnersinfolist() {
  // @@protoc_insertion_point(field_mutable_list:GCUpdateRewardList.winnersInfoList)
  return &winnersinfolist_;
}

// -------------------------------------------------------------------

// oneBuyInfo

// optional int32 id = 1;
inline bool oneBuyInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void oneBuyInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void oneBuyInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void oneBuyInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 oneBuyInfo::id() const {
  // @@protoc_insertion_point(field_get:oneBuyInfo.id)
  return id_;
}
inline void oneBuyInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:oneBuyInfo.id)
}

// optional int32 type = 2;
inline bool oneBuyInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void oneBuyInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void oneBuyInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void oneBuyInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 oneBuyInfo::type() const {
  // @@protoc_insertion_point(field_get:oneBuyInfo.type)
  return type_;
}
inline void oneBuyInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:oneBuyInfo.type)
}

// optional int32 curTotalBuyNum = 3;
inline bool oneBuyInfo::has_curtotalbuynum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void oneBuyInfo::set_has_curtotalbuynum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void oneBuyInfo::clear_has_curtotalbuynum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void oneBuyInfo::clear_curtotalbuynum() {
  curtotalbuynum_ = 0;
  clear_has_curtotalbuynum();
}
inline ::google::protobuf::int32 oneBuyInfo::curtotalbuynum() const {
  // @@protoc_insertion_point(field_get:oneBuyInfo.curTotalBuyNum)
  return curtotalbuynum_;
}
inline void oneBuyInfo::set_curtotalbuynum(::google::protobuf::int32 value) {
  set_has_curtotalbuynum();
  curtotalbuynum_ = value;
  // @@protoc_insertion_point(field_set:oneBuyInfo.curTotalBuyNum)
}

// optional int32 curMyBuyNum = 4;
inline bool oneBuyInfo::has_curmybuynum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void oneBuyInfo::set_has_curmybuynum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void oneBuyInfo::clear_has_curmybuynum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void oneBuyInfo::clear_curmybuynum() {
  curmybuynum_ = 0;
  clear_has_curmybuynum();
}
inline ::google::protobuf::int32 oneBuyInfo::curmybuynum() const {
  // @@protoc_insertion_point(field_get:oneBuyInfo.curMyBuyNum)
  return curmybuynum_;
}
inline void oneBuyInfo::set_curmybuynum(::google::protobuf::int32 value) {
  set_has_curmybuynum();
  curmybuynum_ = value;
  // @@protoc_insertion_point(field_set:oneBuyInfo.curMyBuyNum)
}

// optional int64 overTime = 5;
inline bool oneBuyInfo::has_overtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void oneBuyInfo::set_has_overtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void oneBuyInfo::clear_has_overtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void oneBuyInfo::clear_overtime() {
  overtime_ = GOOGLE_LONGLONG(0);
  clear_has_overtime();
}
inline ::google::protobuf::int64 oneBuyInfo::overtime() const {
  // @@protoc_insertion_point(field_get:oneBuyInfo.overTime)
  return overtime_;
}
inline void oneBuyInfo::set_overtime(::google::protobuf::int64 value) {
  set_has_overtime();
  overtime_ = value;
  // @@protoc_insertion_point(field_set:oneBuyInfo.overTime)
}

// optional int32 group = 6;
inline bool oneBuyInfo::has_group() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void oneBuyInfo::set_has_group() {
  _has_bits_[0] |= 0x00000020u;
}
inline void oneBuyInfo::clear_has_group() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void oneBuyInfo::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 oneBuyInfo::group() const {
  // @@protoc_insertion_point(field_get:oneBuyInfo.group)
  return group_;
}
inline void oneBuyInfo::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
  // @@protoc_insertion_point(field_set:oneBuyInfo.group)
}

// optional int32 price = 7;
inline bool oneBuyInfo::has_price() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void oneBuyInfo::set_has_price() {
  _has_bits_[0] |= 0x00000040u;
}
inline void oneBuyInfo::clear_has_price() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void oneBuyInfo::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 oneBuyInfo::price() const {
  // @@protoc_insertion_point(field_get:oneBuyInfo.price)
  return price_;
}
inline void oneBuyInfo::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:oneBuyInfo.price)
}

// optional string name = 8;
inline bool oneBuyInfo::has_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void oneBuyInfo::set_has_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void oneBuyInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void oneBuyInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& oneBuyInfo::name() const {
  // @@protoc_insertion_point(field_get:oneBuyInfo.name)
  return *name_;
}
inline void oneBuyInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:oneBuyInfo.name)
}
inline void oneBuyInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:oneBuyInfo.name)
}
inline void oneBuyInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:oneBuyInfo.name)
}
inline ::std::string* oneBuyInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:oneBuyInfo.name)
  return name_;
}
inline ::std::string* oneBuyInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void oneBuyInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:oneBuyInfo.name)
}

// optional string item = 9;
inline bool oneBuyInfo::has_item() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void oneBuyInfo::set_has_item() {
  _has_bits_[0] |= 0x00000100u;
}
inline void oneBuyInfo::clear_has_item() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void oneBuyInfo::clear_item() {
  if (item_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_->clear();
  }
  clear_has_item();
}
inline const ::std::string& oneBuyInfo::item() const {
  // @@protoc_insertion_point(field_get:oneBuyInfo.item)
  return *item_;
}
inline void oneBuyInfo::set_item(const ::std::string& value) {
  set_has_item();
  if (item_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_ = new ::std::string;
  }
  item_->assign(value);
  // @@protoc_insertion_point(field_set:oneBuyInfo.item)
}
inline void oneBuyInfo::set_item(const char* value) {
  set_has_item();
  if (item_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_ = new ::std::string;
  }
  item_->assign(value);
  // @@protoc_insertion_point(field_set_char:oneBuyInfo.item)
}
inline void oneBuyInfo::set_item(const char* value, size_t size) {
  set_has_item();
  if (item_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_ = new ::std::string;
  }
  item_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:oneBuyInfo.item)
}
inline ::std::string* oneBuyInfo::mutable_item() {
  set_has_item();
  if (item_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:oneBuyInfo.item)
  return item_;
}
inline ::std::string* oneBuyInfo::release_item() {
  clear_has_item();
  if (item_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_;
    item_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void oneBuyInfo::set_allocated_item(::std::string* item) {
  if (item_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_;
  }
  if (item) {
    set_has_item();
    item_ = item;
  } else {
    clear_has_item();
    item_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:oneBuyInfo.item)
}

// optional int32 nextID = 10;
inline bool oneBuyInfo::has_nextid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void oneBuyInfo::set_has_nextid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void oneBuyInfo::clear_has_nextid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void oneBuyInfo::clear_nextid() {
  nextid_ = 0;
  clear_has_nextid();
}
inline ::google::protobuf::int32 oneBuyInfo::nextid() const {
  // @@protoc_insertion_point(field_get:oneBuyInfo.nextID)
  return nextid_;
}
inline void oneBuyInfo::set_nextid(::google::protobuf::int32 value) {
  set_has_nextid();
  nextid_ = value;
  // @@protoc_insertion_point(field_set:oneBuyInfo.nextID)
}

// optional string charge = 11;
inline bool oneBuyInfo::has_charge() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void oneBuyInfo::set_has_charge() {
  _has_bits_[0] |= 0x00000400u;
}
inline void oneBuyInfo::clear_has_charge() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void oneBuyInfo::clear_charge() {
  if (charge_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charge_->clear();
  }
  clear_has_charge();
}
inline const ::std::string& oneBuyInfo::charge() const {
  // @@protoc_insertion_point(field_get:oneBuyInfo.charge)
  return *charge_;
}
inline void oneBuyInfo::set_charge(const ::std::string& value) {
  set_has_charge();
  if (charge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charge_ = new ::std::string;
  }
  charge_->assign(value);
  // @@protoc_insertion_point(field_set:oneBuyInfo.charge)
}
inline void oneBuyInfo::set_charge(const char* value) {
  set_has_charge();
  if (charge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charge_ = new ::std::string;
  }
  charge_->assign(value);
  // @@protoc_insertion_point(field_set_char:oneBuyInfo.charge)
}
inline void oneBuyInfo::set_charge(const char* value, size_t size) {
  set_has_charge();
  if (charge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charge_ = new ::std::string;
  }
  charge_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:oneBuyInfo.charge)
}
inline ::std::string* oneBuyInfo::mutable_charge() {
  set_has_charge();
  if (charge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charge_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:oneBuyInfo.charge)
  return charge_;
}
inline ::std::string* oneBuyInfo::release_charge() {
  clear_has_charge();
  if (charge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charge_;
    charge_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void oneBuyInfo::set_allocated_charge(::std::string* charge) {
  if (charge_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charge_;
  }
  if (charge) {
    set_has_charge();
    charge_ = charge;
  } else {
    clear_has_charge();
    charge_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:oneBuyInfo.charge)
}

// -------------------------------------------------------------------

// GCUpdateOneBuyList

// optional int32 type = 1;
inline bool GCUpdateOneBuyList::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCUpdateOneBuyList::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCUpdateOneBuyList::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCUpdateOneBuyList::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCUpdateOneBuyList::type() const {
  // @@protoc_insertion_point(field_get:GCUpdateOneBuyList.type)
  return type_;
}
inline void GCUpdateOneBuyList::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCUpdateOneBuyList.type)
}

// repeated .oneBuyInfo buyInfoList = 2;
inline int GCUpdateOneBuyList::buyinfolist_size() const {
  return buyinfolist_.size();
}
inline void GCUpdateOneBuyList::clear_buyinfolist() {
  buyinfolist_.Clear();
}
inline const ::oneBuyInfo& GCUpdateOneBuyList::buyinfolist(int index) const {
  // @@protoc_insertion_point(field_get:GCUpdateOneBuyList.buyInfoList)
  return buyinfolist_.Get(index);
}
inline ::oneBuyInfo* GCUpdateOneBuyList::mutable_buyinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:GCUpdateOneBuyList.buyInfoList)
  return buyinfolist_.Mutable(index);
}
inline ::oneBuyInfo* GCUpdateOneBuyList::add_buyinfolist() {
  // @@protoc_insertion_point(field_add:GCUpdateOneBuyList.buyInfoList)
  return buyinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::oneBuyInfo >&
GCUpdateOneBuyList::buyinfolist() const {
  // @@protoc_insertion_point(field_list:GCUpdateOneBuyList.buyInfoList)
  return buyinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::oneBuyInfo >*
GCUpdateOneBuyList::mutable_buyinfolist() {
  // @@protoc_insertion_point(field_mutable_list:GCUpdateOneBuyList.buyInfoList)
  return &buyinfolist_;
}

// -------------------------------------------------------------------

// CGCanBuy

// optional int32 id = 1;
inline bool CGCanBuy::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCanBuy::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCanBuy::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCanBuy::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGCanBuy::id() const {
  // @@protoc_insertion_point(field_get:CGCanBuy.id)
  return id_;
}
inline void CGCanBuy::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGCanBuy.id)
}

// -------------------------------------------------------------------

// GCCanBuyBack

// optional int32 type = 1;
inline bool GCCanBuyBack::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCCanBuyBack::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCCanBuyBack::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCCanBuyBack::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCCanBuyBack::type() const {
  // @@protoc_insertion_point(field_get:GCCanBuyBack.type)
  return type_;
}
inline void GCCanBuyBack::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCCanBuyBack.type)
}

// -------------------------------------------------------------------

// GCHoliday

// optional int32 id = 1;
inline bool GCHoliday::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCHoliday::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCHoliday::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCHoliday::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCHoliday::id() const {
  // @@protoc_insertion_point(field_get:GCHoliday.id)
  return id_;
}
inline void GCHoliday::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCHoliday.id)
}

// optional int32 result = 2;
inline bool GCHoliday::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCHoliday::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCHoliday::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCHoliday::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCHoliday::result() const {
  // @@protoc_insertion_point(field_get:GCHoliday.result)
  return result_;
}
inline void GCHoliday::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCHoliday.result)
}

// repeated .EntryIntInt paraMap = 3;
inline int GCHoliday::paramap_size() const {
  return paramap_.size();
}
inline void GCHoliday::clear_paramap() {
  paramap_.Clear();
}
inline const ::EntryIntInt& GCHoliday::paramap(int index) const {
  // @@protoc_insertion_point(field_get:GCHoliday.paraMap)
  return paramap_.Get(index);
}
inline ::EntryIntInt* GCHoliday::mutable_paramap(int index) {
  // @@protoc_insertion_point(field_mutable:GCHoliday.paraMap)
  return paramap_.Mutable(index);
}
inline ::EntryIntInt* GCHoliday::add_paramap() {
  // @@protoc_insertion_point(field_add:GCHoliday.paraMap)
  return paramap_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EntryIntInt >&
GCHoliday::paramap() const {
  // @@protoc_insertion_point(field_list:GCHoliday.paraMap)
  return paramap_;
}
inline ::google::protobuf::RepeatedPtrField< ::EntryIntInt >*
GCHoliday::mutable_paramap() {
  // @@protoc_insertion_point(field_mutable_list:GCHoliday.paraMap)
  return &paramap_;
}

// repeated .ItemInfo itemLst = 4;
inline int GCHoliday::itemlst_size() const {
  return itemlst_.size();
}
inline void GCHoliday::clear_itemlst() {
  itemlst_.Clear();
}
inline const ::ItemInfo& GCHoliday::itemlst(int index) const {
  // @@protoc_insertion_point(field_get:GCHoliday.itemLst)
  return itemlst_.Get(index);
}
inline ::ItemInfo* GCHoliday::mutable_itemlst(int index) {
  // @@protoc_insertion_point(field_mutable:GCHoliday.itemLst)
  return itemlst_.Mutable(index);
}
inline ::ItemInfo* GCHoliday::add_itemlst() {
  // @@protoc_insertion_point(field_add:GCHoliday.itemLst)
  return itemlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
GCHoliday::itemlst() const {
  // @@protoc_insertion_point(field_list:GCHoliday.itemLst)
  return itemlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
GCHoliday::mutable_itemlst() {
  // @@protoc_insertion_point(field_mutable_list:GCHoliday.itemLst)
  return &itemlst_;
}

// -------------------------------------------------------------------

// CGHoliday

// optional int32 id = 1;
inline bool CGHoliday::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGHoliday::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGHoliday::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGHoliday::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGHoliday::id() const {
  // @@protoc_insertion_point(field_get:CGHoliday.id)
  return id_;
}
inline void CGHoliday::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGHoliday.id)
}

// optional int32 type = 2;
inline bool CGHoliday::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGHoliday::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGHoliday::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGHoliday::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGHoliday::type() const {
  // @@protoc_insertion_point(field_get:CGHoliday.type)
  return type_;
}
inline void CGHoliday::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGHoliday.type)
}

// optional int32 key = 3;
inline bool CGHoliday::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGHoliday::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGHoliday::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGHoliday::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 CGHoliday::key() const {
  // @@protoc_insertion_point(field_get:CGHoliday.key)
  return key_;
}
inline void CGHoliday::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:CGHoliday.key)
}

// -------------------------------------------------------------------

// GCFeelGold

// optional int32 id = 1;
inline bool GCFeelGold::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCFeelGold::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCFeelGold::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCFeelGold::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCFeelGold::id() const {
  // @@protoc_insertion_point(field_get:GCFeelGold.id)
  return id_;
}
inline void GCFeelGold::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCFeelGold.id)
}

// optional int32 type = 2;
inline bool GCFeelGold::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCFeelGold::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCFeelGold::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCFeelGold::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCFeelGold::type() const {
  // @@protoc_insertion_point(field_get:GCFeelGold.type)
  return type_;
}
inline void GCFeelGold::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCFeelGold.type)
}

// optional int32 result = 3;
inline bool GCFeelGold::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCFeelGold::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCFeelGold::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCFeelGold::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCFeelGold::result() const {
  // @@protoc_insertion_point(field_get:GCFeelGold.result)
  return result_;
}
inline void GCFeelGold::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCFeelGold.result)
}

// optional int32 lastCount = 4;
inline bool GCFeelGold::has_lastcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCFeelGold::set_has_lastcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCFeelGold::clear_has_lastcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCFeelGold::clear_lastcount() {
  lastcount_ = 0;
  clear_has_lastcount();
}
inline ::google::protobuf::int32 GCFeelGold::lastcount() const {
  // @@protoc_insertion_point(field_get:GCFeelGold.lastCount)
  return lastcount_;
}
inline void GCFeelGold::set_lastcount(::google::protobuf::int32 value) {
  set_has_lastcount();
  lastcount_ = value;
  // @@protoc_insertion_point(field_set:GCFeelGold.lastCount)
}

// repeated .ItemInfo item1 = 5;
inline int GCFeelGold::item1_size() const {
  return item1_.size();
}
inline void GCFeelGold::clear_item1() {
  item1_.Clear();
}
inline const ::ItemInfo& GCFeelGold::item1(int index) const {
  // @@protoc_insertion_point(field_get:GCFeelGold.item1)
  return item1_.Get(index);
}
inline ::ItemInfo* GCFeelGold::mutable_item1(int index) {
  // @@protoc_insertion_point(field_mutable:GCFeelGold.item1)
  return item1_.Mutable(index);
}
inline ::ItemInfo* GCFeelGold::add_item1() {
  // @@protoc_insertion_point(field_add:GCFeelGold.item1)
  return item1_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
GCFeelGold::item1() const {
  // @@protoc_insertion_point(field_list:GCFeelGold.item1)
  return item1_;
}
inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
GCFeelGold::mutable_item1() {
  // @@protoc_insertion_point(field_mutable_list:GCFeelGold.item1)
  return &item1_;
}

// repeated .ItemInfo item2 = 6;
inline int GCFeelGold::item2_size() const {
  return item2_.size();
}
inline void GCFeelGold::clear_item2() {
  item2_.Clear();
}
inline const ::ItemInfo& GCFeelGold::item2(int index) const {
  // @@protoc_insertion_point(field_get:GCFeelGold.item2)
  return item2_.Get(index);
}
inline ::ItemInfo* GCFeelGold::mutable_item2(int index) {
  // @@protoc_insertion_point(field_mutable:GCFeelGold.item2)
  return item2_.Mutable(index);
}
inline ::ItemInfo* GCFeelGold::add_item2() {
  // @@protoc_insertion_point(field_add:GCFeelGold.item2)
  return item2_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
GCFeelGold::item2() const {
  // @@protoc_insertion_point(field_list:GCFeelGold.item2)
  return item2_;
}
inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
GCFeelGold::mutable_item2() {
  // @@protoc_insertion_point(field_mutable_list:GCFeelGold.item2)
  return &item2_;
}

// repeated .ItemInfo item3 = 7;
inline int GCFeelGold::item3_size() const {
  return item3_.size();
}
inline void GCFeelGold::clear_item3() {
  item3_.Clear();
}
inline const ::ItemInfo& GCFeelGold::item3(int index) const {
  // @@protoc_insertion_point(field_get:GCFeelGold.item3)
  return item3_.Get(index);
}
inline ::ItemInfo* GCFeelGold::mutable_item3(int index) {
  // @@protoc_insertion_point(field_mutable:GCFeelGold.item3)
  return item3_.Mutable(index);
}
inline ::ItemInfo* GCFeelGold::add_item3() {
  // @@protoc_insertion_point(field_add:GCFeelGold.item3)
  return item3_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
GCFeelGold::item3() const {
  // @@protoc_insertion_point(field_list:GCFeelGold.item3)
  return item3_;
}
inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
GCFeelGold::mutable_item3() {
  // @@protoc_insertion_point(field_mutable_list:GCFeelGold.item3)
  return &item3_;
}

// optional string startDate = 8;
inline bool GCFeelGold::has_startdate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GCFeelGold::set_has_startdate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GCFeelGold::clear_has_startdate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GCFeelGold::clear_startdate() {
  if (startdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    startdate_->clear();
  }
  clear_has_startdate();
}
inline const ::std::string& GCFeelGold::startdate() const {
  // @@protoc_insertion_point(field_get:GCFeelGold.startDate)
  return *startdate_;
}
inline void GCFeelGold::set_startdate(const ::std::string& value) {
  set_has_startdate();
  if (startdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    startdate_ = new ::std::string;
  }
  startdate_->assign(value);
  // @@protoc_insertion_point(field_set:GCFeelGold.startDate)
}
inline void GCFeelGold::set_startdate(const char* value) {
  set_has_startdate();
  if (startdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    startdate_ = new ::std::string;
  }
  startdate_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCFeelGold.startDate)
}
inline void GCFeelGold::set_startdate(const char* value, size_t size) {
  set_has_startdate();
  if (startdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    startdate_ = new ::std::string;
  }
  startdate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCFeelGold.startDate)
}
inline ::std::string* GCFeelGold::mutable_startdate() {
  set_has_startdate();
  if (startdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    startdate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCFeelGold.startDate)
  return startdate_;
}
inline ::std::string* GCFeelGold::release_startdate() {
  clear_has_startdate();
  if (startdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = startdate_;
    startdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCFeelGold::set_allocated_startdate(::std::string* startdate) {
  if (startdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete startdate_;
  }
  if (startdate) {
    set_has_startdate();
    startdate_ = startdate;
  } else {
    clear_has_startdate();
    startdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCFeelGold.startDate)
}

// optional string endDate = 9;
inline bool GCFeelGold::has_enddate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GCFeelGold::set_has_enddate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GCFeelGold::clear_has_enddate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GCFeelGold::clear_enddate() {
  if (enddate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enddate_->clear();
  }
  clear_has_enddate();
}
inline const ::std::string& GCFeelGold::enddate() const {
  // @@protoc_insertion_point(field_get:GCFeelGold.endDate)
  return *enddate_;
}
inline void GCFeelGold::set_enddate(const ::std::string& value) {
  set_has_enddate();
  if (enddate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enddate_ = new ::std::string;
  }
  enddate_->assign(value);
  // @@protoc_insertion_point(field_set:GCFeelGold.endDate)
}
inline void GCFeelGold::set_enddate(const char* value) {
  set_has_enddate();
  if (enddate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enddate_ = new ::std::string;
  }
  enddate_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCFeelGold.endDate)
}
inline void GCFeelGold::set_enddate(const char* value, size_t size) {
  set_has_enddate();
  if (enddate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enddate_ = new ::std::string;
  }
  enddate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCFeelGold.endDate)
}
inline ::std::string* GCFeelGold::mutable_enddate() {
  set_has_enddate();
  if (enddate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enddate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCFeelGold.endDate)
  return enddate_;
}
inline ::std::string* GCFeelGold::release_enddate() {
  clear_has_enddate();
  if (enddate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = enddate_;
    enddate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCFeelGold::set_allocated_enddate(::std::string* enddate) {
  if (enddate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete enddate_;
  }
  if (enddate) {
    set_has_enddate();
    enddate_ = enddate;
  } else {
    clear_has_enddate();
    enddate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCFeelGold.endDate)
}

// optional int32 nextNeedGold = 10;
inline bool GCFeelGold::has_nextneedgold() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GCFeelGold::set_has_nextneedgold() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GCFeelGold::clear_has_nextneedgold() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GCFeelGold::clear_nextneedgold() {
  nextneedgold_ = 0;
  clear_has_nextneedgold();
}
inline ::google::protobuf::int32 GCFeelGold::nextneedgold() const {
  // @@protoc_insertion_point(field_get:GCFeelGold.nextNeedGold)
  return nextneedgold_;
}
inline void GCFeelGold::set_nextneedgold(::google::protobuf::int32 value) {
  set_has_nextneedgold();
  nextneedgold_ = value;
  // @@protoc_insertion_point(field_set:GCFeelGold.nextNeedGold)
}

// optional int32 buyType = 11;
inline bool GCFeelGold::has_buytype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GCFeelGold::set_has_buytype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GCFeelGold::clear_has_buytype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GCFeelGold::clear_buytype() {
  buytype_ = 0;
  clear_has_buytype();
}
inline ::google::protobuf::int32 GCFeelGold::buytype() const {
  // @@protoc_insertion_point(field_get:GCFeelGold.buyType)
  return buytype_;
}
inline void GCFeelGold::set_buytype(::google::protobuf::int32 value) {
  set_has_buytype();
  buytype_ = value;
  // @@protoc_insertion_point(field_set:GCFeelGold.buyType)
}

// optional int32 singleMoney = 12;
inline bool GCFeelGold::has_singlemoney() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GCFeelGold::set_has_singlemoney() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GCFeelGold::clear_has_singlemoney() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GCFeelGold::clear_singlemoney() {
  singlemoney_ = 0;
  clear_has_singlemoney();
}
inline ::google::protobuf::int32 GCFeelGold::singlemoney() const {
  // @@protoc_insertion_point(field_get:GCFeelGold.singleMoney)
  return singlemoney_;
}
inline void GCFeelGold::set_singlemoney(::google::protobuf::int32 value) {
  set_has_singlemoney();
  singlemoney_ = value;
  // @@protoc_insertion_point(field_set:GCFeelGold.singleMoney)
}

// optional string itemShow = 13;
inline bool GCFeelGold::has_itemshow() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GCFeelGold::set_has_itemshow() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GCFeelGold::clear_has_itemshow() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GCFeelGold::clear_itemshow() {
  if (itemshow_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemshow_->clear();
  }
  clear_has_itemshow();
}
inline const ::std::string& GCFeelGold::itemshow() const {
  // @@protoc_insertion_point(field_get:GCFeelGold.itemShow)
  return *itemshow_;
}
inline void GCFeelGold::set_itemshow(const ::std::string& value) {
  set_has_itemshow();
  if (itemshow_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemshow_ = new ::std::string;
  }
  itemshow_->assign(value);
  // @@protoc_insertion_point(field_set:GCFeelGold.itemShow)
}
inline void GCFeelGold::set_itemshow(const char* value) {
  set_has_itemshow();
  if (itemshow_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemshow_ = new ::std::string;
  }
  itemshow_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCFeelGold.itemShow)
}
inline void GCFeelGold::set_itemshow(const char* value, size_t size) {
  set_has_itemshow();
  if (itemshow_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemshow_ = new ::std::string;
  }
  itemshow_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCFeelGold.itemShow)
}
inline ::std::string* GCFeelGold::mutable_itemshow() {
  set_has_itemshow();
  if (itemshow_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemshow_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCFeelGold.itemShow)
  return itemshow_;
}
inline ::std::string* GCFeelGold::release_itemshow() {
  clear_has_itemshow();
  if (itemshow_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemshow_;
    itemshow_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCFeelGold::set_allocated_itemshow(::std::string* itemshow) {
  if (itemshow_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemshow_;
  }
  if (itemshow) {
    set_has_itemshow();
    itemshow_ = itemshow;
  } else {
    clear_has_itemshow();
    itemshow_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCFeelGold.itemShow)
}

// optional string buyOneMoney = 14;
inline bool GCFeelGold::has_buyonemoney() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GCFeelGold::set_has_buyonemoney() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GCFeelGold::clear_has_buyonemoney() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GCFeelGold::clear_buyonemoney() {
  if (buyonemoney_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyonemoney_->clear();
  }
  clear_has_buyonemoney();
}
inline const ::std::string& GCFeelGold::buyonemoney() const {
  // @@protoc_insertion_point(field_get:GCFeelGold.buyOneMoney)
  return *buyonemoney_;
}
inline void GCFeelGold::set_buyonemoney(const ::std::string& value) {
  set_has_buyonemoney();
  if (buyonemoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyonemoney_ = new ::std::string;
  }
  buyonemoney_->assign(value);
  // @@protoc_insertion_point(field_set:GCFeelGold.buyOneMoney)
}
inline void GCFeelGold::set_buyonemoney(const char* value) {
  set_has_buyonemoney();
  if (buyonemoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyonemoney_ = new ::std::string;
  }
  buyonemoney_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCFeelGold.buyOneMoney)
}
inline void GCFeelGold::set_buyonemoney(const char* value, size_t size) {
  set_has_buyonemoney();
  if (buyonemoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyonemoney_ = new ::std::string;
  }
  buyonemoney_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCFeelGold.buyOneMoney)
}
inline ::std::string* GCFeelGold::mutable_buyonemoney() {
  set_has_buyonemoney();
  if (buyonemoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buyonemoney_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCFeelGold.buyOneMoney)
  return buyonemoney_;
}
inline ::std::string* GCFeelGold::release_buyonemoney() {
  clear_has_buyonemoney();
  if (buyonemoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = buyonemoney_;
    buyonemoney_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCFeelGold::set_allocated_buyonemoney(::std::string* buyonemoney) {
  if (buyonemoney_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buyonemoney_;
  }
  if (buyonemoney) {
    set_has_buyonemoney();
    buyonemoney_ = buyonemoney;
  } else {
    clear_has_buyonemoney();
    buyonemoney_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCFeelGold.buyOneMoney)
}

// optional string buyTenMoney = 15;
inline bool GCFeelGold::has_buytenmoney() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GCFeelGold::set_has_buytenmoney() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GCFeelGold::clear_has_buytenmoney() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GCFeelGold::clear_buytenmoney() {
  if (buytenmoney_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buytenmoney_->clear();
  }
  clear_has_buytenmoney();
}
inline const ::std::string& GCFeelGold::buytenmoney() const {
  // @@protoc_insertion_point(field_get:GCFeelGold.buyTenMoney)
  return *buytenmoney_;
}
inline void GCFeelGold::set_buytenmoney(const ::std::string& value) {
  set_has_buytenmoney();
  if (buytenmoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buytenmoney_ = new ::std::string;
  }
  buytenmoney_->assign(value);
  // @@protoc_insertion_point(field_set:GCFeelGold.buyTenMoney)
}
inline void GCFeelGold::set_buytenmoney(const char* value) {
  set_has_buytenmoney();
  if (buytenmoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buytenmoney_ = new ::std::string;
  }
  buytenmoney_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCFeelGold.buyTenMoney)
}
inline void GCFeelGold::set_buytenmoney(const char* value, size_t size) {
  set_has_buytenmoney();
  if (buytenmoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buytenmoney_ = new ::std::string;
  }
  buytenmoney_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCFeelGold.buyTenMoney)
}
inline ::std::string* GCFeelGold::mutable_buytenmoney() {
  set_has_buytenmoney();
  if (buytenmoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buytenmoney_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCFeelGold.buyTenMoney)
  return buytenmoney_;
}
inline ::std::string* GCFeelGold::release_buytenmoney() {
  clear_has_buytenmoney();
  if (buytenmoney_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = buytenmoney_;
    buytenmoney_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCFeelGold::set_allocated_buytenmoney(::std::string* buytenmoney) {
  if (buytenmoney_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buytenmoney_;
  }
  if (buytenmoney) {
    set_has_buytenmoney();
    buytenmoney_ = buytenmoney;
  } else {
    clear_has_buytenmoney();
    buytenmoney_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCFeelGold.buyTenMoney)
}

// -------------------------------------------------------------------

// CGFeelGold

// optional int32 id = 1;
inline bool CGFeelGold::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGFeelGold::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGFeelGold::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGFeelGold::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGFeelGold::id() const {
  // @@protoc_insertion_point(field_get:CGFeelGold.id)
  return id_;
}
inline void CGFeelGold::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGFeelGold.id)
}

// optional int32 type = 2;
inline bool CGFeelGold::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGFeelGold::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGFeelGold::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGFeelGold::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGFeelGold::type() const {
  // @@protoc_insertion_point(field_get:CGFeelGold.type)
  return type_;
}
inline void CGFeelGold::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGFeelGold.type)
}

// optional int32 key = 3;
inline bool CGFeelGold::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGFeelGold::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGFeelGold::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGFeelGold::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 CGFeelGold::key() const {
  // @@protoc_insertion_point(field_get:CGFeelGold.key)
  return key_;
}
inline void CGFeelGold::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:CGFeelGold.key)
}

// -------------------------------------------------------------------

// LevelQuotaInfo

// optional int32 id = 1;
inline bool LevelQuotaInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelQuotaInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelQuotaInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelQuotaInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LevelQuotaInfo::id() const {
  // @@protoc_insertion_point(field_get:LevelQuotaInfo.id)
  return id_;
}
inline void LevelQuotaInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:LevelQuotaInfo.id)
}

// optional int32 levelLimit = 2;
inline bool LevelQuotaInfo::has_levellimit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelQuotaInfo::set_has_levellimit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelQuotaInfo::clear_has_levellimit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelQuotaInfo::clear_levellimit() {
  levellimit_ = 0;
  clear_has_levellimit();
}
inline ::google::protobuf::int32 LevelQuotaInfo::levellimit() const {
  // @@protoc_insertion_point(field_get:LevelQuotaInfo.levelLimit)
  return levellimit_;
}
inline void LevelQuotaInfo::set_levellimit(::google::protobuf::int32 value) {
  set_has_levellimit();
  levellimit_ = value;
  // @@protoc_insertion_point(field_set:LevelQuotaInfo.levelLimit)
}

// optional string goodsGroup = 3;
inline bool LevelQuotaInfo::has_goodsgroup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LevelQuotaInfo::set_has_goodsgroup() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LevelQuotaInfo::clear_has_goodsgroup() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LevelQuotaInfo::clear_goodsgroup() {
  if (goodsgroup_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsgroup_->clear();
  }
  clear_has_goodsgroup();
}
inline const ::std::string& LevelQuotaInfo::goodsgroup() const {
  // @@protoc_insertion_point(field_get:LevelQuotaInfo.goodsGroup)
  return *goodsgroup_;
}
inline void LevelQuotaInfo::set_goodsgroup(const ::std::string& value) {
  set_has_goodsgroup();
  if (goodsgroup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsgroup_ = new ::std::string;
  }
  goodsgroup_->assign(value);
  // @@protoc_insertion_point(field_set:LevelQuotaInfo.goodsGroup)
}
inline void LevelQuotaInfo::set_goodsgroup(const char* value) {
  set_has_goodsgroup();
  if (goodsgroup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsgroup_ = new ::std::string;
  }
  goodsgroup_->assign(value);
  // @@protoc_insertion_point(field_set_char:LevelQuotaInfo.goodsGroup)
}
inline void LevelQuotaInfo::set_goodsgroup(const char* value, size_t size) {
  set_has_goodsgroup();
  if (goodsgroup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsgroup_ = new ::std::string;
  }
  goodsgroup_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LevelQuotaInfo.goodsGroup)
}
inline ::std::string* LevelQuotaInfo::mutable_goodsgroup() {
  set_has_goodsgroup();
  if (goodsgroup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsgroup_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LevelQuotaInfo.goodsGroup)
  return goodsgroup_;
}
inline ::std::string* LevelQuotaInfo::release_goodsgroup() {
  clear_has_goodsgroup();
  if (goodsgroup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = goodsgroup_;
    goodsgroup_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LevelQuotaInfo::set_allocated_goodsgroup(::std::string* goodsgroup) {
  if (goodsgroup_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete goodsgroup_;
  }
  if (goodsgroup) {
    set_has_goodsgroup();
    goodsgroup_ = goodsgroup;
  } else {
    clear_has_goodsgroup();
    goodsgroup_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LevelQuotaInfo.goodsGroup)
}

// optional string ChargeId = 4;
inline bool LevelQuotaInfo::has_chargeid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LevelQuotaInfo::set_has_chargeid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LevelQuotaInfo::clear_has_chargeid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LevelQuotaInfo::clear_chargeid() {
  if (chargeid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chargeid_->clear();
  }
  clear_has_chargeid();
}
inline const ::std::string& LevelQuotaInfo::chargeid() const {
  // @@protoc_insertion_point(field_get:LevelQuotaInfo.ChargeId)
  return *chargeid_;
}
inline void LevelQuotaInfo::set_chargeid(const ::std::string& value) {
  set_has_chargeid();
  if (chargeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chargeid_ = new ::std::string;
  }
  chargeid_->assign(value);
  // @@protoc_insertion_point(field_set:LevelQuotaInfo.ChargeId)
}
inline void LevelQuotaInfo::set_chargeid(const char* value) {
  set_has_chargeid();
  if (chargeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chargeid_ = new ::std::string;
  }
  chargeid_->assign(value);
  // @@protoc_insertion_point(field_set_char:LevelQuotaInfo.ChargeId)
}
inline void LevelQuotaInfo::set_chargeid(const char* value, size_t size) {
  set_has_chargeid();
  if (chargeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chargeid_ = new ::std::string;
  }
  chargeid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LevelQuotaInfo.ChargeId)
}
inline ::std::string* LevelQuotaInfo::mutable_chargeid() {
  set_has_chargeid();
  if (chargeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chargeid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LevelQuotaInfo.ChargeId)
  return chargeid_;
}
inline ::std::string* LevelQuotaInfo::release_chargeid() {
  clear_has_chargeid();
  if (chargeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = chargeid_;
    chargeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LevelQuotaInfo::set_allocated_chargeid(::std::string* chargeid) {
  if (chargeid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chargeid_;
  }
  if (chargeid) {
    set_has_chargeid();
    chargeid_ = chargeid;
  } else {
    clear_has_chargeid();
    chargeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LevelQuotaInfo.ChargeId)
}

// optional int32 originalPrice = 5;
inline bool LevelQuotaInfo::has_originalprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LevelQuotaInfo::set_has_originalprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LevelQuotaInfo::clear_has_originalprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LevelQuotaInfo::clear_originalprice() {
  originalprice_ = 0;
  clear_has_originalprice();
}
inline ::google::protobuf::int32 LevelQuotaInfo::originalprice() const {
  // @@protoc_insertion_point(field_get:LevelQuotaInfo.originalPrice)
  return originalprice_;
}
inline void LevelQuotaInfo::set_originalprice(::google::protobuf::int32 value) {
  set_has_originalprice();
  originalprice_ = value;
  // @@protoc_insertion_point(field_set:LevelQuotaInfo.originalPrice)
}

// optional int32 currentPrice = 6;
inline bool LevelQuotaInfo::has_currentprice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LevelQuotaInfo::set_has_currentprice() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LevelQuotaInfo::clear_has_currentprice() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LevelQuotaInfo::clear_currentprice() {
  currentprice_ = 0;
  clear_has_currentprice();
}
inline ::google::protobuf::int32 LevelQuotaInfo::currentprice() const {
  // @@protoc_insertion_point(field_get:LevelQuotaInfo.currentPrice)
  return currentprice_;
}
inline void LevelQuotaInfo::set_currentprice(::google::protobuf::int32 value) {
  set_has_currentprice();
  currentprice_ = value;
  // @@protoc_insertion_point(field_set:LevelQuotaInfo.currentPrice)
}

// optional int32 noSeeLevel = 7;
inline bool LevelQuotaInfo::has_noseelevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LevelQuotaInfo::set_has_noseelevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LevelQuotaInfo::clear_has_noseelevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LevelQuotaInfo::clear_noseelevel() {
  noseelevel_ = 0;
  clear_has_noseelevel();
}
inline ::google::protobuf::int32 LevelQuotaInfo::noseelevel() const {
  // @@protoc_insertion_point(field_get:LevelQuotaInfo.noSeeLevel)
  return noseelevel_;
}
inline void LevelQuotaInfo::set_noseelevel(::google::protobuf::int32 value) {
  set_has_noseelevel();
  noseelevel_ = value;
  // @@protoc_insertion_point(field_set:LevelQuotaInfo.noSeeLevel)
}

// optional int32 moneyType = 8;
inline bool LevelQuotaInfo::has_moneytype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LevelQuotaInfo::set_has_moneytype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LevelQuotaInfo::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LevelQuotaInfo::clear_moneytype() {
  moneytype_ = 0;
  clear_has_moneytype();
}
inline ::google::protobuf::int32 LevelQuotaInfo::moneytype() const {
  // @@protoc_insertion_point(field_get:LevelQuotaInfo.moneyType)
  return moneytype_;
}
inline void LevelQuotaInfo::set_moneytype(::google::protobuf::int32 value) {
  set_has_moneytype();
  moneytype_ = value;
  // @@protoc_insertion_point(field_set:LevelQuotaInfo.moneyType)
}

// -------------------------------------------------------------------

// GCLevelQuota

// repeated .LevelQuotaInfo infoList = 1;
inline int GCLevelQuota::infolist_size() const {
  return infolist_.size();
}
inline void GCLevelQuota::clear_infolist() {
  infolist_.Clear();
}
inline const ::LevelQuotaInfo& GCLevelQuota::infolist(int index) const {
  // @@protoc_insertion_point(field_get:GCLevelQuota.infoList)
  return infolist_.Get(index);
}
inline ::LevelQuotaInfo* GCLevelQuota::mutable_infolist(int index) {
  // @@protoc_insertion_point(field_mutable:GCLevelQuota.infoList)
  return infolist_.Mutable(index);
}
inline ::LevelQuotaInfo* GCLevelQuota::add_infolist() {
  // @@protoc_insertion_point(field_add:GCLevelQuota.infoList)
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LevelQuotaInfo >&
GCLevelQuota::infolist() const {
  // @@protoc_insertion_point(field_list:GCLevelQuota.infoList)
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::LevelQuotaInfo >*
GCLevelQuota::mutable_infolist() {
  // @@protoc_insertion_point(field_mutable_list:GCLevelQuota.infoList)
  return &infolist_;
}

// -------------------------------------------------------------------

// CGBuyLevelQuota

// optional int32 id = 1;
inline bool CGBuyLevelQuota::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGBuyLevelQuota::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGBuyLevelQuota::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGBuyLevelQuota::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGBuyLevelQuota::id() const {
  // @@protoc_insertion_point(field_get:CGBuyLevelQuota.id)
  return id_;
}
inline void CGBuyLevelQuota::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGBuyLevelQuota.id)
}

// -------------------------------------------------------------------

// GCLevelQuotaUpdate

// optional int32 id = 1;
inline bool GCLevelQuotaUpdate::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCLevelQuotaUpdate::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCLevelQuotaUpdate::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCLevelQuotaUpdate::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCLevelQuotaUpdate::id() const {
  // @@protoc_insertion_point(field_get:GCLevelQuotaUpdate.id)
  return id_;
}
inline void GCLevelQuotaUpdate::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCLevelQuotaUpdate.id)
}

// optional int32 result = 2;
inline bool GCLevelQuotaUpdate::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCLevelQuotaUpdate::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCLevelQuotaUpdate::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCLevelQuotaUpdate::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCLevelQuotaUpdate::result() const {
  // @@protoc_insertion_point(field_get:GCLevelQuotaUpdate.result)
  return result_;
}
inline void GCLevelQuotaUpdate::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCLevelQuotaUpdate.result)
}

// -------------------------------------------------------------------

// FreeBackInfo

// optional int32 id = 1;
inline bool FreeBackInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FreeBackInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FreeBackInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FreeBackInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FreeBackInfo::id() const {
  // @@protoc_insertion_point(field_get:FreeBackInfo.id)
  return id_;
}
inline void FreeBackInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:FreeBackInfo.id)
}

// optional string itemShop = 2;
inline bool FreeBackInfo::has_itemshop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FreeBackInfo::set_has_itemshop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FreeBackInfo::clear_has_itemshop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FreeBackInfo::clear_itemshop() {
  if (itemshop_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemshop_->clear();
  }
  clear_has_itemshop();
}
inline const ::std::string& FreeBackInfo::itemshop() const {
  // @@protoc_insertion_point(field_get:FreeBackInfo.itemShop)
  return *itemshop_;
}
inline void FreeBackInfo::set_itemshop(const ::std::string& value) {
  set_has_itemshop();
  if (itemshop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemshop_ = new ::std::string;
  }
  itemshop_->assign(value);
  // @@protoc_insertion_point(field_set:FreeBackInfo.itemShop)
}
inline void FreeBackInfo::set_itemshop(const char* value) {
  set_has_itemshop();
  if (itemshop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemshop_ = new ::std::string;
  }
  itemshop_->assign(value);
  // @@protoc_insertion_point(field_set_char:FreeBackInfo.itemShop)
}
inline void FreeBackInfo::set_itemshop(const char* value, size_t size) {
  set_has_itemshop();
  if (itemshop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemshop_ = new ::std::string;
  }
  itemshop_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FreeBackInfo.itemShop)
}
inline ::std::string* FreeBackInfo::mutable_itemshop() {
  set_has_itemshop();
  if (itemshop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemshop_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FreeBackInfo.itemShop)
  return itemshop_;
}
inline ::std::string* FreeBackInfo::release_itemshop() {
  clear_has_itemshop();
  if (itemshop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemshop_;
    itemshop_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FreeBackInfo::set_allocated_itemshop(::std::string* itemshop) {
  if (itemshop_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemshop_;
  }
  if (itemshop) {
    set_has_itemshop();
    itemshop_ = itemshop;
  } else {
    clear_has_itemshop();
    itemshop_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FreeBackInfo.itemShop)
}

// optional string showPrice = 3;
inline bool FreeBackInfo::has_showprice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FreeBackInfo::set_has_showprice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FreeBackInfo::clear_has_showprice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FreeBackInfo::clear_showprice() {
  if (showprice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showprice_->clear();
  }
  clear_has_showprice();
}
inline const ::std::string& FreeBackInfo::showprice() const {
  // @@protoc_insertion_point(field_get:FreeBackInfo.showPrice)
  return *showprice_;
}
inline void FreeBackInfo::set_showprice(const ::std::string& value) {
  set_has_showprice();
  if (showprice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showprice_ = new ::std::string;
  }
  showprice_->assign(value);
  // @@protoc_insertion_point(field_set:FreeBackInfo.showPrice)
}
inline void FreeBackInfo::set_showprice(const char* value) {
  set_has_showprice();
  if (showprice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showprice_ = new ::std::string;
  }
  showprice_->assign(value);
  // @@protoc_insertion_point(field_set_char:FreeBackInfo.showPrice)
}
inline void FreeBackInfo::set_showprice(const char* value, size_t size) {
  set_has_showprice();
  if (showprice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showprice_ = new ::std::string;
  }
  showprice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FreeBackInfo.showPrice)
}
inline ::std::string* FreeBackInfo::mutable_showprice() {
  set_has_showprice();
  if (showprice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showprice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FreeBackInfo.showPrice)
  return showprice_;
}
inline ::std::string* FreeBackInfo::release_showprice() {
  clear_has_showprice();
  if (showprice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = showprice_;
    showprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FreeBackInfo::set_allocated_showprice(::std::string* showprice) {
  if (showprice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete showprice_;
  }
  if (showprice) {
    set_has_showprice();
    showprice_ = showprice;
  } else {
    clear_has_showprice();
    showprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FreeBackInfo.showPrice)
}

// optional string sellPrice = 4;
inline bool FreeBackInfo::has_sellprice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FreeBackInfo::set_has_sellprice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FreeBackInfo::clear_has_sellprice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FreeBackInfo::clear_sellprice() {
  if (sellprice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sellprice_->clear();
  }
  clear_has_sellprice();
}
inline const ::std::string& FreeBackInfo::sellprice() const {
  // @@protoc_insertion_point(field_get:FreeBackInfo.sellPrice)
  return *sellprice_;
}
inline void FreeBackInfo::set_sellprice(const ::std::string& value) {
  set_has_sellprice();
  if (sellprice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sellprice_ = new ::std::string;
  }
  sellprice_->assign(value);
  // @@protoc_insertion_point(field_set:FreeBackInfo.sellPrice)
}
inline void FreeBackInfo::set_sellprice(const char* value) {
  set_has_sellprice();
  if (sellprice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sellprice_ = new ::std::string;
  }
  sellprice_->assign(value);
  // @@protoc_insertion_point(field_set_char:FreeBackInfo.sellPrice)
}
inline void FreeBackInfo::set_sellprice(const char* value, size_t size) {
  set_has_sellprice();
  if (sellprice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sellprice_ = new ::std::string;
  }
  sellprice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FreeBackInfo.sellPrice)
}
inline ::std::string* FreeBackInfo::mutable_sellprice() {
  set_has_sellprice();
  if (sellprice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sellprice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FreeBackInfo.sellPrice)
  return sellprice_;
}
inline ::std::string* FreeBackInfo::release_sellprice() {
  clear_has_sellprice();
  if (sellprice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sellprice_;
    sellprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FreeBackInfo::set_allocated_sellprice(::std::string* sellprice) {
  if (sellprice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sellprice_;
  }
  if (sellprice) {
    set_has_sellprice();
    sellprice_ = sellprice;
  } else {
    clear_has_sellprice();
    sellprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FreeBackInfo.sellPrice)
}

// optional string chargeID = 5;
inline bool FreeBackInfo::has_chargeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FreeBackInfo::set_has_chargeid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FreeBackInfo::clear_has_chargeid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FreeBackInfo::clear_chargeid() {
  if (chargeid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chargeid_->clear();
  }
  clear_has_chargeid();
}
inline const ::std::string& FreeBackInfo::chargeid() const {
  // @@protoc_insertion_point(field_get:FreeBackInfo.chargeID)
  return *chargeid_;
}
inline void FreeBackInfo::set_chargeid(const ::std::string& value) {
  set_has_chargeid();
  if (chargeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chargeid_ = new ::std::string;
  }
  chargeid_->assign(value);
  // @@protoc_insertion_point(field_set:FreeBackInfo.chargeID)
}
inline void FreeBackInfo::set_chargeid(const char* value) {
  set_has_chargeid();
  if (chargeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chargeid_ = new ::std::string;
  }
  chargeid_->assign(value);
  // @@protoc_insertion_point(field_set_char:FreeBackInfo.chargeID)
}
inline void FreeBackInfo::set_chargeid(const char* value, size_t size) {
  set_has_chargeid();
  if (chargeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chargeid_ = new ::std::string;
  }
  chargeid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FreeBackInfo.chargeID)
}
inline ::std::string* FreeBackInfo::mutable_chargeid() {
  set_has_chargeid();
  if (chargeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chargeid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FreeBackInfo.chargeID)
  return chargeid_;
}
inline ::std::string* FreeBackInfo::release_chargeid() {
  clear_has_chargeid();
  if (chargeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = chargeid_;
    chargeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FreeBackInfo::set_allocated_chargeid(::std::string* chargeid) {
  if (chargeid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chargeid_;
  }
  if (chargeid) {
    set_has_chargeid();
    chargeid_ = chargeid;
  } else {
    clear_has_chargeid();
    chargeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FreeBackInfo.chargeID)
}

// -------------------------------------------------------------------

// CGBuyFreeBack

// optional int32 id = 1;
inline bool CGBuyFreeBack::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGBuyFreeBack::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGBuyFreeBack::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGBuyFreeBack::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGBuyFreeBack::id() const {
  // @@protoc_insertion_point(field_get:CGBuyFreeBack.id)
  return id_;
}
inline void CGBuyFreeBack::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGBuyFreeBack.id)
}

// -------------------------------------------------------------------

// GCFreeBack

// optional int32 operateType = 1;
inline bool GCFreeBack::has_operatetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCFreeBack::set_has_operatetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCFreeBack::clear_has_operatetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCFreeBack::clear_operatetype() {
  operatetype_ = 0;
  clear_has_operatetype();
}
inline ::google::protobuf::int32 GCFreeBack::operatetype() const {
  // @@protoc_insertion_point(field_get:GCFreeBack.operateType)
  return operatetype_;
}
inline void GCFreeBack::set_operatetype(::google::protobuf::int32 value) {
  set_has_operatetype();
  operatetype_ = value;
  // @@protoc_insertion_point(field_set:GCFreeBack.operateType)
}

// optional .FreeBackInfo freeBackInfo = 2;
inline bool GCFreeBack::has_freebackinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCFreeBack::set_has_freebackinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCFreeBack::clear_has_freebackinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCFreeBack::clear_freebackinfo() {
  if (freebackinfo_ != NULL) freebackinfo_->::FreeBackInfo::Clear();
  clear_has_freebackinfo();
}
inline const ::FreeBackInfo& GCFreeBack::freebackinfo() const {
  // @@protoc_insertion_point(field_get:GCFreeBack.freeBackInfo)
  return freebackinfo_ != NULL ? *freebackinfo_ : *default_instance_->freebackinfo_;
}
inline ::FreeBackInfo* GCFreeBack::mutable_freebackinfo() {
  set_has_freebackinfo();
  if (freebackinfo_ == NULL) freebackinfo_ = new ::FreeBackInfo;
  // @@protoc_insertion_point(field_mutable:GCFreeBack.freeBackInfo)
  return freebackinfo_;
}
inline ::FreeBackInfo* GCFreeBack::release_freebackinfo() {
  clear_has_freebackinfo();
  ::FreeBackInfo* temp = freebackinfo_;
  freebackinfo_ = NULL;
  return temp;
}
inline void GCFreeBack::set_allocated_freebackinfo(::FreeBackInfo* freebackinfo) {
  delete freebackinfo_;
  freebackinfo_ = freebackinfo;
  if (freebackinfo) {
    set_has_freebackinfo();
  } else {
    clear_has_freebackinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCFreeBack.freeBackInfo)
}

// -------------------------------------------------------------------

// SuperRebateItem

// optional int32 type = 1;
inline bool SuperRebateItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SuperRebateItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SuperRebateItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SuperRebateItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SuperRebateItem::type() const {
  // @@protoc_insertion_point(field_get:SuperRebateItem.type)
  return type_;
}
inline void SuperRebateItem::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SuperRebateItem.type)
}

// optional string itemInfo = 2;
inline bool SuperRebateItem::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SuperRebateItem::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SuperRebateItem::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SuperRebateItem::clear_iteminfo() {
  if (iteminfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iteminfo_->clear();
  }
  clear_has_iteminfo();
}
inline const ::std::string& SuperRebateItem::iteminfo() const {
  // @@protoc_insertion_point(field_get:SuperRebateItem.itemInfo)
  return *iteminfo_;
}
inline void SuperRebateItem::set_iteminfo(const ::std::string& value) {
  set_has_iteminfo();
  if (iteminfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iteminfo_ = new ::std::string;
  }
  iteminfo_->assign(value);
  // @@protoc_insertion_point(field_set:SuperRebateItem.itemInfo)
}
inline void SuperRebateItem::set_iteminfo(const char* value) {
  set_has_iteminfo();
  if (iteminfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iteminfo_ = new ::std::string;
  }
  iteminfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:SuperRebateItem.itemInfo)
}
inline void SuperRebateItem::set_iteminfo(const char* value, size_t size) {
  set_has_iteminfo();
  if (iteminfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iteminfo_ = new ::std::string;
  }
  iteminfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SuperRebateItem.itemInfo)
}
inline ::std::string* SuperRebateItem::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iteminfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SuperRebateItem.itemInfo)
  return iteminfo_;
}
inline ::std::string* SuperRebateItem::release_iteminfo() {
  clear_has_iteminfo();
  if (iteminfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = iteminfo_;
    iteminfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SuperRebateItem::set_allocated_iteminfo(::std::string* iteminfo) {
  if (iteminfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete iteminfo_;
  }
  if (iteminfo) {
    set_has_iteminfo();
    iteminfo_ = iteminfo;
  } else {
    clear_has_iteminfo();
    iteminfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SuperRebateItem.itemInfo)
}

// optional int32 status = 3;
inline bool SuperRebateItem::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SuperRebateItem::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SuperRebateItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SuperRebateItem::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 SuperRebateItem::status() const {
  // @@protoc_insertion_point(field_get:SuperRebateItem.status)
  return status_;
}
inline void SuperRebateItem::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:SuperRebateItem.status)
}

// -------------------------------------------------------------------

// SuperRebateInfo

// optional int32 id = 1;
inline bool SuperRebateInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SuperRebateInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SuperRebateInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SuperRebateInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SuperRebateInfo::id() const {
  // @@protoc_insertion_point(field_get:SuperRebateInfo.id)
  return id_;
}
inline void SuperRebateInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:SuperRebateInfo.id)
}

// optional int32 price = 2;
inline bool SuperRebateInfo::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SuperRebateInfo::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SuperRebateInfo::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SuperRebateInfo::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 SuperRebateInfo::price() const {
  // @@protoc_insertion_point(field_get:SuperRebateInfo.price)
  return price_;
}
inline void SuperRebateInfo::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:SuperRebateInfo.price)
}

// optional string note = 3;
inline bool SuperRebateInfo::has_note() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SuperRebateInfo::set_has_note() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SuperRebateInfo::clear_has_note() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SuperRebateInfo::clear_note() {
  if (note_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_->clear();
  }
  clear_has_note();
}
inline const ::std::string& SuperRebateInfo::note() const {
  // @@protoc_insertion_point(field_get:SuperRebateInfo.note)
  return *note_;
}
inline void SuperRebateInfo::set_note(const ::std::string& value) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_ = new ::std::string;
  }
  note_->assign(value);
  // @@protoc_insertion_point(field_set:SuperRebateInfo.note)
}
inline void SuperRebateInfo::set_note(const char* value) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_ = new ::std::string;
  }
  note_->assign(value);
  // @@protoc_insertion_point(field_set_char:SuperRebateInfo.note)
}
inline void SuperRebateInfo::set_note(const char* value, size_t size) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_ = new ::std::string;
  }
  note_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SuperRebateInfo.note)
}
inline ::std::string* SuperRebateInfo::mutable_note() {
  set_has_note();
  if (note_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SuperRebateInfo.note)
  return note_;
}
inline ::std::string* SuperRebateInfo::release_note() {
  clear_has_note();
  if (note_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = note_;
    note_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SuperRebateInfo::set_allocated_note(::std::string* note) {
  if (note_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete note_;
  }
  if (note) {
    set_has_note();
    note_ = note;
  } else {
    clear_has_note();
    note_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SuperRebateInfo.note)
}

// repeated .SuperRebateItem itemList = 4;
inline int SuperRebateInfo::itemlist_size() const {
  return itemlist_.size();
}
inline void SuperRebateInfo::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::SuperRebateItem& SuperRebateInfo::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:SuperRebateInfo.itemList)
  return itemlist_.Get(index);
}
inline ::SuperRebateItem* SuperRebateInfo::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:SuperRebateInfo.itemList)
  return itemlist_.Mutable(index);
}
inline ::SuperRebateItem* SuperRebateInfo::add_itemlist() {
  // @@protoc_insertion_point(field_add:SuperRebateInfo.itemList)
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SuperRebateItem >&
SuperRebateInfo::itemlist() const {
  // @@protoc_insertion_point(field_list:SuperRebateInfo.itemList)
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SuperRebateItem >*
SuperRebateInfo::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:SuperRebateInfo.itemList)
  return &itemlist_;
}

// -------------------------------------------------------------------

// CGGetSuperRebateReward

// optional int32 id = 1;
inline bool CGGetSuperRebateReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetSuperRebateReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetSuperRebateReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetSuperRebateReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGGetSuperRebateReward::id() const {
  // @@protoc_insertion_point(field_get:CGGetSuperRebateReward.id)
  return id_;
}
inline void CGGetSuperRebateReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGGetSuperRebateReward.id)
}

// optional int32 index = 2;
inline bool CGGetSuperRebateReward::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGGetSuperRebateReward::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGGetSuperRebateReward::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGGetSuperRebateReward::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 CGGetSuperRebateReward::index() const {
  // @@protoc_insertion_point(field_get:CGGetSuperRebateReward.index)
  return index_;
}
inline void CGGetSuperRebateReward::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:CGGetSuperRebateReward.index)
}

// -------------------------------------------------------------------

// GCSuperRebateBack

// optional int32 operateType = 1;
inline bool GCSuperRebateBack::has_operatetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSuperRebateBack::set_has_operatetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSuperRebateBack::clear_has_operatetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSuperRebateBack::clear_operatetype() {
  operatetype_ = 0;
  clear_has_operatetype();
}
inline ::google::protobuf::int32 GCSuperRebateBack::operatetype() const {
  // @@protoc_insertion_point(field_get:GCSuperRebateBack.operateType)
  return operatetype_;
}
inline void GCSuperRebateBack::set_operatetype(::google::protobuf::int32 value) {
  set_has_operatetype();
  operatetype_ = value;
  // @@protoc_insertion_point(field_set:GCSuperRebateBack.operateType)
}

// optional string note = 2;
inline bool GCSuperRebateBack::has_note() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSuperRebateBack::set_has_note() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSuperRebateBack::clear_has_note() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSuperRebateBack::clear_note() {
  if (note_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_->clear();
  }
  clear_has_note();
}
inline const ::std::string& GCSuperRebateBack::note() const {
  // @@protoc_insertion_point(field_get:GCSuperRebateBack.note)
  return *note_;
}
inline void GCSuperRebateBack::set_note(const ::std::string& value) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_ = new ::std::string;
  }
  note_->assign(value);
  // @@protoc_insertion_point(field_set:GCSuperRebateBack.note)
}
inline void GCSuperRebateBack::set_note(const char* value) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_ = new ::std::string;
  }
  note_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCSuperRebateBack.note)
}
inline void GCSuperRebateBack::set_note(const char* value, size_t size) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_ = new ::std::string;
  }
  note_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCSuperRebateBack.note)
}
inline ::std::string* GCSuperRebateBack::mutable_note() {
  set_has_note();
  if (note_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCSuperRebateBack.note)
  return note_;
}
inline ::std::string* GCSuperRebateBack::release_note() {
  clear_has_note();
  if (note_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = note_;
    note_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCSuperRebateBack::set_allocated_note(::std::string* note) {
  if (note_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete note_;
  }
  if (note) {
    set_has_note();
    note_ = note;
  } else {
    clear_has_note();
    note_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCSuperRebateBack.note)
}

// repeated .SuperRebateInfo infoList = 3;
inline int GCSuperRebateBack::infolist_size() const {
  return infolist_.size();
}
inline void GCSuperRebateBack::clear_infolist() {
  infolist_.Clear();
}
inline const ::SuperRebateInfo& GCSuperRebateBack::infolist(int index) const {
  // @@protoc_insertion_point(field_get:GCSuperRebateBack.infoList)
  return infolist_.Get(index);
}
inline ::SuperRebateInfo* GCSuperRebateBack::mutable_infolist(int index) {
  // @@protoc_insertion_point(field_mutable:GCSuperRebateBack.infoList)
  return infolist_.Mutable(index);
}
inline ::SuperRebateInfo* GCSuperRebateBack::add_infolist() {
  // @@protoc_insertion_point(field_add:GCSuperRebateBack.infoList)
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SuperRebateInfo >&
GCSuperRebateBack::infolist() const {
  // @@protoc_insertion_point(field_list:GCSuperRebateBack.infoList)
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SuperRebateInfo >*
GCSuperRebateBack::mutable_infolist() {
  // @@protoc_insertion_point(field_mutable_list:GCSuperRebateBack.infoList)
  return &infolist_;
}

// optional .SuperRebateInfo rebateInfo = 4;
inline bool GCSuperRebateBack::has_rebateinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCSuperRebateBack::set_has_rebateinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCSuperRebateBack::clear_has_rebateinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCSuperRebateBack::clear_rebateinfo() {
  if (rebateinfo_ != NULL) rebateinfo_->::SuperRebateInfo::Clear();
  clear_has_rebateinfo();
}
inline const ::SuperRebateInfo& GCSuperRebateBack::rebateinfo() const {
  // @@protoc_insertion_point(field_get:GCSuperRebateBack.rebateInfo)
  return rebateinfo_ != NULL ? *rebateinfo_ : *default_instance_->rebateinfo_;
}
inline ::SuperRebateInfo* GCSuperRebateBack::mutable_rebateinfo() {
  set_has_rebateinfo();
  if (rebateinfo_ == NULL) rebateinfo_ = new ::SuperRebateInfo;
  // @@protoc_insertion_point(field_mutable:GCSuperRebateBack.rebateInfo)
  return rebateinfo_;
}
inline ::SuperRebateInfo* GCSuperRebateBack::release_rebateinfo() {
  clear_has_rebateinfo();
  ::SuperRebateInfo* temp = rebateinfo_;
  rebateinfo_ = NULL;
  return temp;
}
inline void GCSuperRebateBack::set_allocated_rebateinfo(::SuperRebateInfo* rebateinfo) {
  delete rebateinfo_;
  rebateinfo_ = rebateinfo;
  if (rebateinfo) {
    set_has_rebateinfo();
  } else {
    clear_has_rebateinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSuperRebateBack.rebateInfo)
}

// -------------------------------------------------------------------

// RechargeDailyGiftItem

// optional int32 id = 1;
inline bool RechargeDailyGiftItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RechargeDailyGiftItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RechargeDailyGiftItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RechargeDailyGiftItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RechargeDailyGiftItem::id() const {
  // @@protoc_insertion_point(field_get:RechargeDailyGiftItem.id)
  return id_;
}
inline void RechargeDailyGiftItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:RechargeDailyGiftItem.id)
}

// optional int32 status = 2;
inline bool RechargeDailyGiftItem::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RechargeDailyGiftItem::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RechargeDailyGiftItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RechargeDailyGiftItem::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 RechargeDailyGiftItem::status() const {
  // @@protoc_insertion_point(field_get:RechargeDailyGiftItem.status)
  return status_;
}
inline void RechargeDailyGiftItem::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:RechargeDailyGiftItem.status)
}

// -------------------------------------------------------------------

// GCRechargeDailyGiftInfo

// repeated .RechargeDailyGiftItem dailyGiftList = 1;
inline int GCRechargeDailyGiftInfo::dailygiftlist_size() const {
  return dailygiftlist_.size();
}
inline void GCRechargeDailyGiftInfo::clear_dailygiftlist() {
  dailygiftlist_.Clear();
}
inline const ::RechargeDailyGiftItem& GCRechargeDailyGiftInfo::dailygiftlist(int index) const {
  // @@protoc_insertion_point(field_get:GCRechargeDailyGiftInfo.dailyGiftList)
  return dailygiftlist_.Get(index);
}
inline ::RechargeDailyGiftItem* GCRechargeDailyGiftInfo::mutable_dailygiftlist(int index) {
  // @@protoc_insertion_point(field_mutable:GCRechargeDailyGiftInfo.dailyGiftList)
  return dailygiftlist_.Mutable(index);
}
inline ::RechargeDailyGiftItem* GCRechargeDailyGiftInfo::add_dailygiftlist() {
  // @@protoc_insertion_point(field_add:GCRechargeDailyGiftInfo.dailyGiftList)
  return dailygiftlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RechargeDailyGiftItem >&
GCRechargeDailyGiftInfo::dailygiftlist() const {
  // @@protoc_insertion_point(field_list:GCRechargeDailyGiftInfo.dailyGiftList)
  return dailygiftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::RechargeDailyGiftItem >*
GCRechargeDailyGiftInfo::mutable_dailygiftlist() {
  // @@protoc_insertion_point(field_mutable_list:GCRechargeDailyGiftInfo.dailyGiftList)
  return &dailygiftlist_;
}

// -------------------------------------------------------------------

// CGGetRechargeDailyGiftReward

// optional int32 id = 1;
inline bool CGGetRechargeDailyGiftReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetRechargeDailyGiftReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetRechargeDailyGiftReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetRechargeDailyGiftReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGGetRechargeDailyGiftReward::id() const {
  // @@protoc_insertion_point(field_get:CGGetRechargeDailyGiftReward.id)
  return id_;
}
inline void CGGetRechargeDailyGiftReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGGetRechargeDailyGiftReward.id)
}

// -------------------------------------------------------------------

// GCGetRechargeDailyGiftRewardBack

// optional int32 result = 1;
inline bool GCGetRechargeDailyGiftRewardBack::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetRechargeDailyGiftRewardBack::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetRechargeDailyGiftRewardBack::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetRechargeDailyGiftRewardBack::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GCGetRechargeDailyGiftRewardBack::result() const {
  // @@protoc_insertion_point(field_get:GCGetRechargeDailyGiftRewardBack.result)
  return result_;
}
inline void GCGetRechargeDailyGiftRewardBack::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GCGetRechargeDailyGiftRewardBack.result)
}

// -------------------------------------------------------------------

// GCPointsBuyHisInfo

// optional int32 type = 1;
inline bool GCPointsBuyHisInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPointsBuyHisInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPointsBuyHisInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPointsBuyHisInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCPointsBuyHisInfo::type() const {
  // @@protoc_insertion_point(field_get:GCPointsBuyHisInfo.type)
  return type_;
}
inline void GCPointsBuyHisInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCPointsBuyHisInfo.type)
}

// repeated .WinnersInfo winnersInfoList = 2;
inline int GCPointsBuyHisInfo::winnersinfolist_size() const {
  return winnersinfolist_.size();
}
inline void GCPointsBuyHisInfo::clear_winnersinfolist() {
  winnersinfolist_.Clear();
}
inline const ::WinnersInfo& GCPointsBuyHisInfo::winnersinfolist(int index) const {
  // @@protoc_insertion_point(field_get:GCPointsBuyHisInfo.winnersInfoList)
  return winnersinfolist_.Get(index);
}
inline ::WinnersInfo* GCPointsBuyHisInfo::mutable_winnersinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:GCPointsBuyHisInfo.winnersInfoList)
  return winnersinfolist_.Mutable(index);
}
inline ::WinnersInfo* GCPointsBuyHisInfo::add_winnersinfolist() {
  // @@protoc_insertion_point(field_add:GCPointsBuyHisInfo.winnersInfoList)
  return winnersinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WinnersInfo >&
GCPointsBuyHisInfo::winnersinfolist() const {
  // @@protoc_insertion_point(field_list:GCPointsBuyHisInfo.winnersInfoList)
  return winnersinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::WinnersInfo >*
GCPointsBuyHisInfo::mutable_winnersinfolist() {
  // @@protoc_insertion_point(field_mutable_list:GCPointsBuyHisInfo.winnersInfoList)
  return &winnersinfolist_;
}

// -------------------------------------------------------------------

// GCPointsBuyList

// optional int32 type = 1;
inline bool GCPointsBuyList::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPointsBuyList::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPointsBuyList::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPointsBuyList::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCPointsBuyList::type() const {
  // @@protoc_insertion_point(field_get:GCPointsBuyList.type)
  return type_;
}
inline void GCPointsBuyList::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCPointsBuyList.type)
}

// optional int32 points = 2;
inline bool GCPointsBuyList::has_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCPointsBuyList::set_has_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCPointsBuyList::clear_has_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCPointsBuyList::clear_points() {
  points_ = 0;
  clear_has_points();
}
inline ::google::protobuf::int32 GCPointsBuyList::points() const {
  // @@protoc_insertion_point(field_get:GCPointsBuyList.points)
  return points_;
}
inline void GCPointsBuyList::set_points(::google::protobuf::int32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:GCPointsBuyList.points)
}

// repeated .oneBuyInfo buyInfoList = 3;
inline int GCPointsBuyList::buyinfolist_size() const {
  return buyinfolist_.size();
}
inline void GCPointsBuyList::clear_buyinfolist() {
  buyinfolist_.Clear();
}
inline const ::oneBuyInfo& GCPointsBuyList::buyinfolist(int index) const {
  // @@protoc_insertion_point(field_get:GCPointsBuyList.buyInfoList)
  return buyinfolist_.Get(index);
}
inline ::oneBuyInfo* GCPointsBuyList::mutable_buyinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:GCPointsBuyList.buyInfoList)
  return buyinfolist_.Mutable(index);
}
inline ::oneBuyInfo* GCPointsBuyList::add_buyinfolist() {
  // @@protoc_insertion_point(field_add:GCPointsBuyList.buyInfoList)
  return buyinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::oneBuyInfo >&
GCPointsBuyList::buyinfolist() const {
  // @@protoc_insertion_point(field_list:GCPointsBuyList.buyInfoList)
  return buyinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::oneBuyInfo >*
GCPointsBuyList::mutable_buyinfolist() {
  // @@protoc_insertion_point(field_mutable_list:GCPointsBuyList.buyInfoList)
  return &buyinfolist_;
}

// -------------------------------------------------------------------

// CGBuyPoints

// optional int32 id = 1;
inline bool CGBuyPoints::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGBuyPoints::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGBuyPoints::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGBuyPoints::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGBuyPoints::id() const {
  // @@protoc_insertion_point(field_get:CGBuyPoints.id)
  return id_;
}
inline void CGBuyPoints::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGBuyPoints.id)
}

// optional int32 num = 2;
inline bool CGBuyPoints::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGBuyPoints::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGBuyPoints::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGBuyPoints::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 CGBuyPoints::num() const {
  // @@protoc_insertion_point(field_get:CGBuyPoints.num)
  return num_;
}
inline void CGBuyPoints::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:CGBuyPoints.num)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SuperGiftMessage_2eproto__INCLUDED
