// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TalismanMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TalismanMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* TalismanInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TalismanInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TalismanAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TalismanAttr_reflection_ = NULL;
const ::google::protobuf::Descriptor* TalismanSlots_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TalismanSlots_reflection_ = NULL;
const ::google::protobuf::Descriptor* TalismanSlotsLook_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TalismanSlotsLook_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGTalismanOperate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGTalismanOperate_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCTalismanOperateResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCTalismanOperateResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCreateTalisman_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCreateTalisman_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCCreateTalismanResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCCreateTalismanResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGResolveTalisman_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGResolveTalisman_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCResolveTalismanResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCResolveTalismanResult_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_TalismanMessage_2eproto() {
  protobuf_AddDesc_TalismanMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "TalismanMessage.proto");
  GOOGLE_CHECK(file != NULL);
  TalismanInfo_descriptor_ = file->message_type(0);
  static const int TalismanInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanInfo, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanInfo, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanInfo, talismanattr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanInfo, createname_),
  };
  TalismanInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TalismanInfo_descriptor_,
      TalismanInfo::default_instance_,
      TalismanInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TalismanInfo));
  TalismanAttr_descriptor_ = file->message_type(1);
  static const int TalismanAttr_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanAttr, attrkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanAttr, attrvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanAttr, viewflag_),
  };
  TalismanAttr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TalismanAttr_descriptor_,
      TalismanAttr::default_instance_,
      TalismanAttr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanAttr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanAttr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TalismanAttr));
  TalismanSlots_descriptor_ = file->message_type(2);
  static const int TalismanSlots_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanSlots, gridid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanSlots, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanSlots, level_),
  };
  TalismanSlots_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TalismanSlots_descriptor_,
      TalismanSlots::default_instance_,
      TalismanSlots_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanSlots, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanSlots, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TalismanSlots));
  TalismanSlotsLook_descriptor_ = file->message_type(3);
  static const int TalismanSlotsLook_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanSlotsLook, gridid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanSlotsLook, talisinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanSlotsLook, level_),
  };
  TalismanSlotsLook_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TalismanSlotsLook_descriptor_,
      TalismanSlotsLook::default_instance_,
      TalismanSlotsLook_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanSlotsLook, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanSlotsLook, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TalismanSlotsLook));
  CGTalismanOperate_descriptor_ = file->message_type(4);
  static const int CGTalismanOperate_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGTalismanOperate, operate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGTalismanOperate, gridid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGTalismanOperate, pid_),
  };
  CGTalismanOperate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CGTalismanOperate_descriptor_,
      CGTalismanOperate::default_instance_,
      CGTalismanOperate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGTalismanOperate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGTalismanOperate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CGTalismanOperate));
  GCTalismanOperateResult_descriptor_ = file->message_type(5);
  static const int GCTalismanOperateResult_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCTalismanOperateResult, operate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCTalismanOperateResult, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCTalismanOperateResult, talismanslots_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCTalismanOperateResult, talismaninfo_),
  };
  GCTalismanOperateResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCTalismanOperateResult_descriptor_,
      GCTalismanOperateResult::default_instance_,
      GCTalismanOperateResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCTalismanOperateResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCTalismanOperateResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCTalismanOperateResult));
  CGCreateTalisman_descriptor_ = file->message_type(6);
  static const int CGCreateTalisman_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCreateTalisman, createlistid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCreateTalisman, createtype_),
  };
  CGCreateTalisman_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CGCreateTalisman_descriptor_,
      CGCreateTalisman::default_instance_,
      CGCreateTalisman_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCreateTalisman, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCreateTalisman, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CGCreateTalisman));
  GCCreateTalismanResult_descriptor_ = file->message_type(7);
  static const int GCCreateTalismanResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCCreateTalismanResult, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCCreateTalismanResult, talismaninfo_),
  };
  GCCreateTalismanResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCCreateTalismanResult_descriptor_,
      GCCreateTalismanResult::default_instance_,
      GCCreateTalismanResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCCreateTalismanResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCCreateTalismanResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCCreateTalismanResult));
  CGResolveTalisman_descriptor_ = file->message_type(8);
  static const int CGResolveTalisman_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGResolveTalisman, talismanidlist_),
  };
  CGResolveTalisman_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CGResolveTalisman_descriptor_,
      CGResolveTalisman::default_instance_,
      CGResolveTalisman_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGResolveTalisman, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGResolveTalisman, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CGResolveTalisman));
  GCResolveTalismanResult_descriptor_ = file->message_type(9);
  static const int GCResolveTalismanResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCResolveTalismanResult, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCResolveTalismanResult, talismanidlist_),
  };
  GCResolveTalismanResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GCResolveTalismanResult_descriptor_,
      GCResolveTalismanResult::default_instance_,
      GCResolveTalismanResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCResolveTalismanResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCResolveTalismanResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GCResolveTalismanResult));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_TalismanMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TalismanInfo_descriptor_, &TalismanInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TalismanAttr_descriptor_, &TalismanAttr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TalismanSlots_descriptor_, &TalismanSlots::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TalismanSlotsLook_descriptor_, &TalismanSlotsLook::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CGTalismanOperate_descriptor_, &CGTalismanOperate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCTalismanOperateResult_descriptor_, &GCTalismanOperateResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CGCreateTalisman_descriptor_, &CGCreateTalisman::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCCreateTalismanResult_descriptor_, &GCCreateTalismanResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CGResolveTalisman_descriptor_, &CGResolveTalisman::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GCResolveTalismanResult_descriptor_, &GCResolveTalismanResult::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_TalismanMessage_2eproto() {
  delete TalismanInfo::default_instance_;
  delete TalismanInfo_reflection_;
  delete TalismanAttr::default_instance_;
  delete TalismanAttr_reflection_;
  delete TalismanSlots::default_instance_;
  delete TalismanSlots_reflection_;
  delete TalismanSlotsLook::default_instance_;
  delete TalismanSlotsLook_reflection_;
  delete CGTalismanOperate::default_instance_;
  delete CGTalismanOperate_reflection_;
  delete GCTalismanOperateResult::default_instance_;
  delete GCTalismanOperateResult_reflection_;
  delete CGCreateTalisman::default_instance_;
  delete CGCreateTalisman_reflection_;
  delete GCCreateTalismanResult::default_instance_;
  delete GCCreateTalismanResult_reflection_;
  delete CGResolveTalisman::default_instance_;
  delete CGResolveTalisman_reflection_;
  delete GCResolveTalismanResult::default_instance_;
  delete GCResolveTalismanResult_reflection_;
}

void protobuf_AddDesc_TalismanMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025TalismanMessage.proto\"a\n\014TalismanInfo\022"
    "\013\n\003pid\030\001 \001(\003\022\013\n\003sid\030\002 \001(\005\022#\n\014talismanAtt"
    "r\030\003 \003(\0132\r.TalismanAttr\022\022\n\ncreateName\030\004 \001"
    "(\t\"D\n\014TalismanAttr\022\017\n\007attrkey\030\001 \001(\005\022\021\n\ta"
    "ttrvalue\030\002 \001(\005\022\020\n\010viewflag\030\003 \001(\005\";\n\rTali"
    "smanSlots\022\016\n\006gridID\030\001 \001(\005\022\013\n\003pid\030\002 \001(\003\022\r"
    "\n\005level\030\003 \001(\005\"T\n\021TalismanSlotsLook\022\016\n\006gr"
    "idID\030\001 \001(\005\022 \n\ttalisInfo\030\002 \001(\0132\r.Talisman"
    "Info\022\r\n\005level\030\003 \001(\005\"A\n\021CGTalismanOperate"
    "\022\017\n\007operate\030\001 \001(\005\022\016\n\006gridID\030\002 \001(\005\022\013\n\003pid"
    "\030\003 \001(\003\"\206\001\n\027GCTalismanOperateResult\022\017\n\007op"
    "erate\030\001 \001(\005\022\016\n\006result\030\002 \001(\005\022%\n\rtalismanS"
    "lots\030\003 \003(\0132\016.TalismanSlots\022#\n\014talismanIn"
    "fo\030\004 \003(\0132\r.TalismanInfo\"<\n\020CGCreateTalis"
    "man\022\024\n\014createListID\030\001 \001(\005\022\022\n\ncreateType\030"
    "\002 \001(\005\"M\n\026GCCreateTalismanResult\022\016\n\006resul"
    "t\030\001 \001(\005\022#\n\014talismanInfo\030\002 \001(\0132\r.Talisman"
    "Info\"+\n\021CGResolveTalisman\022\026\n\016talismanIDL"
    "ist\030\001 \003(\003\"A\n\027GCResolveTalismanResult\022\016\n\006"
    "result\030\001 \001(\005\022\026\n\016talismanIDList\030\002 \003(\003B\031\n\027"
    "com.mile.common.message", 823);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TalismanMessage.proto", &protobuf_RegisterTypes);
  TalismanInfo::default_instance_ = new TalismanInfo();
  TalismanAttr::default_instance_ = new TalismanAttr();
  TalismanSlots::default_instance_ = new TalismanSlots();
  TalismanSlotsLook::default_instance_ = new TalismanSlotsLook();
  CGTalismanOperate::default_instance_ = new CGTalismanOperate();
  GCTalismanOperateResult::default_instance_ = new GCTalismanOperateResult();
  CGCreateTalisman::default_instance_ = new CGCreateTalisman();
  GCCreateTalismanResult::default_instance_ = new GCCreateTalismanResult();
  CGResolveTalisman::default_instance_ = new CGResolveTalisman();
  GCResolveTalismanResult::default_instance_ = new GCResolveTalismanResult();
  TalismanInfo::default_instance_->InitAsDefaultInstance();
  TalismanAttr::default_instance_->InitAsDefaultInstance();
  TalismanSlots::default_instance_->InitAsDefaultInstance();
  TalismanSlotsLook::default_instance_->InitAsDefaultInstance();
  CGTalismanOperate::default_instance_->InitAsDefaultInstance();
  GCTalismanOperateResult::default_instance_->InitAsDefaultInstance();
  CGCreateTalisman::default_instance_->InitAsDefaultInstance();
  GCCreateTalismanResult::default_instance_->InitAsDefaultInstance();
  CGResolveTalisman::default_instance_->InitAsDefaultInstance();
  GCResolveTalismanResult::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_TalismanMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TalismanMessage_2eproto {
  StaticDescriptorInitializer_TalismanMessage_2eproto() {
    protobuf_AddDesc_TalismanMessage_2eproto();
  }
} static_descriptor_initializer_TalismanMessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TalismanInfo::kPidFieldNumber;
const int TalismanInfo::kSidFieldNumber;
const int TalismanInfo::kTalismanAttrFieldNumber;
const int TalismanInfo::kCreateNameFieldNumber;
#endif  // !_MSC_VER

TalismanInfo::TalismanInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TalismanInfo)
}

void TalismanInfo::InitAsDefaultInstance() {
}

TalismanInfo::TalismanInfo(const TalismanInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TalismanInfo)
}

void TalismanInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pid_ = GOOGLE_LONGLONG(0);
  sid_ = 0;
  createname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TalismanInfo::~TalismanInfo() {
  // @@protoc_insertion_point(destructor:TalismanInfo)
  SharedDtor();
}

void TalismanInfo::SharedDtor() {
  if (createname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createname_;
  }
  if (this != default_instance_) {
  }
}

void TalismanInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TalismanInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TalismanInfo_descriptor_;
}

const TalismanInfo& TalismanInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TalismanMessage_2eproto();
  return *default_instance_;
}

TalismanInfo* TalismanInfo::default_instance_ = NULL;

TalismanInfo* TalismanInfo::New() const {
  return new TalismanInfo;
}

void TalismanInfo::Clear() {
  if (_has_bits_[0 / 32] & 11) {
    pid_ = GOOGLE_LONGLONG(0);
    sid_ = 0;
    if (has_createname()) {
      if (createname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        createname_->clear();
      }
    }
  }
  talismanattr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TalismanInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TalismanInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 pid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sid;
        break;
      }

      // optional int32 sid = 2;
      case 2: {
        if (tag == 16) {
         parse_sid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sid_)));
          set_has_sid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_talismanAttr;
        break;
      }

      // repeated .TalismanAttr talismanAttr = 3;
      case 3: {
        if (tag == 26) {
         parse_talismanAttr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_talismanattr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_talismanAttr;
        if (input->ExpectTag(34)) goto parse_createName;
        break;
      }

      // optional string createName = 4;
      case 4: {
        if (tag == 34) {
         parse_createName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createname().data(), this->createname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "createname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TalismanInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TalismanInfo)
  return false;
#undef DO_
}

void TalismanInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TalismanInfo)
  // optional int64 pid = 1;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pid(), output);
  }

  // optional int32 sid = 2;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sid(), output);
  }

  // repeated .TalismanAttr talismanAttr = 3;
  for (int i = 0; i < this->talismanattr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->talismanattr(i), output);
  }

  // optional string createName = 4;
  if (has_createname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createname().data(), this->createname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->createname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TalismanInfo)
}

::google::protobuf::uint8* TalismanInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TalismanInfo)
  // optional int64 pid = 1;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pid(), target);
  }

  // optional int32 sid = 2;
  if (has_sid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sid(), target);
  }

  // repeated .TalismanAttr talismanAttr = 3;
  for (int i = 0; i < this->talismanattr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->talismanattr(i), target);
  }

  // optional string createName = 4;
  if (has_createname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createname().data(), this->createname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->createname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TalismanInfo)
  return target;
}

int TalismanInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pid());
    }

    // optional int32 sid = 2;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sid());
    }

    // optional string createName = 4;
    if (has_createname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createname());
    }

  }
  // repeated .TalismanAttr talismanAttr = 3;
  total_size += 1 * this->talismanattr_size();
  for (int i = 0; i < this->talismanattr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->talismanattr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TalismanInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TalismanInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TalismanInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TalismanInfo::MergeFrom(const TalismanInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  talismanattr_.MergeFrom(from.talismanattr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pid()) {
      set_pid(from.pid());
    }
    if (from.has_sid()) {
      set_sid(from.sid());
    }
    if (from.has_createname()) {
      set_createname(from.createname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TalismanInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalismanInfo::CopyFrom(const TalismanInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalismanInfo::IsInitialized() const {

  return true;
}

void TalismanInfo::Swap(TalismanInfo* other) {
  if (other != this) {
    std::swap(pid_, other->pid_);
    std::swap(sid_, other->sid_);
    talismanattr_.Swap(&other->talismanattr_);
    std::swap(createname_, other->createname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TalismanInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TalismanInfo_descriptor_;
  metadata.reflection = TalismanInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TalismanAttr::kAttrkeyFieldNumber;
const int TalismanAttr::kAttrvalueFieldNumber;
const int TalismanAttr::kViewflagFieldNumber;
#endif  // !_MSC_VER

TalismanAttr::TalismanAttr()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TalismanAttr)
}

void TalismanAttr::InitAsDefaultInstance() {
}

TalismanAttr::TalismanAttr(const TalismanAttr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TalismanAttr)
}

void TalismanAttr::SharedCtor() {
  _cached_size_ = 0;
  attrkey_ = 0;
  attrvalue_ = 0;
  viewflag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TalismanAttr::~TalismanAttr() {
  // @@protoc_insertion_point(destructor:TalismanAttr)
  SharedDtor();
}

void TalismanAttr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TalismanAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TalismanAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TalismanAttr_descriptor_;
}

const TalismanAttr& TalismanAttr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TalismanMessage_2eproto();
  return *default_instance_;
}

TalismanAttr* TalismanAttr::default_instance_ = NULL;

TalismanAttr* TalismanAttr::New() const {
  return new TalismanAttr;
}

void TalismanAttr::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TalismanAttr*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(attrkey_, viewflag_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TalismanAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TalismanAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 attrkey = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attrkey_)));
          set_has_attrkey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_attrvalue;
        break;
      }

      // optional int32 attrvalue = 2;
      case 2: {
        if (tag == 16) {
         parse_attrvalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attrvalue_)));
          set_has_attrvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_viewflag;
        break;
      }

      // optional int32 viewflag = 3;
      case 3: {
        if (tag == 24) {
         parse_viewflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viewflag_)));
          set_has_viewflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TalismanAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TalismanAttr)
  return false;
#undef DO_
}

void TalismanAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TalismanAttr)
  // optional int32 attrkey = 1;
  if (has_attrkey()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attrkey(), output);
  }

  // optional int32 attrvalue = 2;
  if (has_attrvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->attrvalue(), output);
  }

  // optional int32 viewflag = 3;
  if (has_viewflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->viewflag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TalismanAttr)
}

::google::protobuf::uint8* TalismanAttr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TalismanAttr)
  // optional int32 attrkey = 1;
  if (has_attrkey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attrkey(), target);
  }

  // optional int32 attrvalue = 2;
  if (has_attrvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->attrvalue(), target);
  }

  // optional int32 viewflag = 3;
  if (has_viewflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->viewflag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TalismanAttr)
  return target;
}

int TalismanAttr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 attrkey = 1;
    if (has_attrkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attrkey());
    }

    // optional int32 attrvalue = 2;
    if (has_attrvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attrvalue());
    }

    // optional int32 viewflag = 3;
    if (has_viewflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viewflag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TalismanAttr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TalismanAttr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TalismanAttr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TalismanAttr::MergeFrom(const TalismanAttr& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_attrkey()) {
      set_attrkey(from.attrkey());
    }
    if (from.has_attrvalue()) {
      set_attrvalue(from.attrvalue());
    }
    if (from.has_viewflag()) {
      set_viewflag(from.viewflag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TalismanAttr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalismanAttr::CopyFrom(const TalismanAttr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalismanAttr::IsInitialized() const {

  return true;
}

void TalismanAttr::Swap(TalismanAttr* other) {
  if (other != this) {
    std::swap(attrkey_, other->attrkey_);
    std::swap(attrvalue_, other->attrvalue_);
    std::swap(viewflag_, other->viewflag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TalismanAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TalismanAttr_descriptor_;
  metadata.reflection = TalismanAttr_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TalismanSlots::kGridIDFieldNumber;
const int TalismanSlots::kPidFieldNumber;
const int TalismanSlots::kLevelFieldNumber;
#endif  // !_MSC_VER

TalismanSlots::TalismanSlots()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TalismanSlots)
}

void TalismanSlots::InitAsDefaultInstance() {
}

TalismanSlots::TalismanSlots(const TalismanSlots& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TalismanSlots)
}

void TalismanSlots::SharedCtor() {
  _cached_size_ = 0;
  gridid_ = 0;
  pid_ = GOOGLE_LONGLONG(0);
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TalismanSlots::~TalismanSlots() {
  // @@protoc_insertion_point(destructor:TalismanSlots)
  SharedDtor();
}

void TalismanSlots::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TalismanSlots::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TalismanSlots::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TalismanSlots_descriptor_;
}

const TalismanSlots& TalismanSlots::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TalismanMessage_2eproto();
  return *default_instance_;
}

TalismanSlots* TalismanSlots::default_instance_ = NULL;

TalismanSlots* TalismanSlots::New() const {
  return new TalismanSlots;
}

void TalismanSlots::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TalismanSlots*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pid_, level_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TalismanSlots::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TalismanSlots)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gridID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gridid_)));
          set_has_gridid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pid;
        break;
      }

      // optional int64 pid = 2;
      case 2: {
        if (tag == 16) {
         parse_pid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // optional int32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TalismanSlots)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TalismanSlots)
  return false;
#undef DO_
}

void TalismanSlots::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TalismanSlots)
  // optional int32 gridID = 1;
  if (has_gridid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gridid(), output);
  }

  // optional int64 pid = 2;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->pid(), output);
  }

  // optional int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TalismanSlots)
}

::google::protobuf::uint8* TalismanSlots::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TalismanSlots)
  // optional int32 gridID = 1;
  if (has_gridid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gridid(), target);
  }

  // optional int64 pid = 2;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->pid(), target);
  }

  // optional int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TalismanSlots)
  return target;
}

int TalismanSlots::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 gridID = 1;
    if (has_gridid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gridid());
    }

    // optional int64 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pid());
    }

    // optional int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TalismanSlots::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TalismanSlots* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TalismanSlots*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TalismanSlots::MergeFrom(const TalismanSlots& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gridid()) {
      set_gridid(from.gridid());
    }
    if (from.has_pid()) {
      set_pid(from.pid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TalismanSlots::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalismanSlots::CopyFrom(const TalismanSlots& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalismanSlots::IsInitialized() const {

  return true;
}

void TalismanSlots::Swap(TalismanSlots* other) {
  if (other != this) {
    std::swap(gridid_, other->gridid_);
    std::swap(pid_, other->pid_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TalismanSlots::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TalismanSlots_descriptor_;
  metadata.reflection = TalismanSlots_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TalismanSlotsLook::kGridIDFieldNumber;
const int TalismanSlotsLook::kTalisInfoFieldNumber;
const int TalismanSlotsLook::kLevelFieldNumber;
#endif  // !_MSC_VER

TalismanSlotsLook::TalismanSlotsLook()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TalismanSlotsLook)
}

void TalismanSlotsLook::InitAsDefaultInstance() {
  talisinfo_ = const_cast< ::TalismanInfo*>(&::TalismanInfo::default_instance());
}

TalismanSlotsLook::TalismanSlotsLook(const TalismanSlotsLook& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TalismanSlotsLook)
}

void TalismanSlotsLook::SharedCtor() {
  _cached_size_ = 0;
  gridid_ = 0;
  talisinfo_ = NULL;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TalismanSlotsLook::~TalismanSlotsLook() {
  // @@protoc_insertion_point(destructor:TalismanSlotsLook)
  SharedDtor();
}

void TalismanSlotsLook::SharedDtor() {
  if (this != default_instance_) {
    delete talisinfo_;
  }
}

void TalismanSlotsLook::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TalismanSlotsLook::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TalismanSlotsLook_descriptor_;
}

const TalismanSlotsLook& TalismanSlotsLook::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TalismanMessage_2eproto();
  return *default_instance_;
}

TalismanSlotsLook* TalismanSlotsLook::default_instance_ = NULL;

TalismanSlotsLook* TalismanSlotsLook::New() const {
  return new TalismanSlotsLook;
}

void TalismanSlotsLook::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TalismanSlotsLook*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(gridid_, level_);
    if (has_talisinfo()) {
      if (talisinfo_ != NULL) talisinfo_->::TalismanInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TalismanSlotsLook::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TalismanSlotsLook)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gridID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gridid_)));
          set_has_gridid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_talisInfo;
        break;
      }

      // optional .TalismanInfo talisInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_talisInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_talisinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // optional int32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TalismanSlotsLook)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TalismanSlotsLook)
  return false;
#undef DO_
}

void TalismanSlotsLook::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TalismanSlotsLook)
  // optional int32 gridID = 1;
  if (has_gridid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gridid(), output);
  }

  // optional .TalismanInfo talisInfo = 2;
  if (has_talisinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->talisinfo(), output);
  }

  // optional int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TalismanSlotsLook)
}

::google::protobuf::uint8* TalismanSlotsLook::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TalismanSlotsLook)
  // optional int32 gridID = 1;
  if (has_gridid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gridid(), target);
  }

  // optional .TalismanInfo talisInfo = 2;
  if (has_talisinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->talisinfo(), target);
  }

  // optional int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TalismanSlotsLook)
  return target;
}

int TalismanSlotsLook::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 gridID = 1;
    if (has_gridid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gridid());
    }

    // optional .TalismanInfo talisInfo = 2;
    if (has_talisinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->talisinfo());
    }

    // optional int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TalismanSlotsLook::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TalismanSlotsLook* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TalismanSlotsLook*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TalismanSlotsLook::MergeFrom(const TalismanSlotsLook& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gridid()) {
      set_gridid(from.gridid());
    }
    if (from.has_talisinfo()) {
      mutable_talisinfo()->::TalismanInfo::MergeFrom(from.talisinfo());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TalismanSlotsLook::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalismanSlotsLook::CopyFrom(const TalismanSlotsLook& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalismanSlotsLook::IsInitialized() const {

  return true;
}

void TalismanSlotsLook::Swap(TalismanSlotsLook* other) {
  if (other != this) {
    std::swap(gridid_, other->gridid_);
    std::swap(talisinfo_, other->talisinfo_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TalismanSlotsLook::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TalismanSlotsLook_descriptor_;
  metadata.reflection = TalismanSlotsLook_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CGTalismanOperate::kOperateFieldNumber;
const int CGTalismanOperate::kGridIDFieldNumber;
const int CGTalismanOperate::kPidFieldNumber;
#endif  // !_MSC_VER

CGTalismanOperate::CGTalismanOperate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGTalismanOperate)
}

void CGTalismanOperate::InitAsDefaultInstance() {
}

CGTalismanOperate::CGTalismanOperate(const CGTalismanOperate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGTalismanOperate)
}

void CGTalismanOperate::SharedCtor() {
  _cached_size_ = 0;
  operate_ = 0;
  gridid_ = 0;
  pid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGTalismanOperate::~CGTalismanOperate() {
  // @@protoc_insertion_point(destructor:CGTalismanOperate)
  SharedDtor();
}

void CGTalismanOperate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGTalismanOperate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGTalismanOperate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGTalismanOperate_descriptor_;
}

const CGTalismanOperate& CGTalismanOperate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TalismanMessage_2eproto();
  return *default_instance_;
}

CGTalismanOperate* CGTalismanOperate::default_instance_ = NULL;

CGTalismanOperate* CGTalismanOperate::New() const {
  return new CGTalismanOperate;
}

void CGTalismanOperate::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CGTalismanOperate*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(operate_, pid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CGTalismanOperate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGTalismanOperate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 operate = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operate_)));
          set_has_operate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gridID;
        break;
      }

      // optional int32 gridID = 2;
      case 2: {
        if (tag == 16) {
         parse_gridID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gridid_)));
          set_has_gridid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pid;
        break;
      }

      // optional int64 pid = 3;
      case 3: {
        if (tag == 24) {
         parse_pid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGTalismanOperate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGTalismanOperate)
  return false;
#undef DO_
}

void CGTalismanOperate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGTalismanOperate)
  // optional int32 operate = 1;
  if (has_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operate(), output);
  }

  // optional int32 gridID = 2;
  if (has_gridid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gridid(), output);
  }

  // optional int64 pid = 3;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->pid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGTalismanOperate)
}

::google::protobuf::uint8* CGTalismanOperate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGTalismanOperate)
  // optional int32 operate = 1;
  if (has_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operate(), target);
  }

  // optional int32 gridID = 2;
  if (has_gridid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gridid(), target);
  }

  // optional int64 pid = 3;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->pid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGTalismanOperate)
  return target;
}

int CGTalismanOperate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 operate = 1;
    if (has_operate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operate());
    }

    // optional int32 gridID = 2;
    if (has_gridid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gridid());
    }

    // optional int64 pid = 3;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGTalismanOperate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CGTalismanOperate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CGTalismanOperate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGTalismanOperate::MergeFrom(const CGTalismanOperate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operate()) {
      set_operate(from.operate());
    }
    if (from.has_gridid()) {
      set_gridid(from.gridid());
    }
    if (from.has_pid()) {
      set_pid(from.pid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CGTalismanOperate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGTalismanOperate::CopyFrom(const CGTalismanOperate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGTalismanOperate::IsInitialized() const {

  return true;
}

void CGTalismanOperate::Swap(CGTalismanOperate* other) {
  if (other != this) {
    std::swap(operate_, other->operate_);
    std::swap(gridid_, other->gridid_);
    std::swap(pid_, other->pid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CGTalismanOperate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGTalismanOperate_descriptor_;
  metadata.reflection = CGTalismanOperate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCTalismanOperateResult::kOperateFieldNumber;
const int GCTalismanOperateResult::kResultFieldNumber;
const int GCTalismanOperateResult::kTalismanSlotsFieldNumber;
const int GCTalismanOperateResult::kTalismanInfoFieldNumber;
#endif  // !_MSC_VER

GCTalismanOperateResult::GCTalismanOperateResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCTalismanOperateResult)
}

void GCTalismanOperateResult::InitAsDefaultInstance() {
}

GCTalismanOperateResult::GCTalismanOperateResult(const GCTalismanOperateResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCTalismanOperateResult)
}

void GCTalismanOperateResult::SharedCtor() {
  _cached_size_ = 0;
  operate_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCTalismanOperateResult::~GCTalismanOperateResult() {
  // @@protoc_insertion_point(destructor:GCTalismanOperateResult)
  SharedDtor();
}

void GCTalismanOperateResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GCTalismanOperateResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCTalismanOperateResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCTalismanOperateResult_descriptor_;
}

const GCTalismanOperateResult& GCTalismanOperateResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TalismanMessage_2eproto();
  return *default_instance_;
}

GCTalismanOperateResult* GCTalismanOperateResult::default_instance_ = NULL;

GCTalismanOperateResult* GCTalismanOperateResult::New() const {
  return new GCTalismanOperateResult;
}

void GCTalismanOperateResult::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GCTalismanOperateResult*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(operate_, result_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  talismanslots_.Clear();
  talismaninfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCTalismanOperateResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCTalismanOperateResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 operate = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operate_)));
          set_has_operate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional int32 result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_talismanSlots;
        break;
      }

      // repeated .TalismanSlots talismanSlots = 3;
      case 3: {
        if (tag == 26) {
         parse_talismanSlots:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_talismanslots()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_talismanSlots;
        if (input->ExpectTag(34)) goto parse_talismanInfo;
        break;
      }

      // repeated .TalismanInfo talismanInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_talismanInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_talismaninfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_talismanInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCTalismanOperateResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCTalismanOperateResult)
  return false;
#undef DO_
}

void GCTalismanOperateResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCTalismanOperateResult)
  // optional int32 operate = 1;
  if (has_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operate(), output);
  }

  // optional int32 result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  // repeated .TalismanSlots talismanSlots = 3;
  for (int i = 0; i < this->talismanslots_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->talismanslots(i), output);
  }

  // repeated .TalismanInfo talismanInfo = 4;
  for (int i = 0; i < this->talismaninfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->talismaninfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCTalismanOperateResult)
}

::google::protobuf::uint8* GCTalismanOperateResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCTalismanOperateResult)
  // optional int32 operate = 1;
  if (has_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operate(), target);
  }

  // optional int32 result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  // repeated .TalismanSlots talismanSlots = 3;
  for (int i = 0; i < this->talismanslots_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->talismanslots(i), target);
  }

  // repeated .TalismanInfo talismanInfo = 4;
  for (int i = 0; i < this->talismaninfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->talismaninfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCTalismanOperateResult)
  return target;
}

int GCTalismanOperateResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 operate = 1;
    if (has_operate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operate());
    }

    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .TalismanSlots talismanSlots = 3;
  total_size += 1 * this->talismanslots_size();
  for (int i = 0; i < this->talismanslots_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->talismanslots(i));
  }

  // repeated .TalismanInfo talismanInfo = 4;
  total_size += 1 * this->talismaninfo_size();
  for (int i = 0; i < this->talismaninfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->talismaninfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCTalismanOperateResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCTalismanOperateResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCTalismanOperateResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCTalismanOperateResult::MergeFrom(const GCTalismanOperateResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  talismanslots_.MergeFrom(from.talismanslots_);
  talismaninfo_.MergeFrom(from.talismaninfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operate()) {
      set_operate(from.operate());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCTalismanOperateResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCTalismanOperateResult::CopyFrom(const GCTalismanOperateResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCTalismanOperateResult::IsInitialized() const {

  return true;
}

void GCTalismanOperateResult::Swap(GCTalismanOperateResult* other) {
  if (other != this) {
    std::swap(operate_, other->operate_);
    std::swap(result_, other->result_);
    talismanslots_.Swap(&other->talismanslots_);
    talismaninfo_.Swap(&other->talismaninfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCTalismanOperateResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCTalismanOperateResult_descriptor_;
  metadata.reflection = GCTalismanOperateResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CGCreateTalisman::kCreateListIDFieldNumber;
const int CGCreateTalisman::kCreateTypeFieldNumber;
#endif  // !_MSC_VER

CGCreateTalisman::CGCreateTalisman()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCreateTalisman)
}

void CGCreateTalisman::InitAsDefaultInstance() {
}

CGCreateTalisman::CGCreateTalisman(const CGCreateTalisman& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGCreateTalisman)
}

void CGCreateTalisman::SharedCtor() {
  _cached_size_ = 0;
  createlistid_ = 0;
  createtype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCreateTalisman::~CGCreateTalisman() {
  // @@protoc_insertion_point(destructor:CGCreateTalisman)
  SharedDtor();
}

void CGCreateTalisman::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCreateTalisman::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCreateTalisman::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCreateTalisman_descriptor_;
}

const CGCreateTalisman& CGCreateTalisman::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TalismanMessage_2eproto();
  return *default_instance_;
}

CGCreateTalisman* CGCreateTalisman::default_instance_ = NULL;

CGCreateTalisman* CGCreateTalisman::New() const {
  return new CGCreateTalisman;
}

void CGCreateTalisman::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CGCreateTalisman*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(createlistid_, createtype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CGCreateTalisman::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCreateTalisman)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 createListID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &createlistid_)));
          set_has_createlistid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_createType;
        break;
      }

      // optional int32 createType = 2;
      case 2: {
        if (tag == 16) {
         parse_createType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &createtype_)));
          set_has_createtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCreateTalisman)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCreateTalisman)
  return false;
#undef DO_
}

void CGCreateTalisman::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCreateTalisman)
  // optional int32 createListID = 1;
  if (has_createlistid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->createlistid(), output);
  }

  // optional int32 createType = 2;
  if (has_createtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->createtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCreateTalisman)
}

::google::protobuf::uint8* CGCreateTalisman::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCreateTalisman)
  // optional int32 createListID = 1;
  if (has_createlistid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->createlistid(), target);
  }

  // optional int32 createType = 2;
  if (has_createtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->createtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCreateTalisman)
  return target;
}

int CGCreateTalisman::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 createListID = 1;
    if (has_createlistid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->createlistid());
    }

    // optional int32 createType = 2;
    if (has_createtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->createtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCreateTalisman::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CGCreateTalisman* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CGCreateTalisman*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCreateTalisman::MergeFrom(const CGCreateTalisman& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_createlistid()) {
      set_createlistid(from.createlistid());
    }
    if (from.has_createtype()) {
      set_createtype(from.createtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CGCreateTalisman::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCreateTalisman::CopyFrom(const CGCreateTalisman& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCreateTalisman::IsInitialized() const {

  return true;
}

void CGCreateTalisman::Swap(CGCreateTalisman* other) {
  if (other != this) {
    std::swap(createlistid_, other->createlistid_);
    std::swap(createtype_, other->createtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CGCreateTalisman::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCreateTalisman_descriptor_;
  metadata.reflection = CGCreateTalisman_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCCreateTalismanResult::kResultFieldNumber;
const int GCCreateTalismanResult::kTalismanInfoFieldNumber;
#endif  // !_MSC_VER

GCCreateTalismanResult::GCCreateTalismanResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCCreateTalismanResult)
}

void GCCreateTalismanResult::InitAsDefaultInstance() {
  talismaninfo_ = const_cast< ::TalismanInfo*>(&::TalismanInfo::default_instance());
}

GCCreateTalismanResult::GCCreateTalismanResult(const GCCreateTalismanResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCCreateTalismanResult)
}

void GCCreateTalismanResult::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  talismaninfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCCreateTalismanResult::~GCCreateTalismanResult() {
  // @@protoc_insertion_point(destructor:GCCreateTalismanResult)
  SharedDtor();
}

void GCCreateTalismanResult::SharedDtor() {
  if (this != default_instance_) {
    delete talismaninfo_;
  }
}

void GCCreateTalismanResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCCreateTalismanResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCCreateTalismanResult_descriptor_;
}

const GCCreateTalismanResult& GCCreateTalismanResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TalismanMessage_2eproto();
  return *default_instance_;
}

GCCreateTalismanResult* GCCreateTalismanResult::default_instance_ = NULL;

GCCreateTalismanResult* GCCreateTalismanResult::New() const {
  return new GCCreateTalismanResult;
}

void GCCreateTalismanResult::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    result_ = 0;
    if (has_talismaninfo()) {
      if (talismaninfo_ != NULL) talismaninfo_->::TalismanInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCCreateTalismanResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCCreateTalismanResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_talismanInfo;
        break;
      }

      // optional .TalismanInfo talismanInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_talismanInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_talismaninfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCCreateTalismanResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCCreateTalismanResult)
  return false;
#undef DO_
}

void GCCreateTalismanResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCCreateTalismanResult)
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .TalismanInfo talismanInfo = 2;
  if (has_talismaninfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->talismaninfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCCreateTalismanResult)
}

::google::protobuf::uint8* GCCreateTalismanResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCCreateTalismanResult)
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .TalismanInfo talismanInfo = 2;
  if (has_talismaninfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->talismaninfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCCreateTalismanResult)
  return target;
}

int GCCreateTalismanResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .TalismanInfo talismanInfo = 2;
    if (has_talismaninfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->talismaninfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCCreateTalismanResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCCreateTalismanResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCCreateTalismanResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCCreateTalismanResult::MergeFrom(const GCCreateTalismanResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_talismaninfo()) {
      mutable_talismaninfo()->::TalismanInfo::MergeFrom(from.talismaninfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCCreateTalismanResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCCreateTalismanResult::CopyFrom(const GCCreateTalismanResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCCreateTalismanResult::IsInitialized() const {

  return true;
}

void GCCreateTalismanResult::Swap(GCCreateTalismanResult* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(talismaninfo_, other->talismaninfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCCreateTalismanResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCCreateTalismanResult_descriptor_;
  metadata.reflection = GCCreateTalismanResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CGResolveTalisman::kTalismanIDListFieldNumber;
#endif  // !_MSC_VER

CGResolveTalisman::CGResolveTalisman()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGResolveTalisman)
}

void CGResolveTalisman::InitAsDefaultInstance() {
}

CGResolveTalisman::CGResolveTalisman(const CGResolveTalisman& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGResolveTalisman)
}

void CGResolveTalisman::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGResolveTalisman::~CGResolveTalisman() {
  // @@protoc_insertion_point(destructor:CGResolveTalisman)
  SharedDtor();
}

void CGResolveTalisman::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGResolveTalisman::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGResolveTalisman::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGResolveTalisman_descriptor_;
}

const CGResolveTalisman& CGResolveTalisman::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TalismanMessage_2eproto();
  return *default_instance_;
}

CGResolveTalisman* CGResolveTalisman::default_instance_ = NULL;

CGResolveTalisman* CGResolveTalisman::New() const {
  return new CGResolveTalisman;
}

void CGResolveTalisman::Clear() {
  talismanidlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CGResolveTalisman::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGResolveTalisman)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 talismanIDList = 1;
      case 1: {
        if (tag == 8) {
         parse_talismanIDList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_talismanidlist())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_talismanidlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_talismanIDList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGResolveTalisman)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGResolveTalisman)
  return false;
#undef DO_
}

void CGResolveTalisman::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGResolveTalisman)
  // repeated int64 talismanIDList = 1;
  for (int i = 0; i < this->talismanidlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->talismanidlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGResolveTalisman)
}

::google::protobuf::uint8* CGResolveTalisman::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGResolveTalisman)
  // repeated int64 talismanIDList = 1;
  for (int i = 0; i < this->talismanidlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->talismanidlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGResolveTalisman)
  return target;
}

int CGResolveTalisman::ByteSize() const {
  int total_size = 0;

  // repeated int64 talismanIDList = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->talismanidlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->talismanidlist(i));
    }
    total_size += 1 * this->talismanidlist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGResolveTalisman::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CGResolveTalisman* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CGResolveTalisman*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGResolveTalisman::MergeFrom(const CGResolveTalisman& from) {
  GOOGLE_CHECK_NE(&from, this);
  talismanidlist_.MergeFrom(from.talismanidlist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CGResolveTalisman::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGResolveTalisman::CopyFrom(const CGResolveTalisman& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGResolveTalisman::IsInitialized() const {

  return true;
}

void CGResolveTalisman::Swap(CGResolveTalisman* other) {
  if (other != this) {
    talismanidlist_.Swap(&other->talismanidlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CGResolveTalisman::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGResolveTalisman_descriptor_;
  metadata.reflection = CGResolveTalisman_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GCResolveTalismanResult::kResultFieldNumber;
const int GCResolveTalismanResult::kTalismanIDListFieldNumber;
#endif  // !_MSC_VER

GCResolveTalismanResult::GCResolveTalismanResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GCResolveTalismanResult)
}

void GCResolveTalismanResult::InitAsDefaultInstance() {
}

GCResolveTalismanResult::GCResolveTalismanResult(const GCResolveTalismanResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GCResolveTalismanResult)
}

void GCResolveTalismanResult::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCResolveTalismanResult::~GCResolveTalismanResult() {
  // @@protoc_insertion_point(destructor:GCResolveTalismanResult)
  SharedDtor();
}

void GCResolveTalismanResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GCResolveTalismanResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCResolveTalismanResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCResolveTalismanResult_descriptor_;
}

const GCResolveTalismanResult& GCResolveTalismanResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TalismanMessage_2eproto();
  return *default_instance_;
}

GCResolveTalismanResult* GCResolveTalismanResult::default_instance_ = NULL;

GCResolveTalismanResult* GCResolveTalismanResult::New() const {
  return new GCResolveTalismanResult;
}

void GCResolveTalismanResult::Clear() {
  result_ = 0;
  talismanidlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GCResolveTalismanResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GCResolveTalismanResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_talismanIDList;
        break;
      }

      // repeated int64 talismanIDList = 2;
      case 2: {
        if (tag == 16) {
         parse_talismanIDList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_talismanidlist())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_talismanidlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_talismanIDList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GCResolveTalismanResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GCResolveTalismanResult)
  return false;
#undef DO_
}

void GCResolveTalismanResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GCResolveTalismanResult)
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated int64 talismanIDList = 2;
  for (int i = 0; i < this->talismanidlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->talismanidlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GCResolveTalismanResult)
}

::google::protobuf::uint8* GCResolveTalismanResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCResolveTalismanResult)
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated int64 talismanIDList = 2;
  for (int i = 0; i < this->talismanidlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->talismanidlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCResolveTalismanResult)
  return target;
}

int GCResolveTalismanResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated int64 talismanIDList = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->talismanidlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->talismanidlist(i));
    }
    total_size += 1 * this->talismanidlist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCResolveTalismanResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GCResolveTalismanResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GCResolveTalismanResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCResolveTalismanResult::MergeFrom(const GCResolveTalismanResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  talismanidlist_.MergeFrom(from.talismanidlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GCResolveTalismanResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCResolveTalismanResult::CopyFrom(const GCResolveTalismanResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCResolveTalismanResult::IsInitialized() const {

  return true;
}

void GCResolveTalismanResult::Swap(GCResolveTalismanResult* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    talismanidlist_.Swap(&other->talismanidlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GCResolveTalismanResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCResolveTalismanResult_descriptor_;
  metadata.reflection = GCResolveTalismanResult_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
