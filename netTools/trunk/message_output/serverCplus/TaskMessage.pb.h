// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TaskMessage.proto

#ifndef PROTOBUF_TaskMessage_2eproto__INCLUDED
#define PROTOBUF_TaskMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "TowerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TaskMessage_2eproto();
void protobuf_AssignDesc_TaskMessage_2eproto();
void protobuf_ShutdownFile_TaskMessage_2eproto();

class TaskInfor;
class TaskStatus;
class CGDeliverTask;
class CGFinishTask;
class GCTaskListBack;
class GCTaskInforBack;
class CGReciveTask;
class CGCatchComplate;
class CGCatchCreatMonster;
class CGCatchGiveUpTask;
class CGOpenDialog;
class GCMenverOpenDialog;
class GCSendTaskOver;
class GCSendMainTasks;
class GCSendTaskReward;
class GCCreatMonsterBack;
class GCSendTaskMonster;
class CGCatchCreatProp;

// ===================================================================

class TaskInfor : public ::google::protobuf::Message {
 public:
  TaskInfor();
  virtual ~TaskInfor();

  TaskInfor(const TaskInfor& from);

  inline TaskInfor& operator=(const TaskInfor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskInfor& default_instance();

  void Swap(TaskInfor* other);

  // implements Message ----------------------------------------------

  TaskInfor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskInfor& from);
  void MergeFrom(const TaskInfor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 stage = 4;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 4;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // optional int32 total = 5;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 5;
  inline ::google::protobuf::int32 total() const;
  inline void set_total(::google::protobuf::int32 value);

  // optional int32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TaskInfor)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_total();
  inline void clear_has_total();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 stage_;
  ::google::protobuf::int32 total_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static TaskInfor* default_instance_;
};
// -------------------------------------------------------------------

class TaskStatus : public ::google::protobuf::Message {
 public:
  TaskStatus();
  virtual ~TaskStatus();

  TaskStatus(const TaskStatus& from);

  inline TaskStatus& operator=(const TaskStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskStatus& default_instance();

  void Swap(TaskStatus* other);

  // implements Message ----------------------------------------------

  TaskStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskStatus& from);
  void MergeFrom(const TaskStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 stage = 3;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 3;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // optional int32 total = 4;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 4;
  inline ::google::protobuf::int32 total() const;
  inline void set_total(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TaskStatus)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_total();
  inline void clear_has_total();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 stage_;
  ::google::protobuf::int32 total_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static TaskStatus* default_instance_;
};
// -------------------------------------------------------------------

class CGDeliverTask : public ::google::protobuf::Message {
 public:
  CGDeliverTask();
  virtual ~CGDeliverTask();

  CGDeliverTask(const CGDeliverTask& from);

  inline CGDeliverTask& operator=(const CGDeliverTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGDeliverTask& default_instance();

  void Swap(CGDeliverTask* other);

  // implements Message ----------------------------------------------

  CGDeliverTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGDeliverTask& from);
  void MergeFrom(const CGDeliverTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // optional int32 isDouble = 2;
  inline bool has_isdouble() const;
  inline void clear_isdouble();
  static const int kIsDoubleFieldNumber = 2;
  inline ::google::protobuf::int32 isdouble() const;
  inline void set_isdouble(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGDeliverTask)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_isdouble();
  inline void clear_has_isdouble();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 isdouble_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static CGDeliverTask* default_instance_;
};
// -------------------------------------------------------------------

class CGFinishTask : public ::google::protobuf::Message {
 public:
  CGFinishTask();
  virtual ~CGFinishTask();

  CGFinishTask(const CGFinishTask& from);

  inline CGFinishTask& operator=(const CGFinishTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGFinishTask& default_instance();

  void Swap(CGFinishTask* other);

  // implements Message ----------------------------------------------

  CGFinishTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGFinishTask& from);
  void MergeFrom(const CGFinishTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGFinishTask)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static CGFinishTask* default_instance_;
};
// -------------------------------------------------------------------

class GCTaskListBack : public ::google::protobuf::Message {
 public:
  GCTaskListBack();
  virtual ~GCTaskListBack();

  GCTaskListBack(const GCTaskListBack& from);

  inline GCTaskListBack& operator=(const GCTaskListBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCTaskListBack& default_instance();

  void Swap(GCTaskListBack* other);

  // implements Message ----------------------------------------------

  GCTaskListBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCTaskListBack& from);
  void MergeFrom(const GCTaskListBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TaskInfor taskInfors = 1;
  inline int taskinfors_size() const;
  inline void clear_taskinfors();
  static const int kTaskInforsFieldNumber = 1;
  inline const ::TaskInfor& taskinfors(int index) const;
  inline ::TaskInfor* mutable_taskinfors(int index);
  inline ::TaskInfor* add_taskinfors();
  inline const ::google::protobuf::RepeatedPtrField< ::TaskInfor >&
      taskinfors() const;
  inline ::google::protobuf::RepeatedPtrField< ::TaskInfor >*
      mutable_taskinfors();

  // @@protoc_insertion_point(class_scope:GCTaskListBack)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TaskInfor > taskinfors_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static GCTaskListBack* default_instance_;
};
// -------------------------------------------------------------------

class GCTaskInforBack : public ::google::protobuf::Message {
 public:
  GCTaskInforBack();
  virtual ~GCTaskInforBack();

  GCTaskInforBack(const GCTaskInforBack& from);

  inline GCTaskInforBack& operator=(const GCTaskInforBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCTaskInforBack& default_instance();

  void Swap(GCTaskInforBack* other);

  // implements Message ----------------------------------------------

  GCTaskInforBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCTaskInforBack& from);
  void MergeFrom(const GCTaskInforBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TaskInfor taskInfors = 1;
  inline bool has_taskinfors() const;
  inline void clear_taskinfors();
  static const int kTaskInforsFieldNumber = 1;
  inline const ::TaskInfor& taskinfors() const;
  inline ::TaskInfor* mutable_taskinfors();
  inline ::TaskInfor* release_taskinfors();
  inline void set_allocated_taskinfors(::TaskInfor* taskinfors);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 oldTaskID = 3;
  inline bool has_oldtaskid() const;
  inline void clear_oldtaskid();
  static const int kOldTaskIDFieldNumber = 3;
  inline ::google::protobuf::int32 oldtaskid() const;
  inline void set_oldtaskid(::google::protobuf::int32 value);

  // repeated .TaskInfor stageInfo = 4;
  inline int stageinfo_size() const;
  inline void clear_stageinfo();
  static const int kStageInfoFieldNumber = 4;
  inline const ::TaskInfor& stageinfo(int index) const;
  inline ::TaskInfor* mutable_stageinfo(int index);
  inline ::TaskInfor* add_stageinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::TaskInfor >&
      stageinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::TaskInfor >*
      mutable_stageinfo();

  // repeated .TaskStatus taskStatus = 5;
  inline int taskstatus_size() const;
  inline void clear_taskstatus();
  static const int kTaskStatusFieldNumber = 5;
  inline const ::TaskStatus& taskstatus(int index) const;
  inline ::TaskStatus* mutable_taskstatus(int index);
  inline ::TaskStatus* add_taskstatus();
  inline const ::google::protobuf::RepeatedPtrField< ::TaskStatus >&
      taskstatus() const;
  inline ::google::protobuf::RepeatedPtrField< ::TaskStatus >*
      mutable_taskstatus();

  // @@protoc_insertion_point(class_scope:GCTaskInforBack)
 private:
  inline void set_has_taskinfors();
  inline void clear_has_taskinfors();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_oldtaskid();
  inline void clear_has_oldtaskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TaskInfor* taskinfors_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 oldtaskid_;
  ::google::protobuf::RepeatedPtrField< ::TaskInfor > stageinfo_;
  ::google::protobuf::RepeatedPtrField< ::TaskStatus > taskstatus_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static GCTaskInforBack* default_instance_;
};
// -------------------------------------------------------------------

class CGReciveTask : public ::google::protobuf::Message {
 public:
  CGReciveTask();
  virtual ~CGReciveTask();

  CGReciveTask(const CGReciveTask& from);

  inline CGReciveTask& operator=(const CGReciveTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGReciveTask& default_instance();

  void Swap(CGReciveTask* other);

  // implements Message ----------------------------------------------

  CGReciveTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGReciveTask& from);
  void MergeFrom(const CGReciveTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 taskID = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 2;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGReciveTask)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 taskid_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static CGReciveTask* default_instance_;
};
// -------------------------------------------------------------------

class CGCatchComplate : public ::google::protobuf::Message {
 public:
  CGCatchComplate();
  virtual ~CGCatchComplate();

  CGCatchComplate(const CGCatchComplate& from);

  inline CGCatchComplate& operator=(const CGCatchComplate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCatchComplate& default_instance();

  void Swap(CGCatchComplate* other);

  // implements Message ----------------------------------------------

  CGCatchComplate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCatchComplate& from);
  void MergeFrom(const CGCatchComplate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // optional int32 stage = 2;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 2;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGCatchComplate)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_stage();
  inline void clear_has_stage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 stage_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static CGCatchComplate* default_instance_;
};
// -------------------------------------------------------------------

class CGCatchCreatMonster : public ::google::protobuf::Message {
 public:
  CGCatchCreatMonster();
  virtual ~CGCatchCreatMonster();

  CGCatchCreatMonster(const CGCatchCreatMonster& from);

  inline CGCatchCreatMonster& operator=(const CGCatchCreatMonster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCatchCreatMonster& default_instance();

  void Swap(CGCatchCreatMonster* other);

  // implements Message ----------------------------------------------

  CGCatchCreatMonster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCatchCreatMonster& from);
  void MergeFrom(const CGCatchCreatMonster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGCatchCreatMonster)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static CGCatchCreatMonster* default_instance_;
};
// -------------------------------------------------------------------

class CGCatchGiveUpTask : public ::google::protobuf::Message {
 public:
  CGCatchGiveUpTask();
  virtual ~CGCatchGiveUpTask();

  CGCatchGiveUpTask(const CGCatchGiveUpTask& from);

  inline CGCatchGiveUpTask& operator=(const CGCatchGiveUpTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCatchGiveUpTask& default_instance();

  void Swap(CGCatchGiveUpTask* other);

  // implements Message ----------------------------------------------

  CGCatchGiveUpTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCatchGiveUpTask& from);
  void MergeFrom(const CGCatchGiveUpTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGCatchGiveUpTask)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static CGCatchGiveUpTask* default_instance_;
};
// -------------------------------------------------------------------

class CGOpenDialog : public ::google::protobuf::Message {
 public:
  CGOpenDialog();
  virtual ~CGOpenDialog();

  CGOpenDialog(const CGOpenDialog& from);

  inline CGOpenDialog& operator=(const CGOpenDialog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGOpenDialog& default_instance();

  void Swap(CGOpenDialog* other);

  // implements Message ----------------------------------------------

  CGOpenDialog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGOpenDialog& from);
  void MergeFrom(const CGOpenDialog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGOpenDialog)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static CGOpenDialog* default_instance_;
};
// -------------------------------------------------------------------

class GCMenverOpenDialog : public ::google::protobuf::Message {
 public:
  GCMenverOpenDialog();
  virtual ~GCMenverOpenDialog();

  GCMenverOpenDialog(const GCMenverOpenDialog& from);

  inline GCMenverOpenDialog& operator=(const GCMenverOpenDialog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCMenverOpenDialog& default_instance();

  void Swap(GCMenverOpenDialog* other);

  // implements Message ----------------------------------------------

  GCMenverOpenDialog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCMenverOpenDialog& from);
  void MergeFrom(const GCMenverOpenDialog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCMenverOpenDialog)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static GCMenverOpenDialog* default_instance_;
};
// -------------------------------------------------------------------

class GCSendTaskOver : public ::google::protobuf::Message {
 public:
  GCSendTaskOver();
  virtual ~GCSendTaskOver();

  GCSendTaskOver(const GCSendTaskOver& from);

  inline GCSendTaskOver& operator=(const GCSendTaskOver& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendTaskOver& default_instance();

  void Swap(GCSendTaskOver* other);

  // implements Message ----------------------------------------------

  GCSendTaskOver* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendTaskOver& from);
  void MergeFrom(const GCSendTaskOver& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCSendTaskOver)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendTaskOver* default_instance_;
};
// -------------------------------------------------------------------

class GCSendMainTasks : public ::google::protobuf::Message {
 public:
  GCSendMainTasks();
  virtual ~GCSendMainTasks();

  GCSendMainTasks(const GCSendMainTasks& from);

  inline GCSendMainTasks& operator=(const GCSendMainTasks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendMainTasks& default_instance();

  void Swap(GCSendMainTasks* other);

  // implements Message ----------------------------------------------

  GCSendMainTasks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendMainTasks& from);
  void MergeFrom(const GCSendMainTasks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated int32 taskIds = 2;
  inline int taskids_size() const;
  inline void clear_taskids();
  static const int kTaskIdsFieldNumber = 2;
  inline ::google::protobuf::int32 taskids(int index) const;
  inline void set_taskids(int index, ::google::protobuf::int32 value);
  inline void add_taskids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      taskids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_taskids();

  // @@protoc_insertion_point(class_scope:GCSendMainTasks)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > taskids_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendMainTasks* default_instance_;
};
// -------------------------------------------------------------------

class GCSendTaskReward : public ::google::protobuf::Message {
 public:
  GCSendTaskReward();
  virtual ~GCSendTaskReward();

  GCSendTaskReward(const GCSendTaskReward& from);

  inline GCSendTaskReward& operator=(const GCSendTaskReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendTaskReward& default_instance();

  void Swap(GCSendTaskReward* other);

  // implements Message ----------------------------------------------

  GCSendTaskReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendTaskReward& from);
  void MergeFrom(const GCSendTaskReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RewardItem rewardItems = 1;
  inline int rewarditems_size() const;
  inline void clear_rewarditems();
  static const int kRewardItemsFieldNumber = 1;
  inline const ::RewardItem& rewarditems(int index) const;
  inline ::RewardItem* mutable_rewarditems(int index);
  inline ::RewardItem* add_rewarditems();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardItem >&
      rewarditems() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardItem >*
      mutable_rewarditems();

  // repeated .RewardItem attrRewards = 2;
  inline int attrrewards_size() const;
  inline void clear_attrrewards();
  static const int kAttrRewardsFieldNumber = 2;
  inline const ::RewardItem& attrrewards(int index) const;
  inline ::RewardItem* mutable_attrrewards(int index);
  inline ::RewardItem* add_attrrewards();
  inline const ::google::protobuf::RepeatedPtrField< ::RewardItem >&
      attrrewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::RewardItem >*
      mutable_attrrewards();

  // @@protoc_insertion_point(class_scope:GCSendTaskReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RewardItem > rewarditems_;
  ::google::protobuf::RepeatedPtrField< ::RewardItem > attrrewards_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendTaskReward* default_instance_;
};
// -------------------------------------------------------------------

class GCCreatMonsterBack : public ::google::protobuf::Message {
 public:
  GCCreatMonsterBack();
  virtual ~GCCreatMonsterBack();

  GCCreatMonsterBack(const GCCreatMonsterBack& from);

  inline GCCreatMonsterBack& operator=(const GCCreatMonsterBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCCreatMonsterBack& default_instance();

  void Swap(GCCreatMonsterBack* other);

  // implements Message ----------------------------------------------

  GCCreatMonsterBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCCreatMonsterBack& from);
  void MergeFrom(const GCCreatMonsterBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline ::google::protobuf::int32 success() const;
  inline void set_success(::google::protobuf::int32 value);

  // optional int32 taskID = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 2;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCCreatMonsterBack)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 success_;
  ::google::protobuf::int32 taskid_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static GCCreatMonsterBack* default_instance_;
};
// -------------------------------------------------------------------

class GCSendTaskMonster : public ::google::protobuf::Message {
 public:
  GCSendTaskMonster();
  virtual ~GCSendTaskMonster();

  GCSendTaskMonster(const GCSendTaskMonster& from);

  inline GCSendTaskMonster& operator=(const GCSendTaskMonster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSendTaskMonster& default_instance();

  void Swap(GCSendTaskMonster* other);

  // implements Message ----------------------------------------------

  GCSendTaskMonster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSendTaskMonster& from);
  void MergeFrom(const GCSendTaskMonster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // optional int32 mosnterID = 2;
  inline bool has_mosnterid() const;
  inline void clear_mosnterid();
  static const int kMosnterIDFieldNumber = 2;
  inline ::google::protobuf::int32 mosnterid() const;
  inline void set_mosnterid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCSendTaskMonster)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_mosnterid();
  inline void clear_has_mosnterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 mosnterid_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSendTaskMonster* default_instance_;
};
// -------------------------------------------------------------------

class CGCatchCreatProp : public ::google::protobuf::Message {
 public:
  CGCatchCreatProp();
  virtual ~CGCatchCreatProp();

  CGCatchCreatProp(const CGCatchCreatProp& from);

  inline CGCatchCreatProp& operator=(const CGCatchCreatProp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCatchCreatProp& default_instance();

  void Swap(CGCatchCreatProp* other);

  // implements Message ----------------------------------------------

  CGCatchCreatProp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCatchCreatProp& from);
  void MergeFrom(const CGCatchCreatProp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGCatchCreatProp)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  friend void  protobuf_AddDesc_TaskMessage_2eproto();
  friend void protobuf_AssignDesc_TaskMessage_2eproto();
  friend void protobuf_ShutdownFile_TaskMessage_2eproto();

  void InitAsDefaultInstance();
  static CGCatchCreatProp* default_instance_;
};
// ===================================================================


// ===================================================================

// TaskInfor

// optional int32 taskID = 1;
inline bool TaskInfor::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskInfor::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskInfor::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskInfor::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 TaskInfor::taskid() const {
  // @@protoc_insertion_point(field_get:TaskInfor.taskID)
  return taskid_;
}
inline void TaskInfor::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:TaskInfor.taskID)
}

// optional int32 status = 2;
inline bool TaskInfor::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskInfor::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskInfor::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskInfor::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 TaskInfor::status() const {
  // @@protoc_insertion_point(field_get:TaskInfor.status)
  return status_;
}
inline void TaskInfor::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:TaskInfor.status)
}

// optional int32 num = 3;
inline bool TaskInfor::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskInfor::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskInfor::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskInfor::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 TaskInfor::num() const {
  // @@protoc_insertion_point(field_get:TaskInfor.num)
  return num_;
}
inline void TaskInfor::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:TaskInfor.num)
}

// optional int32 stage = 4;
inline bool TaskInfor::has_stage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TaskInfor::set_has_stage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TaskInfor::clear_has_stage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TaskInfor::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 TaskInfor::stage() const {
  // @@protoc_insertion_point(field_get:TaskInfor.stage)
  return stage_;
}
inline void TaskInfor::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
  // @@protoc_insertion_point(field_set:TaskInfor.stage)
}

// optional int32 total = 5;
inline bool TaskInfor::has_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TaskInfor::set_has_total() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TaskInfor::clear_has_total() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TaskInfor::clear_total() {
  total_ = 0;
  clear_has_total();
}
inline ::google::protobuf::int32 TaskInfor::total() const {
  // @@protoc_insertion_point(field_get:TaskInfor.total)
  return total_;
}
inline void TaskInfor::set_total(::google::protobuf::int32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:TaskInfor.total)
}

// optional int32 type = 6;
inline bool TaskInfor::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TaskInfor::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TaskInfor::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TaskInfor::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 TaskInfor::type() const {
  // @@protoc_insertion_point(field_get:TaskInfor.type)
  return type_;
}
inline void TaskInfor::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TaskInfor.type)
}

// optional int32 level = 7;
inline bool TaskInfor::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TaskInfor::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TaskInfor::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TaskInfor::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 TaskInfor::level() const {
  // @@protoc_insertion_point(field_get:TaskInfor.level)
  return level_;
}
inline void TaskInfor::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TaskInfor.level)
}

// -------------------------------------------------------------------

// TaskStatus

// optional int32 type = 1;
inline bool TaskStatus::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskStatus::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskStatus::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskStatus::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 TaskStatus::type() const {
  // @@protoc_insertion_point(field_get:TaskStatus.type)
  return type_;
}
inline void TaskStatus::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TaskStatus.type)
}

// optional int32 status = 2;
inline bool TaskStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 TaskStatus::status() const {
  // @@protoc_insertion_point(field_get:TaskStatus.status)
  return status_;
}
inline void TaskStatus::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:TaskStatus.status)
}

// optional int32 stage = 3;
inline bool TaskStatus::has_stage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskStatus::set_has_stage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskStatus::clear_has_stage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskStatus::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 TaskStatus::stage() const {
  // @@protoc_insertion_point(field_get:TaskStatus.stage)
  return stage_;
}
inline void TaskStatus::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
  // @@protoc_insertion_point(field_set:TaskStatus.stage)
}

// optional int32 total = 4;
inline bool TaskStatus::has_total() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TaskStatus::set_has_total() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TaskStatus::clear_has_total() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TaskStatus::clear_total() {
  total_ = 0;
  clear_has_total();
}
inline ::google::protobuf::int32 TaskStatus::total() const {
  // @@protoc_insertion_point(field_get:TaskStatus.total)
  return total_;
}
inline void TaskStatus::set_total(::google::protobuf::int32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:TaskStatus.total)
}

// -------------------------------------------------------------------

// CGDeliverTask

// optional int32 taskID = 1;
inline bool CGDeliverTask::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGDeliverTask::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGDeliverTask::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGDeliverTask::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 CGDeliverTask::taskid() const {
  // @@protoc_insertion_point(field_get:CGDeliverTask.taskID)
  return taskid_;
}
inline void CGDeliverTask::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:CGDeliverTask.taskID)
}

// optional int32 isDouble = 2;
inline bool CGDeliverTask::has_isdouble() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGDeliverTask::set_has_isdouble() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGDeliverTask::clear_has_isdouble() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGDeliverTask::clear_isdouble() {
  isdouble_ = 0;
  clear_has_isdouble();
}
inline ::google::protobuf::int32 CGDeliverTask::isdouble() const {
  // @@protoc_insertion_point(field_get:CGDeliverTask.isDouble)
  return isdouble_;
}
inline void CGDeliverTask::set_isdouble(::google::protobuf::int32 value) {
  set_has_isdouble();
  isdouble_ = value;
  // @@protoc_insertion_point(field_set:CGDeliverTask.isDouble)
}

// -------------------------------------------------------------------

// CGFinishTask

// optional int32 taskID = 1;
inline bool CGFinishTask::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGFinishTask::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGFinishTask::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGFinishTask::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 CGFinishTask::taskid() const {
  // @@protoc_insertion_point(field_get:CGFinishTask.taskID)
  return taskid_;
}
inline void CGFinishTask::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:CGFinishTask.taskID)
}

// -------------------------------------------------------------------

// GCTaskListBack

// repeated .TaskInfor taskInfors = 1;
inline int GCTaskListBack::taskinfors_size() const {
  return taskinfors_.size();
}
inline void GCTaskListBack::clear_taskinfors() {
  taskinfors_.Clear();
}
inline const ::TaskInfor& GCTaskListBack::taskinfors(int index) const {
  // @@protoc_insertion_point(field_get:GCTaskListBack.taskInfors)
  return taskinfors_.Get(index);
}
inline ::TaskInfor* GCTaskListBack::mutable_taskinfors(int index) {
  // @@protoc_insertion_point(field_mutable:GCTaskListBack.taskInfors)
  return taskinfors_.Mutable(index);
}
inline ::TaskInfor* GCTaskListBack::add_taskinfors() {
  // @@protoc_insertion_point(field_add:GCTaskListBack.taskInfors)
  return taskinfors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TaskInfor >&
GCTaskListBack::taskinfors() const {
  // @@protoc_insertion_point(field_list:GCTaskListBack.taskInfors)
  return taskinfors_;
}
inline ::google::protobuf::RepeatedPtrField< ::TaskInfor >*
GCTaskListBack::mutable_taskinfors() {
  // @@protoc_insertion_point(field_mutable_list:GCTaskListBack.taskInfors)
  return &taskinfors_;
}

// -------------------------------------------------------------------

// GCTaskInforBack

// optional .TaskInfor taskInfors = 1;
inline bool GCTaskInforBack::has_taskinfors() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCTaskInforBack::set_has_taskinfors() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCTaskInforBack::clear_has_taskinfors() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCTaskInforBack::clear_taskinfors() {
  if (taskinfors_ != NULL) taskinfors_->::TaskInfor::Clear();
  clear_has_taskinfors();
}
inline const ::TaskInfor& GCTaskInforBack::taskinfors() const {
  // @@protoc_insertion_point(field_get:GCTaskInforBack.taskInfors)
  return taskinfors_ != NULL ? *taskinfors_ : *default_instance_->taskinfors_;
}
inline ::TaskInfor* GCTaskInforBack::mutable_taskinfors() {
  set_has_taskinfors();
  if (taskinfors_ == NULL) taskinfors_ = new ::TaskInfor;
  // @@protoc_insertion_point(field_mutable:GCTaskInforBack.taskInfors)
  return taskinfors_;
}
inline ::TaskInfor* GCTaskInforBack::release_taskinfors() {
  clear_has_taskinfors();
  ::TaskInfor* temp = taskinfors_;
  taskinfors_ = NULL;
  return temp;
}
inline void GCTaskInforBack::set_allocated_taskinfors(::TaskInfor* taskinfors) {
  delete taskinfors_;
  taskinfors_ = taskinfors;
  if (taskinfors) {
    set_has_taskinfors();
  } else {
    clear_has_taskinfors();
  }
  // @@protoc_insertion_point(field_set_allocated:GCTaskInforBack.taskInfors)
}

// optional int32 type = 2;
inline bool GCTaskInforBack::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCTaskInforBack::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCTaskInforBack::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCTaskInforBack::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCTaskInforBack::type() const {
  // @@protoc_insertion_point(field_get:GCTaskInforBack.type)
  return type_;
}
inline void GCTaskInforBack::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCTaskInforBack.type)
}

// optional int32 oldTaskID = 3;
inline bool GCTaskInforBack::has_oldtaskid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCTaskInforBack::set_has_oldtaskid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCTaskInforBack::clear_has_oldtaskid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCTaskInforBack::clear_oldtaskid() {
  oldtaskid_ = 0;
  clear_has_oldtaskid();
}
inline ::google::protobuf::int32 GCTaskInforBack::oldtaskid() const {
  // @@protoc_insertion_point(field_get:GCTaskInforBack.oldTaskID)
  return oldtaskid_;
}
inline void GCTaskInforBack::set_oldtaskid(::google::protobuf::int32 value) {
  set_has_oldtaskid();
  oldtaskid_ = value;
  // @@protoc_insertion_point(field_set:GCTaskInforBack.oldTaskID)
}

// repeated .TaskInfor stageInfo = 4;
inline int GCTaskInforBack::stageinfo_size() const {
  return stageinfo_.size();
}
inline void GCTaskInforBack::clear_stageinfo() {
  stageinfo_.Clear();
}
inline const ::TaskInfor& GCTaskInforBack::stageinfo(int index) const {
  // @@protoc_insertion_point(field_get:GCTaskInforBack.stageInfo)
  return stageinfo_.Get(index);
}
inline ::TaskInfor* GCTaskInforBack::mutable_stageinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GCTaskInforBack.stageInfo)
  return stageinfo_.Mutable(index);
}
inline ::TaskInfor* GCTaskInforBack::add_stageinfo() {
  // @@protoc_insertion_point(field_add:GCTaskInforBack.stageInfo)
  return stageinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TaskInfor >&
GCTaskInforBack::stageinfo() const {
  // @@protoc_insertion_point(field_list:GCTaskInforBack.stageInfo)
  return stageinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::TaskInfor >*
GCTaskInforBack::mutable_stageinfo() {
  // @@protoc_insertion_point(field_mutable_list:GCTaskInforBack.stageInfo)
  return &stageinfo_;
}

// repeated .TaskStatus taskStatus = 5;
inline int GCTaskInforBack::taskstatus_size() const {
  return taskstatus_.size();
}
inline void GCTaskInforBack::clear_taskstatus() {
  taskstatus_.Clear();
}
inline const ::TaskStatus& GCTaskInforBack::taskstatus(int index) const {
  // @@protoc_insertion_point(field_get:GCTaskInforBack.taskStatus)
  return taskstatus_.Get(index);
}
inline ::TaskStatus* GCTaskInforBack::mutable_taskstatus(int index) {
  // @@protoc_insertion_point(field_mutable:GCTaskInforBack.taskStatus)
  return taskstatus_.Mutable(index);
}
inline ::TaskStatus* GCTaskInforBack::add_taskstatus() {
  // @@protoc_insertion_point(field_add:GCTaskInforBack.taskStatus)
  return taskstatus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TaskStatus >&
GCTaskInforBack::taskstatus() const {
  // @@protoc_insertion_point(field_list:GCTaskInforBack.taskStatus)
  return taskstatus_;
}
inline ::google::protobuf::RepeatedPtrField< ::TaskStatus >*
GCTaskInforBack::mutable_taskstatus() {
  // @@protoc_insertion_point(field_mutable_list:GCTaskInforBack.taskStatus)
  return &taskstatus_;
}

// -------------------------------------------------------------------

// CGReciveTask

// optional int32 type = 1;
inline bool CGReciveTask::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGReciveTask::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGReciveTask::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGReciveTask::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGReciveTask::type() const {
  // @@protoc_insertion_point(field_get:CGReciveTask.type)
  return type_;
}
inline void CGReciveTask::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGReciveTask.type)
}

// optional int32 taskID = 2;
inline bool CGReciveTask::has_taskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGReciveTask::set_has_taskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGReciveTask::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGReciveTask::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 CGReciveTask::taskid() const {
  // @@protoc_insertion_point(field_get:CGReciveTask.taskID)
  return taskid_;
}
inline void CGReciveTask::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:CGReciveTask.taskID)
}

// -------------------------------------------------------------------

// CGCatchComplate

// optional int32 taskID = 1;
inline bool CGCatchComplate::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCatchComplate::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCatchComplate::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCatchComplate::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 CGCatchComplate::taskid() const {
  // @@protoc_insertion_point(field_get:CGCatchComplate.taskID)
  return taskid_;
}
inline void CGCatchComplate::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:CGCatchComplate.taskID)
}

// optional int32 stage = 2;
inline bool CGCatchComplate::has_stage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCatchComplate::set_has_stage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCatchComplate::clear_has_stage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCatchComplate::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 CGCatchComplate::stage() const {
  // @@protoc_insertion_point(field_get:CGCatchComplate.stage)
  return stage_;
}
inline void CGCatchComplate::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
  // @@protoc_insertion_point(field_set:CGCatchComplate.stage)
}

// -------------------------------------------------------------------

// CGCatchCreatMonster

// optional int32 taskID = 1;
inline bool CGCatchCreatMonster::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCatchCreatMonster::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCatchCreatMonster::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCatchCreatMonster::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 CGCatchCreatMonster::taskid() const {
  // @@protoc_insertion_point(field_get:CGCatchCreatMonster.taskID)
  return taskid_;
}
inline void CGCatchCreatMonster::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:CGCatchCreatMonster.taskID)
}

// -------------------------------------------------------------------

// CGCatchGiveUpTask

// optional int32 taskID = 1;
inline bool CGCatchGiveUpTask::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCatchGiveUpTask::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCatchGiveUpTask::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCatchGiveUpTask::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 CGCatchGiveUpTask::taskid() const {
  // @@protoc_insertion_point(field_get:CGCatchGiveUpTask.taskID)
  return taskid_;
}
inline void CGCatchGiveUpTask::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:CGCatchGiveUpTask.taskID)
}

// -------------------------------------------------------------------

// CGOpenDialog

// optional int32 taskID = 1;
inline bool CGOpenDialog::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGOpenDialog::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGOpenDialog::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGOpenDialog::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 CGOpenDialog::taskid() const {
  // @@protoc_insertion_point(field_get:CGOpenDialog.taskID)
  return taskid_;
}
inline void CGOpenDialog::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:CGOpenDialog.taskID)
}

// -------------------------------------------------------------------

// GCMenverOpenDialog

// optional int32 taskID = 1;
inline bool GCMenverOpenDialog::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCMenverOpenDialog::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCMenverOpenDialog::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCMenverOpenDialog::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 GCMenverOpenDialog::taskid() const {
  // @@protoc_insertion_point(field_get:GCMenverOpenDialog.taskID)
  return taskid_;
}
inline void GCMenverOpenDialog::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:GCMenverOpenDialog.taskID)
}

// -------------------------------------------------------------------

// GCSendTaskOver

// optional int32 type = 1;
inline bool GCSendTaskOver::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSendTaskOver::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSendTaskOver::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSendTaskOver::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCSendTaskOver::type() const {
  // @@protoc_insertion_point(field_get:GCSendTaskOver.type)
  return type_;
}
inline void GCSendTaskOver::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCSendTaskOver.type)
}

// -------------------------------------------------------------------

// GCSendMainTasks

// optional int32 type = 1;
inline bool GCSendMainTasks::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSendMainTasks::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSendMainTasks::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSendMainTasks::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCSendMainTasks::type() const {
  // @@protoc_insertion_point(field_get:GCSendMainTasks.type)
  return type_;
}
inline void GCSendMainTasks::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCSendMainTasks.type)
}

// repeated int32 taskIds = 2;
inline int GCSendMainTasks::taskids_size() const {
  return taskids_.size();
}
inline void GCSendMainTasks::clear_taskids() {
  taskids_.Clear();
}
inline ::google::protobuf::int32 GCSendMainTasks::taskids(int index) const {
  // @@protoc_insertion_point(field_get:GCSendMainTasks.taskIds)
  return taskids_.Get(index);
}
inline void GCSendMainTasks::set_taskids(int index, ::google::protobuf::int32 value) {
  taskids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCSendMainTasks.taskIds)
}
inline void GCSendMainTasks::add_taskids(::google::protobuf::int32 value) {
  taskids_.Add(value);
  // @@protoc_insertion_point(field_add:GCSendMainTasks.taskIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCSendMainTasks::taskids() const {
  // @@protoc_insertion_point(field_list:GCSendMainTasks.taskIds)
  return taskids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCSendMainTasks::mutable_taskids() {
  // @@protoc_insertion_point(field_mutable_list:GCSendMainTasks.taskIds)
  return &taskids_;
}

// -------------------------------------------------------------------

// GCSendTaskReward

// repeated .RewardItem rewardItems = 1;
inline int GCSendTaskReward::rewarditems_size() const {
  return rewarditems_.size();
}
inline void GCSendTaskReward::clear_rewarditems() {
  rewarditems_.Clear();
}
inline const ::RewardItem& GCSendTaskReward::rewarditems(int index) const {
  // @@protoc_insertion_point(field_get:GCSendTaskReward.rewardItems)
  return rewarditems_.Get(index);
}
inline ::RewardItem* GCSendTaskReward::mutable_rewarditems(int index) {
  // @@protoc_insertion_point(field_mutable:GCSendTaskReward.rewardItems)
  return rewarditems_.Mutable(index);
}
inline ::RewardItem* GCSendTaskReward::add_rewarditems() {
  // @@protoc_insertion_point(field_add:GCSendTaskReward.rewardItems)
  return rewarditems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardItem >&
GCSendTaskReward::rewarditems() const {
  // @@protoc_insertion_point(field_list:GCSendTaskReward.rewardItems)
  return rewarditems_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardItem >*
GCSendTaskReward::mutable_rewarditems() {
  // @@protoc_insertion_point(field_mutable_list:GCSendTaskReward.rewardItems)
  return &rewarditems_;
}

// repeated .RewardItem attrRewards = 2;
inline int GCSendTaskReward::attrrewards_size() const {
  return attrrewards_.size();
}
inline void GCSendTaskReward::clear_attrrewards() {
  attrrewards_.Clear();
}
inline const ::RewardItem& GCSendTaskReward::attrrewards(int index) const {
  // @@protoc_insertion_point(field_get:GCSendTaskReward.attrRewards)
  return attrrewards_.Get(index);
}
inline ::RewardItem* GCSendTaskReward::mutable_attrrewards(int index) {
  // @@protoc_insertion_point(field_mutable:GCSendTaskReward.attrRewards)
  return attrrewards_.Mutable(index);
}
inline ::RewardItem* GCSendTaskReward::add_attrrewards() {
  // @@protoc_insertion_point(field_add:GCSendTaskReward.attrRewards)
  return attrrewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RewardItem >&
GCSendTaskReward::attrrewards() const {
  // @@protoc_insertion_point(field_list:GCSendTaskReward.attrRewards)
  return attrrewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::RewardItem >*
GCSendTaskReward::mutable_attrrewards() {
  // @@protoc_insertion_point(field_mutable_list:GCSendTaskReward.attrRewards)
  return &attrrewards_;
}

// -------------------------------------------------------------------

// GCCreatMonsterBack

// optional int32 success = 1;
inline bool GCCreatMonsterBack::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCCreatMonsterBack::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCCreatMonsterBack::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCCreatMonsterBack::clear_success() {
  success_ = 0;
  clear_has_success();
}
inline ::google::protobuf::int32 GCCreatMonsterBack::success() const {
  // @@protoc_insertion_point(field_get:GCCreatMonsterBack.success)
  return success_;
}
inline void GCCreatMonsterBack::set_success(::google::protobuf::int32 value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:GCCreatMonsterBack.success)
}

// optional int32 taskID = 2;
inline bool GCCreatMonsterBack::has_taskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCCreatMonsterBack::set_has_taskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCCreatMonsterBack::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCCreatMonsterBack::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 GCCreatMonsterBack::taskid() const {
  // @@protoc_insertion_point(field_get:GCCreatMonsterBack.taskID)
  return taskid_;
}
inline void GCCreatMonsterBack::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:GCCreatMonsterBack.taskID)
}

// -------------------------------------------------------------------

// GCSendTaskMonster

// optional int32 taskID = 1;
inline bool GCSendTaskMonster::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSendTaskMonster::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSendTaskMonster::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSendTaskMonster::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 GCSendTaskMonster::taskid() const {
  // @@protoc_insertion_point(field_get:GCSendTaskMonster.taskID)
  return taskid_;
}
inline void GCSendTaskMonster::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:GCSendTaskMonster.taskID)
}

// optional int32 mosnterID = 2;
inline bool GCSendTaskMonster::has_mosnterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSendTaskMonster::set_has_mosnterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSendTaskMonster::clear_has_mosnterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSendTaskMonster::clear_mosnterid() {
  mosnterid_ = 0;
  clear_has_mosnterid();
}
inline ::google::protobuf::int32 GCSendTaskMonster::mosnterid() const {
  // @@protoc_insertion_point(field_get:GCSendTaskMonster.mosnterID)
  return mosnterid_;
}
inline void GCSendTaskMonster::set_mosnterid(::google::protobuf::int32 value) {
  set_has_mosnterid();
  mosnterid_ = value;
  // @@protoc_insertion_point(field_set:GCSendTaskMonster.mosnterID)
}

// -------------------------------------------------------------------

// CGCatchCreatProp

// optional int32 taskID = 1;
inline bool CGCatchCreatProp::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCatchCreatProp::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCatchCreatProp::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCatchCreatProp::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 CGCatchCreatProp::taskid() const {
  // @@protoc_insertion_point(field_get:CGCatchCreatProp.taskID)
  return taskid_;
}
inline void CGCatchCreatProp::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:CGCatchCreatProp.taskID)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TaskMessage_2eproto__INCLUDED
