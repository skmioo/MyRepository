// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TreasureEquipMessage.proto

#ifndef PROTOBUF_TreasureEquipMessage_2eproto__INCLUDED
#define PROTOBUF_TreasureEquipMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TreasureEquipMessage_2eproto();
void protobuf_AssignDesc_TreasureEquipMessage_2eproto();
void protobuf_ShutdownFile_TreasureEquipMessage_2eproto();

class VocabularyInfo;
class TreasureEquipData;
class GCAllOnTreasureEquips;
class CGOnOrOffTreasureEquip;
class GCOnOrOffTreasureEquip;
class CGRandomTreasureEquip;
class GCRandomTreasureEquip;
class CGSaveTreasureEquip;
class GCSaveTreasureEquip;

// ===================================================================

class VocabularyInfo : public ::google::protobuf::Message {
 public:
  VocabularyInfo();
  virtual ~VocabularyInfo();

  VocabularyInfo(const VocabularyInfo& from);

  inline VocabularyInfo& operator=(const VocabularyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VocabularyInfo& default_instance();

  void Swap(VocabularyInfo* other);

  // implements Message ----------------------------------------------

  VocabularyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VocabularyInfo& from);
  void MergeFrom(const VocabularyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  inline ::google::protobuf::int32 tid() const;
  inline void set_tid(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:VocabularyInfo)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 type_;
  ::std::string* value_;
  friend void  protobuf_AddDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_AssignDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_ShutdownFile_TreasureEquipMessage_2eproto();

  void InitAsDefaultInstance();
  static VocabularyInfo* default_instance_;
};
// -------------------------------------------------------------------

class TreasureEquipData : public ::google::protobuf::Message {
 public:
  TreasureEquipData();
  virtual ~TreasureEquipData();

  TreasureEquipData(const TreasureEquipData& from);

  inline TreasureEquipData& operator=(const TreasureEquipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureEquipData& default_instance();

  void Swap(TreasureEquipData* other);

  // implements Message ----------------------------------------------

  TreasureEquipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureEquipData& from);
  void MergeFrom(const TreasureEquipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 sid = 2;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 2;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);

  // optional string baseValue = 3;
  inline bool has_basevalue() const;
  inline void clear_basevalue();
  static const int kBaseValueFieldNumber = 3;
  inline const ::std::string& basevalue() const;
  inline void set_basevalue(const ::std::string& value);
  inline void set_basevalue(const char* value);
  inline void set_basevalue(const char* value, size_t size);
  inline ::std::string* mutable_basevalue();
  inline ::std::string* release_basevalue();
  inline void set_allocated_basevalue(::std::string* basevalue);

  // optional int32 battleNum = 4;
  inline bool has_battlenum() const;
  inline void clear_battlenum();
  static const int kBattleNumFieldNumber = 4;
  inline ::google::protobuf::int32 battlenum() const;
  inline void set_battlenum(::google::protobuf::int32 value);

  // repeated .VocabularyInfo vocalInfos = 5;
  inline int vocalinfos_size() const;
  inline void clear_vocalinfos();
  static const int kVocalInfosFieldNumber = 5;
  inline const ::VocabularyInfo& vocalinfos(int index) const;
  inline ::VocabularyInfo* mutable_vocalinfos(int index);
  inline ::VocabularyInfo* add_vocalinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::VocabularyInfo >&
      vocalinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::VocabularyInfo >*
      mutable_vocalinfos();

  // repeated .VocabularyInfo tempVocalInfos = 6;
  inline int tempvocalinfos_size() const;
  inline void clear_tempvocalinfos();
  static const int kTempVocalInfosFieldNumber = 6;
  inline const ::VocabularyInfo& tempvocalinfos(int index) const;
  inline ::VocabularyInfo* mutable_tempvocalinfos(int index);
  inline ::VocabularyInfo* add_tempvocalinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::VocabularyInfo >&
      tempvocalinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::VocabularyInfo >*
      mutable_tempvocalinfos();

  // optional int32 sorce = 7;
  inline bool has_sorce() const;
  inline void clear_sorce();
  static const int kSorceFieldNumber = 7;
  inline ::google::protobuf::int32 sorce() const;
  inline void set_sorce(::google::protobuf::int32 value);

  // optional int32 pos = 8;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 8;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional int32 bind = 9;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 9;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // optional int32 oldVocalBattleNumber = 10;
  inline bool has_oldvocalbattlenumber() const;
  inline void clear_oldvocalbattlenumber();
  static const int kOldVocalBattleNumberFieldNumber = 10;
  inline ::google::protobuf::int32 oldvocalbattlenumber() const;
  inline void set_oldvocalbattlenumber(::google::protobuf::int32 value);

  // optional int32 newVocalBattleNumber = 11;
  inline bool has_newvocalbattlenumber() const;
  inline void clear_newvocalbattlenumber();
  static const int kNewVocalBattleNumberFieldNumber = 11;
  inline ::google::protobuf::int32 newvocalbattlenumber() const;
  inline void set_newvocalbattlenumber(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TreasureEquipData)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_basevalue();
  inline void clear_has_basevalue();
  inline void set_has_battlenum();
  inline void clear_has_battlenum();
  inline void set_has_sorce();
  inline void clear_has_sorce();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_bind();
  inline void clear_has_bind();
  inline void set_has_oldvocalbattlenumber();
  inline void clear_has_oldvocalbattlenumber();
  inline void set_has_newvocalbattlenumber();
  inline void clear_has_newvocalbattlenumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::std::string* basevalue_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 battlenum_;
  ::google::protobuf::RepeatedPtrField< ::VocabularyInfo > vocalinfos_;
  ::google::protobuf::RepeatedPtrField< ::VocabularyInfo > tempvocalinfos_;
  ::google::protobuf::int32 sorce_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 bind_;
  ::google::protobuf::int32 oldvocalbattlenumber_;
  ::google::protobuf::int32 newvocalbattlenumber_;
  friend void  protobuf_AddDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_AssignDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_ShutdownFile_TreasureEquipMessage_2eproto();

  void InitAsDefaultInstance();
  static TreasureEquipData* default_instance_;
};
// -------------------------------------------------------------------

class GCAllOnTreasureEquips : public ::google::protobuf::Message {
 public:
  GCAllOnTreasureEquips();
  virtual ~GCAllOnTreasureEquips();

  GCAllOnTreasureEquips(const GCAllOnTreasureEquips& from);

  inline GCAllOnTreasureEquips& operator=(const GCAllOnTreasureEquips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCAllOnTreasureEquips& default_instance();

  void Swap(GCAllOnTreasureEquips* other);

  // implements Message ----------------------------------------------

  GCAllOnTreasureEquips* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCAllOnTreasureEquips& from);
  void MergeFrom(const GCAllOnTreasureEquips& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TreasureEquipData equips = 1;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 1;
  inline const ::TreasureEquipData& equips(int index) const;
  inline ::TreasureEquipData* mutable_equips(int index);
  inline ::TreasureEquipData* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::TreasureEquipData >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::TreasureEquipData >*
      mutable_equips();

  // @@protoc_insertion_point(class_scope:GCAllOnTreasureEquips)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TreasureEquipData > equips_;
  friend void  protobuf_AddDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_AssignDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_ShutdownFile_TreasureEquipMessage_2eproto();

  void InitAsDefaultInstance();
  static GCAllOnTreasureEquips* default_instance_;
};
// -------------------------------------------------------------------

class CGOnOrOffTreasureEquip : public ::google::protobuf::Message {
 public:
  CGOnOrOffTreasureEquip();
  virtual ~CGOnOrOffTreasureEquip();

  CGOnOrOffTreasureEquip(const CGOnOrOffTreasureEquip& from);

  inline CGOnOrOffTreasureEquip& operator=(const CGOnOrOffTreasureEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGOnOrOffTreasureEquip& default_instance();

  void Swap(CGOnOrOffTreasureEquip* other);

  // implements Message ----------------------------------------------

  CGOnOrOffTreasureEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGOnOrOffTreasureEquip& from);
  void MergeFrom(const CGOnOrOffTreasureEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGOnOrOffTreasureEquip)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 pos_;
  friend void  protobuf_AddDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_AssignDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_ShutdownFile_TreasureEquipMessage_2eproto();

  void InitAsDefaultInstance();
  static CGOnOrOffTreasureEquip* default_instance_;
};
// -------------------------------------------------------------------

class GCOnOrOffTreasureEquip : public ::google::protobuf::Message {
 public:
  GCOnOrOffTreasureEquip();
  virtual ~GCOnOrOffTreasureEquip();

  GCOnOrOffTreasureEquip(const GCOnOrOffTreasureEquip& from);

  inline GCOnOrOffTreasureEquip& operator=(const GCOnOrOffTreasureEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCOnOrOffTreasureEquip& default_instance();

  void Swap(GCOnOrOffTreasureEquip* other);

  // implements Message ----------------------------------------------

  GCOnOrOffTreasureEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCOnOrOffTreasureEquip& from);
  void MergeFrom(const GCOnOrOffTreasureEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 sts = 3;
  inline bool has_sts() const;
  inline void clear_sts();
  static const int kStsFieldNumber = 3;
  inline ::google::protobuf::int32 sts() const;
  inline void set_sts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCOnOrOffTreasureEquip)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_sts();
  inline void clear_has_sts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 sts_;
  friend void  protobuf_AddDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_AssignDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_ShutdownFile_TreasureEquipMessage_2eproto();

  void InitAsDefaultInstance();
  static GCOnOrOffTreasureEquip* default_instance_;
};
// -------------------------------------------------------------------

class CGRandomTreasureEquip : public ::google::protobuf::Message {
 public:
  CGRandomTreasureEquip();
  virtual ~CGRandomTreasureEquip();

  CGRandomTreasureEquip(const CGRandomTreasureEquip& from);

  inline CGRandomTreasureEquip& operator=(const CGRandomTreasureEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGRandomTreasureEquip& default_instance();

  void Swap(CGRandomTreasureEquip* other);

  // implements Message ----------------------------------------------

  CGRandomTreasureEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGRandomTreasureEquip& from);
  void MergeFrom(const CGRandomTreasureEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 costType = 3;
  inline bool has_costtype() const;
  inline void clear_costtype();
  static const int kCostTypeFieldNumber = 3;
  inline ::google::protobuf::int32 costtype() const;
  inline void set_costtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGRandomTreasureEquip)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_costtype();
  inline void clear_has_costtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 costtype_;
  friend void  protobuf_AddDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_AssignDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_ShutdownFile_TreasureEquipMessage_2eproto();

  void InitAsDefaultInstance();
  static CGRandomTreasureEquip* default_instance_;
};
// -------------------------------------------------------------------

class GCRandomTreasureEquip : public ::google::protobuf::Message {
 public:
  GCRandomTreasureEquip();
  virtual ~GCRandomTreasureEquip();

  GCRandomTreasureEquip(const GCRandomTreasureEquip& from);

  inline GCRandomTreasureEquip& operator=(const GCRandomTreasureEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRandomTreasureEquip& default_instance();

  void Swap(GCRandomTreasureEquip* other);

  // implements Message ----------------------------------------------

  GCRandomTreasureEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRandomTreasureEquip& from);
  void MergeFrom(const GCRandomTreasureEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional .TreasureEquipData data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::TreasureEquipData& data() const;
  inline ::TreasureEquipData* mutable_data();
  inline ::TreasureEquipData* release_data();
  inline void set_allocated_data(::TreasureEquipData* data);

  // @@protoc_insertion_point(class_scope:GCRandomTreasureEquip)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::TreasureEquipData* data_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_AssignDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_ShutdownFile_TreasureEquipMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRandomTreasureEquip* default_instance_;
};
// -------------------------------------------------------------------

class CGSaveTreasureEquip : public ::google::protobuf::Message {
 public:
  CGSaveTreasureEquip();
  virtual ~CGSaveTreasureEquip();

  CGSaveTreasureEquip(const CGSaveTreasureEquip& from);

  inline CGSaveTreasureEquip& operator=(const CGSaveTreasureEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSaveTreasureEquip& default_instance();

  void Swap(CGSaveTreasureEquip* other);

  // implements Message ----------------------------------------------

  CGSaveTreasureEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSaveTreasureEquip& from);
  void MergeFrom(const CGSaveTreasureEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CGSaveTreasureEquip)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  friend void  protobuf_AddDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_AssignDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_ShutdownFile_TreasureEquipMessage_2eproto();

  void InitAsDefaultInstance();
  static CGSaveTreasureEquip* default_instance_;
};
// -------------------------------------------------------------------

class GCSaveTreasureEquip : public ::google::protobuf::Message {
 public:
  GCSaveTreasureEquip();
  virtual ~GCSaveTreasureEquip();

  GCSaveTreasureEquip(const GCSaveTreasureEquip& from);

  inline GCSaveTreasureEquip& operator=(const GCSaveTreasureEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSaveTreasureEquip& default_instance();

  void Swap(GCSaveTreasureEquip* other);

  // implements Message ----------------------------------------------

  GCSaveTreasureEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSaveTreasureEquip& from);
  void MergeFrom(const GCSaveTreasureEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional .TreasureEquipData data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::TreasureEquipData& data() const;
  inline ::TreasureEquipData* mutable_data();
  inline ::TreasureEquipData* release_data();
  inline void set_allocated_data(::TreasureEquipData* data);

  // @@protoc_insertion_point(class_scope:GCSaveTreasureEquip)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::TreasureEquipData* data_;
  friend void  protobuf_AddDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_AssignDesc_TreasureEquipMessage_2eproto();
  friend void protobuf_ShutdownFile_TreasureEquipMessage_2eproto();

  void InitAsDefaultInstance();
  static GCSaveTreasureEquip* default_instance_;
};
// ===================================================================


// ===================================================================

// VocabularyInfo

// optional int32 tid = 1;
inline bool VocabularyInfo::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VocabularyInfo::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VocabularyInfo::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VocabularyInfo::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 VocabularyInfo::tid() const {
  // @@protoc_insertion_point(field_get:VocabularyInfo.tid)
  return tid_;
}
inline void VocabularyInfo::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:VocabularyInfo.tid)
}

// optional int32 type = 2;
inline bool VocabularyInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VocabularyInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VocabularyInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VocabularyInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 VocabularyInfo::type() const {
  // @@protoc_insertion_point(field_get:VocabularyInfo.type)
  return type_;
}
inline void VocabularyInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:VocabularyInfo.type)
}

// optional string value = 3;
inline bool VocabularyInfo::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VocabularyInfo::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VocabularyInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VocabularyInfo::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& VocabularyInfo::value() const {
  // @@protoc_insertion_point(field_get:VocabularyInfo.value)
  return *value_;
}
inline void VocabularyInfo::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:VocabularyInfo.value)
}
inline void VocabularyInfo::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:VocabularyInfo.value)
}
inline void VocabularyInfo::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:VocabularyInfo.value)
}
inline ::std::string* VocabularyInfo::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:VocabularyInfo.value)
  return value_;
}
inline ::std::string* VocabularyInfo::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void VocabularyInfo::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:VocabularyInfo.value)
}

// -------------------------------------------------------------------

// TreasureEquipData

// optional int64 pid = 1;
inline bool TreasureEquipData::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureEquipData::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureEquipData::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureEquipData::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 TreasureEquipData::pid() const {
  // @@protoc_insertion_point(field_get:TreasureEquipData.pid)
  return pid_;
}
inline void TreasureEquipData::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:TreasureEquipData.pid)
}

// optional int32 sid = 2;
inline bool TreasureEquipData::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreasureEquipData::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreasureEquipData::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreasureEquipData::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 TreasureEquipData::sid() const {
  // @@protoc_insertion_point(field_get:TreasureEquipData.sid)
  return sid_;
}
inline void TreasureEquipData::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:TreasureEquipData.sid)
}

// optional string baseValue = 3;
inline bool TreasureEquipData::has_basevalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreasureEquipData::set_has_basevalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TreasureEquipData::clear_has_basevalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TreasureEquipData::clear_basevalue() {
  if (basevalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    basevalue_->clear();
  }
  clear_has_basevalue();
}
inline const ::std::string& TreasureEquipData::basevalue() const {
  // @@protoc_insertion_point(field_get:TreasureEquipData.baseValue)
  return *basevalue_;
}
inline void TreasureEquipData::set_basevalue(const ::std::string& value) {
  set_has_basevalue();
  if (basevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    basevalue_ = new ::std::string;
  }
  basevalue_->assign(value);
  // @@protoc_insertion_point(field_set:TreasureEquipData.baseValue)
}
inline void TreasureEquipData::set_basevalue(const char* value) {
  set_has_basevalue();
  if (basevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    basevalue_ = new ::std::string;
  }
  basevalue_->assign(value);
  // @@protoc_insertion_point(field_set_char:TreasureEquipData.baseValue)
}
inline void TreasureEquipData::set_basevalue(const char* value, size_t size) {
  set_has_basevalue();
  if (basevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    basevalue_ = new ::std::string;
  }
  basevalue_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TreasureEquipData.baseValue)
}
inline ::std::string* TreasureEquipData::mutable_basevalue() {
  set_has_basevalue();
  if (basevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    basevalue_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TreasureEquipData.baseValue)
  return basevalue_;
}
inline ::std::string* TreasureEquipData::release_basevalue() {
  clear_has_basevalue();
  if (basevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = basevalue_;
    basevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TreasureEquipData::set_allocated_basevalue(::std::string* basevalue) {
  if (basevalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete basevalue_;
  }
  if (basevalue) {
    set_has_basevalue();
    basevalue_ = basevalue;
  } else {
    clear_has_basevalue();
    basevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TreasureEquipData.baseValue)
}

// optional int32 battleNum = 4;
inline bool TreasureEquipData::has_battlenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TreasureEquipData::set_has_battlenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TreasureEquipData::clear_has_battlenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TreasureEquipData::clear_battlenum() {
  battlenum_ = 0;
  clear_has_battlenum();
}
inline ::google::protobuf::int32 TreasureEquipData::battlenum() const {
  // @@protoc_insertion_point(field_get:TreasureEquipData.battleNum)
  return battlenum_;
}
inline void TreasureEquipData::set_battlenum(::google::protobuf::int32 value) {
  set_has_battlenum();
  battlenum_ = value;
  // @@protoc_insertion_point(field_set:TreasureEquipData.battleNum)
}

// repeated .VocabularyInfo vocalInfos = 5;
inline int TreasureEquipData::vocalinfos_size() const {
  return vocalinfos_.size();
}
inline void TreasureEquipData::clear_vocalinfos() {
  vocalinfos_.Clear();
}
inline const ::VocabularyInfo& TreasureEquipData::vocalinfos(int index) const {
  // @@protoc_insertion_point(field_get:TreasureEquipData.vocalInfos)
  return vocalinfos_.Get(index);
}
inline ::VocabularyInfo* TreasureEquipData::mutable_vocalinfos(int index) {
  // @@protoc_insertion_point(field_mutable:TreasureEquipData.vocalInfos)
  return vocalinfos_.Mutable(index);
}
inline ::VocabularyInfo* TreasureEquipData::add_vocalinfos() {
  // @@protoc_insertion_point(field_add:TreasureEquipData.vocalInfos)
  return vocalinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::VocabularyInfo >&
TreasureEquipData::vocalinfos() const {
  // @@protoc_insertion_point(field_list:TreasureEquipData.vocalInfos)
  return vocalinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::VocabularyInfo >*
TreasureEquipData::mutable_vocalinfos() {
  // @@protoc_insertion_point(field_mutable_list:TreasureEquipData.vocalInfos)
  return &vocalinfos_;
}

// repeated .VocabularyInfo tempVocalInfos = 6;
inline int TreasureEquipData::tempvocalinfos_size() const {
  return tempvocalinfos_.size();
}
inline void TreasureEquipData::clear_tempvocalinfos() {
  tempvocalinfos_.Clear();
}
inline const ::VocabularyInfo& TreasureEquipData::tempvocalinfos(int index) const {
  // @@protoc_insertion_point(field_get:TreasureEquipData.tempVocalInfos)
  return tempvocalinfos_.Get(index);
}
inline ::VocabularyInfo* TreasureEquipData::mutable_tempvocalinfos(int index) {
  // @@protoc_insertion_point(field_mutable:TreasureEquipData.tempVocalInfos)
  return tempvocalinfos_.Mutable(index);
}
inline ::VocabularyInfo* TreasureEquipData::add_tempvocalinfos() {
  // @@protoc_insertion_point(field_add:TreasureEquipData.tempVocalInfos)
  return tempvocalinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::VocabularyInfo >&
TreasureEquipData::tempvocalinfos() const {
  // @@protoc_insertion_point(field_list:TreasureEquipData.tempVocalInfos)
  return tempvocalinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::VocabularyInfo >*
TreasureEquipData::mutable_tempvocalinfos() {
  // @@protoc_insertion_point(field_mutable_list:TreasureEquipData.tempVocalInfos)
  return &tempvocalinfos_;
}

// optional int32 sorce = 7;
inline bool TreasureEquipData::has_sorce() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TreasureEquipData::set_has_sorce() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TreasureEquipData::clear_has_sorce() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TreasureEquipData::clear_sorce() {
  sorce_ = 0;
  clear_has_sorce();
}
inline ::google::protobuf::int32 TreasureEquipData::sorce() const {
  // @@protoc_insertion_point(field_get:TreasureEquipData.sorce)
  return sorce_;
}
inline void TreasureEquipData::set_sorce(::google::protobuf::int32 value) {
  set_has_sorce();
  sorce_ = value;
  // @@protoc_insertion_point(field_set:TreasureEquipData.sorce)
}

// optional int32 pos = 8;
inline bool TreasureEquipData::has_pos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TreasureEquipData::set_has_pos() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TreasureEquipData::clear_has_pos() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TreasureEquipData::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TreasureEquipData::pos() const {
  // @@protoc_insertion_point(field_get:TreasureEquipData.pos)
  return pos_;
}
inline void TreasureEquipData::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:TreasureEquipData.pos)
}

// optional int32 bind = 9;
inline bool TreasureEquipData::has_bind() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TreasureEquipData::set_has_bind() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TreasureEquipData::clear_has_bind() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TreasureEquipData::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 TreasureEquipData::bind() const {
  // @@protoc_insertion_point(field_get:TreasureEquipData.bind)
  return bind_;
}
inline void TreasureEquipData::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
  // @@protoc_insertion_point(field_set:TreasureEquipData.bind)
}

// optional int32 oldVocalBattleNumber = 10;
inline bool TreasureEquipData::has_oldvocalbattlenumber() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TreasureEquipData::set_has_oldvocalbattlenumber() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TreasureEquipData::clear_has_oldvocalbattlenumber() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TreasureEquipData::clear_oldvocalbattlenumber() {
  oldvocalbattlenumber_ = 0;
  clear_has_oldvocalbattlenumber();
}
inline ::google::protobuf::int32 TreasureEquipData::oldvocalbattlenumber() const {
  // @@protoc_insertion_point(field_get:TreasureEquipData.oldVocalBattleNumber)
  return oldvocalbattlenumber_;
}
inline void TreasureEquipData::set_oldvocalbattlenumber(::google::protobuf::int32 value) {
  set_has_oldvocalbattlenumber();
  oldvocalbattlenumber_ = value;
  // @@protoc_insertion_point(field_set:TreasureEquipData.oldVocalBattleNumber)
}

// optional int32 newVocalBattleNumber = 11;
inline bool TreasureEquipData::has_newvocalbattlenumber() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TreasureEquipData::set_has_newvocalbattlenumber() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TreasureEquipData::clear_has_newvocalbattlenumber() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TreasureEquipData::clear_newvocalbattlenumber() {
  newvocalbattlenumber_ = 0;
  clear_has_newvocalbattlenumber();
}
inline ::google::protobuf::int32 TreasureEquipData::newvocalbattlenumber() const {
  // @@protoc_insertion_point(field_get:TreasureEquipData.newVocalBattleNumber)
  return newvocalbattlenumber_;
}
inline void TreasureEquipData::set_newvocalbattlenumber(::google::protobuf::int32 value) {
  set_has_newvocalbattlenumber();
  newvocalbattlenumber_ = value;
  // @@protoc_insertion_point(field_set:TreasureEquipData.newVocalBattleNumber)
}

// -------------------------------------------------------------------

// GCAllOnTreasureEquips

// repeated .TreasureEquipData equips = 1;
inline int GCAllOnTreasureEquips::equips_size() const {
  return equips_.size();
}
inline void GCAllOnTreasureEquips::clear_equips() {
  equips_.Clear();
}
inline const ::TreasureEquipData& GCAllOnTreasureEquips::equips(int index) const {
  // @@protoc_insertion_point(field_get:GCAllOnTreasureEquips.equips)
  return equips_.Get(index);
}
inline ::TreasureEquipData* GCAllOnTreasureEquips::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:GCAllOnTreasureEquips.equips)
  return equips_.Mutable(index);
}
inline ::TreasureEquipData* GCAllOnTreasureEquips::add_equips() {
  // @@protoc_insertion_point(field_add:GCAllOnTreasureEquips.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TreasureEquipData >&
GCAllOnTreasureEquips::equips() const {
  // @@protoc_insertion_point(field_list:GCAllOnTreasureEquips.equips)
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::TreasureEquipData >*
GCAllOnTreasureEquips::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:GCAllOnTreasureEquips.equips)
  return &equips_;
}

// -------------------------------------------------------------------

// CGOnOrOffTreasureEquip

// optional int64 pid = 1;
inline bool CGOnOrOffTreasureEquip::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGOnOrOffTreasureEquip::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGOnOrOffTreasureEquip::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGOnOrOffTreasureEquip::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGOnOrOffTreasureEquip::pid() const {
  // @@protoc_insertion_point(field_get:CGOnOrOffTreasureEquip.pid)
  return pid_;
}
inline void CGOnOrOffTreasureEquip::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGOnOrOffTreasureEquip.pid)
}

// optional int32 type = 2;
inline bool CGOnOrOffTreasureEquip::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGOnOrOffTreasureEquip::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGOnOrOffTreasureEquip::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGOnOrOffTreasureEquip::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGOnOrOffTreasureEquip::type() const {
  // @@protoc_insertion_point(field_get:CGOnOrOffTreasureEquip.type)
  return type_;
}
inline void CGOnOrOffTreasureEquip::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGOnOrOffTreasureEquip.type)
}

// optional int32 pos = 3;
inline bool CGOnOrOffTreasureEquip::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGOnOrOffTreasureEquip::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGOnOrOffTreasureEquip::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGOnOrOffTreasureEquip::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 CGOnOrOffTreasureEquip::pos() const {
  // @@protoc_insertion_point(field_get:CGOnOrOffTreasureEquip.pos)
  return pos_;
}
inline void CGOnOrOffTreasureEquip::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:CGOnOrOffTreasureEquip.pos)
}

// -------------------------------------------------------------------

// GCOnOrOffTreasureEquip

// optional int64 pid = 1;
inline bool GCOnOrOffTreasureEquip::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCOnOrOffTreasureEquip::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCOnOrOffTreasureEquip::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCOnOrOffTreasureEquip::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 GCOnOrOffTreasureEquip::pid() const {
  // @@protoc_insertion_point(field_get:GCOnOrOffTreasureEquip.pid)
  return pid_;
}
inline void GCOnOrOffTreasureEquip::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:GCOnOrOffTreasureEquip.pid)
}

// optional int32 type = 2;
inline bool GCOnOrOffTreasureEquip::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCOnOrOffTreasureEquip::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCOnOrOffTreasureEquip::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCOnOrOffTreasureEquip::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCOnOrOffTreasureEquip::type() const {
  // @@protoc_insertion_point(field_get:GCOnOrOffTreasureEquip.type)
  return type_;
}
inline void GCOnOrOffTreasureEquip::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCOnOrOffTreasureEquip.type)
}

// optional int32 sts = 3;
inline bool GCOnOrOffTreasureEquip::has_sts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCOnOrOffTreasureEquip::set_has_sts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCOnOrOffTreasureEquip::clear_has_sts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCOnOrOffTreasureEquip::clear_sts() {
  sts_ = 0;
  clear_has_sts();
}
inline ::google::protobuf::int32 GCOnOrOffTreasureEquip::sts() const {
  // @@protoc_insertion_point(field_get:GCOnOrOffTreasureEquip.sts)
  return sts_;
}
inline void GCOnOrOffTreasureEquip::set_sts(::google::protobuf::int32 value) {
  set_has_sts();
  sts_ = value;
  // @@protoc_insertion_point(field_set:GCOnOrOffTreasureEquip.sts)
}

// -------------------------------------------------------------------

// CGRandomTreasureEquip

// optional int64 pid = 1;
inline bool CGRandomTreasureEquip::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGRandomTreasureEquip::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGRandomTreasureEquip::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGRandomTreasureEquip::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGRandomTreasureEquip::pid() const {
  // @@protoc_insertion_point(field_get:CGRandomTreasureEquip.pid)
  return pid_;
}
inline void CGRandomTreasureEquip::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGRandomTreasureEquip.pid)
}

// optional int32 type = 2;
inline bool CGRandomTreasureEquip::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGRandomTreasureEquip::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGRandomTreasureEquip::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGRandomTreasureEquip::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGRandomTreasureEquip::type() const {
  // @@protoc_insertion_point(field_get:CGRandomTreasureEquip.type)
  return type_;
}
inline void CGRandomTreasureEquip::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGRandomTreasureEquip.type)
}

// optional int32 costType = 3;
inline bool CGRandomTreasureEquip::has_costtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGRandomTreasureEquip::set_has_costtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGRandomTreasureEquip::clear_has_costtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGRandomTreasureEquip::clear_costtype() {
  costtype_ = 0;
  clear_has_costtype();
}
inline ::google::protobuf::int32 CGRandomTreasureEquip::costtype() const {
  // @@protoc_insertion_point(field_get:CGRandomTreasureEquip.costType)
  return costtype_;
}
inline void CGRandomTreasureEquip::set_costtype(::google::protobuf::int32 value) {
  set_has_costtype();
  costtype_ = value;
  // @@protoc_insertion_point(field_set:CGRandomTreasureEquip.costType)
}

// -------------------------------------------------------------------

// GCRandomTreasureEquip

// optional int64 pid = 1;
inline bool GCRandomTreasureEquip::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCRandomTreasureEquip::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCRandomTreasureEquip::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCRandomTreasureEquip::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 GCRandomTreasureEquip::pid() const {
  // @@protoc_insertion_point(field_get:GCRandomTreasureEquip.pid)
  return pid_;
}
inline void GCRandomTreasureEquip::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:GCRandomTreasureEquip.pid)
}

// optional int32 type = 2;
inline bool GCRandomTreasureEquip::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCRandomTreasureEquip::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCRandomTreasureEquip::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCRandomTreasureEquip::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCRandomTreasureEquip::type() const {
  // @@protoc_insertion_point(field_get:GCRandomTreasureEquip.type)
  return type_;
}
inline void GCRandomTreasureEquip::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCRandomTreasureEquip.type)
}

// optional .TreasureEquipData data = 3;
inline bool GCRandomTreasureEquip::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCRandomTreasureEquip::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCRandomTreasureEquip::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCRandomTreasureEquip::clear_data() {
  if (data_ != NULL) data_->::TreasureEquipData::Clear();
  clear_has_data();
}
inline const ::TreasureEquipData& GCRandomTreasureEquip::data() const {
  // @@protoc_insertion_point(field_get:GCRandomTreasureEquip.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::TreasureEquipData* GCRandomTreasureEquip::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::TreasureEquipData;
  // @@protoc_insertion_point(field_mutable:GCRandomTreasureEquip.data)
  return data_;
}
inline ::TreasureEquipData* GCRandomTreasureEquip::release_data() {
  clear_has_data();
  ::TreasureEquipData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void GCRandomTreasureEquip::set_allocated_data(::TreasureEquipData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:GCRandomTreasureEquip.data)
}

// -------------------------------------------------------------------

// CGSaveTreasureEquip

// optional int64 pid = 1;
inline bool CGSaveTreasureEquip::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSaveTreasureEquip::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSaveTreasureEquip::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSaveTreasureEquip::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 CGSaveTreasureEquip::pid() const {
  // @@protoc_insertion_point(field_get:CGSaveTreasureEquip.pid)
  return pid_;
}
inline void CGSaveTreasureEquip::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:CGSaveTreasureEquip.pid)
}

// -------------------------------------------------------------------

// GCSaveTreasureEquip

// optional int64 pid = 1;
inline bool GCSaveTreasureEquip::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSaveTreasureEquip::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSaveTreasureEquip::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSaveTreasureEquip::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 GCSaveTreasureEquip::pid() const {
  // @@protoc_insertion_point(field_get:GCSaveTreasureEquip.pid)
  return pid_;
}
inline void GCSaveTreasureEquip::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:GCSaveTreasureEquip.pid)
}

// optional .TreasureEquipData data = 2;
inline bool GCSaveTreasureEquip::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSaveTreasureEquip::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSaveTreasureEquip::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSaveTreasureEquip::clear_data() {
  if (data_ != NULL) data_->::TreasureEquipData::Clear();
  clear_has_data();
}
inline const ::TreasureEquipData& GCSaveTreasureEquip::data() const {
  // @@protoc_insertion_point(field_get:GCSaveTreasureEquip.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::TreasureEquipData* GCSaveTreasureEquip::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::TreasureEquipData;
  // @@protoc_insertion_point(field_mutable:GCSaveTreasureEquip.data)
  return data_;
}
inline ::TreasureEquipData* GCSaveTreasureEquip::release_data() {
  clear_has_data();
  ::TreasureEquipData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void GCSaveTreasureEquip::set_allocated_data(::TreasureEquipData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:GCSaveTreasureEquip.data)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TreasureEquipMessage_2eproto__INCLUDED
