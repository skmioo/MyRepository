// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VipMessage.proto

#ifndef PROTOBUF_VipMessage_2eproto__INCLUDED
#define PROTOBUF_VipMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "InnerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_VipMessage_2eproto();
void protobuf_AssignDesc_VipMessage_2eproto();
void protobuf_ShutdownFile_VipMessage_2eproto();

class GCPushVipBack;
class CGGetRewardData;
class GCGetRewardDataBack;

// ===================================================================

class GCPushVipBack : public ::google::protobuf::Message {
 public:
  GCPushVipBack();
  virtual ~GCPushVipBack();

  GCPushVipBack(const GCPushVipBack& from);

  inline GCPushVipBack& operator=(const GCPushVipBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPushVipBack& default_instance();

  void Swap(GCPushVipBack* other);

  // implements Message ----------------------------------------------

  GCPushVipBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPushVipBack& from);
  void MergeFrom(const GCPushVipBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 vip = 1;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 1;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);

  // optional int32 summoney = 2;
  inline bool has_summoney() const;
  inline void clear_summoney();
  static const int kSummoneyFieldNumber = 2;
  inline ::google::protobuf::int32 summoney() const;
  inline void set_summoney(::google::protobuf::int32 value);

  // repeated .VipData vipdata = 3;
  inline int vipdata_size() const;
  inline void clear_vipdata();
  static const int kVipdataFieldNumber = 3;
  inline const ::VipData& vipdata(int index) const;
  inline ::VipData* mutable_vipdata(int index);
  inline ::VipData* add_vipdata();
  inline const ::google::protobuf::RepeatedPtrField< ::VipData >&
      vipdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::VipData >*
      mutable_vipdata();

  // @@protoc_insertion_point(class_scope:GCPushVipBack)
 private:
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_summoney();
  inline void clear_has_summoney();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 summoney_;
  ::google::protobuf::RepeatedPtrField< ::VipData > vipdata_;
  friend void  protobuf_AddDesc_VipMessage_2eproto();
  friend void protobuf_AssignDesc_VipMessage_2eproto();
  friend void protobuf_ShutdownFile_VipMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPushVipBack* default_instance_;
};
// -------------------------------------------------------------------

class CGGetRewardData : public ::google::protobuf::Message {
 public:
  CGGetRewardData();
  virtual ~CGGetRewardData();

  CGGetRewardData(const CGGetRewardData& from);

  inline CGGetRewardData& operator=(const CGGetRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetRewardData& default_instance();

  void Swap(CGGetRewardData* other);

  // implements Message ----------------------------------------------

  CGGetRewardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetRewardData& from);
  void MergeFrom(const CGGetRewardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 vip = 1;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 1;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetRewardData)
 private:
  inline void set_has_vip();
  inline void clear_has_vip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 vip_;
  friend void  protobuf_AddDesc_VipMessage_2eproto();
  friend void protobuf_AssignDesc_VipMessage_2eproto();
  friend void protobuf_ShutdownFile_VipMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetRewardData* default_instance_;
};
// -------------------------------------------------------------------

class GCGetRewardDataBack : public ::google::protobuf::Message {
 public:
  GCGetRewardDataBack();
  virtual ~GCGetRewardDataBack();

  GCGetRewardDataBack(const GCGetRewardDataBack& from);

  inline GCGetRewardDataBack& operator=(const GCGetRewardDataBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetRewardDataBack& default_instance();

  void Swap(GCGetRewardDataBack* other);

  // implements Message ----------------------------------------------

  GCGetRewardDataBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetRewardDataBack& from);
  void MergeFrom(const GCGetRewardDataBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional int32 vip = 2;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 2;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGetRewardDataBack)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_vip();
  inline void clear_has_vip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 vip_;
  friend void  protobuf_AddDesc_VipMessage_2eproto();
  friend void protobuf_AssignDesc_VipMessage_2eproto();
  friend void protobuf_ShutdownFile_VipMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetRewardDataBack* default_instance_;
};
// ===================================================================


// ===================================================================

// GCPushVipBack

// optional int32 vip = 1;
inline bool GCPushVipBack::has_vip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPushVipBack::set_has_vip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPushVipBack::clear_has_vip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPushVipBack::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 GCPushVipBack::vip() const {
  // @@protoc_insertion_point(field_get:GCPushVipBack.vip)
  return vip_;
}
inline void GCPushVipBack::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:GCPushVipBack.vip)
}

// optional int32 summoney = 2;
inline bool GCPushVipBack::has_summoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCPushVipBack::set_has_summoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCPushVipBack::clear_has_summoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCPushVipBack::clear_summoney() {
  summoney_ = 0;
  clear_has_summoney();
}
inline ::google::protobuf::int32 GCPushVipBack::summoney() const {
  // @@protoc_insertion_point(field_get:GCPushVipBack.summoney)
  return summoney_;
}
inline void GCPushVipBack::set_summoney(::google::protobuf::int32 value) {
  set_has_summoney();
  summoney_ = value;
  // @@protoc_insertion_point(field_set:GCPushVipBack.summoney)
}

// repeated .VipData vipdata = 3;
inline int GCPushVipBack::vipdata_size() const {
  return vipdata_.size();
}
inline void GCPushVipBack::clear_vipdata() {
  vipdata_.Clear();
}
inline const ::VipData& GCPushVipBack::vipdata(int index) const {
  // @@protoc_insertion_point(field_get:GCPushVipBack.vipdata)
  return vipdata_.Get(index);
}
inline ::VipData* GCPushVipBack::mutable_vipdata(int index) {
  // @@protoc_insertion_point(field_mutable:GCPushVipBack.vipdata)
  return vipdata_.Mutable(index);
}
inline ::VipData* GCPushVipBack::add_vipdata() {
  // @@protoc_insertion_point(field_add:GCPushVipBack.vipdata)
  return vipdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::VipData >&
GCPushVipBack::vipdata() const {
  // @@protoc_insertion_point(field_list:GCPushVipBack.vipdata)
  return vipdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::VipData >*
GCPushVipBack::mutable_vipdata() {
  // @@protoc_insertion_point(field_mutable_list:GCPushVipBack.vipdata)
  return &vipdata_;
}

// -------------------------------------------------------------------

// CGGetRewardData

// optional int32 vip = 1;
inline bool CGGetRewardData::has_vip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetRewardData::set_has_vip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetRewardData::clear_has_vip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetRewardData::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 CGGetRewardData::vip() const {
  // @@protoc_insertion_point(field_get:CGGetRewardData.vip)
  return vip_;
}
inline void CGGetRewardData::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:CGGetRewardData.vip)
}

// -------------------------------------------------------------------

// GCGetRewardDataBack

// optional int32 flag = 1;
inline bool GCGetRewardDataBack::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetRewardDataBack::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetRewardDataBack::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetRewardDataBack::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCGetRewardDataBack::flag() const {
  // @@protoc_insertion_point(field_get:GCGetRewardDataBack.flag)
  return flag_;
}
inline void GCGetRewardDataBack::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCGetRewardDataBack.flag)
}

// optional int32 vip = 2;
inline bool GCGetRewardDataBack::has_vip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGetRewardDataBack::set_has_vip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGetRewardDataBack::clear_has_vip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGetRewardDataBack::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 GCGetRewardDataBack::vip() const {
  // @@protoc_insertion_point(field_get:GCGetRewardDataBack.vip)
  return vip_;
}
inline void GCGetRewardDataBack::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:GCGetRewardDataBack.vip)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_VipMessage_2eproto__INCLUDED
