// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VitalityMessage.proto

#ifndef PROTOBUF_VitalityMessage_2eproto__INCLUDED
#define PROTOBUF_VitalityMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "InnerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_VitalityMessage_2eproto();
void protobuf_AssignDesc_VitalityMessage_2eproto();
void protobuf_ShutdownFile_VitalityMessage_2eproto();

class ActiveData;
class PowerMedicalData;
class ActiveStruct;
class CGOpenActive;
class GCOpenActiveBack;
class CGGetActiveReward;
class GCGetActiveRewardBack;
class CGGetPowerMedical;
class GCGetPowerMedicalBack;
class CGDeepThinkOperation;
class GCDeepThinkOperationBack;
class CGGetDeepThinkExp;
class GCGetDeepThinkExpBack;
class GCBroadcastSystemNotice;
class GCPushNextDayReward;
class CGGetNextDayReward;
class GCGetNextDayRewardBack;
class CGGetCDKReward;
class GCGetCDKRewardBack;

// ===================================================================

class ActiveData : public ::google::protobuf::Message {
 public:
  ActiveData();
  virtual ~ActiveData();

  ActiveData(const ActiveData& from);

  inline ActiveData& operator=(const ActiveData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveData& default_instance();

  void Swap(ActiveData* other);

  // implements Message ----------------------------------------------

  ActiveData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActiveData& from);
  void MergeFrom(const ActiveData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 totalCount = 3;
  inline bool has_totalcount() const;
  inline void clear_totalcount();
  static const int kTotalCountFieldNumber = 3;
  inline ::google::protobuf::int32 totalcount() const;
  inline void set_totalcount(::google::protobuf::int32 value);

  // optional int32 activeState = 4;
  inline bool has_activestate() const;
  inline void clear_activestate();
  static const int kActiveStateFieldNumber = 4;
  inline ::google::protobuf::int32 activestate() const;
  inline void set_activestate(::google::protobuf::int32 value);

  // optional int64 opentime = 5;
  inline bool has_opentime() const;
  inline void clear_opentime();
  static const int kOpentimeFieldNumber = 5;
  inline ::google::protobuf::int64 opentime() const;
  inline void set_opentime(::google::protobuf::int64 value);

  // optional int32 openlevel = 6;
  inline bool has_openlevel() const;
  inline void clear_openlevel();
  static const int kOpenlevelFieldNumber = 6;
  inline ::google::protobuf::int32 openlevel() const;
  inline void set_openlevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActiveData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_totalcount();
  inline void clear_has_totalcount();
  inline void set_has_activestate();
  inline void clear_has_activestate();
  inline void set_has_opentime();
  inline void clear_has_opentime();
  inline void set_has_openlevel();
  inline void clear_has_openlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 totalcount_;
  ::google::protobuf::int32 activestate_;
  ::google::protobuf::int64 opentime_;
  ::google::protobuf::int32 openlevel_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static ActiveData* default_instance_;
};
// -------------------------------------------------------------------

class PowerMedicalData : public ::google::protobuf::Message {
 public:
  PowerMedicalData();
  virtual ~PowerMedicalData();

  PowerMedicalData(const PowerMedicalData& from);

  inline PowerMedicalData& operator=(const PowerMedicalData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PowerMedicalData& default_instance();

  void Swap(PowerMedicalData* other);

  // implements Message ----------------------------------------------

  PowerMedicalData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PowerMedicalData& from);
  void MergeFrom(const PowerMedicalData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 power = 2;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 2;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PowerMedicalData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_power();
  inline void clear_has_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 power_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static PowerMedicalData* default_instance_;
};
// -------------------------------------------------------------------

class ActiveStruct : public ::google::protobuf::Message {
 public:
  ActiveStruct();
  virtual ~ActiveStruct();

  ActiveStruct(const ActiveStruct& from);

  inline ActiveStruct& operator=(const ActiveStruct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveStruct& default_instance();

  void Swap(ActiveStruct* other);

  // implements Message ----------------------------------------------

  ActiveStruct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActiveStruct& from);
  void MergeFrom(const ActiveStruct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rewardid = 1;
  inline bool has_rewardid() const;
  inline void clear_rewardid();
  static const int kRewardidFieldNumber = 1;
  inline ::google::protobuf::int32 rewardid() const;
  inline void set_rewardid(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActiveStruct)
 private:
  inline void set_has_rewardid();
  inline void clear_has_rewardid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 rewardid_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static ActiveStruct* default_instance_;
};
// -------------------------------------------------------------------

class CGOpenActive : public ::google::protobuf::Message {
 public:
  CGOpenActive();
  virtual ~CGOpenActive();

  CGOpenActive(const CGOpenActive& from);

  inline CGOpenActive& operator=(const CGOpenActive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGOpenActive& default_instance();

  void Swap(CGOpenActive* other);

  // implements Message ----------------------------------------------

  CGOpenActive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGOpenActive& from);
  void MergeFrom(const CGOpenActive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGOpenActive)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static CGOpenActive* default_instance_;
};
// -------------------------------------------------------------------

class GCOpenActiveBack : public ::google::protobuf::Message {
 public:
  GCOpenActiveBack();
  virtual ~GCOpenActiveBack();

  GCOpenActiveBack(const GCOpenActiveBack& from);

  inline GCOpenActiveBack& operator=(const GCOpenActiveBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCOpenActiveBack& default_instance();

  void Swap(GCOpenActiveBack* other);

  // implements Message ----------------------------------------------

  GCOpenActiveBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCOpenActiveBack& from);
  void MergeFrom(const GCOpenActiveBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sumact = 1;
  inline bool has_sumact() const;
  inline void clear_sumact();
  static const int kSumactFieldNumber = 1;
  inline ::google::protobuf::int32 sumact() const;
  inline void set_sumact(::google::protobuf::int32 value);

  // repeated .ActiveData activedata = 2;
  inline int activedata_size() const;
  inline void clear_activedata();
  static const int kActivedataFieldNumber = 2;
  inline const ::ActiveData& activedata(int index) const;
  inline ::ActiveData* mutable_activedata(int index);
  inline ::ActiveData* add_activedata();
  inline const ::google::protobuf::RepeatedPtrField< ::ActiveData >&
      activedata() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActiveData >*
      mutable_activedata();

  // repeated .ActiveStruct actiestruct = 3;
  inline int actiestruct_size() const;
  inline void clear_actiestruct();
  static const int kActiestructFieldNumber = 3;
  inline const ::ActiveStruct& actiestruct(int index) const;
  inline ::ActiveStruct* mutable_actiestruct(int index);
  inline ::ActiveStruct* add_actiestruct();
  inline const ::google::protobuf::RepeatedPtrField< ::ActiveStruct >&
      actiestruct() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActiveStruct >*
      mutable_actiestruct();

  // optional int32 resetFlag = 4;
  inline bool has_resetflag() const;
  inline void clear_resetflag();
  static const int kResetFlagFieldNumber = 4;
  inline ::google::protobuf::int32 resetflag() const;
  inline void set_resetflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCOpenActiveBack)
 private:
  inline void set_has_sumact();
  inline void clear_has_sumact();
  inline void set_has_resetflag();
  inline void clear_has_resetflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ActiveData > activedata_;
  ::google::protobuf::int32 sumact_;
  ::google::protobuf::int32 resetflag_;
  ::google::protobuf::RepeatedPtrField< ::ActiveStruct > actiestruct_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static GCOpenActiveBack* default_instance_;
};
// -------------------------------------------------------------------

class CGGetActiveReward : public ::google::protobuf::Message {
 public:
  CGGetActiveReward();
  virtual ~CGGetActiveReward();

  CGGetActiveReward(const CGGetActiveReward& from);

  inline CGGetActiveReward& operator=(const CGGetActiveReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetActiveReward& default_instance();

  void Swap(CGGetActiveReward* other);

  // implements Message ----------------------------------------------

  CGGetActiveReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetActiveReward& from);
  void MergeFrom(const CGGetActiveReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetActiveReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetActiveReward* default_instance_;
};
// -------------------------------------------------------------------

class GCGetActiveRewardBack : public ::google::protobuf::Message {
 public:
  GCGetActiveRewardBack();
  virtual ~GCGetActiveRewardBack();

  GCGetActiveRewardBack(const GCGetActiveRewardBack& from);

  inline GCGetActiveRewardBack& operator=(const GCGetActiveRewardBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetActiveRewardBack& default_instance();

  void Swap(GCGetActiveRewardBack* other);

  // implements Message ----------------------------------------------

  GCGetActiveRewardBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetActiveRewardBack& from);
  void MergeFrom(const GCGetActiveRewardBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional int32 rewardid = 2;
  inline bool has_rewardid() const;
  inline void clear_rewardid();
  static const int kRewardidFieldNumber = 2;
  inline ::google::protobuf::int32 rewardid() const;
  inline void set_rewardid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGetActiveRewardBack)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_rewardid();
  inline void clear_has_rewardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 rewardid_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetActiveRewardBack* default_instance_;
};
// -------------------------------------------------------------------

class CGGetPowerMedical : public ::google::protobuf::Message {
 public:
  CGGetPowerMedical();
  virtual ~CGGetPowerMedical();

  CGGetPowerMedical(const CGGetPowerMedical& from);

  inline CGGetPowerMedical& operator=(const CGGetPowerMedical& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetPowerMedical& default_instance();

  void Swap(CGGetPowerMedical* other);

  // implements Message ----------------------------------------------

  CGGetPowerMedical* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetPowerMedical& from);
  void MergeFrom(const CGGetPowerMedical& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGGetPowerMedical)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetPowerMedical* default_instance_;
};
// -------------------------------------------------------------------

class GCGetPowerMedicalBack : public ::google::protobuf::Message {
 public:
  GCGetPowerMedicalBack();
  virtual ~GCGetPowerMedicalBack();

  GCGetPowerMedicalBack(const GCGetPowerMedicalBack& from);

  inline GCGetPowerMedicalBack& operator=(const GCGetPowerMedicalBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetPowerMedicalBack& default_instance();

  void Swap(GCGetPowerMedicalBack* other);

  // implements Message ----------------------------------------------

  GCGetPowerMedicalBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetPowerMedicalBack& from);
  void MergeFrom(const GCGetPowerMedicalBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PowerMedicalData powerMedicalData = 1;
  inline int powermedicaldata_size() const;
  inline void clear_powermedicaldata();
  static const int kPowerMedicalDataFieldNumber = 1;
  inline const ::PowerMedicalData& powermedicaldata(int index) const;
  inline ::PowerMedicalData* mutable_powermedicaldata(int index);
  inline ::PowerMedicalData* add_powermedicaldata();
  inline const ::google::protobuf::RepeatedPtrField< ::PowerMedicalData >&
      powermedicaldata() const;
  inline ::google::protobuf::RepeatedPtrField< ::PowerMedicalData >*
      mutable_powermedicaldata();

  // @@protoc_insertion_point(class_scope:GCGetPowerMedicalBack)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PowerMedicalData > powermedicaldata_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetPowerMedicalBack* default_instance_;
};
// -------------------------------------------------------------------

class CGDeepThinkOperation : public ::google::protobuf::Message {
 public:
  CGDeepThinkOperation();
  virtual ~CGDeepThinkOperation();

  CGDeepThinkOperation(const CGDeepThinkOperation& from);

  inline CGDeepThinkOperation& operator=(const CGDeepThinkOperation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGDeepThinkOperation& default_instance();

  void Swap(CGDeepThinkOperation* other);

  // implements Message ----------------------------------------------

  CGDeepThinkOperation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGDeepThinkOperation& from);
  void MergeFrom(const CGDeepThinkOperation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGDeepThinkOperation)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static CGDeepThinkOperation* default_instance_;
};
// -------------------------------------------------------------------

class GCDeepThinkOperationBack : public ::google::protobuf::Message {
 public:
  GCDeepThinkOperationBack();
  virtual ~GCDeepThinkOperationBack();

  GCDeepThinkOperationBack(const GCDeepThinkOperationBack& from);

  inline GCDeepThinkOperationBack& operator=(const GCDeepThinkOperationBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDeepThinkOperationBack& default_instance();

  void Swap(GCDeepThinkOperationBack* other);

  // implements Message ----------------------------------------------

  GCDeepThinkOperationBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDeepThinkOperationBack& from);
  void MergeFrom(const GCDeepThinkOperationBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 starttime = 2;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 2;
  inline ::google::protobuf::int64 starttime() const;
  inline void set_starttime(::google::protobuf::int64 value);

  // optional int64 endtime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 3;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 duration = 4;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 4;
  inline ::google::protobuf::int64 duration() const;
  inline void set_duration(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCDeepThinkOperationBack)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_duration();
  inline void clear_has_duration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int64 duration_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDeepThinkOperationBack* default_instance_;
};
// -------------------------------------------------------------------

class CGGetDeepThinkExp : public ::google::protobuf::Message {
 public:
  CGGetDeepThinkExp();
  virtual ~CGGetDeepThinkExp();

  CGGetDeepThinkExp(const CGGetDeepThinkExp& from);

  inline CGGetDeepThinkExp& operator=(const CGGetDeepThinkExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetDeepThinkExp& default_instance();

  void Swap(CGGetDeepThinkExp* other);

  // implements Message ----------------------------------------------

  CGGetDeepThinkExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetDeepThinkExp& from);
  void MergeFrom(const CGGetDeepThinkExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mult = 1;
  inline bool has_mult() const;
  inline void clear_mult();
  static const int kMultFieldNumber = 1;
  inline ::google::protobuf::int32 mult() const;
  inline void set_mult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetDeepThinkExp)
 private:
  inline void set_has_mult();
  inline void clear_has_mult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mult_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetDeepThinkExp* default_instance_;
};
// -------------------------------------------------------------------

class GCGetDeepThinkExpBack : public ::google::protobuf::Message {
 public:
  GCGetDeepThinkExpBack();
  virtual ~GCGetDeepThinkExpBack();

  GCGetDeepThinkExpBack(const GCGetDeepThinkExpBack& from);

  inline GCGetDeepThinkExpBack& operator=(const GCGetDeepThinkExpBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetDeepThinkExpBack& default_instance();

  void Swap(GCGetDeepThinkExpBack* other);

  // implements Message ----------------------------------------------

  GCGetDeepThinkExpBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetDeepThinkExpBack& from);
  void MergeFrom(const GCGetDeepThinkExpBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGetDeepThinkExpBack)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetDeepThinkExpBack* default_instance_;
};
// -------------------------------------------------------------------

class GCBroadcastSystemNotice : public ::google::protobuf::Message {
 public:
  GCBroadcastSystemNotice();
  virtual ~GCBroadcastSystemNotice();

  GCBroadcastSystemNotice(const GCBroadcastSystemNotice& from);

  inline GCBroadcastSystemNotice& operator=(const GCBroadcastSystemNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCBroadcastSystemNotice& default_instance();

  void Swap(GCBroadcastSystemNotice* other);

  // implements Message ----------------------------------------------

  GCBroadcastSystemNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCBroadcastSystemNotice& from);
  void MergeFrom(const GCBroadcastSystemNotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 lauId = 2;
  inline bool has_lauid() const;
  inline void clear_lauid();
  static const int kLauIdFieldNumber = 2;
  inline ::google::protobuf::int32 lauid() const;
  inline void set_lauid(::google::protobuf::int32 value);

  // repeated string param = 3;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline const ::std::string& param(int index) const;
  inline ::std::string* mutable_param(int index);
  inline void set_param(int index, const ::std::string& value);
  inline void set_param(int index, const char* value);
  inline void set_param(int index, const char* value, size_t size);
  inline ::std::string* add_param();
  inline void add_param(const ::std::string& value);
  inline void add_param(const char* value);
  inline void add_param(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& param() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param();

  // @@protoc_insertion_point(class_scope:GCBroadcastSystemNotice)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_lauid();
  inline void clear_has_lauid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 lauid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> param_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static GCBroadcastSystemNotice* default_instance_;
};
// -------------------------------------------------------------------

class GCPushNextDayReward : public ::google::protobuf::Message {
 public:
  GCPushNextDayReward();
  virtual ~GCPushNextDayReward();

  GCPushNextDayReward(const GCPushNextDayReward& from);

  inline GCPushNextDayReward& operator=(const GCPushNextDayReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPushNextDayReward& default_instance();

  void Swap(GCPushNextDayReward* other);

  // implements Message ----------------------------------------------

  GCPushNextDayReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPushNextDayReward& from);
  void MergeFrom(const GCPushNextDayReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 gettime = 2;
  inline bool has_gettime() const;
  inline void clear_gettime();
  static const int kGettimeFieldNumber = 2;
  inline ::google::protobuf::int64 gettime() const;
  inline void set_gettime(::google::protobuf::int64 value);

  // optional int64 servertime = 3;
  inline bool has_servertime() const;
  inline void clear_servertime();
  static const int kServertimeFieldNumber = 3;
  inline ::google::protobuf::int64 servertime() const;
  inline void set_servertime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCPushNextDayReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_gettime();
  inline void clear_has_gettime();
  inline void set_has_servertime();
  inline void clear_has_servertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 gettime_;
  ::google::protobuf::int64 servertime_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPushNextDayReward* default_instance_;
};
// -------------------------------------------------------------------

class CGGetNextDayReward : public ::google::protobuf::Message {
 public:
  CGGetNextDayReward();
  virtual ~CGGetNextDayReward();

  CGGetNextDayReward(const CGGetNextDayReward& from);

  inline CGGetNextDayReward& operator=(const CGGetNextDayReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetNextDayReward& default_instance();

  void Swap(CGGetNextDayReward* other);

  // implements Message ----------------------------------------------

  CGGetNextDayReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetNextDayReward& from);
  void MergeFrom(const CGGetNextDayReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetNextDayReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetNextDayReward* default_instance_;
};
// -------------------------------------------------------------------

class GCGetNextDayRewardBack : public ::google::protobuf::Message {
 public:
  GCGetNextDayRewardBack();
  virtual ~GCGetNextDayRewardBack();

  GCGetNextDayRewardBack(const GCGetNextDayRewardBack& from);

  inline GCGetNextDayRewardBack& operator=(const GCGetNextDayRewardBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetNextDayRewardBack& default_instance();

  void Swap(GCGetNextDayRewardBack* other);

  // implements Message ----------------------------------------------

  GCGetNextDayRewardBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetNextDayRewardBack& from);
  void MergeFrom(const GCGetNextDayRewardBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGetNextDayRewardBack)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetNextDayRewardBack* default_instance_;
};
// -------------------------------------------------------------------

class CGGetCDKReward : public ::google::protobuf::Message {
 public:
  CGGetCDKReward();
  virtual ~CGGetCDKReward();

  CGGetCDKReward(const CGGetCDKReward& from);

  inline CGGetCDKReward& operator=(const CGGetCDKReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetCDKReward& default_instance();

  void Swap(CGGetCDKReward* other);

  // implements Message ----------------------------------------------

  CGGetCDKReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetCDKReward& from);
  void MergeFrom(const CGGetCDKReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cdk = 1;
  inline bool has_cdk() const;
  inline void clear_cdk();
  static const int kCdkFieldNumber = 1;
  inline const ::std::string& cdk() const;
  inline void set_cdk(const ::std::string& value);
  inline void set_cdk(const char* value);
  inline void set_cdk(const char* value, size_t size);
  inline ::std::string* mutable_cdk();
  inline ::std::string* release_cdk();
  inline void set_allocated_cdk(::std::string* cdk);

  // @@protoc_insertion_point(class_scope:CGGetCDKReward)
 private:
  inline void set_has_cdk();
  inline void clear_has_cdk();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* cdk_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetCDKReward* default_instance_;
};
// -------------------------------------------------------------------

class GCGetCDKRewardBack : public ::google::protobuf::Message {
 public:
  GCGetCDKRewardBack();
  virtual ~GCGetCDKRewardBack();

  GCGetCDKRewardBack(const GCGetCDKRewardBack& from);

  inline GCGetCDKRewardBack& operator=(const GCGetCDKRewardBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetCDKRewardBack& default_instance();

  void Swap(GCGetCDKRewardBack* other);

  // implements Message ----------------------------------------------

  GCGetCDKRewardBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetCDKRewardBack& from);
  void MergeFrom(const GCGetCDKRewardBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCGetCDKRewardBack)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_VitalityMessage_2eproto();
  friend void protobuf_AssignDesc_VitalityMessage_2eproto();
  friend void protobuf_ShutdownFile_VitalityMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetCDKRewardBack* default_instance_;
};
// ===================================================================


// ===================================================================

// ActiveData

// optional int32 id = 1;
inline bool ActiveData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActiveData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActiveData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActiveData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ActiveData::id() const {
  // @@protoc_insertion_point(field_get:ActiveData.id)
  return id_;
}
inline void ActiveData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ActiveData.id)
}

// optional int32 count = 2;
inline bool ActiveData::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActiveData::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActiveData::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActiveData::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 ActiveData::count() const {
  // @@protoc_insertion_point(field_get:ActiveData.count)
  return count_;
}
inline void ActiveData::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:ActiveData.count)
}

// optional int32 totalCount = 3;
inline bool ActiveData::has_totalcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActiveData::set_has_totalcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActiveData::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActiveData::clear_totalcount() {
  totalcount_ = 0;
  clear_has_totalcount();
}
inline ::google::protobuf::int32 ActiveData::totalcount() const {
  // @@protoc_insertion_point(field_get:ActiveData.totalCount)
  return totalcount_;
}
inline void ActiveData::set_totalcount(::google::protobuf::int32 value) {
  set_has_totalcount();
  totalcount_ = value;
  // @@protoc_insertion_point(field_set:ActiveData.totalCount)
}

// optional int32 activeState = 4;
inline bool ActiveData::has_activestate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActiveData::set_has_activestate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActiveData::clear_has_activestate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActiveData::clear_activestate() {
  activestate_ = 0;
  clear_has_activestate();
}
inline ::google::protobuf::int32 ActiveData::activestate() const {
  // @@protoc_insertion_point(field_get:ActiveData.activeState)
  return activestate_;
}
inline void ActiveData::set_activestate(::google::protobuf::int32 value) {
  set_has_activestate();
  activestate_ = value;
  // @@protoc_insertion_point(field_set:ActiveData.activeState)
}

// optional int64 opentime = 5;
inline bool ActiveData::has_opentime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActiveData::set_has_opentime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActiveData::clear_has_opentime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActiveData::clear_opentime() {
  opentime_ = GOOGLE_LONGLONG(0);
  clear_has_opentime();
}
inline ::google::protobuf::int64 ActiveData::opentime() const {
  // @@protoc_insertion_point(field_get:ActiveData.opentime)
  return opentime_;
}
inline void ActiveData::set_opentime(::google::protobuf::int64 value) {
  set_has_opentime();
  opentime_ = value;
  // @@protoc_insertion_point(field_set:ActiveData.opentime)
}

// optional int32 openlevel = 6;
inline bool ActiveData::has_openlevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActiveData::set_has_openlevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActiveData::clear_has_openlevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActiveData::clear_openlevel() {
  openlevel_ = 0;
  clear_has_openlevel();
}
inline ::google::protobuf::int32 ActiveData::openlevel() const {
  // @@protoc_insertion_point(field_get:ActiveData.openlevel)
  return openlevel_;
}
inline void ActiveData::set_openlevel(::google::protobuf::int32 value) {
  set_has_openlevel();
  openlevel_ = value;
  // @@protoc_insertion_point(field_set:ActiveData.openlevel)
}

// -------------------------------------------------------------------

// PowerMedicalData

// optional int32 id = 1;
inline bool PowerMedicalData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PowerMedicalData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PowerMedicalData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PowerMedicalData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PowerMedicalData::id() const {
  // @@protoc_insertion_point(field_get:PowerMedicalData.id)
  return id_;
}
inline void PowerMedicalData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PowerMedicalData.id)
}

// optional int32 power = 2;
inline bool PowerMedicalData::has_power() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PowerMedicalData::set_has_power() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PowerMedicalData::clear_has_power() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PowerMedicalData::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 PowerMedicalData::power() const {
  // @@protoc_insertion_point(field_get:PowerMedicalData.power)
  return power_;
}
inline void PowerMedicalData::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:PowerMedicalData.power)
}

// -------------------------------------------------------------------

// ActiveStruct

// optional int32 rewardid = 1;
inline bool ActiveStruct::has_rewardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActiveStruct::set_has_rewardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActiveStruct::clear_has_rewardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActiveStruct::clear_rewardid() {
  rewardid_ = 0;
  clear_has_rewardid();
}
inline ::google::protobuf::int32 ActiveStruct::rewardid() const {
  // @@protoc_insertion_point(field_get:ActiveStruct.rewardid)
  return rewardid_;
}
inline void ActiveStruct::set_rewardid(::google::protobuf::int32 value) {
  set_has_rewardid();
  rewardid_ = value;
  // @@protoc_insertion_point(field_set:ActiveStruct.rewardid)
}

// optional int32 status = 2;
inline bool ActiveStruct::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActiveStruct::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActiveStruct::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActiveStruct::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ActiveStruct::status() const {
  // @@protoc_insertion_point(field_get:ActiveStruct.status)
  return status_;
}
inline void ActiveStruct::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ActiveStruct.status)
}

// -------------------------------------------------------------------

// CGOpenActive

// -------------------------------------------------------------------

// GCOpenActiveBack

// optional int32 sumact = 1;
inline bool GCOpenActiveBack::has_sumact() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCOpenActiveBack::set_has_sumact() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCOpenActiveBack::clear_has_sumact() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCOpenActiveBack::clear_sumact() {
  sumact_ = 0;
  clear_has_sumact();
}
inline ::google::protobuf::int32 GCOpenActiveBack::sumact() const {
  // @@protoc_insertion_point(field_get:GCOpenActiveBack.sumact)
  return sumact_;
}
inline void GCOpenActiveBack::set_sumact(::google::protobuf::int32 value) {
  set_has_sumact();
  sumact_ = value;
  // @@protoc_insertion_point(field_set:GCOpenActiveBack.sumact)
}

// repeated .ActiveData activedata = 2;
inline int GCOpenActiveBack::activedata_size() const {
  return activedata_.size();
}
inline void GCOpenActiveBack::clear_activedata() {
  activedata_.Clear();
}
inline const ::ActiveData& GCOpenActiveBack::activedata(int index) const {
  // @@protoc_insertion_point(field_get:GCOpenActiveBack.activedata)
  return activedata_.Get(index);
}
inline ::ActiveData* GCOpenActiveBack::mutable_activedata(int index) {
  // @@protoc_insertion_point(field_mutable:GCOpenActiveBack.activedata)
  return activedata_.Mutable(index);
}
inline ::ActiveData* GCOpenActiveBack::add_activedata() {
  // @@protoc_insertion_point(field_add:GCOpenActiveBack.activedata)
  return activedata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActiveData >&
GCOpenActiveBack::activedata() const {
  // @@protoc_insertion_point(field_list:GCOpenActiveBack.activedata)
  return activedata_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActiveData >*
GCOpenActiveBack::mutable_activedata() {
  // @@protoc_insertion_point(field_mutable_list:GCOpenActiveBack.activedata)
  return &activedata_;
}

// repeated .ActiveStruct actiestruct = 3;
inline int GCOpenActiveBack::actiestruct_size() const {
  return actiestruct_.size();
}
inline void GCOpenActiveBack::clear_actiestruct() {
  actiestruct_.Clear();
}
inline const ::ActiveStruct& GCOpenActiveBack::actiestruct(int index) const {
  // @@protoc_insertion_point(field_get:GCOpenActiveBack.actiestruct)
  return actiestruct_.Get(index);
}
inline ::ActiveStruct* GCOpenActiveBack::mutable_actiestruct(int index) {
  // @@protoc_insertion_point(field_mutable:GCOpenActiveBack.actiestruct)
  return actiestruct_.Mutable(index);
}
inline ::ActiveStruct* GCOpenActiveBack::add_actiestruct() {
  // @@protoc_insertion_point(field_add:GCOpenActiveBack.actiestruct)
  return actiestruct_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActiveStruct >&
GCOpenActiveBack::actiestruct() const {
  // @@protoc_insertion_point(field_list:GCOpenActiveBack.actiestruct)
  return actiestruct_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActiveStruct >*
GCOpenActiveBack::mutable_actiestruct() {
  // @@protoc_insertion_point(field_mutable_list:GCOpenActiveBack.actiestruct)
  return &actiestruct_;
}

// optional int32 resetFlag = 4;
inline bool GCOpenActiveBack::has_resetflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCOpenActiveBack::set_has_resetflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCOpenActiveBack::clear_has_resetflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCOpenActiveBack::clear_resetflag() {
  resetflag_ = 0;
  clear_has_resetflag();
}
inline ::google::protobuf::int32 GCOpenActiveBack::resetflag() const {
  // @@protoc_insertion_point(field_get:GCOpenActiveBack.resetFlag)
  return resetflag_;
}
inline void GCOpenActiveBack::set_resetflag(::google::protobuf::int32 value) {
  set_has_resetflag();
  resetflag_ = value;
  // @@protoc_insertion_point(field_set:GCOpenActiveBack.resetFlag)
}

// -------------------------------------------------------------------

// CGGetActiveReward

// optional int32 id = 1;
inline bool CGGetActiveReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetActiveReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetActiveReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetActiveReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGGetActiveReward::id() const {
  // @@protoc_insertion_point(field_get:CGGetActiveReward.id)
  return id_;
}
inline void CGGetActiveReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGGetActiveReward.id)
}

// -------------------------------------------------------------------

// GCGetActiveRewardBack

// optional int32 flag = 1;
inline bool GCGetActiveRewardBack::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetActiveRewardBack::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetActiveRewardBack::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetActiveRewardBack::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCGetActiveRewardBack::flag() const {
  // @@protoc_insertion_point(field_get:GCGetActiveRewardBack.flag)
  return flag_;
}
inline void GCGetActiveRewardBack::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCGetActiveRewardBack.flag)
}

// optional int32 rewardid = 2;
inline bool GCGetActiveRewardBack::has_rewardid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGetActiveRewardBack::set_has_rewardid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGetActiveRewardBack::clear_has_rewardid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGetActiveRewardBack::clear_rewardid() {
  rewardid_ = 0;
  clear_has_rewardid();
}
inline ::google::protobuf::int32 GCGetActiveRewardBack::rewardid() const {
  // @@protoc_insertion_point(field_get:GCGetActiveRewardBack.rewardid)
  return rewardid_;
}
inline void GCGetActiveRewardBack::set_rewardid(::google::protobuf::int32 value) {
  set_has_rewardid();
  rewardid_ = value;
  // @@protoc_insertion_point(field_set:GCGetActiveRewardBack.rewardid)
}

// -------------------------------------------------------------------

// CGGetPowerMedical

// -------------------------------------------------------------------

// GCGetPowerMedicalBack

// repeated .PowerMedicalData powerMedicalData = 1;
inline int GCGetPowerMedicalBack::powermedicaldata_size() const {
  return powermedicaldata_.size();
}
inline void GCGetPowerMedicalBack::clear_powermedicaldata() {
  powermedicaldata_.Clear();
}
inline const ::PowerMedicalData& GCGetPowerMedicalBack::powermedicaldata(int index) const {
  // @@protoc_insertion_point(field_get:GCGetPowerMedicalBack.powerMedicalData)
  return powermedicaldata_.Get(index);
}
inline ::PowerMedicalData* GCGetPowerMedicalBack::mutable_powermedicaldata(int index) {
  // @@protoc_insertion_point(field_mutable:GCGetPowerMedicalBack.powerMedicalData)
  return powermedicaldata_.Mutable(index);
}
inline ::PowerMedicalData* GCGetPowerMedicalBack::add_powermedicaldata() {
  // @@protoc_insertion_point(field_add:GCGetPowerMedicalBack.powerMedicalData)
  return powermedicaldata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PowerMedicalData >&
GCGetPowerMedicalBack::powermedicaldata() const {
  // @@protoc_insertion_point(field_list:GCGetPowerMedicalBack.powerMedicalData)
  return powermedicaldata_;
}
inline ::google::protobuf::RepeatedPtrField< ::PowerMedicalData >*
GCGetPowerMedicalBack::mutable_powermedicaldata() {
  // @@protoc_insertion_point(field_mutable_list:GCGetPowerMedicalBack.powerMedicalData)
  return &powermedicaldata_;
}

// -------------------------------------------------------------------

// CGDeepThinkOperation

// optional int32 type = 1;
inline bool CGDeepThinkOperation::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGDeepThinkOperation::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGDeepThinkOperation::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGDeepThinkOperation::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGDeepThinkOperation::type() const {
  // @@protoc_insertion_point(field_get:CGDeepThinkOperation.type)
  return type_;
}
inline void CGDeepThinkOperation::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGDeepThinkOperation.type)
}

// -------------------------------------------------------------------

// GCDeepThinkOperationBack

// optional int32 type = 1;
inline bool GCDeepThinkOperationBack::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCDeepThinkOperationBack::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCDeepThinkOperationBack::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCDeepThinkOperationBack::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCDeepThinkOperationBack::type() const {
  // @@protoc_insertion_point(field_get:GCDeepThinkOperationBack.type)
  return type_;
}
inline void GCDeepThinkOperationBack::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCDeepThinkOperationBack.type)
}

// optional int64 starttime = 2;
inline bool GCDeepThinkOperationBack::has_starttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCDeepThinkOperationBack::set_has_starttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCDeepThinkOperationBack::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCDeepThinkOperationBack::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::int64 GCDeepThinkOperationBack::starttime() const {
  // @@protoc_insertion_point(field_get:GCDeepThinkOperationBack.starttime)
  return starttime_;
}
inline void GCDeepThinkOperationBack::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:GCDeepThinkOperationBack.starttime)
}

// optional int64 endtime = 3;
inline bool GCDeepThinkOperationBack::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCDeepThinkOperationBack::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCDeepThinkOperationBack::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCDeepThinkOperationBack::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 GCDeepThinkOperationBack::endtime() const {
  // @@protoc_insertion_point(field_get:GCDeepThinkOperationBack.endtime)
  return endtime_;
}
inline void GCDeepThinkOperationBack::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:GCDeepThinkOperationBack.endtime)
}

// optional int64 duration = 4;
inline bool GCDeepThinkOperationBack::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCDeepThinkOperationBack::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCDeepThinkOperationBack::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCDeepThinkOperationBack::clear_duration() {
  duration_ = GOOGLE_LONGLONG(0);
  clear_has_duration();
}
inline ::google::protobuf::int64 GCDeepThinkOperationBack::duration() const {
  // @@protoc_insertion_point(field_get:GCDeepThinkOperationBack.duration)
  return duration_;
}
inline void GCDeepThinkOperationBack::set_duration(::google::protobuf::int64 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:GCDeepThinkOperationBack.duration)
}

// -------------------------------------------------------------------

// CGGetDeepThinkExp

// optional int32 mult = 1;
inline bool CGGetDeepThinkExp::has_mult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetDeepThinkExp::set_has_mult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetDeepThinkExp::clear_has_mult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetDeepThinkExp::clear_mult() {
  mult_ = 0;
  clear_has_mult();
}
inline ::google::protobuf::int32 CGGetDeepThinkExp::mult() const {
  // @@protoc_insertion_point(field_get:CGGetDeepThinkExp.mult)
  return mult_;
}
inline void CGGetDeepThinkExp::set_mult(::google::protobuf::int32 value) {
  set_has_mult();
  mult_ = value;
  // @@protoc_insertion_point(field_set:CGGetDeepThinkExp.mult)
}

// -------------------------------------------------------------------

// GCGetDeepThinkExpBack

// optional int32 flag = 1;
inline bool GCGetDeepThinkExpBack::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetDeepThinkExpBack::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetDeepThinkExpBack::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetDeepThinkExpBack::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCGetDeepThinkExpBack::flag() const {
  // @@protoc_insertion_point(field_get:GCGetDeepThinkExpBack.flag)
  return flag_;
}
inline void GCGetDeepThinkExpBack::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCGetDeepThinkExpBack.flag)
}

// -------------------------------------------------------------------

// GCBroadcastSystemNotice

// optional int32 type = 1;
inline bool GCBroadcastSystemNotice::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCBroadcastSystemNotice::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCBroadcastSystemNotice::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCBroadcastSystemNotice::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCBroadcastSystemNotice::type() const {
  // @@protoc_insertion_point(field_get:GCBroadcastSystemNotice.type)
  return type_;
}
inline void GCBroadcastSystemNotice::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCBroadcastSystemNotice.type)
}

// optional int32 lauId = 2;
inline bool GCBroadcastSystemNotice::has_lauid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCBroadcastSystemNotice::set_has_lauid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCBroadcastSystemNotice::clear_has_lauid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCBroadcastSystemNotice::clear_lauid() {
  lauid_ = 0;
  clear_has_lauid();
}
inline ::google::protobuf::int32 GCBroadcastSystemNotice::lauid() const {
  // @@protoc_insertion_point(field_get:GCBroadcastSystemNotice.lauId)
  return lauid_;
}
inline void GCBroadcastSystemNotice::set_lauid(::google::protobuf::int32 value) {
  set_has_lauid();
  lauid_ = value;
  // @@protoc_insertion_point(field_set:GCBroadcastSystemNotice.lauId)
}

// repeated string param = 3;
inline int GCBroadcastSystemNotice::param_size() const {
  return param_.size();
}
inline void GCBroadcastSystemNotice::clear_param() {
  param_.Clear();
}
inline const ::std::string& GCBroadcastSystemNotice::param(int index) const {
  // @@protoc_insertion_point(field_get:GCBroadcastSystemNotice.param)
  return param_.Get(index);
}
inline ::std::string* GCBroadcastSystemNotice::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:GCBroadcastSystemNotice.param)
  return param_.Mutable(index);
}
inline void GCBroadcastSystemNotice::set_param(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:GCBroadcastSystemNotice.param)
  param_.Mutable(index)->assign(value);
}
inline void GCBroadcastSystemNotice::set_param(int index, const char* value) {
  param_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:GCBroadcastSystemNotice.param)
}
inline void GCBroadcastSystemNotice::set_param(int index, const char* value, size_t size) {
  param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCBroadcastSystemNotice.param)
}
inline ::std::string* GCBroadcastSystemNotice::add_param() {
  return param_.Add();
}
inline void GCBroadcastSystemNotice::add_param(const ::std::string& value) {
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:GCBroadcastSystemNotice.param)
}
inline void GCBroadcastSystemNotice::add_param(const char* value) {
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:GCBroadcastSystemNotice.param)
}
inline void GCBroadcastSystemNotice::add_param(const char* value, size_t size) {
  param_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:GCBroadcastSystemNotice.param)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GCBroadcastSystemNotice::param() const {
  // @@protoc_insertion_point(field_list:GCBroadcastSystemNotice.param)
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GCBroadcastSystemNotice::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:GCBroadcastSystemNotice.param)
  return &param_;
}

// -------------------------------------------------------------------

// GCPushNextDayReward

// optional int32 id = 1;
inline bool GCPushNextDayReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPushNextDayReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPushNextDayReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPushNextDayReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GCPushNextDayReward::id() const {
  // @@protoc_insertion_point(field_get:GCPushNextDayReward.id)
  return id_;
}
inline void GCPushNextDayReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GCPushNextDayReward.id)
}

// optional int64 gettime = 2;
inline bool GCPushNextDayReward::has_gettime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCPushNextDayReward::set_has_gettime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCPushNextDayReward::clear_has_gettime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCPushNextDayReward::clear_gettime() {
  gettime_ = GOOGLE_LONGLONG(0);
  clear_has_gettime();
}
inline ::google::protobuf::int64 GCPushNextDayReward::gettime() const {
  // @@protoc_insertion_point(field_get:GCPushNextDayReward.gettime)
  return gettime_;
}
inline void GCPushNextDayReward::set_gettime(::google::protobuf::int64 value) {
  set_has_gettime();
  gettime_ = value;
  // @@protoc_insertion_point(field_set:GCPushNextDayReward.gettime)
}

// optional int64 servertime = 3;
inline bool GCPushNextDayReward::has_servertime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCPushNextDayReward::set_has_servertime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCPushNextDayReward::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCPushNextDayReward::clear_servertime() {
  servertime_ = GOOGLE_LONGLONG(0);
  clear_has_servertime();
}
inline ::google::protobuf::int64 GCPushNextDayReward::servertime() const {
  // @@protoc_insertion_point(field_get:GCPushNextDayReward.servertime)
  return servertime_;
}
inline void GCPushNextDayReward::set_servertime(::google::protobuf::int64 value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:GCPushNextDayReward.servertime)
}

// -------------------------------------------------------------------

// CGGetNextDayReward

// optional int32 id = 1;
inline bool CGGetNextDayReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetNextDayReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetNextDayReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetNextDayReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGGetNextDayReward::id() const {
  // @@protoc_insertion_point(field_get:CGGetNextDayReward.id)
  return id_;
}
inline void CGGetNextDayReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGGetNextDayReward.id)
}

// -------------------------------------------------------------------

// GCGetNextDayRewardBack

// optional int32 flag = 1;
inline bool GCGetNextDayRewardBack::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetNextDayRewardBack::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetNextDayRewardBack::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetNextDayRewardBack::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCGetNextDayRewardBack::flag() const {
  // @@protoc_insertion_point(field_get:GCGetNextDayRewardBack.flag)
  return flag_;
}
inline void GCGetNextDayRewardBack::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCGetNextDayRewardBack.flag)
}

// -------------------------------------------------------------------

// CGGetCDKReward

// optional string cdk = 1;
inline bool CGGetCDKReward::has_cdk() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetCDKReward::set_has_cdk() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetCDKReward::clear_has_cdk() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetCDKReward::clear_cdk() {
  if (cdk_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cdk_->clear();
  }
  clear_has_cdk();
}
inline const ::std::string& CGGetCDKReward::cdk() const {
  // @@protoc_insertion_point(field_get:CGGetCDKReward.cdk)
  return *cdk_;
}
inline void CGGetCDKReward::set_cdk(const ::std::string& value) {
  set_has_cdk();
  if (cdk_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cdk_ = new ::std::string;
  }
  cdk_->assign(value);
  // @@protoc_insertion_point(field_set:CGGetCDKReward.cdk)
}
inline void CGGetCDKReward::set_cdk(const char* value) {
  set_has_cdk();
  if (cdk_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cdk_ = new ::std::string;
  }
  cdk_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGGetCDKReward.cdk)
}
inline void CGGetCDKReward::set_cdk(const char* value, size_t size) {
  set_has_cdk();
  if (cdk_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cdk_ = new ::std::string;
  }
  cdk_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGGetCDKReward.cdk)
}
inline ::std::string* CGGetCDKReward::mutable_cdk() {
  set_has_cdk();
  if (cdk_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cdk_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGGetCDKReward.cdk)
  return cdk_;
}
inline ::std::string* CGGetCDKReward::release_cdk() {
  clear_has_cdk();
  if (cdk_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = cdk_;
    cdk_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGGetCDKReward::set_allocated_cdk(::std::string* cdk) {
  if (cdk_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cdk_;
  }
  if (cdk) {
    set_has_cdk();
    cdk_ = cdk;
  } else {
    clear_has_cdk();
    cdk_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGGetCDKReward.cdk)
}

// -------------------------------------------------------------------

// GCGetCDKRewardBack

// optional int32 flag = 1;
inline bool GCGetCDKRewardBack::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetCDKRewardBack::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetCDKRewardBack::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetCDKRewardBack::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCGetCDKRewardBack::flag() const {
  // @@protoc_insertion_point(field_get:GCGetCDKRewardBack.flag)
  return flag_;
}
inline void GCGetCDKRewardBack::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCGetCDKRewardBack.flag)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_VitalityMessage_2eproto__INCLUDED
