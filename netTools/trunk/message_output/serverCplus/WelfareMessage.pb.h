// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WelfareMessage.proto

#ifndef PROTOBUF_WelfareMessage_2eproto__INCLUDED
#define PROTOBUF_WelfareMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "InnerMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WelfareMessage_2eproto();
void protobuf_AssignDesc_WelfareMessage_2eproto();
void protobuf_ShutdownFile_WelfareMessage_2eproto();

class WelfareItem;
class WelfareStruct;
class GCPushWelfare;
class SprintTime;
class GCWelfare;
class CGOpenWelfare;
class GCOpenOnLineWelfareBack;
class CGGetWelfareReward;
class GCGetWelfareRewardBack;
class CGGetLevelRewardOver;
class GCGetLevelRewardOverBack;
class GCPushContinuousLandDayNum;
class CGContinuousLandOver;
class GCContinuousLandOverBack;
class CGRequestGetReward;
class GCRequestGetRewardBack;
class CGDailyShare;
class GCDailyShare;
class CGGetLoginReward;
class GCGetLoginReward;
class ShareRewardInfo;
class GCShareRewardInfo;
class CGGetShareReward;
class GCGetShareReward;
class GCOnlineViewSts;
class CGRwdOnLineGift;
class GCRwdOnLineGift;
class GCDoubleExpmsg;

// ===================================================================

class WelfareItem : public ::google::protobuf::Message {
 public:
  WelfareItem();
  virtual ~WelfareItem();

  WelfareItem(const WelfareItem& from);

  inline WelfareItem& operator=(const WelfareItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareItem& default_instance();

  void Swap(WelfareItem* other);

  // implements Message ----------------------------------------------

  WelfareItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareItem& from);
  void MergeFrom(const WelfareItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 temId = 1;
  inline bool has_temid() const;
  inline void clear_temid();
  static const int kTemIdFieldNumber = 1;
  inline ::google::protobuf::int32 temid() const;
  inline void set_temid(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 bind = 3;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 3;
  inline ::google::protobuf::int32 bind() const;
  inline void set_bind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WelfareItem)
 private:
  inline void set_has_temid();
  inline void clear_has_temid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_bind();
  inline void clear_has_bind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 temid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 bind_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static WelfareItem* default_instance_;
};
// -------------------------------------------------------------------

class WelfareStruct : public ::google::protobuf::Message {
 public:
  WelfareStruct();
  virtual ~WelfareStruct();

  WelfareStruct(const WelfareStruct& from);

  inline WelfareStruct& operator=(const WelfareStruct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelfareStruct& default_instance();

  void Swap(WelfareStruct* other);

  // implements Message ----------------------------------------------

  WelfareStruct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelfareStruct& from);
  void MergeFrom(const WelfareStruct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .WelfareItem items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::WelfareItem& items(int index) const;
  inline ::WelfareItem* mutable_items(int index);
  inline ::WelfareItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::WelfareItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::WelfareItem >*
      mutable_items();

  // optional int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 sprintType = 4;
  inline bool has_sprinttype() const;
  inline void clear_sprinttype();
  static const int kSprintTypeFieldNumber = 4;
  inline ::google::protobuf::int32 sprinttype() const;
  inline void set_sprinttype(::google::protobuf::int32 value);

  // optional int64 param = 5;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 5;
  inline ::google::protobuf::int64 param() const;
  inline void set_param(::google::protobuf::int64 value);

  // optional string showRew = 6;
  inline bool has_showrew() const;
  inline void clear_showrew();
  static const int kShowRewFieldNumber = 6;
  inline const ::std::string& showrew() const;
  inline void set_showrew(const ::std::string& value);
  inline void set_showrew(const char* value);
  inline void set_showrew(const char* value, size_t size);
  inline ::std::string* mutable_showrew();
  inline ::std::string* release_showrew();
  inline void set_allocated_showrew(::std::string* showrew);

  // optional string showName = 7;
  inline bool has_showname() const;
  inline void clear_showname();
  static const int kShowNameFieldNumber = 7;
  inline const ::std::string& showname() const;
  inline void set_showname(const ::std::string& value);
  inline void set_showname(const char* value);
  inline void set_showname(const char* value, size_t size);
  inline ::std::string* mutable_showname();
  inline ::std::string* release_showname();
  inline void set_allocated_showname(::std::string* showname);

  // @@protoc_insertion_point(class_scope:WelfareStruct)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_sprinttype();
  inline void clear_has_sprinttype();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_showrew();
  inline void clear_has_showrew();
  inline void set_has_showname();
  inline void clear_has_showname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WelfareItem > items_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int64 param_;
  ::std::string* showrew_;
  ::std::string* showname_;
  ::google::protobuf::int32 sprinttype_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static WelfareStruct* default_instance_;
};
// -------------------------------------------------------------------

class GCPushWelfare : public ::google::protobuf::Message {
 public:
  GCPushWelfare();
  virtual ~GCPushWelfare();

  GCPushWelfare(const GCPushWelfare& from);

  inline GCPushWelfare& operator=(const GCPushWelfare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPushWelfare& default_instance();

  void Swap(GCPushWelfare* other);

  // implements Message ----------------------------------------------

  GCPushWelfare* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPushWelfare& from);
  void MergeFrom(const GCPushWelfare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 welfareType = 1;
  inline bool has_welfaretype() const;
  inline void clear_welfaretype();
  static const int kWelfareTypeFieldNumber = 1;
  inline ::google::protobuf::int32 welfaretype() const;
  inline void set_welfaretype(::google::protobuf::int32 value);

  // repeated .WelfareStruct welfareStruct = 2;
  inline int welfarestruct_size() const;
  inline void clear_welfarestruct();
  static const int kWelfareStructFieldNumber = 2;
  inline const ::WelfareStruct& welfarestruct(int index) const;
  inline ::WelfareStruct* mutable_welfarestruct(int index);
  inline ::WelfareStruct* add_welfarestruct();
  inline const ::google::protobuf::RepeatedPtrField< ::WelfareStruct >&
      welfarestruct() const;
  inline ::google::protobuf::RepeatedPtrField< ::WelfareStruct >*
      mutable_welfarestruct();

  // repeated .SprintTime sprintTime = 3;
  inline int sprinttime_size() const;
  inline void clear_sprinttime();
  static const int kSprintTimeFieldNumber = 3;
  inline const ::SprintTime& sprinttime(int index) const;
  inline ::SprintTime* mutable_sprinttime(int index);
  inline ::SprintTime* add_sprinttime();
  inline const ::google::protobuf::RepeatedPtrField< ::SprintTime >&
      sprinttime() const;
  inline ::google::protobuf::RepeatedPtrField< ::SprintTime >*
      mutable_sprinttime();

  // optional int32 actDays = 4;
  inline bool has_actdays() const;
  inline void clear_actdays();
  static const int kActDaysFieldNumber = 4;
  inline ::google::protobuf::int32 actdays() const;
  inline void set_actdays(::google::protobuf::int32 value);

  // optional int32 payNum = 5;
  inline bool has_paynum() const;
  inline void clear_paynum();
  static const int kPayNumFieldNumber = 5;
  inline ::google::protobuf::int32 paynum() const;
  inline void set_paynum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCPushWelfare)
 private:
  inline void set_has_welfaretype();
  inline void clear_has_welfaretype();
  inline void set_has_actdays();
  inline void clear_has_actdays();
  inline void set_has_paynum();
  inline void clear_has_paynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WelfareStruct > welfarestruct_;
  ::google::protobuf::int32 welfaretype_;
  ::google::protobuf::int32 actdays_;
  ::google::protobuf::RepeatedPtrField< ::SprintTime > sprinttime_;
  ::google::protobuf::int32 paynum_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPushWelfare* default_instance_;
};
// -------------------------------------------------------------------

class SprintTime : public ::google::protobuf::Message {
 public:
  SprintTime();
  virtual ~SprintTime();

  SprintTime(const SprintTime& from);

  inline SprintTime& operator=(const SprintTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SprintTime& default_instance();

  void Swap(SprintTime* other);

  // implements Message ----------------------------------------------

  SprintTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SprintTime& from);
  void MergeFrom(const SprintTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sprintType = 1;
  inline bool has_sprinttype() const;
  inline void clear_sprinttype();
  static const int kSprintTypeFieldNumber = 1;
  inline ::google::protobuf::int32 sprinttype() const;
  inline void set_sprinttype(::google::protobuf::int32 value);

  // optional string stateTime = 2;
  inline bool has_statetime() const;
  inline void clear_statetime();
  static const int kStateTimeFieldNumber = 2;
  inline const ::std::string& statetime() const;
  inline void set_statetime(const ::std::string& value);
  inline void set_statetime(const char* value);
  inline void set_statetime(const char* value, size_t size);
  inline ::std::string* mutable_statetime();
  inline ::std::string* release_statetime();
  inline void set_allocated_statetime(::std::string* statetime);

  // optional string endTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline const ::std::string& endtime() const;
  inline void set_endtime(const ::std::string& value);
  inline void set_endtime(const char* value);
  inline void set_endtime(const char* value, size_t size);
  inline ::std::string* mutable_endtime();
  inline ::std::string* release_endtime();
  inline void set_allocated_endtime(::std::string* endtime);

  // optional int32 openType = 4;
  inline bool has_opentype() const;
  inline void clear_opentype();
  static const int kOpenTypeFieldNumber = 4;
  inline ::google::protobuf::int32 opentype() const;
  inline void set_opentype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SprintTime)
 private:
  inline void set_has_sprinttype();
  inline void clear_has_sprinttype();
  inline void set_has_statetime();
  inline void clear_has_statetime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_opentype();
  inline void clear_has_opentype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* statetime_;
  ::google::protobuf::int32 sprinttype_;
  ::google::protobuf::int32 opentype_;
  ::std::string* endtime_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static SprintTime* default_instance_;
};
// -------------------------------------------------------------------

class GCWelfare : public ::google::protobuf::Message {
 public:
  GCWelfare();
  virtual ~GCWelfare();

  GCWelfare(const GCWelfare& from);

  inline GCWelfare& operator=(const GCWelfare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCWelfare& default_instance();

  void Swap(GCWelfare* other);

  // implements Message ----------------------------------------------

  GCWelfare* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCWelfare& from);
  void MergeFrom(const GCWelfare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sprintType = 1;
  inline bool has_sprinttype() const;
  inline void clear_sprinttype();
  static const int kSprintTypeFieldNumber = 1;
  inline ::google::protobuf::int32 sprinttype() const;
  inline void set_sprinttype(::google::protobuf::int32 value);

  // optional string stateTime = 2;
  inline bool has_statetime() const;
  inline void clear_statetime();
  static const int kStateTimeFieldNumber = 2;
  inline const ::std::string& statetime() const;
  inline void set_statetime(const ::std::string& value);
  inline void set_statetime(const char* value);
  inline void set_statetime(const char* value, size_t size);
  inline ::std::string* mutable_statetime();
  inline ::std::string* release_statetime();
  inline void set_allocated_statetime(::std::string* statetime);

  // optional string endTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline const ::std::string& endtime() const;
  inline void set_endtime(const ::std::string& value);
  inline void set_endtime(const char* value);
  inline void set_endtime(const char* value, size_t size);
  inline ::std::string* mutable_endtime();
  inline ::std::string* release_endtime();
  inline void set_allocated_endtime(::std::string* endtime);

  // optional int32 openType = 4;
  inline bool has_opentype() const;
  inline void clear_opentype();
  static const int kOpenTypeFieldNumber = 4;
  inline ::google::protobuf::int32 opentype() const;
  inline void set_opentype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCWelfare)
 private:
  inline void set_has_sprinttype();
  inline void clear_has_sprinttype();
  inline void set_has_statetime();
  inline void clear_has_statetime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_opentype();
  inline void clear_has_opentype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* statetime_;
  ::google::protobuf::int32 sprinttype_;
  ::google::protobuf::int32 opentype_;
  ::std::string* endtime_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCWelfare* default_instance_;
};
// -------------------------------------------------------------------

class CGOpenWelfare : public ::google::protobuf::Message {
 public:
  CGOpenWelfare();
  virtual ~CGOpenWelfare();

  CGOpenWelfare(const CGOpenWelfare& from);

  inline CGOpenWelfare& operator=(const CGOpenWelfare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGOpenWelfare& default_instance();

  void Swap(CGOpenWelfare* other);

  // implements Message ----------------------------------------------

  CGOpenWelfare* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGOpenWelfare& from);
  void MergeFrom(const CGOpenWelfare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGOpenWelfare)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static CGOpenWelfare* default_instance_;
};
// -------------------------------------------------------------------

class GCOpenOnLineWelfareBack : public ::google::protobuf::Message {
 public:
  GCOpenOnLineWelfareBack();
  virtual ~GCOpenOnLineWelfareBack();

  GCOpenOnLineWelfareBack(const GCOpenOnLineWelfareBack& from);

  inline GCOpenOnLineWelfareBack& operator=(const GCOpenOnLineWelfareBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCOpenOnLineWelfareBack& default_instance();

  void Swap(GCOpenOnLineWelfareBack* other);

  // implements Message ----------------------------------------------

  GCOpenOnLineWelfareBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCOpenOnLineWelfareBack& from);
  void MergeFrom(const GCOpenOnLineWelfareBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 onlinetime = 1;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlinetimeFieldNumber = 1;
  inline ::google::protobuf::int64 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GCOpenOnLineWelfareBack)
 private:
  inline void set_has_onlinetime();
  inline void clear_has_onlinetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 onlinetime_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCOpenOnLineWelfareBack* default_instance_;
};
// -------------------------------------------------------------------

class CGGetWelfareReward : public ::google::protobuf::Message {
 public:
  CGGetWelfareReward();
  virtual ~CGGetWelfareReward();

  CGGetWelfareReward(const CGGetWelfareReward& from);

  inline CGGetWelfareReward& operator=(const CGGetWelfareReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetWelfareReward& default_instance();

  void Swap(CGGetWelfareReward* other);

  // implements Message ----------------------------------------------

  CGGetWelfareReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetWelfareReward& from);
  void MergeFrom(const CGGetWelfareReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 welfareType = 1;
  inline bool has_welfaretype() const;
  inline void clear_welfaretype();
  static const int kWelfareTypeFieldNumber = 1;
  inline ::google::protobuf::int32 welfaretype() const;
  inline void set_welfaretype(::google::protobuf::int32 value);

  // optional int32 temId = 2;
  inline bool has_temid() const;
  inline void clear_temid();
  static const int kTemIdFieldNumber = 2;
  inline ::google::protobuf::int32 temid() const;
  inline void set_temid(::google::protobuf::int32 value);

  // optional int32 sprintType = 3;
  inline bool has_sprinttype() const;
  inline void clear_sprinttype();
  static const int kSprintTypeFieldNumber = 3;
  inline ::google::protobuf::int32 sprinttype() const;
  inline void set_sprinttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetWelfareReward)
 private:
  inline void set_has_welfaretype();
  inline void clear_has_welfaretype();
  inline void set_has_temid();
  inline void clear_has_temid();
  inline void set_has_sprinttype();
  inline void clear_has_sprinttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 welfaretype_;
  ::google::protobuf::int32 temid_;
  ::google::protobuf::int32 sprinttype_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetWelfareReward* default_instance_;
};
// -------------------------------------------------------------------

class GCGetWelfareRewardBack : public ::google::protobuf::Message {
 public:
  GCGetWelfareRewardBack();
  virtual ~GCGetWelfareRewardBack();

  GCGetWelfareRewardBack(const GCGetWelfareRewardBack& from);

  inline GCGetWelfareRewardBack& operator=(const GCGetWelfareRewardBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetWelfareRewardBack& default_instance();

  void Swap(GCGetWelfareRewardBack* other);

  // implements Message ----------------------------------------------

  GCGetWelfareRewardBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetWelfareRewardBack& from);
  void MergeFrom(const GCGetWelfareRewardBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 welfareType = 1;
  inline bool has_welfaretype() const;
  inline void clear_welfaretype();
  static const int kWelfareTypeFieldNumber = 1;
  inline ::google::protobuf::int32 welfaretype() const;
  inline void set_welfaretype(::google::protobuf::int32 value);

  // repeated .WelfareStruct welfareStruct = 2;
  inline int welfarestruct_size() const;
  inline void clear_welfarestruct();
  static const int kWelfareStructFieldNumber = 2;
  inline const ::WelfareStruct& welfarestruct(int index) const;
  inline ::WelfareStruct* mutable_welfarestruct(int index);
  inline ::WelfareStruct* add_welfarestruct();
  inline const ::google::protobuf::RepeatedPtrField< ::WelfareStruct >&
      welfarestruct() const;
  inline ::google::protobuf::RepeatedPtrField< ::WelfareStruct >*
      mutable_welfarestruct();

  // @@protoc_insertion_point(class_scope:GCGetWelfareRewardBack)
 private:
  inline void set_has_welfaretype();
  inline void clear_has_welfaretype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WelfareStruct > welfarestruct_;
  ::google::protobuf::int32 welfaretype_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetWelfareRewardBack* default_instance_;
};
// -------------------------------------------------------------------

class CGGetLevelRewardOver : public ::google::protobuf::Message {
 public:
  CGGetLevelRewardOver();
  virtual ~CGGetLevelRewardOver();

  CGGetLevelRewardOver(const CGGetLevelRewardOver& from);

  inline CGGetLevelRewardOver& operator=(const CGGetLevelRewardOver& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetLevelRewardOver& default_instance();

  void Swap(CGGetLevelRewardOver* other);

  // implements Message ----------------------------------------------

  CGGetLevelRewardOver* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetLevelRewardOver& from);
  void MergeFrom(const CGGetLevelRewardOver& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetLevelRewardOver)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetLevelRewardOver* default_instance_;
};
// -------------------------------------------------------------------

class GCGetLevelRewardOverBack : public ::google::protobuf::Message {
 public:
  GCGetLevelRewardOverBack();
  virtual ~GCGetLevelRewardOverBack();

  GCGetLevelRewardOverBack(const GCGetLevelRewardOverBack& from);

  inline GCGetLevelRewardOverBack& operator=(const GCGetLevelRewardOverBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetLevelRewardOverBack& default_instance();

  void Swap(GCGetLevelRewardOverBack* other);

  // implements Message ----------------------------------------------

  GCGetLevelRewardOverBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetLevelRewardOverBack& from);
  void MergeFrom(const GCGetLevelRewardOverBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // repeated .WelfareStruct welfareStruct = 2;
  inline int welfarestruct_size() const;
  inline void clear_welfarestruct();
  static const int kWelfareStructFieldNumber = 2;
  inline const ::WelfareStruct& welfarestruct(int index) const;
  inline ::WelfareStruct* mutable_welfarestruct(int index);
  inline ::WelfareStruct* add_welfarestruct();
  inline const ::google::protobuf::RepeatedPtrField< ::WelfareStruct >&
      welfarestruct() const;
  inline ::google::protobuf::RepeatedPtrField< ::WelfareStruct >*
      mutable_welfarestruct();

  // @@protoc_insertion_point(class_scope:GCGetLevelRewardOverBack)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WelfareStruct > welfarestruct_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetLevelRewardOverBack* default_instance_;
};
// -------------------------------------------------------------------

class GCPushContinuousLandDayNum : public ::google::protobuf::Message {
 public:
  GCPushContinuousLandDayNum();
  virtual ~GCPushContinuousLandDayNum();

  GCPushContinuousLandDayNum(const GCPushContinuousLandDayNum& from);

  inline GCPushContinuousLandDayNum& operator=(const GCPushContinuousLandDayNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCPushContinuousLandDayNum& default_instance();

  void Swap(GCPushContinuousLandDayNum* other);

  // implements Message ----------------------------------------------

  GCPushContinuousLandDayNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCPushContinuousLandDayNum& from);
  void MergeFrom(const GCPushContinuousLandDayNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dayNum = 1;
  inline bool has_daynum() const;
  inline void clear_daynum();
  static const int kDayNumFieldNumber = 1;
  inline ::google::protobuf::int32 daynum() const;
  inline void set_daynum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCPushContinuousLandDayNum)
 private:
  inline void set_has_daynum();
  inline void clear_has_daynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 daynum_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCPushContinuousLandDayNum* default_instance_;
};
// -------------------------------------------------------------------

class CGContinuousLandOver : public ::google::protobuf::Message {
 public:
  CGContinuousLandOver();
  virtual ~CGContinuousLandOver();

  CGContinuousLandOver(const CGContinuousLandOver& from);

  inline CGContinuousLandOver& operator=(const CGContinuousLandOver& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGContinuousLandOver& default_instance();

  void Swap(CGContinuousLandOver* other);

  // implements Message ----------------------------------------------

  CGContinuousLandOver* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGContinuousLandOver& from);
  void MergeFrom(const CGContinuousLandOver& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGContinuousLandOver)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static CGContinuousLandOver* default_instance_;
};
// -------------------------------------------------------------------

class GCContinuousLandOverBack : public ::google::protobuf::Message {
 public:
  GCContinuousLandOverBack();
  virtual ~GCContinuousLandOverBack();

  GCContinuousLandOverBack(const GCContinuousLandOverBack& from);

  inline GCContinuousLandOverBack& operator=(const GCContinuousLandOverBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCContinuousLandOverBack& default_instance();

  void Swap(GCContinuousLandOverBack* other);

  // implements Message ----------------------------------------------

  GCContinuousLandOverBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCContinuousLandOverBack& from);
  void MergeFrom(const GCContinuousLandOverBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // repeated .WelfareStruct welfareStruct = 2;
  inline int welfarestruct_size() const;
  inline void clear_welfarestruct();
  static const int kWelfareStructFieldNumber = 2;
  inline const ::WelfareStruct& welfarestruct(int index) const;
  inline ::WelfareStruct* mutable_welfarestruct(int index);
  inline ::WelfareStruct* add_welfarestruct();
  inline const ::google::protobuf::RepeatedPtrField< ::WelfareStruct >&
      welfarestruct() const;
  inline ::google::protobuf::RepeatedPtrField< ::WelfareStruct >*
      mutable_welfarestruct();

  // @@protoc_insertion_point(class_scope:GCContinuousLandOverBack)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WelfareStruct > welfarestruct_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCContinuousLandOverBack* default_instance_;
};
// -------------------------------------------------------------------

class CGRequestGetReward : public ::google::protobuf::Message {
 public:
  CGRequestGetReward();
  virtual ~CGRequestGetReward();

  CGRequestGetReward(const CGRequestGetReward& from);

  inline CGRequestGetReward& operator=(const CGRequestGetReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGRequestGetReward& default_instance();

  void Swap(CGRequestGetReward* other);

  // implements Message ----------------------------------------------

  CGRequestGetReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGRequestGetReward& from);
  void MergeFrom(const CGRequestGetReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGRequestGetReward)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static CGRequestGetReward* default_instance_;
};
// -------------------------------------------------------------------

class GCRequestGetRewardBack : public ::google::protobuf::Message {
 public:
  GCRequestGetRewardBack();
  virtual ~GCRequestGetRewardBack();

  GCRequestGetRewardBack(const GCRequestGetRewardBack& from);

  inline GCRequestGetRewardBack& operator=(const GCRequestGetRewardBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRequestGetRewardBack& default_instance();

  void Swap(GCRequestGetRewardBack* other);

  // implements Message ----------------------------------------------

  GCRequestGetRewardBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRequestGetRewardBack& from);
  void MergeFrom(const GCRequestGetRewardBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCRequestGetRewardBack)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRequestGetRewardBack* default_instance_;
};
// -------------------------------------------------------------------

class CGDailyShare : public ::google::protobuf::Message {
 public:
  CGDailyShare();
  virtual ~CGDailyShare();

  CGDailyShare(const CGDailyShare& from);

  inline CGDailyShare& operator=(const CGDailyShare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGDailyShare& default_instance();

  void Swap(CGDailyShare* other);

  // implements Message ----------------------------------------------

  CGDailyShare* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGDailyShare& from);
  void MergeFrom(const CGDailyShare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGDailyShare)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static CGDailyShare* default_instance_;
};
// -------------------------------------------------------------------

class GCDailyShare : public ::google::protobuf::Message {
 public:
  GCDailyShare();
  virtual ~GCDailyShare();

  GCDailyShare(const GCDailyShare& from);

  inline GCDailyShare& operator=(const GCDailyShare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDailyShare& default_instance();

  void Swap(GCDailyShare* other);

  // implements Message ----------------------------------------------

  GCDailyShare* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDailyShare& from);
  void MergeFrom(const GCDailyShare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCDailyShare)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDailyShare* default_instance_;
};
// -------------------------------------------------------------------

class CGGetLoginReward : public ::google::protobuf::Message {
 public:
  CGGetLoginReward();
  virtual ~CGGetLoginReward();

  CGGetLoginReward(const CGGetLoginReward& from);

  inline CGGetLoginReward& operator=(const CGGetLoginReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetLoginReward& default_instance();

  void Swap(CGGetLoginReward* other);

  // implements Message ----------------------------------------------

  CGGetLoginReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetLoginReward& from);
  void MergeFrom(const CGGetLoginReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetLoginReward)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetLoginReward* default_instance_;
};
// -------------------------------------------------------------------

class GCGetLoginReward : public ::google::protobuf::Message {
 public:
  GCGetLoginReward();
  virtual ~GCGetLoginReward();

  GCGetLoginReward(const GCGetLoginReward& from);

  inline GCGetLoginReward& operator=(const GCGetLoginReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetLoginReward& default_instance();

  void Swap(GCGetLoginReward* other);

  // implements Message ----------------------------------------------

  GCGetLoginReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetLoginReward& from);
  void MergeFrom(const GCGetLoginReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional .WelfareStruct welfareStruct = 3;
  inline bool has_welfarestruct() const;
  inline void clear_welfarestruct();
  static const int kWelfareStructFieldNumber = 3;
  inline const ::WelfareStruct& welfarestruct() const;
  inline ::WelfareStruct* mutable_welfarestruct();
  inline ::WelfareStruct* release_welfarestruct();
  inline void set_allocated_welfarestruct(::WelfareStruct* welfarestruct);

  // @@protoc_insertion_point(class_scope:GCGetLoginReward)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_welfarestruct();
  inline void clear_has_welfarestruct();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 flag_;
  ::WelfareStruct* welfarestruct_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetLoginReward* default_instance_;
};
// -------------------------------------------------------------------

class ShareRewardInfo : public ::google::protobuf::Message {
 public:
  ShareRewardInfo();
  virtual ~ShareRewardInfo();

  ShareRewardInfo(const ShareRewardInfo& from);

  inline ShareRewardInfo& operator=(const ShareRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShareRewardInfo& default_instance();

  void Swap(ShareRewardInfo* other);

  // implements Message ----------------------------------------------

  ShareRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShareRewardInfo& from);
  void MergeFrom(const ShareRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 getTime = 2;
  inline bool has_gettime() const;
  inline void clear_gettime();
  static const int kGetTimeFieldNumber = 2;
  inline ::google::protobuf::int64 gettime() const;
  inline void set_gettime(::google::protobuf::int64 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ShareRewardInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_gettime();
  inline void clear_has_gettime();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 gettime_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static ShareRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCShareRewardInfo : public ::google::protobuf::Message {
 public:
  GCShareRewardInfo();
  virtual ~GCShareRewardInfo();

  GCShareRewardInfo(const GCShareRewardInfo& from);

  inline GCShareRewardInfo& operator=(const GCShareRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCShareRewardInfo& default_instance();

  void Swap(GCShareRewardInfo* other);

  // implements Message ----------------------------------------------

  GCShareRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCShareRewardInfo& from);
  void MergeFrom(const GCShareRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ShareRewardInfo rewardInfoList = 1;
  inline int rewardinfolist_size() const;
  inline void clear_rewardinfolist();
  static const int kRewardInfoListFieldNumber = 1;
  inline const ::ShareRewardInfo& rewardinfolist(int index) const;
  inline ::ShareRewardInfo* mutable_rewardinfolist(int index);
  inline ::ShareRewardInfo* add_rewardinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::ShareRewardInfo >&
      rewardinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ShareRewardInfo >*
      mutable_rewardinfolist();

  // @@protoc_insertion_point(class_scope:GCShareRewardInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ShareRewardInfo > rewardinfolist_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCShareRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGGetShareReward : public ::google::protobuf::Message {
 public:
  CGGetShareReward();
  virtual ~CGGetShareReward();

  CGGetShareReward(const CGGetShareReward& from);

  inline CGGetShareReward& operator=(const CGGetShareReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetShareReward& default_instance();

  void Swap(CGGetShareReward* other);

  // implements Message ----------------------------------------------

  CGGetShareReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetShareReward& from);
  void MergeFrom(const CGGetShareReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGGetShareReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static CGGetShareReward* default_instance_;
};
// -------------------------------------------------------------------

class GCGetShareReward : public ::google::protobuf::Message {
 public:
  GCGetShareReward();
  virtual ~GCGetShareReward();

  GCGetShareReward(const GCGetShareReward& from);

  inline GCGetShareReward& operator=(const GCGetShareReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetShareReward& default_instance();

  void Swap(GCGetShareReward* other);

  // implements Message ----------------------------------------------

  GCGetShareReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetShareReward& from);
  void MergeFrom(const GCGetShareReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional .ShareRewardInfo rewardInfo = 2;
  inline bool has_rewardinfo() const;
  inline void clear_rewardinfo();
  static const int kRewardInfoFieldNumber = 2;
  inline const ::ShareRewardInfo& rewardinfo() const;
  inline ::ShareRewardInfo* mutable_rewardinfo();
  inline ::ShareRewardInfo* release_rewardinfo();
  inline void set_allocated_rewardinfo(::ShareRewardInfo* rewardinfo);

  // @@protoc_insertion_point(class_scope:GCGetShareReward)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_rewardinfo();
  inline void clear_has_rewardinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ShareRewardInfo* rewardinfo_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCGetShareReward* default_instance_;
};
// -------------------------------------------------------------------

class GCOnlineViewSts : public ::google::protobuf::Message {
 public:
  GCOnlineViewSts();
  virtual ~GCOnlineViewSts();

  GCOnlineViewSts(const GCOnlineViewSts& from);

  inline GCOnlineViewSts& operator=(const GCOnlineViewSts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCOnlineViewSts& default_instance();

  void Swap(GCOnlineViewSts* other);

  // implements Message ----------------------------------------------

  GCOnlineViewSts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCOnlineViewSts& from);
  void MergeFrom(const GCOnlineViewSts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCOnlineViewSts)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCOnlineViewSts* default_instance_;
};
// -------------------------------------------------------------------

class CGRwdOnLineGift : public ::google::protobuf::Message {
 public:
  CGRwdOnLineGift();
  virtual ~CGRwdOnLineGift();

  CGRwdOnLineGift(const CGRwdOnLineGift& from);

  inline CGRwdOnLineGift& operator=(const CGRwdOnLineGift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGRwdOnLineGift& default_instance();

  void Swap(CGRwdOnLineGift* other);

  // implements Message ----------------------------------------------

  CGRwdOnLineGift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGRwdOnLineGift& from);
  void MergeFrom(const CGRwdOnLineGift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGRwdOnLineGift)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static CGRwdOnLineGift* default_instance_;
};
// -------------------------------------------------------------------

class GCRwdOnLineGift : public ::google::protobuf::Message {
 public:
  GCRwdOnLineGift();
  virtual ~GCRwdOnLineGift();

  GCRwdOnLineGift(const GCRwdOnLineGift& from);

  inline GCRwdOnLineGift& operator=(const GCRwdOnLineGift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCRwdOnLineGift& default_instance();

  void Swap(GCRwdOnLineGift* other);

  // implements Message ----------------------------------------------

  GCRwdOnLineGift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCRwdOnLineGift& from);
  void MergeFrom(const GCRwdOnLineGift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .WelfareStruct rwds = 1;
  inline int rwds_size() const;
  inline void clear_rwds();
  static const int kRwdsFieldNumber = 1;
  inline const ::WelfareStruct& rwds(int index) const;
  inline ::WelfareStruct* mutable_rwds(int index);
  inline ::WelfareStruct* add_rwds();
  inline const ::google::protobuf::RepeatedPtrField< ::WelfareStruct >&
      rwds() const;
  inline ::google::protobuf::RepeatedPtrField< ::WelfareStruct >*
      mutable_rwds();

  // @@protoc_insertion_point(class_scope:GCRwdOnLineGift)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WelfareStruct > rwds_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCRwdOnLineGift* default_instance_;
};
// -------------------------------------------------------------------

class GCDoubleExpmsg : public ::google::protobuf::Message {
 public:
  GCDoubleExpmsg();
  virtual ~GCDoubleExpmsg();

  GCDoubleExpmsg(const GCDoubleExpmsg& from);

  inline GCDoubleExpmsg& operator=(const GCDoubleExpmsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDoubleExpmsg& default_instance();

  void Swap(GCDoubleExpmsg* other);

  // implements Message ----------------------------------------------

  GCDoubleExpmsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDoubleExpmsg& from);
  void MergeFrom(const GCDoubleExpmsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 dungeonType = 1;
  inline int dungeontype_size() const;
  inline void clear_dungeontype();
  static const int kDungeonTypeFieldNumber = 1;
  inline ::google::protobuf::int32 dungeontype(int index) const;
  inline void set_dungeontype(int index, ::google::protobuf::int32 value);
  inline void add_dungeontype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dungeontype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dungeontype();

  // optional int32 sts = 2;
  inline bool has_sts() const;
  inline void clear_sts();
  static const int kStsFieldNumber = 2;
  inline ::google::protobuf::int32 sts() const;
  inline void set_sts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GCDoubleExpmsg)
 private:
  inline void set_has_sts();
  inline void clear_has_sts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dungeontype_;
  ::google::protobuf::int32 sts_;
  friend void  protobuf_AddDesc_WelfareMessage_2eproto();
  friend void protobuf_AssignDesc_WelfareMessage_2eproto();
  friend void protobuf_ShutdownFile_WelfareMessage_2eproto();

  void InitAsDefaultInstance();
  static GCDoubleExpmsg* default_instance_;
};
// ===================================================================


// ===================================================================

// WelfareItem

// optional int32 temId = 1;
inline bool WelfareItem::has_temid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareItem::set_has_temid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareItem::clear_has_temid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareItem::clear_temid() {
  temid_ = 0;
  clear_has_temid();
}
inline ::google::protobuf::int32 WelfareItem::temid() const {
  // @@protoc_insertion_point(field_get:WelfareItem.temId)
  return temid_;
}
inline void WelfareItem::set_temid(::google::protobuf::int32 value) {
  set_has_temid();
  temid_ = value;
  // @@protoc_insertion_point(field_set:WelfareItem.temId)
}

// optional int32 num = 2;
inline bool WelfareItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WelfareItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WelfareItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WelfareItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 WelfareItem::num() const {
  // @@protoc_insertion_point(field_get:WelfareItem.num)
  return num_;
}
inline void WelfareItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:WelfareItem.num)
}

// optional int32 bind = 3;
inline bool WelfareItem::has_bind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WelfareItem::set_has_bind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WelfareItem::clear_has_bind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WelfareItem::clear_bind() {
  bind_ = 0;
  clear_has_bind();
}
inline ::google::protobuf::int32 WelfareItem::bind() const {
  // @@protoc_insertion_point(field_get:WelfareItem.bind)
  return bind_;
}
inline void WelfareItem::set_bind(::google::protobuf::int32 value) {
  set_has_bind();
  bind_ = value;
  // @@protoc_insertion_point(field_set:WelfareItem.bind)
}

// -------------------------------------------------------------------

// WelfareStruct

// optional int32 id = 1;
inline bool WelfareStruct::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelfareStruct::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelfareStruct::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelfareStruct::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WelfareStruct::id() const {
  // @@protoc_insertion_point(field_get:WelfareStruct.id)
  return id_;
}
inline void WelfareStruct::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:WelfareStruct.id)
}

// repeated .WelfareItem items = 2;
inline int WelfareStruct::items_size() const {
  return items_.size();
}
inline void WelfareStruct::clear_items() {
  items_.Clear();
}
inline const ::WelfareItem& WelfareStruct::items(int index) const {
  // @@protoc_insertion_point(field_get:WelfareStruct.items)
  return items_.Get(index);
}
inline ::WelfareItem* WelfareStruct::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:WelfareStruct.items)
  return items_.Mutable(index);
}
inline ::WelfareItem* WelfareStruct::add_items() {
  // @@protoc_insertion_point(field_add:WelfareStruct.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WelfareItem >&
WelfareStruct::items() const {
  // @@protoc_insertion_point(field_list:WelfareStruct.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::WelfareItem >*
WelfareStruct::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:WelfareStruct.items)
  return &items_;
}

// optional int32 status = 3;
inline bool WelfareStruct::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WelfareStruct::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WelfareStruct::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WelfareStruct::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 WelfareStruct::status() const {
  // @@protoc_insertion_point(field_get:WelfareStruct.status)
  return status_;
}
inline void WelfareStruct::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:WelfareStruct.status)
}

// optional int32 sprintType = 4;
inline bool WelfareStruct::has_sprinttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WelfareStruct::set_has_sprinttype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WelfareStruct::clear_has_sprinttype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WelfareStruct::clear_sprinttype() {
  sprinttype_ = 0;
  clear_has_sprinttype();
}
inline ::google::protobuf::int32 WelfareStruct::sprinttype() const {
  // @@protoc_insertion_point(field_get:WelfareStruct.sprintType)
  return sprinttype_;
}
inline void WelfareStruct::set_sprinttype(::google::protobuf::int32 value) {
  set_has_sprinttype();
  sprinttype_ = value;
  // @@protoc_insertion_point(field_set:WelfareStruct.sprintType)
}

// optional int64 param = 5;
inline bool WelfareStruct::has_param() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WelfareStruct::set_has_param() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WelfareStruct::clear_has_param() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WelfareStruct::clear_param() {
  param_ = GOOGLE_LONGLONG(0);
  clear_has_param();
}
inline ::google::protobuf::int64 WelfareStruct::param() const {
  // @@protoc_insertion_point(field_get:WelfareStruct.param)
  return param_;
}
inline void WelfareStruct::set_param(::google::protobuf::int64 value) {
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:WelfareStruct.param)
}

// optional string showRew = 6;
inline bool WelfareStruct::has_showrew() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WelfareStruct::set_has_showrew() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WelfareStruct::clear_has_showrew() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WelfareStruct::clear_showrew() {
  if (showrew_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showrew_->clear();
  }
  clear_has_showrew();
}
inline const ::std::string& WelfareStruct::showrew() const {
  // @@protoc_insertion_point(field_get:WelfareStruct.showRew)
  return *showrew_;
}
inline void WelfareStruct::set_showrew(const ::std::string& value) {
  set_has_showrew();
  if (showrew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showrew_ = new ::std::string;
  }
  showrew_->assign(value);
  // @@protoc_insertion_point(field_set:WelfareStruct.showRew)
}
inline void WelfareStruct::set_showrew(const char* value) {
  set_has_showrew();
  if (showrew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showrew_ = new ::std::string;
  }
  showrew_->assign(value);
  // @@protoc_insertion_point(field_set_char:WelfareStruct.showRew)
}
inline void WelfareStruct::set_showrew(const char* value, size_t size) {
  set_has_showrew();
  if (showrew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showrew_ = new ::std::string;
  }
  showrew_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:WelfareStruct.showRew)
}
inline ::std::string* WelfareStruct::mutable_showrew() {
  set_has_showrew();
  if (showrew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showrew_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:WelfareStruct.showRew)
  return showrew_;
}
inline ::std::string* WelfareStruct::release_showrew() {
  clear_has_showrew();
  if (showrew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = showrew_;
    showrew_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WelfareStruct::set_allocated_showrew(::std::string* showrew) {
  if (showrew_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete showrew_;
  }
  if (showrew) {
    set_has_showrew();
    showrew_ = showrew;
  } else {
    clear_has_showrew();
    showrew_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:WelfareStruct.showRew)
}

// optional string showName = 7;
inline bool WelfareStruct::has_showname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WelfareStruct::set_has_showname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WelfareStruct::clear_has_showname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WelfareStruct::clear_showname() {
  if (showname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showname_->clear();
  }
  clear_has_showname();
}
inline const ::std::string& WelfareStruct::showname() const {
  // @@protoc_insertion_point(field_get:WelfareStruct.showName)
  return *showname_;
}
inline void WelfareStruct::set_showname(const ::std::string& value) {
  set_has_showname();
  if (showname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showname_ = new ::std::string;
  }
  showname_->assign(value);
  // @@protoc_insertion_point(field_set:WelfareStruct.showName)
}
inline void WelfareStruct::set_showname(const char* value) {
  set_has_showname();
  if (showname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showname_ = new ::std::string;
  }
  showname_->assign(value);
  // @@protoc_insertion_point(field_set_char:WelfareStruct.showName)
}
inline void WelfareStruct::set_showname(const char* value, size_t size) {
  set_has_showname();
  if (showname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showname_ = new ::std::string;
  }
  showname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:WelfareStruct.showName)
}
inline ::std::string* WelfareStruct::mutable_showname() {
  set_has_showname();
  if (showname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    showname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:WelfareStruct.showName)
  return showname_;
}
inline ::std::string* WelfareStruct::release_showname() {
  clear_has_showname();
  if (showname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = showname_;
    showname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WelfareStruct::set_allocated_showname(::std::string* showname) {
  if (showname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete showname_;
  }
  if (showname) {
    set_has_showname();
    showname_ = showname;
  } else {
    clear_has_showname();
    showname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:WelfareStruct.showName)
}

// -------------------------------------------------------------------

// GCPushWelfare

// optional int32 welfareType = 1;
inline bool GCPushWelfare::has_welfaretype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPushWelfare::set_has_welfaretype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPushWelfare::clear_has_welfaretype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPushWelfare::clear_welfaretype() {
  welfaretype_ = 0;
  clear_has_welfaretype();
}
inline ::google::protobuf::int32 GCPushWelfare::welfaretype() const {
  // @@protoc_insertion_point(field_get:GCPushWelfare.welfareType)
  return welfaretype_;
}
inline void GCPushWelfare::set_welfaretype(::google::protobuf::int32 value) {
  set_has_welfaretype();
  welfaretype_ = value;
  // @@protoc_insertion_point(field_set:GCPushWelfare.welfareType)
}

// repeated .WelfareStruct welfareStruct = 2;
inline int GCPushWelfare::welfarestruct_size() const {
  return welfarestruct_.size();
}
inline void GCPushWelfare::clear_welfarestruct() {
  welfarestruct_.Clear();
}
inline const ::WelfareStruct& GCPushWelfare::welfarestruct(int index) const {
  // @@protoc_insertion_point(field_get:GCPushWelfare.welfareStruct)
  return welfarestruct_.Get(index);
}
inline ::WelfareStruct* GCPushWelfare::mutable_welfarestruct(int index) {
  // @@protoc_insertion_point(field_mutable:GCPushWelfare.welfareStruct)
  return welfarestruct_.Mutable(index);
}
inline ::WelfareStruct* GCPushWelfare::add_welfarestruct() {
  // @@protoc_insertion_point(field_add:GCPushWelfare.welfareStruct)
  return welfarestruct_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WelfareStruct >&
GCPushWelfare::welfarestruct() const {
  // @@protoc_insertion_point(field_list:GCPushWelfare.welfareStruct)
  return welfarestruct_;
}
inline ::google::protobuf::RepeatedPtrField< ::WelfareStruct >*
GCPushWelfare::mutable_welfarestruct() {
  // @@protoc_insertion_point(field_mutable_list:GCPushWelfare.welfareStruct)
  return &welfarestruct_;
}

// repeated .SprintTime sprintTime = 3;
inline int GCPushWelfare::sprinttime_size() const {
  return sprinttime_.size();
}
inline void GCPushWelfare::clear_sprinttime() {
  sprinttime_.Clear();
}
inline const ::SprintTime& GCPushWelfare::sprinttime(int index) const {
  // @@protoc_insertion_point(field_get:GCPushWelfare.sprintTime)
  return sprinttime_.Get(index);
}
inline ::SprintTime* GCPushWelfare::mutable_sprinttime(int index) {
  // @@protoc_insertion_point(field_mutable:GCPushWelfare.sprintTime)
  return sprinttime_.Mutable(index);
}
inline ::SprintTime* GCPushWelfare::add_sprinttime() {
  // @@protoc_insertion_point(field_add:GCPushWelfare.sprintTime)
  return sprinttime_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SprintTime >&
GCPushWelfare::sprinttime() const {
  // @@protoc_insertion_point(field_list:GCPushWelfare.sprintTime)
  return sprinttime_;
}
inline ::google::protobuf::RepeatedPtrField< ::SprintTime >*
GCPushWelfare::mutable_sprinttime() {
  // @@protoc_insertion_point(field_mutable_list:GCPushWelfare.sprintTime)
  return &sprinttime_;
}

// optional int32 actDays = 4;
inline bool GCPushWelfare::has_actdays() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCPushWelfare::set_has_actdays() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCPushWelfare::clear_has_actdays() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCPushWelfare::clear_actdays() {
  actdays_ = 0;
  clear_has_actdays();
}
inline ::google::protobuf::int32 GCPushWelfare::actdays() const {
  // @@protoc_insertion_point(field_get:GCPushWelfare.actDays)
  return actdays_;
}
inline void GCPushWelfare::set_actdays(::google::protobuf::int32 value) {
  set_has_actdays();
  actdays_ = value;
  // @@protoc_insertion_point(field_set:GCPushWelfare.actDays)
}

// optional int32 payNum = 5;
inline bool GCPushWelfare::has_paynum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCPushWelfare::set_has_paynum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCPushWelfare::clear_has_paynum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCPushWelfare::clear_paynum() {
  paynum_ = 0;
  clear_has_paynum();
}
inline ::google::protobuf::int32 GCPushWelfare::paynum() const {
  // @@protoc_insertion_point(field_get:GCPushWelfare.payNum)
  return paynum_;
}
inline void GCPushWelfare::set_paynum(::google::protobuf::int32 value) {
  set_has_paynum();
  paynum_ = value;
  // @@protoc_insertion_point(field_set:GCPushWelfare.payNum)
}

// -------------------------------------------------------------------

// SprintTime

// optional int32 sprintType = 1;
inline bool SprintTime::has_sprinttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SprintTime::set_has_sprinttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SprintTime::clear_has_sprinttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SprintTime::clear_sprinttype() {
  sprinttype_ = 0;
  clear_has_sprinttype();
}
inline ::google::protobuf::int32 SprintTime::sprinttype() const {
  // @@protoc_insertion_point(field_get:SprintTime.sprintType)
  return sprinttype_;
}
inline void SprintTime::set_sprinttype(::google::protobuf::int32 value) {
  set_has_sprinttype();
  sprinttype_ = value;
  // @@protoc_insertion_point(field_set:SprintTime.sprintType)
}

// optional string stateTime = 2;
inline bool SprintTime::has_statetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SprintTime::set_has_statetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SprintTime::clear_has_statetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SprintTime::clear_statetime() {
  if (statetime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statetime_->clear();
  }
  clear_has_statetime();
}
inline const ::std::string& SprintTime::statetime() const {
  // @@protoc_insertion_point(field_get:SprintTime.stateTime)
  return *statetime_;
}
inline void SprintTime::set_statetime(const ::std::string& value) {
  set_has_statetime();
  if (statetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statetime_ = new ::std::string;
  }
  statetime_->assign(value);
  // @@protoc_insertion_point(field_set:SprintTime.stateTime)
}
inline void SprintTime::set_statetime(const char* value) {
  set_has_statetime();
  if (statetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statetime_ = new ::std::string;
  }
  statetime_->assign(value);
  // @@protoc_insertion_point(field_set_char:SprintTime.stateTime)
}
inline void SprintTime::set_statetime(const char* value, size_t size) {
  set_has_statetime();
  if (statetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statetime_ = new ::std::string;
  }
  statetime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SprintTime.stateTime)
}
inline ::std::string* SprintTime::mutable_statetime() {
  set_has_statetime();
  if (statetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statetime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SprintTime.stateTime)
  return statetime_;
}
inline ::std::string* SprintTime::release_statetime() {
  clear_has_statetime();
  if (statetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = statetime_;
    statetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SprintTime::set_allocated_statetime(::std::string* statetime) {
  if (statetime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete statetime_;
  }
  if (statetime) {
    set_has_statetime();
    statetime_ = statetime;
  } else {
    clear_has_statetime();
    statetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SprintTime.stateTime)
}

// optional string endTime = 3;
inline bool SprintTime::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SprintTime::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SprintTime::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SprintTime::clear_endtime() {
  if (endtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_->clear();
  }
  clear_has_endtime();
}
inline const ::std::string& SprintTime::endtime() const {
  // @@protoc_insertion_point(field_get:SprintTime.endTime)
  return *endtime_;
}
inline void SprintTime::set_endtime(const ::std::string& value) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set:SprintTime.endTime)
}
inline void SprintTime::set_endtime(const char* value) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:SprintTime.endTime)
}
inline void SprintTime::set_endtime(const char* value, size_t size) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SprintTime.endTime)
}
inline ::std::string* SprintTime::mutable_endtime() {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SprintTime.endTime)
  return endtime_;
}
inline ::std::string* SprintTime::release_endtime() {
  clear_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = endtime_;
    endtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SprintTime::set_allocated_endtime(::std::string* endtime) {
  if (endtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endtime_;
  }
  if (endtime) {
    set_has_endtime();
    endtime_ = endtime;
  } else {
    clear_has_endtime();
    endtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SprintTime.endTime)
}

// optional int32 openType = 4;
inline bool SprintTime::has_opentype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SprintTime::set_has_opentype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SprintTime::clear_has_opentype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SprintTime::clear_opentype() {
  opentype_ = 0;
  clear_has_opentype();
}
inline ::google::protobuf::int32 SprintTime::opentype() const {
  // @@protoc_insertion_point(field_get:SprintTime.openType)
  return opentype_;
}
inline void SprintTime::set_opentype(::google::protobuf::int32 value) {
  set_has_opentype();
  opentype_ = value;
  // @@protoc_insertion_point(field_set:SprintTime.openType)
}

// -------------------------------------------------------------------

// GCWelfare

// optional int32 sprintType = 1;
inline bool GCWelfare::has_sprinttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCWelfare::set_has_sprinttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCWelfare::clear_has_sprinttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCWelfare::clear_sprinttype() {
  sprinttype_ = 0;
  clear_has_sprinttype();
}
inline ::google::protobuf::int32 GCWelfare::sprinttype() const {
  // @@protoc_insertion_point(field_get:GCWelfare.sprintType)
  return sprinttype_;
}
inline void GCWelfare::set_sprinttype(::google::protobuf::int32 value) {
  set_has_sprinttype();
  sprinttype_ = value;
  // @@protoc_insertion_point(field_set:GCWelfare.sprintType)
}

// optional string stateTime = 2;
inline bool GCWelfare::has_statetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCWelfare::set_has_statetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCWelfare::clear_has_statetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCWelfare::clear_statetime() {
  if (statetime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statetime_->clear();
  }
  clear_has_statetime();
}
inline const ::std::string& GCWelfare::statetime() const {
  // @@protoc_insertion_point(field_get:GCWelfare.stateTime)
  return *statetime_;
}
inline void GCWelfare::set_statetime(const ::std::string& value) {
  set_has_statetime();
  if (statetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statetime_ = new ::std::string;
  }
  statetime_->assign(value);
  // @@protoc_insertion_point(field_set:GCWelfare.stateTime)
}
inline void GCWelfare::set_statetime(const char* value) {
  set_has_statetime();
  if (statetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statetime_ = new ::std::string;
  }
  statetime_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCWelfare.stateTime)
}
inline void GCWelfare::set_statetime(const char* value, size_t size) {
  set_has_statetime();
  if (statetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statetime_ = new ::std::string;
  }
  statetime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCWelfare.stateTime)
}
inline ::std::string* GCWelfare::mutable_statetime() {
  set_has_statetime();
  if (statetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statetime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCWelfare.stateTime)
  return statetime_;
}
inline ::std::string* GCWelfare::release_statetime() {
  clear_has_statetime();
  if (statetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = statetime_;
    statetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCWelfare::set_allocated_statetime(::std::string* statetime) {
  if (statetime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete statetime_;
  }
  if (statetime) {
    set_has_statetime();
    statetime_ = statetime;
  } else {
    clear_has_statetime();
    statetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCWelfare.stateTime)
}

// optional string endTime = 3;
inline bool GCWelfare::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCWelfare::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCWelfare::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCWelfare::clear_endtime() {
  if (endtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_->clear();
  }
  clear_has_endtime();
}
inline const ::std::string& GCWelfare::endtime() const {
  // @@protoc_insertion_point(field_get:GCWelfare.endTime)
  return *endtime_;
}
inline void GCWelfare::set_endtime(const ::std::string& value) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set:GCWelfare.endTime)
}
inline void GCWelfare::set_endtime(const char* value) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:GCWelfare.endTime)
}
inline void GCWelfare::set_endtime(const char* value, size_t size) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GCWelfare.endTime)
}
inline ::std::string* GCWelfare::mutable_endtime() {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GCWelfare.endTime)
  return endtime_;
}
inline ::std::string* GCWelfare::release_endtime() {
  clear_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = endtime_;
    endtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GCWelfare::set_allocated_endtime(::std::string* endtime) {
  if (endtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endtime_;
  }
  if (endtime) {
    set_has_endtime();
    endtime_ = endtime;
  } else {
    clear_has_endtime();
    endtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GCWelfare.endTime)
}

// optional int32 openType = 4;
inline bool GCWelfare::has_opentype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCWelfare::set_has_opentype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCWelfare::clear_has_opentype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCWelfare::clear_opentype() {
  opentype_ = 0;
  clear_has_opentype();
}
inline ::google::protobuf::int32 GCWelfare::opentype() const {
  // @@protoc_insertion_point(field_get:GCWelfare.openType)
  return opentype_;
}
inline void GCWelfare::set_opentype(::google::protobuf::int32 value) {
  set_has_opentype();
  opentype_ = value;
  // @@protoc_insertion_point(field_set:GCWelfare.openType)
}

// -------------------------------------------------------------------

// CGOpenWelfare

// optional int32 type = 1;
inline bool CGOpenWelfare::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGOpenWelfare::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGOpenWelfare::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGOpenWelfare::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGOpenWelfare::type() const {
  // @@protoc_insertion_point(field_get:CGOpenWelfare.type)
  return type_;
}
inline void CGOpenWelfare::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGOpenWelfare.type)
}

// -------------------------------------------------------------------

// GCOpenOnLineWelfareBack

// optional int64 onlinetime = 1;
inline bool GCOpenOnLineWelfareBack::has_onlinetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCOpenOnLineWelfareBack::set_has_onlinetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCOpenOnLineWelfareBack::clear_has_onlinetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCOpenOnLineWelfareBack::clear_onlinetime() {
  onlinetime_ = GOOGLE_LONGLONG(0);
  clear_has_onlinetime();
}
inline ::google::protobuf::int64 GCOpenOnLineWelfareBack::onlinetime() const {
  // @@protoc_insertion_point(field_get:GCOpenOnLineWelfareBack.onlinetime)
  return onlinetime_;
}
inline void GCOpenOnLineWelfareBack::set_onlinetime(::google::protobuf::int64 value) {
  set_has_onlinetime();
  onlinetime_ = value;
  // @@protoc_insertion_point(field_set:GCOpenOnLineWelfareBack.onlinetime)
}

// -------------------------------------------------------------------

// CGGetWelfareReward

// optional int32 welfareType = 1;
inline bool CGGetWelfareReward::has_welfaretype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetWelfareReward::set_has_welfaretype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetWelfareReward::clear_has_welfaretype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetWelfareReward::clear_welfaretype() {
  welfaretype_ = 0;
  clear_has_welfaretype();
}
inline ::google::protobuf::int32 CGGetWelfareReward::welfaretype() const {
  // @@protoc_insertion_point(field_get:CGGetWelfareReward.welfareType)
  return welfaretype_;
}
inline void CGGetWelfareReward::set_welfaretype(::google::protobuf::int32 value) {
  set_has_welfaretype();
  welfaretype_ = value;
  // @@protoc_insertion_point(field_set:CGGetWelfareReward.welfareType)
}

// optional int32 temId = 2;
inline bool CGGetWelfareReward::has_temid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGGetWelfareReward::set_has_temid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGGetWelfareReward::clear_has_temid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGGetWelfareReward::clear_temid() {
  temid_ = 0;
  clear_has_temid();
}
inline ::google::protobuf::int32 CGGetWelfareReward::temid() const {
  // @@protoc_insertion_point(field_get:CGGetWelfareReward.temId)
  return temid_;
}
inline void CGGetWelfareReward::set_temid(::google::protobuf::int32 value) {
  set_has_temid();
  temid_ = value;
  // @@protoc_insertion_point(field_set:CGGetWelfareReward.temId)
}

// optional int32 sprintType = 3;
inline bool CGGetWelfareReward::has_sprinttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGGetWelfareReward::set_has_sprinttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGGetWelfareReward::clear_has_sprinttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGGetWelfareReward::clear_sprinttype() {
  sprinttype_ = 0;
  clear_has_sprinttype();
}
inline ::google::protobuf::int32 CGGetWelfareReward::sprinttype() const {
  // @@protoc_insertion_point(field_get:CGGetWelfareReward.sprintType)
  return sprinttype_;
}
inline void CGGetWelfareReward::set_sprinttype(::google::protobuf::int32 value) {
  set_has_sprinttype();
  sprinttype_ = value;
  // @@protoc_insertion_point(field_set:CGGetWelfareReward.sprintType)
}

// -------------------------------------------------------------------

// GCGetWelfareRewardBack

// optional int32 welfareType = 1;
inline bool GCGetWelfareRewardBack::has_welfaretype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetWelfareRewardBack::set_has_welfaretype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetWelfareRewardBack::clear_has_welfaretype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetWelfareRewardBack::clear_welfaretype() {
  welfaretype_ = 0;
  clear_has_welfaretype();
}
inline ::google::protobuf::int32 GCGetWelfareRewardBack::welfaretype() const {
  // @@protoc_insertion_point(field_get:GCGetWelfareRewardBack.welfareType)
  return welfaretype_;
}
inline void GCGetWelfareRewardBack::set_welfaretype(::google::protobuf::int32 value) {
  set_has_welfaretype();
  welfaretype_ = value;
  // @@protoc_insertion_point(field_set:GCGetWelfareRewardBack.welfareType)
}

// repeated .WelfareStruct welfareStruct = 2;
inline int GCGetWelfareRewardBack::welfarestruct_size() const {
  return welfarestruct_.size();
}
inline void GCGetWelfareRewardBack::clear_welfarestruct() {
  welfarestruct_.Clear();
}
inline const ::WelfareStruct& GCGetWelfareRewardBack::welfarestruct(int index) const {
  // @@protoc_insertion_point(field_get:GCGetWelfareRewardBack.welfareStruct)
  return welfarestruct_.Get(index);
}
inline ::WelfareStruct* GCGetWelfareRewardBack::mutable_welfarestruct(int index) {
  // @@protoc_insertion_point(field_mutable:GCGetWelfareRewardBack.welfareStruct)
  return welfarestruct_.Mutable(index);
}
inline ::WelfareStruct* GCGetWelfareRewardBack::add_welfarestruct() {
  // @@protoc_insertion_point(field_add:GCGetWelfareRewardBack.welfareStruct)
  return welfarestruct_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WelfareStruct >&
GCGetWelfareRewardBack::welfarestruct() const {
  // @@protoc_insertion_point(field_list:GCGetWelfareRewardBack.welfareStruct)
  return welfarestruct_;
}
inline ::google::protobuf::RepeatedPtrField< ::WelfareStruct >*
GCGetWelfareRewardBack::mutable_welfarestruct() {
  // @@protoc_insertion_point(field_mutable_list:GCGetWelfareRewardBack.welfareStruct)
  return &welfarestruct_;
}

// -------------------------------------------------------------------

// CGGetLevelRewardOver

// optional int32 id = 1;
inline bool CGGetLevelRewardOver::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetLevelRewardOver::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetLevelRewardOver::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetLevelRewardOver::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGGetLevelRewardOver::id() const {
  // @@protoc_insertion_point(field_get:CGGetLevelRewardOver.id)
  return id_;
}
inline void CGGetLevelRewardOver::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGGetLevelRewardOver.id)
}

// -------------------------------------------------------------------

// GCGetLevelRewardOverBack

// optional int32 flag = 1;
inline bool GCGetLevelRewardOverBack::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetLevelRewardOverBack::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetLevelRewardOverBack::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetLevelRewardOverBack::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCGetLevelRewardOverBack::flag() const {
  // @@protoc_insertion_point(field_get:GCGetLevelRewardOverBack.flag)
  return flag_;
}
inline void GCGetLevelRewardOverBack::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCGetLevelRewardOverBack.flag)
}

// repeated .WelfareStruct welfareStruct = 2;
inline int GCGetLevelRewardOverBack::welfarestruct_size() const {
  return welfarestruct_.size();
}
inline void GCGetLevelRewardOverBack::clear_welfarestruct() {
  welfarestruct_.Clear();
}
inline const ::WelfareStruct& GCGetLevelRewardOverBack::welfarestruct(int index) const {
  // @@protoc_insertion_point(field_get:GCGetLevelRewardOverBack.welfareStruct)
  return welfarestruct_.Get(index);
}
inline ::WelfareStruct* GCGetLevelRewardOverBack::mutable_welfarestruct(int index) {
  // @@protoc_insertion_point(field_mutable:GCGetLevelRewardOverBack.welfareStruct)
  return welfarestruct_.Mutable(index);
}
inline ::WelfareStruct* GCGetLevelRewardOverBack::add_welfarestruct() {
  // @@protoc_insertion_point(field_add:GCGetLevelRewardOverBack.welfareStruct)
  return welfarestruct_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WelfareStruct >&
GCGetLevelRewardOverBack::welfarestruct() const {
  // @@protoc_insertion_point(field_list:GCGetLevelRewardOverBack.welfareStruct)
  return welfarestruct_;
}
inline ::google::protobuf::RepeatedPtrField< ::WelfareStruct >*
GCGetLevelRewardOverBack::mutable_welfarestruct() {
  // @@protoc_insertion_point(field_mutable_list:GCGetLevelRewardOverBack.welfareStruct)
  return &welfarestruct_;
}

// -------------------------------------------------------------------

// GCPushContinuousLandDayNum

// optional int32 dayNum = 1;
inline bool GCPushContinuousLandDayNum::has_daynum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCPushContinuousLandDayNum::set_has_daynum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCPushContinuousLandDayNum::clear_has_daynum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCPushContinuousLandDayNum::clear_daynum() {
  daynum_ = 0;
  clear_has_daynum();
}
inline ::google::protobuf::int32 GCPushContinuousLandDayNum::daynum() const {
  // @@protoc_insertion_point(field_get:GCPushContinuousLandDayNum.dayNum)
  return daynum_;
}
inline void GCPushContinuousLandDayNum::set_daynum(::google::protobuf::int32 value) {
  set_has_daynum();
  daynum_ = value;
  // @@protoc_insertion_point(field_set:GCPushContinuousLandDayNum.dayNum)
}

// -------------------------------------------------------------------

// CGContinuousLandOver

// -------------------------------------------------------------------

// GCContinuousLandOverBack

// optional int32 flag = 1;
inline bool GCContinuousLandOverBack::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCContinuousLandOverBack::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCContinuousLandOverBack::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCContinuousLandOverBack::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCContinuousLandOverBack::flag() const {
  // @@protoc_insertion_point(field_get:GCContinuousLandOverBack.flag)
  return flag_;
}
inline void GCContinuousLandOverBack::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCContinuousLandOverBack.flag)
}

// repeated .WelfareStruct welfareStruct = 2;
inline int GCContinuousLandOverBack::welfarestruct_size() const {
  return welfarestruct_.size();
}
inline void GCContinuousLandOverBack::clear_welfarestruct() {
  welfarestruct_.Clear();
}
inline const ::WelfareStruct& GCContinuousLandOverBack::welfarestruct(int index) const {
  // @@protoc_insertion_point(field_get:GCContinuousLandOverBack.welfareStruct)
  return welfarestruct_.Get(index);
}
inline ::WelfareStruct* GCContinuousLandOverBack::mutable_welfarestruct(int index) {
  // @@protoc_insertion_point(field_mutable:GCContinuousLandOverBack.welfareStruct)
  return welfarestruct_.Mutable(index);
}
inline ::WelfareStruct* GCContinuousLandOverBack::add_welfarestruct() {
  // @@protoc_insertion_point(field_add:GCContinuousLandOverBack.welfareStruct)
  return welfarestruct_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WelfareStruct >&
GCContinuousLandOverBack::welfarestruct() const {
  // @@protoc_insertion_point(field_list:GCContinuousLandOverBack.welfareStruct)
  return welfarestruct_;
}
inline ::google::protobuf::RepeatedPtrField< ::WelfareStruct >*
GCContinuousLandOverBack::mutable_welfarestruct() {
  // @@protoc_insertion_point(field_mutable_list:GCContinuousLandOverBack.welfareStruct)
  return &welfarestruct_;
}

// -------------------------------------------------------------------

// CGRequestGetReward

// optional int32 type = 1;
inline bool CGRequestGetReward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGRequestGetReward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGRequestGetReward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGRequestGetReward::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGRequestGetReward::type() const {
  // @@protoc_insertion_point(field_get:CGRequestGetReward.type)
  return type_;
}
inline void CGRequestGetReward::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGRequestGetReward.type)
}

// -------------------------------------------------------------------

// GCRequestGetRewardBack

// optional int32 type = 1;
inline bool GCRequestGetRewardBack::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCRequestGetRewardBack::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCRequestGetRewardBack::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCRequestGetRewardBack::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCRequestGetRewardBack::type() const {
  // @@protoc_insertion_point(field_get:GCRequestGetRewardBack.type)
  return type_;
}
inline void GCRequestGetRewardBack::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCRequestGetRewardBack.type)
}

// optional int32 flag = 2;
inline bool GCRequestGetRewardBack::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCRequestGetRewardBack::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCRequestGetRewardBack::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCRequestGetRewardBack::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCRequestGetRewardBack::flag() const {
  // @@protoc_insertion_point(field_get:GCRequestGetRewardBack.flag)
  return flag_;
}
inline void GCRequestGetRewardBack::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCRequestGetRewardBack.flag)
}

// -------------------------------------------------------------------

// CGDailyShare

// optional int32 type = 1;
inline bool CGDailyShare::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGDailyShare::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGDailyShare::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGDailyShare::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGDailyShare::type() const {
  // @@protoc_insertion_point(field_get:CGDailyShare.type)
  return type_;
}
inline void CGDailyShare::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGDailyShare.type)
}

// -------------------------------------------------------------------

// GCDailyShare

// optional int32 type = 1;
inline bool GCDailyShare::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCDailyShare::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCDailyShare::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCDailyShare::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCDailyShare::type() const {
  // @@protoc_insertion_point(field_get:GCDailyShare.type)
  return type_;
}
inline void GCDailyShare::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCDailyShare.type)
}

// -------------------------------------------------------------------

// CGGetLoginReward

// optional int32 type = 1;
inline bool CGGetLoginReward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetLoginReward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetLoginReward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetLoginReward::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGGetLoginReward::type() const {
  // @@protoc_insertion_point(field_get:CGGetLoginReward.type)
  return type_;
}
inline void CGGetLoginReward::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGGetLoginReward.type)
}

// optional int32 id = 2;
inline bool CGGetLoginReward::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGGetLoginReward::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGGetLoginReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGGetLoginReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGGetLoginReward::id() const {
  // @@protoc_insertion_point(field_get:CGGetLoginReward.id)
  return id_;
}
inline void CGGetLoginReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGGetLoginReward.id)
}

// -------------------------------------------------------------------

// GCGetLoginReward

// optional int32 type = 1;
inline bool GCGetLoginReward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetLoginReward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetLoginReward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetLoginReward::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GCGetLoginReward::type() const {
  // @@protoc_insertion_point(field_get:GCGetLoginReward.type)
  return type_;
}
inline void GCGetLoginReward::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GCGetLoginReward.type)
}

// optional int32 flag = 2;
inline bool GCGetLoginReward::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGetLoginReward::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGetLoginReward::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGetLoginReward::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCGetLoginReward::flag() const {
  // @@protoc_insertion_point(field_get:GCGetLoginReward.flag)
  return flag_;
}
inline void GCGetLoginReward::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCGetLoginReward.flag)
}

// optional .WelfareStruct welfareStruct = 3;
inline bool GCGetLoginReward::has_welfarestruct() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCGetLoginReward::set_has_welfarestruct() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCGetLoginReward::clear_has_welfarestruct() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCGetLoginReward::clear_welfarestruct() {
  if (welfarestruct_ != NULL) welfarestruct_->::WelfareStruct::Clear();
  clear_has_welfarestruct();
}
inline const ::WelfareStruct& GCGetLoginReward::welfarestruct() const {
  // @@protoc_insertion_point(field_get:GCGetLoginReward.welfareStruct)
  return welfarestruct_ != NULL ? *welfarestruct_ : *default_instance_->welfarestruct_;
}
inline ::WelfareStruct* GCGetLoginReward::mutable_welfarestruct() {
  set_has_welfarestruct();
  if (welfarestruct_ == NULL) welfarestruct_ = new ::WelfareStruct;
  // @@protoc_insertion_point(field_mutable:GCGetLoginReward.welfareStruct)
  return welfarestruct_;
}
inline ::WelfareStruct* GCGetLoginReward::release_welfarestruct() {
  clear_has_welfarestruct();
  ::WelfareStruct* temp = welfarestruct_;
  welfarestruct_ = NULL;
  return temp;
}
inline void GCGetLoginReward::set_allocated_welfarestruct(::WelfareStruct* welfarestruct) {
  delete welfarestruct_;
  welfarestruct_ = welfarestruct;
  if (welfarestruct) {
    set_has_welfarestruct();
  } else {
    clear_has_welfarestruct();
  }
  // @@protoc_insertion_point(field_set_allocated:GCGetLoginReward.welfareStruct)
}

// -------------------------------------------------------------------

// ShareRewardInfo

// optional int32 id = 1;
inline bool ShareRewardInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareRewardInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareRewardInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareRewardInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ShareRewardInfo::id() const {
  // @@protoc_insertion_point(field_get:ShareRewardInfo.id)
  return id_;
}
inline void ShareRewardInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ShareRewardInfo.id)
}

// optional int64 getTime = 2;
inline bool ShareRewardInfo::has_gettime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShareRewardInfo::set_has_gettime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShareRewardInfo::clear_has_gettime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShareRewardInfo::clear_gettime() {
  gettime_ = GOOGLE_LONGLONG(0);
  clear_has_gettime();
}
inline ::google::protobuf::int64 ShareRewardInfo::gettime() const {
  // @@protoc_insertion_point(field_get:ShareRewardInfo.getTime)
  return gettime_;
}
inline void ShareRewardInfo::set_gettime(::google::protobuf::int64 value) {
  set_has_gettime();
  gettime_ = value;
  // @@protoc_insertion_point(field_set:ShareRewardInfo.getTime)
}

// optional int32 state = 3;
inline bool ShareRewardInfo::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShareRewardInfo::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShareRewardInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShareRewardInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 ShareRewardInfo::state() const {
  // @@protoc_insertion_point(field_get:ShareRewardInfo.state)
  return state_;
}
inline void ShareRewardInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:ShareRewardInfo.state)
}

// -------------------------------------------------------------------

// GCShareRewardInfo

// repeated .ShareRewardInfo rewardInfoList = 1;
inline int GCShareRewardInfo::rewardinfolist_size() const {
  return rewardinfolist_.size();
}
inline void GCShareRewardInfo::clear_rewardinfolist() {
  rewardinfolist_.Clear();
}
inline const ::ShareRewardInfo& GCShareRewardInfo::rewardinfolist(int index) const {
  // @@protoc_insertion_point(field_get:GCShareRewardInfo.rewardInfoList)
  return rewardinfolist_.Get(index);
}
inline ::ShareRewardInfo* GCShareRewardInfo::mutable_rewardinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:GCShareRewardInfo.rewardInfoList)
  return rewardinfolist_.Mutable(index);
}
inline ::ShareRewardInfo* GCShareRewardInfo::add_rewardinfolist() {
  // @@protoc_insertion_point(field_add:GCShareRewardInfo.rewardInfoList)
  return rewardinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ShareRewardInfo >&
GCShareRewardInfo::rewardinfolist() const {
  // @@protoc_insertion_point(field_list:GCShareRewardInfo.rewardInfoList)
  return rewardinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ShareRewardInfo >*
GCShareRewardInfo::mutable_rewardinfolist() {
  // @@protoc_insertion_point(field_mutable_list:GCShareRewardInfo.rewardInfoList)
  return &rewardinfolist_;
}

// -------------------------------------------------------------------

// CGGetShareReward

// optional int32 id = 1;
inline bool CGGetShareReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetShareReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetShareReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetShareReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CGGetShareReward::id() const {
  // @@protoc_insertion_point(field_get:CGGetShareReward.id)
  return id_;
}
inline void CGGetShareReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CGGetShareReward.id)
}

// optional int32 type = 2;
inline bool CGGetShareReward::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGGetShareReward::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGGetShareReward::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGGetShareReward::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CGGetShareReward::type() const {
  // @@protoc_insertion_point(field_get:CGGetShareReward.type)
  return type_;
}
inline void CGGetShareReward::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGGetShareReward.type)
}

// -------------------------------------------------------------------

// GCGetShareReward

// optional int32 flag = 1;
inline bool GCGetShareReward::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCGetShareReward::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCGetShareReward::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCGetShareReward::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCGetShareReward::flag() const {
  // @@protoc_insertion_point(field_get:GCGetShareReward.flag)
  return flag_;
}
inline void GCGetShareReward::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCGetShareReward.flag)
}

// optional .ShareRewardInfo rewardInfo = 2;
inline bool GCGetShareReward::has_rewardinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGetShareReward::set_has_rewardinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGetShareReward::clear_has_rewardinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGetShareReward::clear_rewardinfo() {
  if (rewardinfo_ != NULL) rewardinfo_->::ShareRewardInfo::Clear();
  clear_has_rewardinfo();
}
inline const ::ShareRewardInfo& GCGetShareReward::rewardinfo() const {
  // @@protoc_insertion_point(field_get:GCGetShareReward.rewardInfo)
  return rewardinfo_ != NULL ? *rewardinfo_ : *default_instance_->rewardinfo_;
}
inline ::ShareRewardInfo* GCGetShareReward::mutable_rewardinfo() {
  set_has_rewardinfo();
  if (rewardinfo_ == NULL) rewardinfo_ = new ::ShareRewardInfo;
  // @@protoc_insertion_point(field_mutable:GCGetShareReward.rewardInfo)
  return rewardinfo_;
}
inline ::ShareRewardInfo* GCGetShareReward::release_rewardinfo() {
  clear_has_rewardinfo();
  ::ShareRewardInfo* temp = rewardinfo_;
  rewardinfo_ = NULL;
  return temp;
}
inline void GCGetShareReward::set_allocated_rewardinfo(::ShareRewardInfo* rewardinfo) {
  delete rewardinfo_;
  rewardinfo_ = rewardinfo;
  if (rewardinfo) {
    set_has_rewardinfo();
  } else {
    clear_has_rewardinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:GCGetShareReward.rewardInfo)
}

// -------------------------------------------------------------------

// GCOnlineViewSts

// optional int32 flag = 1;
inline bool GCOnlineViewSts::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCOnlineViewSts::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCOnlineViewSts::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCOnlineViewSts::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 GCOnlineViewSts::flag() const {
  // @@protoc_insertion_point(field_get:GCOnlineViewSts.flag)
  return flag_;
}
inline void GCOnlineViewSts::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:GCOnlineViewSts.flag)
}

// -------------------------------------------------------------------

// CGRwdOnLineGift

// -------------------------------------------------------------------

// GCRwdOnLineGift

// repeated .WelfareStruct rwds = 1;
inline int GCRwdOnLineGift::rwds_size() const {
  return rwds_.size();
}
inline void GCRwdOnLineGift::clear_rwds() {
  rwds_.Clear();
}
inline const ::WelfareStruct& GCRwdOnLineGift::rwds(int index) const {
  // @@protoc_insertion_point(field_get:GCRwdOnLineGift.rwds)
  return rwds_.Get(index);
}
inline ::WelfareStruct* GCRwdOnLineGift::mutable_rwds(int index) {
  // @@protoc_insertion_point(field_mutable:GCRwdOnLineGift.rwds)
  return rwds_.Mutable(index);
}
inline ::WelfareStruct* GCRwdOnLineGift::add_rwds() {
  // @@protoc_insertion_point(field_add:GCRwdOnLineGift.rwds)
  return rwds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WelfareStruct >&
GCRwdOnLineGift::rwds() const {
  // @@protoc_insertion_point(field_list:GCRwdOnLineGift.rwds)
  return rwds_;
}
inline ::google::protobuf::RepeatedPtrField< ::WelfareStruct >*
GCRwdOnLineGift::mutable_rwds() {
  // @@protoc_insertion_point(field_mutable_list:GCRwdOnLineGift.rwds)
  return &rwds_;
}

// -------------------------------------------------------------------

// GCDoubleExpmsg

// repeated int32 dungeonType = 1;
inline int GCDoubleExpmsg::dungeontype_size() const {
  return dungeontype_.size();
}
inline void GCDoubleExpmsg::clear_dungeontype() {
  dungeontype_.Clear();
}
inline ::google::protobuf::int32 GCDoubleExpmsg::dungeontype(int index) const {
  // @@protoc_insertion_point(field_get:GCDoubleExpmsg.dungeonType)
  return dungeontype_.Get(index);
}
inline void GCDoubleExpmsg::set_dungeontype(int index, ::google::protobuf::int32 value) {
  dungeontype_.Set(index, value);
  // @@protoc_insertion_point(field_set:GCDoubleExpmsg.dungeonType)
}
inline void GCDoubleExpmsg::add_dungeontype(::google::protobuf::int32 value) {
  dungeontype_.Add(value);
  // @@protoc_insertion_point(field_add:GCDoubleExpmsg.dungeonType)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GCDoubleExpmsg::dungeontype() const {
  // @@protoc_insertion_point(field_list:GCDoubleExpmsg.dungeonType)
  return dungeontype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GCDoubleExpmsg::mutable_dungeontype() {
  // @@protoc_insertion_point(field_mutable_list:GCDoubleExpmsg.dungeonType)
  return &dungeontype_;
}

// optional int32 sts = 2;
inline bool GCDoubleExpmsg::has_sts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCDoubleExpmsg::set_has_sts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCDoubleExpmsg::clear_has_sts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCDoubleExpmsg::clear_sts() {
  sts_ = 0;
  clear_has_sts();
}
inline ::google::protobuf::int32 GCDoubleExpmsg::sts() const {
  // @@protoc_insertion_point(field_get:GCDoubleExpmsg.sts)
  return sts_;
}
inline void GCDoubleExpmsg::set_sts(::google::protobuf::int32 value) {
  set_has_sts();
  sts_ = value;
  // @@protoc_insertion_point(field_set:GCDoubleExpmsg.sts)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WelfareMessage_2eproto__INCLUDED
