// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WildBossMessage.proto

#ifndef PROTOBUF_WildBossMessage_2eproto__INCLUDED
#define PROTOBUF_WildBossMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WildBossMessage_2eproto();
void protobuf_AssignDesc_WildBossMessage_2eproto();
void protobuf_ShutdownFile_WildBossMessage_2eproto();

class WildBossInfo;
class GCWildBossInfo;

// ===================================================================

class WildBossInfo : public ::google::protobuf::Message {
 public:
  WildBossInfo();
  virtual ~WildBossInfo();

  WildBossInfo(const WildBossInfo& from);

  inline WildBossInfo& operator=(const WildBossInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WildBossInfo& default_instance();

  void Swap(WildBossInfo* other);

  // implements Message ----------------------------------------------

  WildBossInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WildBossInfo& from);
  void MergeFrom(const WildBossInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string gangName = 2;
  inline bool has_gangname() const;
  inline void clear_gangname();
  static const int kGangNameFieldNumber = 2;
  inline const ::std::string& gangname() const;
  inline void set_gangname(const ::std::string& value);
  inline void set_gangname(const char* value);
  inline void set_gangname(const char* value, size_t size);
  inline ::std::string* mutable_gangname();
  inline ::std::string* release_gangname();
  inline void set_allocated_gangname(::std::string* gangname);

  // optional int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WildBossInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_gangname();
  inline void clear_has_gangname();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gangname_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_WildBossMessage_2eproto();
  friend void protobuf_AssignDesc_WildBossMessage_2eproto();
  friend void protobuf_ShutdownFile_WildBossMessage_2eproto();

  void InitAsDefaultInstance();
  static WildBossInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCWildBossInfo : public ::google::protobuf::Message {
 public:
  GCWildBossInfo();
  virtual ~GCWildBossInfo();

  GCWildBossInfo(const GCWildBossInfo& from);

  inline GCWildBossInfo& operator=(const GCWildBossInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCWildBossInfo& default_instance();

  void Swap(GCWildBossInfo* other);

  // implements Message ----------------------------------------------

  GCWildBossInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCWildBossInfo& from);
  void MergeFrom(const GCWildBossInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // repeated .WildBossInfo WildBossKillInfo = 2;
  inline int wildbosskillinfo_size() const;
  inline void clear_wildbosskillinfo();
  static const int kWildBossKillInfoFieldNumber = 2;
  inline const ::WildBossInfo& wildbosskillinfo(int index) const;
  inline ::WildBossInfo* mutable_wildbosskillinfo(int index);
  inline ::WildBossInfo* add_wildbosskillinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::WildBossInfo >&
      wildbosskillinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::WildBossInfo >*
      mutable_wildbosskillinfo();

  // @@protoc_insertion_point(class_scope:GCWildBossInfo)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WildBossInfo > wildbosskillinfo_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_WildBossMessage_2eproto();
  friend void protobuf_AssignDesc_WildBossMessage_2eproto();
  friend void protobuf_ShutdownFile_WildBossMessage_2eproto();

  void InitAsDefaultInstance();
  static GCWildBossInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// WildBossInfo

// optional int32 id = 1;
inline bool WildBossInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WildBossInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WildBossInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WildBossInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WildBossInfo::id() const {
  // @@protoc_insertion_point(field_get:WildBossInfo.id)
  return id_;
}
inline void WildBossInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:WildBossInfo.id)
}

// optional string gangName = 2;
inline bool WildBossInfo::has_gangname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WildBossInfo::set_has_gangname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WildBossInfo::clear_has_gangname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WildBossInfo::clear_gangname() {
  if (gangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_->clear();
  }
  clear_has_gangname();
}
inline const ::std::string& WildBossInfo::gangname() const {
  // @@protoc_insertion_point(field_get:WildBossInfo.gangName)
  return *gangname_;
}
inline void WildBossInfo::set_gangname(const ::std::string& value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
  // @@protoc_insertion_point(field_set:WildBossInfo.gangName)
}
inline void WildBossInfo::set_gangname(const char* value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
  // @@protoc_insertion_point(field_set_char:WildBossInfo.gangName)
}
inline void WildBossInfo::set_gangname(const char* value, size_t size) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:WildBossInfo.gangName)
}
inline ::std::string* WildBossInfo::mutable_gangname() {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gangname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:WildBossInfo.gangName)
  return gangname_;
}
inline ::std::string* WildBossInfo::release_gangname() {
  clear_has_gangname();
  if (gangname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gangname_;
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WildBossInfo::set_allocated_gangname(::std::string* gangname) {
  if (gangname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gangname_;
  }
  if (gangname) {
    set_has_gangname();
    gangname_ = gangname;
  } else {
    clear_has_gangname();
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:WildBossInfo.gangName)
}

// optional int32 status = 3;
inline bool WildBossInfo::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WildBossInfo::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WildBossInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WildBossInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 WildBossInfo::status() const {
  // @@protoc_insertion_point(field_get:WildBossInfo.status)
  return status_;
}
inline void WildBossInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:WildBossInfo.status)
}

// -------------------------------------------------------------------

// GCWildBossInfo

// optional int32 state = 1;
inline bool GCWildBossInfo::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCWildBossInfo::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCWildBossInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCWildBossInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GCWildBossInfo::state() const {
  // @@protoc_insertion_point(field_get:GCWildBossInfo.state)
  return state_;
}
inline void GCWildBossInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:GCWildBossInfo.state)
}

// repeated .WildBossInfo WildBossKillInfo = 2;
inline int GCWildBossInfo::wildbosskillinfo_size() const {
  return wildbosskillinfo_.size();
}
inline void GCWildBossInfo::clear_wildbosskillinfo() {
  wildbosskillinfo_.Clear();
}
inline const ::WildBossInfo& GCWildBossInfo::wildbosskillinfo(int index) const {
  // @@protoc_insertion_point(field_get:GCWildBossInfo.WildBossKillInfo)
  return wildbosskillinfo_.Get(index);
}
inline ::WildBossInfo* GCWildBossInfo::mutable_wildbosskillinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GCWildBossInfo.WildBossKillInfo)
  return wildbosskillinfo_.Mutable(index);
}
inline ::WildBossInfo* GCWildBossInfo::add_wildbosskillinfo() {
  // @@protoc_insertion_point(field_add:GCWildBossInfo.WildBossKillInfo)
  return wildbosskillinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WildBossInfo >&
GCWildBossInfo::wildbosskillinfo() const {
  // @@protoc_insertion_point(field_list:GCWildBossInfo.WildBossKillInfo)
  return wildbosskillinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::WildBossInfo >*
GCWildBossInfo::mutable_wildbosskillinfo() {
  // @@protoc_insertion_point(field_mutable_list:GCWildBossInfo.WildBossKillInfo)
  return &wildbosskillinfo_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WildBossMessage_2eproto__INCLUDED
